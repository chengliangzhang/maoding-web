/**
 * Created by Wuwq on 2017/2/27.
 */
var restApi = {
    /** 基础 **/
    url_homeLogin: window.rootPath + '/iWork/sys/login'
    , url_homeLogout: window.rootPath + '/iWork/sys/logout'
    , url_homeRegister_securityCode: window.rootPath + '/iWork/sys/securityCode'
    , url_homeRegister_validateCode: window.rootPath + '/iWork/sys/validateCode'
    , url_homeRegister_register: window.rootPath + '/iWork/sys/register'
    , url_homeForget_securityCode: window.rootPath + '/iWork/sys/sendSecurityCodeAndValidateCellphone'
    , url_homeForget_changePwd: window.rootPath + '/iWork/sys/forgotPassword'
    , url_shareInvateRegister: window.rootPath + '/iWork/sys/shareInvateRegister'
    , url_listUpdateHistory: window.rootPath + '/listUpdateHistory'

    /** 组织 **/
    , url_registerCompany: window.rootPath + '/iWork/home/registerCompany'
    , url_getOrgTreeForSearch: window.rootPath + '/iWork/org/getOrgTreeForSearch'
    , url_getOrgTree: window.rootPath + '/iWork/org/getOrgTree'
    , url_getOrgTreeForNotice: window.rootPath + '/iWork/org/getOrgTreeForNotice'
    , url_switchCompany: window.rootPath + '/iWork/home/switchCompany'
    , url_getOrgStructureTree: window.rootPath + '/iWork/org/getOrgStructureTree'
    , url_teamInfo: window.rootPath + '/iWork/org/teamInfo'
    , url_getOrgUserNoPage: window.rootPath + '/iWork/org/getOrgUserNoPage'
    , url_orderCompanyUser: window.rootPath + '/iWork/org/orderCompanyUser'
    , url_bulkImport: window.rootPath + '/iWork/org/bulkImport'
    , url_saveOrUpdateDepart: window.rootPath + '/iWork/org/saveOrUpdateDepart'
    , url_getOrgTreeSimple: window.rootPath + '/iWork/org/getOrgTreeSimple'
    , url_depart: window.rootPath + '/iWork/org/depart'
    , url_getDepartByCompanyId: window.rootPath + '/iWork/org/getDepartByCompanyId'
    , url_saveCompanyUser: window.rootPath + '/iWork/org/saveCompanyUser'
    , url_subCompany: window.rootPath + '/iWork/org/subCompany'
    , url_businessPartner: window.rootPath + '/iWork/org/businessPartner'
    , url_getOrgUser: window.rootPath + '/iWork/org/getOrgUserList'
    , url_audiOrgUser: window.rootPath + '/iWork/org/audiOrgUser'
    , url_uploadUserFile: window.rootPath + '/iWork/org/uploadUserFile'
    , url_selectInvitedPartner: window.rootPath + '/iWork/org/selectInvitedPartner'
    , url_auditOrgRelation: window.rootPath + '/iWork/org/processingApplicationOrInvitation'
    , url_getPendingAudiOrgUser: window.rootPath + '/iWork/org/getPendingAudiOrgUser'
    , url_saveOrUpdateCompany: window.rootPath + '/iWork/org/saveOrUpdateCompany'
    , url_saveOrUpdateCompanyAttach: window.rootPath + '/iWork/org/saveOrUpdateCompanyAttach'
    , url_notice: window.rootPath + '/iWork/notice/notice'
    , url_saveNotice: window.rootPath + '/iWork/notice/saveNotice'
    , url_getNoticeByNoticeid: window.rootPath + '/iWork/notice/getNoticeByNoticeid'
    , url_disbandCompany: window.rootPath + '/iWork/org/disbandCompany'
    , url_getUsedPartB: window.rootPath + '/iWork/org/getUsedPartB'
    , url_getUserByKeyWord: window.rootPath + '/iWork/org/getUserByKeyWord'
    , url_getToAuditCompanyCount: window.rootPath + '/iWork/org/getToAuditCompanyCount'
    , url_validateDisbandCompany: window.rootPath + '/iWork/org/validateDisbandCompany'
    , url_applyAuthentication: window.rootPath + '/iWork/org/applyAuthentication'
    , url_getAuthenticationById: window.rootPath + '/iWork/org/getAuthenticationById'
    , url_listCompanyAndChildren: window.rootPath + '/iWork/org/listCompanyAndChildren'
    , url_getExpAmountCompanyAndChildren: window.rootPath + '/iWork/org/getExpAmountCompanyAndChildren'
    , url_listCompany: window.rootPath + '/iWork/org/listCompany'


    /** 分支机构、事业合伙人、外部合作 **/
    , url_inviteBPartner: window.rootPath + '/iWork/org/inviteParent'
    , url_verifyIdentityForBPartner: window.rootPath + '/na/bPartner/verifyIdentityForParent'
    , url_getCompanyByInviteUrl: window.rootPath + '/na/bPartner/getCompanyByInviteUrl'
    , url_getCompanyPrincipal: window.rootPath + '/na/bPartner/getCompanyPrincipal'
    , url_applayBusinessPartner: window.rootPath + '/na/bPartner/applayBusinessPartner'
    , url_createBusinessPartner: window.rootPath + '/na/bPartner/createBusinessPartner'
    , url_setBusinessPartnerNickName: window.rootPath + '/iWork/org/setBusinessPartnerNickName'
    , url_getProjectPartnerList: window.rootPath + '/iWork/cooperation/getProjectPartnerList'
    , url_relieveRelationship: window.rootPath + '/iWork/cooperation/relieveRelationship'
    , url_resendSMS: window.rootPath + '/iWork/cooperation/resendSMS'

    /** 个人 **/
    , url_getCurrUserOfWork: window.rootPath + '/iWork/sys/getCurrUserOfWork'
    , url_userInfo: window.rootPath + '/iWork/personal/userInfo'
    , url_saveOrUpdateUserAttach: window.rootPath + '/iWork/personal/saveOrUpdateUserAttach'
    , url_changeCellphone: window.rootPath + '/iWork/personal/changeCellphone'
    , url_securityCode: window.rootPath + '/iWork/sys/securityCode'
    , url_changePassword: window.rootPath + '/iWork/personal/changePassword'
    , url_getMajor: window.rootPath + '/iWork/personal/getMajor'
    , url_getCompanyDepartAndPermission: window.rootPath + '/iWork/role/getCompanyDepartAndPermission'

    /** 项目 **/
    , url_projectInformation: window.rootPath + '/iWork/project/projectInformation'
    , url_companyProjectInformation: window.rootPath + '/iWork/project/companyProjectInformation'
    , url_getProjectBulidType: window.rootPath + '/iWork/project/getProjectBulidType'
    , url_getMyProjectList: window.rootPath + '/iWork/project/getProjects'
    , url_getProjectConditions: window.rootPath + '/iWork/project/getProjectConditions'
    , url_projectType: window.rootPath + '/iWork/project/projectType'
    , url_addProjectBasicData: window.rootPath + '/iWork/project/addProjectBasicData'
    , url_project: window.rootPath + '/iWork/project/project'
    , url_saveOrUpdateProjectProcessTime: window.rootPath + '/iWork/project/saveOrUpdateProjectProcessTime'
    , url_getProjectDetails: window.rootPath + '/iWork/project/getProjectDetails'
    , url_getDesignContentList: window.rootPath + '/iWork/project/getDesignContentList'
    , url_getDesignRangeList: window.rootPath + '/iWork/project/getDesignRangeList'
    , url_attention: window.rootPath + '/iWork/attention/attention'
    , url_constructList: window.rootPath + '/iWork/project/constructList'
    , url_deleteProject: window.rootPath + '/iWork/project/deleteProject'
    , url_getProjectParticipants: window.rootPath + '/iWork/project/getProjectParticipants'
    , url_getProjectNavigationRole: window.rootPath + '/iWork/project/getProjectNavigationRole'
    , url_saveOrUpdateProjectDesign: window.rootPath + '/iWork/project/saveOrUpdateProjectDesign'
    , url_getCostRoleByCompanyId: window.rootPath + '/iWork/project/getCostRoleByCompanyId'

    , url_loadProjectDetails: window.rootPath + '/iWork/project/loadProjectDetails'
    , url_loadProjectCustomFields: window.rootPath + '/iWork/project/loadProjectCustomFields'
    , url_saveProjectCustomFields: window.rootPath + '/iWork/project/saveProjectCustomFields'
    , url_saveProjectField: window.rootPath + '/iWork/project/saveProjectField'

    , url_enterpriseSearch: window.enterpriseUrl + '/enterpriseSearch/queryAutoComplete'
    , url_deleteProjectDesign: window.rootPath + '/iWork/project/deleteProjectDesign'

    , url_insertProCondition: window.rootPath + '/iWork/project/insertProCondition'
    , url_inviteProjectParent: window.rootPath + '/iWork/org/inviteProjectParent'



    /** 项目动态 **/
    , url_getProjectDynamicList: window.rootPath + '/iWork/project/getProjectDynamicList'

    /**项目－签发、生产*/
    , url_getOperatorList: window.rootPath + '/iWork/projectTask/getOperatorList'
    , url_saveTaskIssuing: window.rootPath + '/iWork/projectTask/saveTaskIssuing'
    , url_getIssueTaskCompany: window.rootPath + '/iWork/projectTask/getIssueTaskCompany'
    , url_validateIssueTaskCompany: window.rootPath + '/iWork/projectTask/validateIssueTaskCompany'
    , url_updateTaskInfo: window.rootPath + '/iWork/projectTask/updateTaskInfo'
    , url_saveProjectProcessTime: window.rootPath + '/iWork/projectTask/saveProjectProcessTime'
    , url_deleteProjectTask: window.rootPath + '/iWork/projectTask/deleteProjectTask'
    , url_getChangeTimeList: window.rootPath + '/iWork/projectTask/getChangeTimeList'
    , url_updateProjectManager: window.rootPath + '/iWork/projectTask/updateProjectManager'
    , url_getDesignTaskList: window.rootPath + '/iWork/projectTask/getDesignTaskList'
    , url_getProductTaskOverview: window.rootPath + '/iWork/projectTask/getProductTaskOverview'
    , url_getProcessesByTask: window.rootPath + '/iWork/projectProcess/getProcessesByTask'
    , url_saveOrUpdateProcess: window.rootPath + '/iWork/projectProcess/saveOrUpdateProcess'
    , url_transferTaskResponse: window.rootPath + '/iWork/projectTask/transferTaskResponse'
    , url_getProjectTaskCoopateCompany: window.rootPath + '/iWork/projectTask/getProjectTaskCoopateCompany'
    //, url_deleteProjectTask: window.rootPath + '/iWork/projectTask/deleteProjectTask'
    , url_getProjectTaskForChangeDesigner: window.rootPath + '/iWork/projectTask/getProjectTaskForChangeDesigner'
    , url_transferTaskDesigner: window.rootPath + '/iWork/projectTask/transferTaskDesigner'
    , url_exportTaskList: window.rootPath + '/iWork/projectTask/exportTaskList'
    , url_publishProductTask: window.rootPath + '/iWork/projectTask/publishProductTask'
    , url_updateProjectAssistant: window.rootPath + '/iWork/projectTask/updateProjectAssistant'

    , url_listOperatorManager: window.rootPath + '/iWork/org/listOperatorManager'
    , url_listDesignManager: window.rootPath + '/iWork/org/listDesignManager'

    , url_getTaskGroupInfo: window.rootPath + '/iWork/projectTask/getTaskGroupInfo'

    , url_getIssueInfo: window.rootPath + '/iWork/projectTask/getIssueInfo'
    , url_publishIssueTask: window.rootPath + '/iWork/projectTask/publishIssueTask'
    , url_getIssueTaskOverview: window.rootPath + '/iWork/projectTask/getIssueTaskOverview'
    , url_getProjectInfoForTask: window.rootPath + '/iWork/projectTask/getProjectInfoForTask'
    , url_exchangeTask: window.rootPath + '/iWork/projectTask/exchangeTask'
    , url_completeTask: window.rootPath + '/iWork/projectTask/completeTask'
    , url_updateCompleteTask: window.rootPath + '/iWork/projectTask/updateCompleteTask'
    , url_activeProjectTask: window.rootPath + '/iWork/projectTask/activeProjectTask'
    , url_getDesignManagerInfo: window.rootPath + '/iWork/projectTask/getDesignManagerInfo'

    , url_listDeliver: window.rootPath + '/iWork/myTask/listDeliver'
    , url_changeDeliver: window.rootPath + '/iWork/myTask/changeDeliver'
    , url_deleteDeliver: window.rootPath + '/iWork/myTask/deleteDeliver'


    /** 费用 **/
    , url_saveProjectCost: window.rootPath + '/iWork/projectcost/saveProjectCost'
    //, url_saveCostPaymentDetail: window.rootPath + '/iWork/projectcost/saveCostPaymentDetail'
    , url_contractInfo: window.rootPath + '/iWork/projectcost/contractInfo'
    , url_saveProjectCostPoint: window.rootPath + '/iWork/projectcost/saveProjectCostPoint'
    , url_saveReturnMoneyDetail: window.rootPath + '/iWork/projectcost/saveOrUpdateReturnMoneyDetail'
    , url_techicalReviewFeeInfo: window.rootPath + '/iWork/projectcost/techicalReviewFeeInfo'
    , url_getOtherFee: window.rootPath + '/iWork/projectcost/getOtherFee'
    , url_cooperativeDesignFeeInfo: window.rootPath + '/iWork/projectcost/cooperativeDesignFeeInfo'
    , url_deleteProjectCostPoint: window.rootPath + '/iWork/projectcost/deleteProjectCostPoint'
    , url_deleteProjectCostPointDetail: window.rootPath + '/iWork/projectcost/deleteProjectCostPointDetail'
    , url_saveCostPaymentDetail: window.rootPath + '/iWork/projectcost/saveCostPaymentDetail'
    , url_saveOtherCostDetail: window.rootPath + '/iWork/projectcost/saveOtherCostDetail'
    , url_deleteProjectCostPaymentDetail: window.rootPath + '/iWork/projectcost/deleteProjectCostPaymentDetail'
    , url_listProjectCost: window.rootPath + '/iWork/projectcost/listProjectCost'
    , url_listProjectCostSummary: window.rootPath + '/iWork/projectcost/listProjectCostSummary'
    , url_applyProjectCostPayFee: window.rootPath + '/iWork/projectcost/applyProjectCostPayFee'

    /**发票**/
    , url_listInvoice: window.rootPath + '/iWork/invoice/listInvoice'
    , url_getInvoice: window.rootPath + '/iWork/invoice/getInvoice'


    /** 报销 **/
    , url_getExpMainPage: window.rootPath + '/iWork/finance/getExpMainPage'
    , url_getExpMainPageForAudit: window.rootPath + '/iWork/finance/getExpMainPageForAudit'
    , url_getExpTypeList: window.rootPath + '/iWork/finance/getExpTypeList'
    , url_agreeExpMain: window.rootPath + '/iWork/finance/agreeExpMain'
    , url_getExpMainPageForSummary: window.rootPath + '/iWork/finance/getExpMainPageForSummary'
    , url_deleteExpMain: window.rootPath + '/iWork/finance/deleteExpMain'
    , url_getExpBaseData: window.rootPath + '/iWork/finance/getExpBaseData'
    , url_getMaxExpNo: window.rootPath + '/iWork/finance/getMaxExpNo'
    , url_expCategory: window.rootPath + '/iWork/finance/expCategory'
    , url_getExpMainDetail: window.rootPath + '/iWork/finance/getExpMainDetail'
    , url_recallExpMain: window.rootPath + '/iWork/finance/recallExpMain'
    , url_saveOrUpdateExpMainAndDetail: window.rootPath + '/iWork/finance/saveOrUpdateExpMainAndDetail'
    , url_agreeAndTransAuditPerExpMain: window.rootPath + '/iWork/finance/agreeAndTransAuditPerExpMain'
    , url_toMyChecking: window.rootPath + '/iWork/finance/toMyChecking'
    , url_toCompanyMyChecking: window.rootPath + '/iWork/finance/toCompanyMyChecking'
    , url_toMyExpense: window.rootPath + '/iWork/finance/toMyExpense'
    , url_toCompanyMyExpense: window.rootPath + '/iWork/finance/toCompanyMyExpense'

    , url_getExpFixedByExpDate: window.rootPath + '/iWork/finance/getExpFixedByExpDate'
    , url_getExpAmountByYear: window.rootPath + '/iWork/finance/getExpAmountByYear'
    , url_saveExpFixedByExpDate: window.rootPath + '/iWork/finance/saveExpFixedByExpDate'
    , url_financialAllocation: window.rootPath + '/iWork/finance/financialAllocation'

    , url_getLeaveDetailList: window.rootPath + '/iWork/finance/getLeaveDetailList'
    , url_getLeaveDetail: window.rootPath + '/iWork/finance/getLeaveDetail'
    , url_financialRecallExpMain: window.rootPath + '/iWork/finance/financialRecallExpMain'
    , url_saveCompanyBalance: window.rootPath + '/iWork/companyBill/saveCompanyBalance'
    , url_getCompanyBalance: window.rootPath + '/iWork/companyBill/getCompanyBalance'
    , url_getExpFixTypeList: window.rootPath + '/iWork/finance/getExpFixTypeList'
    , url_saveExpFixCategory: window.rootPath + '/iWork/finance/saveExpFixCategory'
    , url_deleteExpCategory: window.rootPath + '/iWork/finance/deleteExpCategory'
    , url_saveExpTypeShowStatus: window.rootPath + '/iWork/finance/saveExpTypeShowStatus'
    , url_getExpShareTypeList: window.rootPath + '/iWork/finance/getExpShareTypeList'
    , url_saveExpShareTypeShowStatus: window.rootPath + '/iWork/finance/saveExpShareTypeShowStatus'
    , url_getRelationTypeIsThree: window.rootPath + '/iWork/org/getRelationTypeIsThree'
    , url_getPermissionOperator: window.rootPath + '/iWork/role/getPermissionOperator'

    /**财务流程设置**/
    , url_getProcessByCompany: window.rootPath + '/iWork/process/getProcessByCompany'
    , url_saveProcess: window.rootPath + '/iWork/process/saveProcess'
    , url_listProcessNode: window.rootPath + '/iWork/process/listProcessNode'
    , url_deleteProcessForProjectPay: window.rootPath + '/iWork/process/deleteProcessForProjectPay'
    , url_selectedProcessForProjectPay: window.rootPath + '/iWork/process/selectedProcessForProjectPay'
    , url_selectedProcessNodeStatus: window.rootPath + '/iWork/process/selectedProcessNodeStatus'

    /**审批管理**/
    , url_listProcessDefine: window.rootPath + '/iWork/workflow/listProcessDefine'
    , url_prepareProcessDefine: window.rootPath + '/iWork/workflow/prepareProcessDefine'
    , url_changeProcessDefine: window.rootPath + '/iWork/workflow/changeProcessDefine'

    /**收支总览**/
    , url_getExpensesDetailLedger: window.rootPath + '/iWork/statistic/getExpensesDetailLedger'
    , url_getReceivable: window.rootPath + '/iWork/statistic/getReceivable'
    , url_getPayment: window.rootPath + '/iWork/statistic/getPayment'
    , url_getReceivableDetail: window.rootPath + '/iWork/statistic/getReceivableDetail'
    , url_getPaymentDetail: window.rootPath + '/iWork/statistic/getPaymentDetail'
    , url_getExpensesStatistics: window.rootPath + '/iWork/statistic/getExpensesStatistics'
    , url_getColumnarData: window.rootPath + '/iWork/statistic/getColumnarData'
    , url_getProfitDetail: window.rootPath + '/iWork/statistic/getProfitDetail'

    , url_getCostType: window.rootPath + '/iWork/statistic/getCostType'
    , url_getStaticCompanyForPaymentDetail: window.rootPath + '/iWork/org/getStaticCompanyForPaymentDetail'
    , url_getStaticCompanyForFinance: window.rootPath + '/iWork/org/getStaticCompanyForFinance'
    , url_getStatisticClassicData: window.rootPath + '/iWork/statistic/getStatisticClassicData'
    , url_getTitleFilter: window.rootPath + '/iWork/statistic/getTitleFilter'

    /**审批汇总**/
    , url_getProjectWorking: window.rootPath + '/iWork/project/getProjectWorking'
    , url_getProjectWorkingHours: window.rootPath + '/iWork/project/getProjectWorkingHours'

    /** 系统通知 **/
    , url_sys_notify: window.rootPath + '/iWork/sys/notify'
    , url_sys_complete_notify: window.rootPath + '/iWork/sys/completeNotify'

    /** 通知 **/
    , url_getNotice: window.rootPath + '/iWork/notice/getNotice'

    /** 消息 **/
    , url_getMessage: window.rootPath + '/iWork/message/getMessage'
    , url_getMessageUnRead: window.rootPath + '/iWork/message/getMessageUnRead'
    , url_isUserInOrg: window.rootPath + '/iWork/org/isUserInOrg'
    , url_getNotReadNotice: window.rootPath + '/iWork/notice/getNotReadNotice'

    /** 任务 */
    , url_taskList: window.rootPath + '/iWork/myTask/taskList'
    , url_getMyTask: window.rootPath + '/iWork/myTask/getMyTask'
    , url_handleMyTask: window.rootPath + '/iWork/myTask/handleMyTask'
    , url_activeTask: window.rootPath + '/iWork/projectTask/activeTask'
    , url_getMyTaskList: window.rootPath + '/iWork/myTask/getMyTaskList'
    , url_getMyTaskList2: window.rootPath + '/iWork/myTask/getMyTaskList2'
    , url_getMyTaskByProjectId: window.rootPath + '/iWork/myTask/getMyTaskByProjectId'

    ,url_getMyTaskList4:window.rootPath + '/iWork/myTask/getMyTaskList4'

    /** 动态 */
    , url_getCompanyDynamics: window.rootPath + '/iWork/dynamic/getCompanyDynamics'

    /** 网盘 **/
    , url_getCompanyDiskInfo: window.fileCenterUrl + '/companyDisk/getCompanyDiskInfo'

    /** 文档库 */
    , url_getSkyDriverByProject: window.rootPath + '/iWork/projectSkyDriver/getSkyDriverByProject'
    , url_netFile_createDirectory: window.fileCenterUrl + '/netFile/createDirectory'
    , url_netFile_uploadFile: window.fileCenterUrl + '/netFile/uploadFile'
    , url_netFile_rename: window.fileCenterUrl + '/netFile/rename'
    , url_netFile_delete: window.fileCenterUrl + '/netFile/delete'

    , url_getProjectsDocuments: window.rootPath + '/iWork/projectSkyDriver/getProjectsDocuments'
    , url_getMyProjectsDocuments: window.rootPath + '/iWork/projectSkyDriver/getMyProjectsDocuments'
    , url_getMyProjectSkyDriveByParam: window.rootPath + '/iWork/projectSkyDriver/getMyProjectSkyDriveByParam'
    , url_getArchivedFileNotifier: window.rootPath + '/iWork/projectSkyDriver/getArchivedFileNotifier'
    , url_sendArchivedFileNotifier: window.rootPath + '/iWork/projectSkyDriver/sendarchivedFileNotifier'
    , url_notarizeArchivedFileNotifier: window.rootPath + '/iWork/projectSkyDriver/notarizeArchivedFileNotifier'
    , url_sendOwner: window.rootPath + '/iWork/projectSkyDriver/sendOwner'
    , url_sendOwnerProjectFile: window.rootPath + '/iWork/projectSkyDriver/sendOwnerProjectFile'
    , url_getSkyDriverByProjectList: window.rootPath + '/iWork/projectSkyDriver/getSkyDriverByProjectList'
    , url_getProjectFileByFileName: window.rootPath + '/iWork/projectSkyDriver/getProjectFileByFileName'
    , url_getProjectContract: window.rootPath + '/iWork/projectSkyDriver/getProjectContract'


    /** 附件 **/
    , url_attachment_delete: window.fileCenterUrl + '/attachment/delete'
    , url_attachment_uploadProjectContract: window.fileCenterUrl + '/attachment/uploadProjectContract'
    , url_attachment_uploadExpenseAttach: window.fileCenterUrl + '/attachment/uploadExpenseAttach'
    , url_attachment_saveCompanyLogo: window.fileCenterUrl + '/attachment/saveCompanyLogo'
    , url_attachment_uploadOrgAuthenticationAttach: window.fileCenterUrl + '/attachment/uploadOrgAuthenticationAttach'
    , url_downLoadFile: window.fileCenterUrl + '/downLoadFile'
    , url_attachment_uploadNoticeAttach: window.fileCenterUrl + '/attachment/uploadNoticeAttach'
    , url_attachment_uploadCostPlanAttach: window.fileCenterUrl + '/attachment/uploadCostPlanAttach'

    /** 后台管理*/
    , url_permissionSettings: window.rootPath + '/iWork/role/permissionSettings'
    , url_getRoleUserPermission: window.rootPath + '/iWork/role/getRoleUserPermission'
    , url_userPermission: window.rootPath + '/iWork/role/userPermission'
    , url_getRolePermissionByUser: window.rootPath + '/iWork/role/getRolePermissionByUser'
    , url_transferSys: window.rootPath + '/iWork/org/transferSys'
    , url_deleteUserPermission: window.rootPath + '/iWork/role/deleteUserPermission'
    , url_saveUserPermission: window.rootPath + '/iWork/role/saveUserPermission'
    , url_roleUser: window.rootPath + '/iWork/role/roleUser'
    , url_getRolePermissionByType: window.rootPath + '/iWork/role/getRolePermissionByType'



    /** 统计 **/
    , url_getStatProjectCost: window.rootPath + '/iWork/statistic/getStatProjectCost'
    , url_getStatContractFee: window.rootPath + '/iWork/statistic/getStatContractFee'
    , url_getStatTechFee: window.rootPath + '/iWork/statistic/getStatTechFee'
    , url_getStatCorpFee: window.rootPath + '/iWork/statistic/getStatCorpFee'
    , url_getStatOtherFee: window.rootPath + '/iWork/statistic/getStatOtherFee'
    , url_getStatisticSummaryDTO: window.rootPath + '/iWork/statistic/getStatisticSummaryDTO'
    , url_getStatisticDetailSummary: window.rootPath + '/iWork/statistic/getStatisticDetailSummary'
    , url_getStaticCompany: window.rootPath + '/iWork/org/getStaticCompany'
    , url_getContractInfo: window.rootPath + '/iWork/statistic/getContractInfo'
    , url_getTechicalReviewFeeInfo: window.rootPath + '/iWork/statistic/getTechicalReviewFeeInfo'
    , url_getCooperativeDesignFeeInfo: window.rootPath + '/iWork/statistic/getCooperativeDesignFeeInfo'
    , url_getOtherFeeInfo: window.rootPath + '/iWork/statistic/getOtherFeeInfo'
    , url_listProjectByProjectName: window.rootPath + '/iWork/project/listProjectByProjectName'
    , url_listUserTaskStatistic: window.rootPath + '/iWork/statistic/listUserTaskStatistic'
    , url_getCategoryTypeList: window.rootPath + '/iWork/statistic/getCategoryTypeList'

    /** 历史数据 **/
    , url_historyData_importProjects: window.rootPath + '/iWork/historyData/importProjects'
    , url_historyData_createProjects:window.rootPath+'/iWork/historyData/createProjects'
};
/* Write here your custom javascript codes */

/*阻止默认事件*/
var preventDefault = function (event) {
    if (event.preventDefault) {
        event.preventDefault();
    } else {
        event.returnValue = false;
    }
};

/*阻止冒泡*/
var stopPropagation = function (event) {
    if (event.stopPropagation) {
        event.stopPropagation();
    } else {
        event.cancelBubble = true;
    }
};

/*短格式时间
 * 1：00
 * 2：00
 * */
var shortTime = function (datetime) {
    return moment(datetime).format("HH:mm");
};


/*格式化日期
 * 今天 1：00
 * 昨天 2：00
 * 2017-01-01 2：00
 * */
var dateSpecFormat = function (datetime, pattern) {
    var now = moment(new Date(), 'YYYY-MM-DD HH:mm:ss');
    var yesterday = moment(new Date(), 'YYYY-MM-DD HH:mm:ss').subtract(1, 'days');
    var d = moment(moment(datetime).toDate(), 'YYYY-MM-DD HH:mm:ss');

    var nowFormat = now.format('YYYY-MM-DD');
    var yesterdayFormat = yesterday.format('YYYY-MM-DD');
    var dFormat = d.format('YYYY-MM-DD');

    var t1 = '';
    if (nowFormat == dFormat)
        t1 = '今天';
    else if (yesterdayFormat == dFormat)
        t1 = '昨天';
    else
        t1 = dFormat;

    if (pattern && !_.isBlank(pattern))
        return _.sprintf(pattern, t1, d.format('HH:mm'));

    return _.sprintf('%s %s', t1, d.format('HH:mm'));
};

/*格式化日期
 * 今天
 * 昨天
 * 2017-01-01
 * */
var dateSpecShortFormat = function (datetime) {
    var now = moment(new Date(), 'YYYY-MM-DD HH:mm:ss');
    var yesterday = moment(new Date(), 'YYYY-MM-DD HH:mm:ss').subtract(1, 'days');
    var d = moment(moment(datetime).toDate(), 'YYYY-MM-DD HH:mm:ss');

    var nowFormat = now.format('YYYY-MM-DD');
    var yesterdayFormat = yesterday.format('YYYY-MM-DD');
    var dFormat = d.format('YYYY-MM-DD');

    var t1 = '';
    if (nowFormat == dFormat)
        t1 = '今天';
    else if (yesterdayFormat == dFormat)
        t1 = '昨天';
    else
        t1 = dFormat;

    return t1;
};

/*判断字符串是否为undefined、Null或空*/
var isNullOrBlank = function (str) {
    return str === void 0 || str === null || _.isBlank(str);
};

//处理IE的Console.log兼容问题
(function () {
    var method;
    var noop = function () {
    };
    var methods = [
        'assert', 'clear', 'count', 'debug', 'dir', 'dirxml', 'error', 'exception', 'group', 'groupCollapsed', 'groupEnd', 'info', 'log', 'markTimeline', 'profile', 'profileEnd', 'table', 'time', 'timeEnd', 'timeStamp', 'trace', 'warn'
    ];
    var length = methods.length;
    var console = (window.console = window.console || {});
    while (length--) {
        method = methods[length];
        if (!console[method]) {
            console[method] = noop;
        }
    }
}());
//form数据提交
$.fn.serializeObject = function () {
    var o = {};
    var a = this.serializeArray();
    $.each(a, function () {
        if (o[this.name] !== undefined) {
            if (!o[this.name].push) {
                o[this.name] = [o[this.name]];
            }
            o[this.name].push(this.value || '');
        } else {
            o[this.name] = this.value || '';
        }
    });
    return o;
};
/**
 * 替换一段话中相匹配的字符串
 * g是全局m是多行
 * @param s1 处理的字符串
 * @param s2 替换的字符串
 * @returns
 */
String.prototype.replaceAll = function (s1, s2) {
    return this.replace(new RegExp(s1, "gm"), s2);
};

/**
 * 两日期对比
 * @param d1 时间一
 * @param d2 时间二
 * @returns {Number}
 */
function dateDiff(d1, d2) {
    if (!d1 || d1 == null || d1 == '' || !d2 || d2 == null || d2 == '') {
        return 0;
    }
    var result = Date.parse(d1.toString().replace(/-/g, "/")) - Date.parse(d2.toString().replace(/-/g, "/"));
    return result;
}
//获取当前日期
function getNowDate() {
    var date = new Date();
    var year = date.getFullYear(),
        mon = date.getMonth() < 9 ? '0' + (date.getMonth() + 1) : date.getMonth() + 1,
        day = date.getDate() < 10 ? '0' + date.getDate() : date.getDate(),
        nowDate = year + "-" + mon + "-" + day;
    return nowDate;
}
/**
 * 时间差
 * @param stime
 * @param etime
 */
function diffDays(stime, etime) {
    var d1 = this.dateDiff(etime, stime);
    var day1 = Math.floor(d1 / (24 * 3600 * 1000));
    return day1;
}

/**
 * 获取字符串长度，中文按2个字节，英文按1个字节
 */
function getStringLength(str) {
    var len = 0;
    for (var i = 0; i < str.length; i++) {
        var c = str.charCodeAt(i);
        //单字节加1
        if ((c >= 0x0001 && c <= 0x007e) || (0xff60 <= c && c <= 0xff9f)) {
            len++;
        }
        else {
            len += 2;
        }
    }
    return len;
}

/**
 * 获取字符串长度，中文按2个字节，英文按1个字节
 */
var cutString = function (str, length, suffix) {
    if (isNullOrBlank(str))
        return '';

    var len = 0;
    var temp = '';
    for (var i = 0; i < str.length; i++) {
        var c = str.charCodeAt(i);
        //单字节加1
        if ((c >= 0x0001 && c <= 0x007e) || (0xff60 <= c && c <= 0xff9f)) {
            len++;
        }
        else {
            len += 2;
        }
        temp += str.charAt(i);
        if (len >= length)
            return temp + suffix;
    }
    return str;
};

/*****************************验证公共方法--结束**********************************/

//数据提交访问错误
function handlePostJsonError(response) {
    if (response.status == 404) {
        //当前请求地址未找到
        S_dialog.error('当前请求地址未找到！');

    } else if (response.status == 0) {
        //网络请求超时
        S_dialog.error('网络请求超时！');
    } else {
        S_dialog.error('网络请求出现错误！status：' + response.status + "，statusText：" + response.statusText);
    }
    //var text = '访问出现异常！<br/>status: ' + response.status + '<br/>statusText: ' + response.statusText;
    //S_dialog.alert(text);
}
//数据提交访问错误
function handleResponse(response) {
    var result = false;
    if (response.code == "401") {
        //session超时 !
        S_dialog.error('当前用户状态信息已超时!点击“确定”后返回登录界面。', '提示', function () {
            window.location.href = window.rootPath + '/iWork/sys/login';
        });
        result = true;
    } else if (response.code == "500") {
        //未捕获异常 X
        S_dialog.error('出现异常错误 !详细信息：' + response.info);
        result = true;
    }
    return result;
}

/******************************************** 弹窗方法 开始 *****************************************************/

var S_dialog = {

    /**
     * 当title=null,quickClose=true并lock=2,为不带标题框的浮动窗口
     * 当title!=null,quickClose=true并lock=2,为带标题框的浮动窗口
     * 当title!=null,quickClose=false并lock=1,为带标题框没有遮罩层的弹窗
     * 当title!=null,quickClose=false并lock=3,为带标题框有遮罩层的弹窗
     * 适用于多种情况,需要扩展属性直接添加
     * @param 属性值{title，align，quickClose，okText,ok function,cancelText,}
     */
    dialog: function (option, afterShow, callback) {
        var baseUrl = '';//'http://localhost:8081/idcc-web-test/';
        $.get(baseUrl + option.url, {cache: true}).success(function (data) {
            var d = dialog({
                title: option.title || null,
                content: data,
                align: option.align || 'bottom',//当quickClose=true并lock=2为浮动窗口,此属性对应浮动窗口的三角图标定位
                quickClose: option.quickClose || false,// 点击空白处快速关闭
                ok: option.ok || null,//确定函数
                okValue: option.okText || '确定',
                cancel: option.cancel || null,//取消函数
                cancelValue: option.cancelText || '取消',
                height: option.height || '',
                width: option.width || 668
            });

            if (option.tPadding != null && option.tPadding != '') {//弹窗的内容padding设置
                $('div[id="content:' + d.id + '"]').parents('.ui-dialog-body').css('padding', option.tPadding);
            }

            if (option.minHeight != null && option.minHeight != '') {//弹窗的内容min-height设置
                $('div[id="content:' + d.id + '"]').css({
                    'min-height': option.minHeight + 'px'
                });
            }

            if (option.maxHeight != null && option.maxHeight != '') {//弹窗的内容max-height设置
                $('div[id="content:' + d.id + '"]').css('max-height', option.maxHeight + 'px');
            }

            if (option.overFlow != null && option.overFlow != '') {//弹窗的内容overFlow设置
                $('div[id="content:' + d.id + '"] .dialogOBox').css('overflow', option.overFlow);
            }

            if (option.lock == 1) {//弹窗没有遮罩层

                d.show();

            } else if (option.lock == 2) {//弹窗自由定位,以ele为定位点

                d.show(document.getElementById(option.ele));//option.ele为定位的元素ID

            } else if (option.lock == 3) {//此情况,quickClose需要为false

                d.showModal();

            } else if(option.lock == 4){

                d.showModal(document.getElementById(option.ele));//option.ele为定位的元素ID

            } else {

                d.showModal();
            }
            if (option.noTriangle) {//为noTriangle = true//去掉三角图标

                $('.' + option.contentEle).parents('.ui-dialog').find('.ui-dialog-arrow-a').hide();
                $('.' + option.contentEle).parents('.ui-dialog').find('.ui-dialog-arrow-b').hide();
            }
            if (option.enterToSubmit == null || option.enterToSubmit == void 0 || option.enterToSubmit == true) {//是否给input绑定回车确认提交事件

                setTimeout(function () {
                    $('div[id="content:' + d.id + '"]').find('input').keydown(function () {
                        if (event.keyCode == '13') {//keyCode=13是回车键
                            $('div[id="content:' + d.id + '"]').closest('.ui-dialog').find('button[i-id="ok"]').click();
                        }
                    });
                }, 500);
            }

            afterShow = afterShow || function () {};
            return afterShow(d);
        }).error(function () {
            alert('操作异常\n网络错误');
        });
    },
    /**
     * 确定提示对话框
     * @param text 内容
     * @param title 标题
     */
    alert: function (text, title) {
        var d = dialog({
            title: title || '提示',
            content: '<div style="padding:0 70px;">' + text + '</div>',
            okValue: '确定',
            cancel: false,
            ok: function () {
            }
        });
        d.showModal();
    },
    /**
     * 确定提示对话框
     * @param text 内容
     * @param title 标题
     */
    //成功提示
    success: function (text, title, okCallback) {
        var d = dialog({
            title: title || '提示',
            content: '<div style="min-width: 300px;max-width: 800px;"><div class="text-center"><i class="icon-custom icon-color-light rounded-x fa fa-check"  style="background: cadetblue"></i> <p style="font-size: 16px; padding-top: 12px">' + text + '</p></div> </div>',
            okValue: '确定',
            cancel: false,
            ok: okCallback || function () {
            }
        });
        d.showModal();
    },

    /**
     * 确定提示对话框
     * @param text 内容
     * @param title 标题
     */
    //错误提示
    error: function (text, title, okCallback) {
        var d = dialog({
            title: title || '提示',
            content: '<div style="min-width: 300px;max-width: 800px;"><div class="text-center"><i class="icon-custom icon-color-light rounded-x fa fa-times"  style="background: brown"></i> <p style="line-height: 3">' + text + '</p></div> </div>',
            okValue: '确定',
            cancel: false,
            ok: okCallback || function () {
            }
        });
        d.showModal();
    },

    /**
     * 确定提示对话框
     * @param text 内容
     * @param title 标题
     */
    //警告提示
    warning: function (text, title, okCallback) {
        var d = dialog({
            title: title || '提示',
            content: '<div style="min-width: 300px;max-width: 800px;"><div class="text-center"><i class="icon-custom icon-color-light rounded-x fa fa-exclamation-triangle" style="background: darkgoldenrod"></i> <p style="line-height: 3">' + text + '</p></div> </div>',
            okValue: '确定',
            cancel: false,
            ok: okCallback || function () {
            }
        });
        d.showModal();
    },

    /**
     * 确定提示对话框
     * @param text 内容
     * @param title 标题
     */
    //
    info: function (text, title) {
        var d = dialog({
            title: title || '提示',
            content: '<div style="min-width: 300px;max-width: 800px;"><div class="text-center"><i class="icon-custom icon-color-light rounded-x fa fa-info" style="background: cornflowerblue"></i> <p style="line-height: 3">' + text + '</p></div> </div>',
            okValue: '确定',
            cancel: false,
            ok: function () {
            }
        });
        d.showModal();
    },
    /**
     * 控制对话框提示
     * @param text 内容
     */
    tips: function (text) {
        var d = dialog({
            content: text,
            opacity: 0.8,
            lock: false
        });
        $('div[aria-labelledby="title:' + d.id + '"]').find('.ui-dialog').attr('style', 'background:rgba(0,0,0,.8);color:white;');
        d.show();
        setTimeout(function () {
                d.close();
            },
            1500);
    },
    /**
     * 前端确认弹窗提示
     * @param text 内容
     * @param OK function
     * @param cancel function
     */
    confirm: function (text, callback1, callback2) {
        var d = dialog({
            title: '提示',
            content: '<div style="text-align:center;padding:15px;">' + text || '您确定要操作吗?' + '</div>',
            width: 300,
            okValue: '确定',
            cancelValue: '取消',
            ok: callback1 || function () {
            },
            cancel: callback2 || function () {
            }
        });
        d.showModal();
    },
    close: function (obj) {
        obj.parents('.ui-dialog-grid').find('.ui-dialog-close').click();
    }

};
/**
 * 加载中 提示
 * @param id 标签ID或类名
 * @param text 提示内容
 */
var $_loading = {
    show: function (id, text) {
        if (text == undefined || text == '') {
            text = '正在保存中...';
        }
        $(id).eq(0).block({message: text,baseZ:'1024'});
    },
    close: function (id) {
        $(id).eq(0).unblock();
    }

};
var S_toastr = {
    success: function (text) {
        toastr.options = {
            "closeButton": false,
            "debug": false,
            "progressBar": false,
            "preventDuplicates": false,
            "positionClass": "toast-top-center",
            "onclick": null,
            "showDuration": "400",
            "hideDuration": "1000",
            "timeOut": "2000",
            "extendedTimeOut": "1000",
            "showEasing": "swing",
            "hideEasing": "linear",
            "showMethod": "fadeIn",
            "hideMethod": "fadeOut"
        };
        toastr.success(text);
    },
    warning: function (text) {
        toastr.options = {
            "closeButton": false,
            "debug": false,
            "progressBar": false,
            "preventDuplicates": false,
            "positionClass": "toast-top-center",
            "onclick": null,
            "showDuration": "400",
            "hideDuration": "1000",
            "timeOut": "2000",
            "extendedTimeOut": "1000",
            "showEasing": "swing",
            "hideEasing": "linear",
            "showMethod": "fadeIn",
            "hideMethod": "fadeOut"
        };
        toastr.warning(text);
    },
    info: function (text) {
        toastr.options = {
            "closeButton": false,
            "debug": false,
            "progressBar": false,
            "preventDuplicates": false,
            "positionClass": "toast-top-center",
            "onclick": null,
            "showDuration": "400",
            "hideDuration": "1000",
            "timeOut": "2000",
            "extendedTimeOut": "1000",
            "showEasing": "swing",
            "hideEasing": "linear",
            "showMethod": "fadeIn",
            "hideMethod": "fadeOut"
        };
        toastr.info(text);
    },
    error: function (text) {
        toastr.options = {
            "closeButton": false,
            "debug": false,
            "progressBar": false,
            "preventDuplicates": false,
            "positionClass": "toast-top-center",
            "onclick": null,
            "showDuration": "400",
            "hideDuration": "1000",
            "timeOut": "2000",
            "extendedTimeOut": "1000",
            "showEasing": "swing",
            "hideEasing": "linear",
            "showMethod": "fadeIn",
            "hideMethod": "fadeOut"
        };
        toastr.error(text);
    }
};

var S_swal = {
    setZIndex:function () {
        //存在弹窗,swal弹窗z-index++
        var $dialog = $('.ui-popup.ui-popup-modal');
        if($dialog.length>0){
            var t = setTimeout(function () {
                var zIndex = $dialog.css('z-index');
                $('.sweet-overlay,.sweet-alert').css('z-index',parseInt(zIndex)+1);
                clearTimeout(t);
            },50);
        }
    },
    confirm: function (option) {
        swal({
            title: option.title || "确定此操作吗?",
            text: option.text,
            type: "warning",
            showCancelButton: true,
            confirmButtonColor: "#DD6B55",
            confirmButtonText: option.confirmButtonText || "确定",
            cancelButtonText: option.cancelButtonText || "取消",
            closeOnConfirm: option.closeOnConfirm || false
        }, function () {

            if (option.callBack != null) {
                option.callBack();
            }
        });

        this.setZIndex();
    },
    sure: function (option) {
        swal({
            title: option.title || "确定此操作吗?",
            text: option.text,
            type: "success",
            confirmButtonText: option.confirmButtonText || "确定",
            closeOnConfirm: true
        }, function () {
            if (option.callBack != null) {
                option.callBack();
            }
        });
        this.setZIndex();
    },
    clear: function () {

    }
};

/******************************************** 弹窗方法 结束 *****************************************************/


var m_ajax = {
    get: function (option, onHttpSuccess, onHttpError) {
        $.ajax({
            type: 'GET',
            url: option.url,
            cache: false,
            beforeSend: function () {
                if (option.classId)
                    $_loading.show(option.classId, '正在请求中...');

                if (option.bindDisabled) {
                    var $el = $(option.bindDisabled);
                    if ($el.length > 0) {
                        try {
                            $el.attr('disabled', true);
                        } catch (e) {
                        }
                        try {
                            $el.prop('disabled', true);
                        } catch (e) {
                        }
                    }
                }
            },
            success: function (response) {

                if (!handleResponse(response)) {
                    dealIsCurrentCompany(response);
                    if (onHttpSuccess)
                        onHttpSuccess(response);
                }

            },
            error: function (response) {
                if (onHttpError)
                    onHttpError();

                handlePostJsonError(response);
                //else
                //tzTips.showOnTopRight("Ajax请求发生错误", "error");
            },
            complete: function () {
                if (option.classId)
                    $_loading.close(option.classId);

                if (option.bindDisabled) {
                    setTimeout(function () {
                        var $el = $(option.bindDisabled);
                        if ($el.length > 0) {
                            try {
                                $el.attr('disabled', false);
                            } catch (e) {
                            }
                            try {
                                $el.prop('disabled', false);
                            } catch (e) {
                            }
                        }
                    }, 1000);

                }
            }
        });
    },
    getJson: function (option, onHttpSuccess, onHttpError) {
        $.ajax({
            type: 'GET',
            url: option.url,
            cache: false,
            contentType: "application/json",
            beforeSend: function () {
                if (option.classId)
                    $_loading.show(option.classId, '正在请求中...');

                if (option.bindDisabled) {
                    var $el = $(option.bindDisabled);
                    if ($el.length > 0) {
                        try {
                            $el.attr('disabled', true);
                        } catch (e) {
                        }
                        try {
                            $el.prop('disabled', true);
                        } catch (e) {
                        }
                    }
                }
            },
            success: function (response) {

                if (!handleResponse(response)) {
                    dealIsCurrentCompany(response);
                    if (onHttpSuccess)
                        onHttpSuccess(response);
                }

            },
            error: function (response) {
                if (onHttpError)
                    onHttpError();

                handlePostJsonError(response);
                //else
                //tzTips.showOnTopRight("Ajax请求发生错误", "error");
            },
            complete: function () {
                if (option.classId)
                    $_loading.close(option.classId);

                if (option.bindDisabled) {
                    setTimeout(function () {
                        var $el = $(option.bindDisabled);
                        if ($el.length > 0) {
                            try {
                                $el.attr('disabled', false);
                            } catch (e) {
                            }
                            try {
                                $el.prop('disabled', false);
                            } catch (e) {
                            }
                        }
                    }, 1000);

                }
            }
        });
    },
    post: function (option, onHttpSuccess, onHttpError) {
        //var pNotify;
        $.ajax({
            type: 'POST',
            url: option.url,
            data: option.postData,
            cache: false,
            beforeSend: function () {
                if (option.classId)
                    $_loading.show(option.classId, '正在请求中...');

                if (option.bindDisabled) {
                    var $el = $(option.bindDisabled);
                    if ($el.length > 0) {
                        try {
                            $el.attr('disabled', true);
                        } catch (e) {
                        }
                        try {
                            $el.prop('disabled', true);
                        } catch (e) {
                        }
                    }
                }
            },
            success: function (response) {

                if (!handleResponse(response)) {
                    dealIsCurrentCompany(response);
                    if (onHttpSuccess)
                        onHttpSuccess(response);
                }

            },
            error: function (response) {
                if (onHttpError)
                    onHttpError();

                handlePostJsonError(response);
                //else
                //tzTips.showOnTopRight("Ajax请求发生错误", "error");
            },
            complete: function () {
                if (option.classId)
                    $_loading.close(option.classId);

                if (option.bindDisabled) {
                    setTimeout(function () {
                        var $el = $(option.bindDisabled);
                        if ($el.length > 0) {
                            try {
                                $el.attr('disabled', false);
                            } catch (e) {
                            }
                            try {
                                $el.prop('disabled', false);
                            } catch (e) {
                            }
                        }
                    }, 1000);

                }
            }
        });
    },
    postJson: function (option, onHttpSuccess, onHttpError) {
        $.ajax({
            type: 'POST',
            url: option.url,
            cache: false,
            async: option.async == null ? true : option.async,
            data: JSON.stringify(option.postData),
            contentType: "application/json",
            beforeSend: function () {
                if (option.classId)
                    $_loading.show(option.classId, '正在请求中...');

                if (option.bindDisabled) {
                    var $el = $(option.bindDisabled);
                    if ($el.length > 0) {
                        try {
                            $el.attr('disabled', true);
                        } catch (e) {
                        }
                        try {
                            $el.prop('disabled', true);
                        } catch (e) {
                        }
                    }
                }
            },
            success: function (response) {
                if (!handleResponse(response)) {
                    dealIsCurrentCompany(response);
                    if (onHttpSuccess)
                        onHttpSuccess(response);
                }
            },
            error: function (response) {
                if (onHttpError)
                    onHttpError();

                if (option.ignoreError !== true)
                    handlePostJsonError(response);
            },
            complete: function () {
                if (option.classId)
                    $_loading.close(option.classId);

                if (option.bindDisabled) {
                    setTimeout(function () {
                        var $el = $(option.bindDisabled);
                        if ($el.length > 0) {
                            try {
                                $el.attr('disabled', false);
                            } catch (e) {
                            }
                            try {
                                $el.prop('disabled', false);
                            } catch (e) {
                            }
                        }
                    }, 1000);
                }
            }
        });
    },
    delete: function (option, onHttpSuccess, onHttpError) {
        //var pNotify;
        $.ajax({
            type: 'DELETE',
            url: option.url,
            cache: false,
            data: JSON.stringify(option.postData),
            contentType: "application/json",
            beforeSend: function () {
                if (option.classId)
                    $_loading.show(option.classId, '正在请求中...');

                if (option.bindDisabled) {
                    var $el = $(option.bindDisabled);
                    if ($el.length > 0) {
                        try {
                            $el.attr('disabled', true);
                        } catch (e) {
                        }
                        try {
                            $el.prop('disabled', true);
                        } catch (e) {
                        }
                    }
                }
            },
            success: function (response) {

                if (!handleResponse(response)) {
                    dealIsCurrentCompany(response);
                    if (onHttpSuccess)
                        onHttpSuccess(response);
                }

            },
            error: function (response) {
                if (onHttpError)
                    onHttpError();

                handlePostJsonError(response);
                //else
                //tzTips.showOnTopRight("Ajax请求发生错误", "error");
            },
            complete: function () {
                if (option.classId)
                    $_loading.close(option.classId);

                if (option.bindDisabled) {
                    setTimeout(function () {
                        var $el = $(option.bindDisabled);
                        if ($el.length > 0) {
                            try {
                                $el.attr('disabled', false);
                            } catch (e) {
                            }
                            try {
                                $el.prop('disabled', false);
                            } catch (e) {
                            }
                        }
                    }, 1000);
                }
            }
        });
    }
};

/**
 * 判断是否切换了组织，需要重新加载头部组件
 * @param response
 */
function dealIsCurrentCompany(response) {
    if(response.extendData!=null && response.extendData.currentCompanyId!=null && window.currentCompanyId!=undefined
        && response.extendData.currentCompanyId!=window.currentCompanyId && response.extendData.switchFlag!=1){
        $('#m_top').m_top({});
    }
}
/**
 * 分页
 * @param option
 * @param callback
 */
function paginationFun(option, callback) {
    var isInited = $(option.eleId).pagination();
    if (isInited)
        $(option.eleId).pagination('destroy');

    $(option.eleId).pagination({
        remote: {
            url: option.url,
            totalName: 'data.total',
            params: option.params,
            success: function (response) {
                // data为ajax返回数据
                //console.log('======'+option.pageIndex)
                dealIsCurrentCompany(response);
                callback(response);
            },
            remoteWrongFormat: function (response) {
                handleResponse(response);
            },
            beforeSend: function (xmlHttpRequest) {
                $_loading.show(option.loadingId, '正在加载中...');
            },
            complete: function (xmlHttpRequest, textStatue) {
                $_loading.close(option.loadingId);
                if (xmlHttpRequest.status != 200) {
                    S_dialog.error('error！status：' + xmlHttpRequest.status);
                }
            }
        },
        pageSize: option.pageSize || 10,
        prevBtnText: '上一页',
        nextBtnText: '下一页',
        pageIndex: option.params.pageIndex || option.pageIndex || 0,
        debug: false
    });
};
function addNodeByTree(data, currOrgTreeObj, currentCompanyId) {

    if (currentCompanyId == undefined) {
        currentCompanyId = window.currentCompanyId;
    }
    if (data.departName != null && data.departName != '') {
        data.text = data.departName;
    } else if (data.companyName != null && data.companyName != '') {
        data.text = data.companyName;
    }
    data.realId = data.id;
    var ref = $('#organization_treeH').jstree(true),
        sel = ref.get_selected();
    if (!sel.length) {
        return false;
    } else {
        sel = sel[0];

        //pos计算，用于生成树节点顺序的pos位置
        var currNodeId = currOrgTreeObj.id;
        var len = 0;
        if ($('li[id="' + currNodeId + '"]').children('ul').length > 0) {
            len = $('li[id="' + currNodeId + '"]').children('ul').children('li').length;
            if ($('li[id="' + currNodeId + '"]').children('ul').find('li[id="' + currentCompanyId + 'subCompanyId"]').length > 0) {
                len--;
            }
            if ($('li[id="' + currNodeId + '"]').children('ul').find('li[id="' + currentCompanyId + 'partnerId"]').length > 0) {
                len--;
            }
            if (len < 0) {
                len = 'last';
            }
        } else {
            len = 'last';
        }
        sel = ref.create_node(sel, data, len);
        if (sel) {
            ref.edit();  //带参数 sel 则添加时可以编辑名称
        }
    }
};
function editNodeByTree(data) {
    var tree = $('#organization_treeH').jstree(true), sel = tree.get_selected();
    tree.set_text(sel, data.text);
    tree.set_type(sel, data.type);
    var currTree = tree.get_node(sel[0]);
    currTree.original = data;
};
// 删除节点
function delNodeByTree() {
    var ref = $('#organization_treeH').jstree(true),
        sel = ref.get_selected();
    if (!sel.length) {
        return false;
    }
    ref.delete_node(sel);
};
//添加节点(分支机构或事业合伙人)
function addNodeByTreeOfPartner(type, currentCompanyId) {

    var id = currentCompanyId;

    if (type == 2 && $('a[id="' + id + 'partnerId_anchor"]').length > 0) {//判断是否有事业合伙人根节点
        return;
    }
    if (type == 1 && $('a[id="' + id + 'subCompanyId_anchor"]').length > 0) {//判断是否有分支机构根节点
        return;
    }
    var tree = $('#organization_treeH').jstree(true);
    var root = tree.get_node(id);

    var data = {};
    if (type == 2) {//事业合伙人
        data = {text: '事业合伙人', type: 'partnerContainer', id: id + 'partnerId', realId: id + 'partnerId'};
    } else {//分支机构
        data = {text: '分支机构', type: 'subCompanyContainer', id: id + 'subCompanyId', realId: id + 'subCompanyId'};
    }
    var result = tree.create_node(root, data);
}
//添加节点(根节点下添加节点)
function addNodeByTreeByRoot(data, id) {
    if (data.departName != null && data.departName != '') {
        data.text = data.departName;
    } else if (data.companyName != null && data.companyName != '') {
        data.text = data.companyName;
    }

    data.realId = data.id;
    var tree = $('#organization_treeH').jstree(true);
    //sel = ref.get_node($scope.firstChildOrgObj.original.text)
    var root = tree.get_node(id);
    //var child = root.children[0];
    var result = tree.create_node(root, data);
}

function m_inputProcessTime_onpicked(dp) {
    var $startTime = $('form.inputTimeOBox').find('.startTime:eq(0)');
    var $endTime = $('form.inputTimeOBox').find('.endTime:eq(0)');
    if ($startTime.length > 0 && $endTime.length > 0) {
        var startTime = $startTime.val();
        var endTime = $endTime.val();
        if (startTime !== null && !_.isBlank(startTime) && endTime !== null && !_.isBlank(endTime)) {
            $('form.inputTimeOBox').find('.dayCount:eq(0)').val(moment(endTime).diff(moment(startTime), 'days') + 1);

        } else {

            $('form.inputTimeOBox').find('.dayCount:eq(0)').val(0);
        }
    }

}

function startTimeFun(obj, onpicked) {//开始时间
    var i = $(obj).attr('data-id');
    var startTimeLimit = $(obj).attr('data-appointmentStartTime');
    if (i == undefined) {
        i = '';
    }
    var endTimeLimit = $(obj).closest('form').find('#ipt_endTime' + i).attr('data-appointmentEndTime');
    if ($(obj).closest('form').find('#ipt_endTime' + i).val() == '') {
        var maxTime = endTimeLimit;
    }
    WdatePicker({
        minDate: startTimeLimit,
        maxDate: maxTime || '#F{$dp.$D(\'ipt_endTime' + i + '\')||\'2099-10-01\'}',
        onpicked: function (dp) {
            if (onpicked)
                onpicked(dp);
        }
    })
}
function endTimeFun(obj, onpicked) {//结束时间
    var i = $(obj).attr('data-id');
    var endTimeLimit = $(obj).attr('data-appointmentEndTime');
    if (i == undefined) {
        i = '';
    }
    var startTimeLimit = $(obj).closest('form').find('#ipt_startTime' + i).attr('data-appointmentStartTime');
    if ($(obj).closest('form').find('#ipt_startTime' + i).val() == '') {
        var minTime = startTimeLimit;
    }
    WdatePicker({
        minDate: minTime || '#F{$dp.$D(\'ipt_startTime' + i + '\')}',
        maxDate: endTimeLimit || '2099-10-01',
        onpicked: function (dp) {
            if (onpicked)
                onpicked(dp);
        }
    })
}
function timeDiffTime(startTime, endTime) {//输入两个时间得出时间差（单位：天）
    return moment(endTime).diff(moment(startTime), 'days')+1;
}
/**
 *
 * 作用：权限控制
 * 用法：直接在要做权限控制的标签上加上class‘roleControl’，再添加roleCode与flag属性如：class="roleControl" roleCode="project_task_progress" flag="1"
 */
function rolesControl() {
    var roleCodes = window.currentRoleCodes;
    if (roleCodes == undefined) {
        roleCodes = '';

    }
    $('.roleControl[roleCode]').each(function () {
        var $this = $(this);
        var roles = $this.attr('roleCode');
        var roleList = roles.split(',');
        var flag = $this.attr('flag');
        var isHaveRole = false;
        $.each(roleList, function (i, item) {
            if (roleCodes.indexOf(item) > -1) {
                return isHaveRole = true;
            }
        });
        if (!isHaveRole) {
            if (flag == 1) {//隐藏相关信息，用***显示
                $this.parent().html("***");
            } else if (flag == 2) {//直接remove掉
                $this.remove();
            } else if (flag == 3) {//直接隐藏
                $this.hide();
            } else if (flag == 4) {//不能点击
                $this.attr('data-action', '');
                $this.bind('click', function () {
                    S_toastr.warning('你暂无该操作权限！');
                    return false;
                });

            } else if (flag == 5) {//基于x-editble情况下
                $this.removeClass('editable').removeClass('editable-click').removeClass('editable-empty').addClass('a-v1');
                /*if($.trim($this.text())=='未设置'){
                 $this.text('');
                 }*/
                $this.unbind('click');
            } else if (flag == 6) {//当匹配存删除，不匹配设为***
                if (isHaveRole) {
                    $this.remove();
                } else {
                    $this.parent().html("***");
                }
            } else {
                $this.remove();
            }
        }
    });
}
/**
 * 作用：项目金额格式控制
 * 用法：项目相关的金额数字位数与小数点后面数字的控制，如：23456.130300显示为23,456.1303;且小数位控制在六位内
 */
function proNumberFilter(value) {
    if (value != null && value != undefined && !isNaN(value) && value != '') {
        var val1 = parseFloat(Number(value).toFixed(6));
        if (String(val1.toString()).indexOf(".") > 0) {
            var val2 = val1.toString().substring(String(val1).indexOf("."), val1.toString().length);
            var val3 = val1.toString().substring(0, String(val1).indexOf("."));
            var val4 = val3.replace(/\B(?=(?:\d{3})+$)/g, ',');
            return value = (val4 + '' + val2);
        } else {
            var val3 = val1.toString().substring(0, val1.toString().length);
            var val4 = val3.replace(/\B(?=(?:\d{3})+$)/g, ',');
            return value = val4;
        }

    } else {
        if (value != '***') {
            value = '0';
        }
    }
    return value;
};
/**
 * 作用：财务相关金额的格式控制
 * 显示：项目相关的金额数字位数与小数点后面数字的控制，如：23456.13显示为23,456.13;且小数位控制在两位内
 */
function expNumberFilter(value) {
    if (value != null && value != undefined && !isNaN(value) && value != '') {
        value = value.toString();
        if (value.indexOf('.') > -1) {
            var val1 = value.split('.')[0];//截取整数部分
            var val2 = value.split('.')[1].length < 2 ? value.split('.')[1] + 0 : value.split('.')[1];//截取小数部分
        } else {
            var val1 = value;//截取整数部分
        }
        val1 = val1.replace(/\B(?=(?:\d{3})+$)/g, ',');
        if (val2 && val2 != '') {
            value = (val1 + '.' + val2);
        } else {
            value = val1 + '.00';
        }

    } else {
        if (value != '***') {
            value = '0';
        }
    }
    return value;
}
//当任务名称过长时，超出的用‘...’显示,参数_class（传入的文字所在的标签的class值）
function stringCtrl(_class,_width) {
    //当任务名称过长时，超出的用‘...’显示
    limitString(_class,_width);
    $(window).resize(function () {
        //当任务名称过长时，超出的用‘...’显示
        limitString(_class);
    });
}

//当任务名称过长时，超出的用‘...’显示,只针对treegrid
function limitString(_class,_width) {//参数_class（传入的文字所在的标签的class值）
    var $_list = $('table tbody tr span.' + _class);
    $_list.each(function () {
        var $_a = $(this),
            td_w = _width==null?$_a.closest('td').width():_width,
            a_width = $_a.width(),//获取任务名称所占宽度
            a_height = $_a.height(),//获取任务名称所占高度
            a_left = 0,//获取任务名称的left值
            a_right = 10,//右边是否有其他元素，若有则需减去,默认右边留10px
            str = $_a.attr('data-string');//输入字符

        if (str == undefined || str == '') {
            return true;
        }

        var $_tt = $_a.find('a').length > 0 ? $_a.find('a') : $_a;
        $_a.attr({'data-toggle': 'tooltip', 'data-placement': 'top', 'data-original-title': str});
        $_a.tooltip();
        $_a.find('a[data-action]').on('click.clearTips', function () {
            $('.tooltip').remove();
        });
        $('body').bind('mousemove', function (e) {
            if ($(e.target).is('.popover') || $(e.target).parents().is('.popover')) {
                $('.tooltip').remove();
            }
        });
        if ($_a.prevAll().length > 0) {
            $_a.prevAll().each(function () {
                a_left += $(this).outerWidth();
            });
        }
        if ($_a.nextAll().length > 0) {
            $_a.nextAll().each(function () {
                if ($(this).outerWidth() > 0) a_right += $(this).outerWidth() + 10;
            });
        }
        if ((a_width + a_left + a_right + 10) >= td_w || ($.trim(str) != $.trim($_a.text()))) {
            var len = 0, temp = '', new_aW = 0;
            for (var i = 0; i < str.length; i++) {
                var c = str.charCodeAt(i);
                //单字节加1
                if ((c >= 0x0001 && c <= 0x007e) || (0xff60 <= c && c <= 0xff9f)) {
                    len++;
                }
                else {
                    len += 2;
                }
                temp += str.charAt(i);
                $_a.find('a').length > 0 ? $_a.find('a').text(temp) : $_a.text(temp);
                new_aW = $_a.outerWidth();
                if (new_aW && (new_aW + 20 >= td_w - a_left - a_right) || i >= str.length) {
                    return $_a.find('a').length > 0 ? $_a.find('a').text(temp + '...') : $_a.text(temp + '...');
                }
            }
        }
    });
}
/**
 * 元素里文字过长需要截取并加上省略号，加上tooltip
 * @param $outEle 外层固定的元素对象
 * @param $this 当前元素对象
 * @param fixedWidth 需要去掉的固定宽度
 * @returns {*}
 */
function singleLimitString($outEle,$this,oWidth,fixedWidth,placement) {
    var o_w = oWidth==null?$outEle.width():oWidth,//获取外层固定的宽度
        a_w = $this.width(),//获取当前元素所占宽度
        str = $this.attr('data-string'),//输入字符
        a_left = 0,//获取任务名称的left值
        a_right = 10;//右边是否有其他元素，若有则需减去,默认右边留10px

    if (str == undefined || str == '') {
        return false;
    }
    $this.attr({'data-toggle': 'tooltip', 'data-placement': placement==null?'top':placement, 'data-original-title': str});
    $this.tooltip();
    if ($this.prevAll().length > 0) {
        $this.prevAll().each(function () {
            a_left += $(this).outerWidth();
        });
    }
    if ($this.nextAll().length > 0) {
        $this.nextAll().each(function () {
            if ($(this).outerWidth() > 0) a_right += $(this).outerWidth() + 10;
        });
    }
    if ((a_w + a_left + a_right + fixedWidth + 10) > o_w  || ($.trim(str) != $.trim($this.text()))) {
        var len = 0, temp = '', new_aW = 0;
        for (var i = 0; i < str.length; i++) {
            var c = str.charCodeAt(i);
            //单字节加1
            if ((c >= 0x0001 && c <= 0x007e) || (0xff60 <= c && c <= 0xff9f)) {
                len++;
            }
            else {
                len += 2;
            }
            temp += str.charAt(i);
            $this.find('a').length > 0 ? $this.find('a').text(temp) : $this.text(temp);
            new_aW = $this.outerWidth();
            if (new_aW && (new_aW +20 > o_w - a_left - a_right - fixedWidth) || i >= str.length) {
                return $this.find('a').length > 0 ? $this.find('a').text(temp + '...') : $this.text(temp + '...');
            }
        }
    }
}
//num表示要四舍五入的数,v表示要保留的小数位数。
function decimal(num, v) {
    var vv = Math.pow(10, v);
    return Math.round(num * vv) / vv;
}

//计算应显示的小数位
var countDigits = function (val, maxDigits) {
    var splits = (val - 0).toString().split(".");
    var digits = 0;
    if (splits.length > 1) {
        if (splits[1].length < maxDigits)
            digits = splits[1].length;
        else
            digits = maxDigits;
    }
    return digits;
};


//正则表达式（验证）
var regularExpressions = {
    mobile: /^(13[0-9]{9})|(18[0-9]{9})|(14[0-9]{9})|(17[0-9]{9})|(15[0-9]{9})$/
    ,
    phone: /((\d{11})|^((\d{7,8})|(\d{4}|\d{3})-(\d{7,8})|(\d{4}|\d{3})-(\d{7,8})-(\d{4}|\d{3}|\d{2}|\d{1})|(\d{7,8})-(\d{4}|\d{3}|\d{2}|\d{1}))$)/
    ,
    number:/^[+-]?(\d|[1-9]\d+)(\.\d+)?$/
    ,
    pnumber: /^\d+(([.]\d{1,6})?)$/ //正实数，小数点6位
    ,
    proportionnumber: /^\d+(([.]\d{1,2})?)$/ //正实数，小数点2位
    ,
    numberWithPoints_2: /^[+-]?\d+(([.]\d{1,2})?)$/  //实数，小数点2位
};
/**
 *
 * @param t
 */
var validateNumber = function (t) {

}

//精准计算
var doMath = {
    //精确减法
    accSub: function (a1, a2) {
        var r1, r2, m, n;
        try {
            r1 = a1.toString().split(".")[1].length
        } catch (e) {
            r1 = 0
        }
        try {
            r2 = a2.toString().split(".")[1].length
        } catch (e) {
            r2 = 0
        }
        m = Math.pow(10, Math.max(r1, r2));
        //动态控制精度长度
        n = (r1 >= r2) ? r1 : r2;
        return ((a1 * m - a2 * m) / m).toFixed(n);
    },
    //精确加法
    accAdd: function (a1, a2) {
        var r1, r2, m;
        try {
            r1 = a1.toString().split(".")[1].length
        } catch (e) {
            r1 = 0
        }
        try {
            r2 = a2.toString().split(".")[1].length
        } catch (e) {
            r2 = 0
        }
        m = Math.pow(10, Math.max(r1, r2));
        return (a1 * m + a2 * m) / m;
    }
};

//封装成Number类型的子方法，调用方法如: 8-4 写成 8.sub(4)
Number.prototype.sub = function (arg) {//减法
    return parseFloat(doMath.accSub(this, arg));
};
Number.prototype.add = function (arg) {//加法
    return parseFloat(doMath.accAdd(this, arg));
};

//格式化文件大小
var formatFileSize = function (fileSize) {
    var temp;
    if (fileSize === void 0 || fileSize === null)
        return '';
    else if (fileSize < 1024) {
        return fileSize + 'B';
    } else if (fileSize < (1024 * 1024)) {
        temp = parseFloat(fileSize / 1024).toFixed(3);
        return temp.substring(0, temp.length - 1) + 'KB';
    } else if (fileSize < (1024 * 1024 * 1024)) {
        temp = parseFloat(fileSize / (1024 * 1024)).toFixed(3);
        return temp.substring(0, temp.length - 1) + 'MB';
    } else {
        temp = parseFloat(fileSize / (1024 * 1024 * 1024)).toFixed(3);
        return temp.substring(0, temp.length - 1) + 'GB';
    }
};
/**
 * 获取字符串宽度及高度
 * @param style
 * @returns {{width: *, height: *}}
 */
String.prototype.getTextWH = function(style){
    var $span=$("<span>"+this+"</span>");
    $span.css($.extend({},style,{display:'none'}));
    $("body").append($span);
    var result={
        "width":$span.width(),
        "height":$span.height()
    };
    $span.remove();
    return result;
};
/**
 * 全局控制筛选浮动窗宽高
 * @param w
 * @param h
 * @returns {{width: number, height: number}}
 */
var setDialogWH = function (w,h) {
    var result={
        "width":w>600?200:w,
        "height":h>400?200:h
    };
    return result;
};
/**
 *
 */
var momentFormat = function (datetime,pattern) {
    if(pattern == "A") {
        var date = new Date(Date.parse(datetime.replace(/-/g, "/")));
        if (date.getHours() <= 12) {
            return date.getFullYear().toString() + "/" + (date.getMonth() + 1).toString() + "/" + date.getDate().toString() + " 上午";

        } else {

            return date.getFullYear().toString() + "/" + (date.getMonth() + 1).toString() + "/" + date.getDate().toString() + " 下午";
        }
    }else if(pattern == "B"){//当YYYY/MM/DD 转为格式YYYY-MM-DD

        return new Date(Date.parse(datetime.replace(/\//g, "-")));

    }else {
        var m = moment(datetime);
        if (m.isValid())
            return moment(datetime).locale("zh-cn").format(pattern);
        return '';
    }
};
/**
 * 时间控件图标事件绑定
 * @param $ele
 */
var clickTimeIcon = function ($ele) {
    $ele.find('.fa-calendar').off('click').on('click',function () {
        $(this).closest('.input-group').find('input').focus();
    })
};
/**
 * 根据ID获取对象
 * @param arr 数组
 * @param id
 */
var getObjectInArray = function (arr,id) {

    if(isNullOrBlank(arr))
        return null;

    if(isNullOrBlank(id))
        return null;

    var obj=arr.find(function (item) {
        return item.id === id
    });
    return obj;
};
/*TMODJS:{"version":"1.0.0"}*/
!function () {

    function template (filename, content) {
        return (
            /string|function/.test(typeof content)
            ? compile : renderFile
        )(filename, content);
    };


    var cache = template.cache = {};
    var String = this.String;

    function toString (value, type) {

        if (typeof value !== 'string') {

            type = typeof value;
            if (type === 'number') {
                value += '';
            } else if (type === 'function') {
                value = toString(value.call(value));
            } else {
                value = '';
            }
        }

        return value;

    };


    var escapeMap = {
        "<": "&#60;",
        ">": "&#62;",
        '"': "&#34;",
        "'": "&#39;",
        "&": "&#38;"
    };


    function escapeFn (s) {
        return escapeMap[s];
    }


    function escapeHTML (content) {
        return toString(content)
        .replace(/&(?![\w#]+;)|[<>"']/g, escapeFn);
    };


    var isArray = Array.isArray || function(obj) {
        return ({}).toString.call(obj) === '[object Array]';
    };


    function each (data, callback) {
        if (isArray(data)) {
            for (var i = 0, len = data.length; i < len; i++) {
                callback.call(data, data[i], i, data);
            }
        } else {
            for (i in data) {
                callback.call(data, data[i], i);
            }
        }
    };


    function resolve (from, to) {
        var DOUBLE_DOT_RE = /(\/)[^/]+\1\.\.\1/;
        var dirname = ('./' + from).replace(/[^/]+$/, "");
        var filename = dirname + to;
        filename = filename.replace(/\/\.\//g, "/");
        while (filename.match(DOUBLE_DOT_RE)) {
            filename = filename.replace(DOUBLE_DOT_RE, "/");
        }
        return filename;
    };


    var utils = template.utils = {

        $helpers: {},

        $include: function (filename, data, from) {
            filename = resolve(from, filename);
            return renderFile(filename, data);
        },

        $string: toString,

        $escape: escapeHTML,

        $each: each
        
    };


    var helpers = template.helpers = utils.$helpers;


    function renderFile (filename, data) {
        var fn = template.get(filename) || showDebugInfo({
            filename: filename,
            name: 'Render Error',
            message: 'Template not found'
        });
        return data ? fn(data) : fn; 
    };


    function compile (filename, fn) {

        if (typeof fn === 'string') {
            var string = fn;
            fn = function () {
                return new String(string);
            };
        }

        var render = cache[filename] = function (data) {
            try {
                return new fn(data, filename) + '';
            } catch (e) {
                return showDebugInfo(e)();
            }
        };

        render.prototype = fn.prototype = utils;
        render.toString = function () {
            return fn + '';
        };

        return render;
    };


    function showDebugInfo (e) {

        var type = "{Template Error}";
        var message = e.stack || '';

        if (message) {
            // 利用报错堆栈信息
            message = message.split('\n').slice(0,2).join('\n');
        } else {
            // 调试版本，直接给出模板语句行
            for (var name in e) {
                message += "<" + name + ">\n" + e[name] + "\n\n";
            }  
        }

        return function () {
            if (typeof console === "object") {
                console.error(type + "\n\n" + message);
            }
            return type;
        };
    };


    template.get = function (filename) {
        return cache[filename.replace(/^\.\//, '')];
    };


    template.helper = function (name, helper) {
        helpers[name] = helper;
    };


    if (typeof define === 'function') {define(function() {return template;});} else if (typeof exports !== 'undefined') {module.exports = template;} else {this.template = template;}
    /**
 * Created by Wuwq on 2017/1/12.
 */


/*自动组合rootPath生成完整URL*/
template.helper('_url', function (url) {
    return window.rootPath + url;
});

/*自动组合rootPath生成完整URL*/
template.helper('_fastdfsUrl', function (url) {
    return window.fastdfsUrl + url;
});


/*语言化描述过滤日期*/
template.helper('_filterDateRangeToString', function (filterValue) {
    var split = filterValue.split(',');
    if (split[0] === split[1])
        return split[0];
    else {
        if (isNullOrBlank(split[0]) && !isNullOrBlank(split[1]))
            return split[1] + ' 及以前';
        else if (!isNullOrBlank(split[0]) && isNullOrBlank(split[1]))
            return split[0] + ' 及以后';
        else
            return split[0] + ' ~ ' + split[1];
    }
});

/*Join某个数组的指定字段*/
template.helper('_mapJoin', function (array, field, separator) {
    if (array === undefined || array === null || array.length === 0)
        return '';
    return _.map(array, function (o) {
        return o[field];
    }).join(separator);
});

/*序列化为JSON字符串*/
template.helper('_jsonStringify', function (obj) {
    return JSON.stringify(obj);
});

/*判断是否为空字符串*/
template.helper('_isBlank', function (str) {
    return _.isBlank(str);
});

/*判断字符串是否为undefined、Null或空*/
template.helper('_isNullOrBlank', function (str) {
    return isNullOrBlank(str);
});

/*字符串固定长度，不足位则左边补充指定字符*/
template.helper('_lpad', function (o, len, c) {
    if (len < 2) len = 2;
    return _.lpad(o, len, c);
});

/*生成唯一DOM元素唯一ID*/
template.helper('_uniqueId', function (prefix) {
    return _.uniqueId(prefix);
});

/*截断字符串*/
template.helper('_cutString', function (str, length, suffix) {
    return cutString(str, length, suffix)
});

/*短格式时间
 * 1：00
 * 2：00
 * */
template.helper('_shortTime', function (datetime) {
    return shortTime(datetime);
});

/*格式化日期*/
template.helper('_momentFormat', function (datetime, pattern) {

    if(pattern == "A") {
        var date = new Date(Date.parse(datetime.replace(/-/g, "/")));
        if (date.getHours() <= 12) {
            return date.getFullYear().toString() + "/" + (date.getMonth() + 1).toString() + "/" + date.getDate().toString() + " 上午";

        } else {

            return date.getFullYear().toString() + "/" + (date.getMonth() + 1).toString() + "/" + date.getDate().toString() + " 下午";
        }
    }else if(pattern == "B"){//当YYYY/MM/DD 转为格式YYYY-MM-DD

        return new Date(Date.parse(datetime.replace(/\//g, "-")));

    }else {
        var m = moment(datetime);
        if (m.isValid())
            return moment(datetime).locale("zh-cn").format(pattern);
        return '';
    }

});

/*格式化日期
 * 今天 1：00
 * 昨天 2：00
 * 2017-01-01 2：00
 * */
template.helper('_dateSpecFormat', function (datetime, pattern) {
    return dateSpecFormat(datetime, pattern);
});

/**
 * 两日期天数差值
 */
template.helper('_timeDifference', function (time1,time2) {

    if(time1!=null && time1!='' && time2!=null && time2!=''){
        return diffDays(time1,time2)+1;
    }
    return '';
});

/**
 * 作用：财务相关金额的格式控制
 * 显示：项目相关的金额数字位数与小数点后面数字的控制，如：23456.13显示为23,456.13;且小数位控制在两位内
 */
template.helper('_expNumberFilter', function (value) {
    return expNumberFilter(value);
});
/**Number(-10000023).toFixed(2)
 * 当负数时，转为正数
 */
template.helper('_expPositiveNumberFilter', function (value) {
    value = value+'';
    if(value.indexOf('-')>-1){
        value = value.substring(1,value.length);
    }
    return expNumberFilter(value);
});
/**
 * Number(-10000023).toFixed(2)
 */
template.helper('_expNumberDecimalFilter', function (value) {

    value = Number(value).toFixed(2);
    return expNumberFilter(value);
});

/*格式化日期
 * 今天
 * 昨天
 * 2017-01-01
 * */
template.helper('_dateSpecShortFormat', function (datetime) {
    return dateSpecShortFormat(datetime);
});

template.helper('_ifPresent', function (s, presentVal, elseVal) {
    if (s !== null && s !== void 0)
        return presentVal;
    return elseVal;
});

template.helper('_include',function(tpl,obj){
   return template(tpl, obj);
});

template.helper('_jsonStringify',function(obj){
    return JSON.stringify(obj);
});
/**
 * 截取字符串
 * str:字符串
 * s:以此截取
 * i:下标
 */
template.helper('_subStr', function (str,s,i) {
    if(str!=null && s!=''){
        var strArr = str.split(s);
        return strArr[i];
    }else{
        return '';
    }
});

    /*v:1*/
template('m_alert/m_alert_error',function($data,$filename
/**/) {
'use strict';var $utils=this,$helpers=$utils.$helpers,$escape=$utils.$escape,id=$data.id,_uniqueId=$helpers._uniqueId,content=$data.content,$out='';$out+='<div data-id="';
$out+=$escape(id||_uniqueId('m_alert_error_'));
$out+='" class="alert alert-danger fade in alert-dismissable"> <button type="button" class="close" data-dismiss="alert" aria-hidden="true">×</button> ';
$out+=$escape(content);
$out+=' </div>';
return new String($out);
});/*v:1*/
template('m_approval/m_approval_mgt','<div class="ibox"> <div class="ibox-content no-borders"> <h4>审批管理</h4> <p>轻量级审批管理，支持自定义审批流程</p> <div id="approvalManagement"> </div> </div> </div>');/*v:1*/
template('m_approval/m_approval_mgt_content',function($data,$filename
/**/) {
'use strict';var $utils=this,$helpers=$utils.$helpers,$each=$utils.$each,approvalList=$data.approvalList,a=$data.a,i=$data.i,$escape=$utils.$escape,p=$data.p,pi=$data.pi,$out='';$out+='<table class="table table-hover"> <thead> <tr> <th>审批名称</th> <th>说明</th> <th>审批人设置</th> <th>操作</th> </tr> </thead> <tbody> ';
$each(approvalList,function(a,i){
$out+=' <tr> <td colspan="4"> <h5 class="f-s-13">';
$out+=$escape(a.name);
$out+='</h5>  </td> </tr> ';
if(a.processDefineList!=null && a.processDefineList.length>0){
$out+=' ';
$each(a.processDefineList,function(p,pi){
$out+=' <tr> <td> <!--<label class="i-checks"> <input class="ck" name="iCheck';
$out+=$escape(p.id);
$out+='" type="radio" /> </label>--> ';
$out+=$escape(p.name);
$out+=' </td> <td>';
$out+=$escape(p.documentation);
$out+='</td> <td> <a class="btn btn-link text-navy no-padding pull-left" data-action="setProcess" data-key="';
$out+=$escape(p.key);
$out+='" data-type="';
$out+=$escape(p.type);
$out+='">审批人</a> <span class="fc-ccc">（已设置）</span> </td> <td>  </td> </tr> ';
});
$out+=' ';
}
$out+=' ';
});
$out+=' </tbody> </table>';
return new String($out);
});/*v:1*/
template('m_approval/m_approval_mgt_setProcess',function($data,$filename
/**/) {
'use strict';var $utils=this,$helpers=$utils.$helpers,$escape=$utils.$escape,name=$data.name,fixedProcess=$data.fixedProcess,$each=$utils.$each,f=$data.f,i=$data.i,p=$data.p,pi=$data.pi,u=$data.u,ui=$data.ui,_isNullOrBlank=$helpers._isNullOrBlank,_url=$helpers._url,condProcess=$data.condProcess,$out='';$out+='<div class="ibox m_approval_mgt_setProcess"> <div class="ibox-content no-borders"> <h4>模板管理</h4> <div class="row m-t-sm"> <div class="col-md-2 text-right">模版模型：</div> <div class="col-md-10">';
$out+=$escape(name);
$out+='</div> </div> <div class="row m-t-sm"> <div class="col-md-2 text-right">审批流程：</div> <div class="col-md-10"> <div> <label class="i-checks"> <input class="ck" name="iCheck" type="radio" data-type="1" /> 自由流程 </label> <span class="fc-ccc">（组织成员可自行添加相应的审批人）</span> </div> <div class="m-t-xs"> <label class="i-checks"> <input class="ck" name="iCheck" type="radio" data-type="2" /> 固定流程 </label> <span class="fc-ccc">（组织成员需按照规定好的审批人流程进行审批）</span> </div> <div class="panel panel-default" data-type="2" data-i="0" style="display: none;"> <div class="panel-heading"> 当为“固定流程”时 </div> <div class="panel-body" > ';
if(fixedProcess!=null && fixedProcess.length>0){
$out+=' ';
$each(fixedProcess,function(f,i){
$out+=' ';
if(f.flowTaskList!=null && f.flowTaskList.length>0){
$out+=' ';
$each(f.flowTaskList,function(p,pi){
$out+=' <div class="approver-outbox"> ';
$each(p.candidateUserList,function(u,ui){
$out+=' <div class="approver-box text-center"> <div class="img-circle"> <img alt="image" class="img-circle" src="';
$out+=$escape(_isNullOrBlank(u.imgUrl)?_url('/assets/img/head_default.png'):u.imgUrl);
$out+='" width="50" height="50"> </div> <div class="m-t-xs">';
$out+=$escape(u.name);
$out+='</div> <a href="javascript:void(0);" class="approver-remove" data-action="removeApprover" style="display: none;"><i class="glyphicon glyphicon-remove"></i></a> </div> ';
});
$out+=' </div> ';
if(pi+1 < f.flowTaskList.length ){
$out+=' <div class="arrow-icon p-h-m"> <i class="fa fa-long-arrow-right"></i> </div> ';
}
$out+=' ';
});
$out+=' ';
}
$out+=' ';
});
$out+=' ';
}
$out+=' <div class="approver-box text-center"> <a class="btn btn-default btn-circle " type="button" data-action="addReview"> <i class="fa fa-plus"></i> </a> <div class="m-t-xs">添加</div> </div> </div> <div class="panel-footer"> <p>比如组织报销流程为“酋长 > 部落”，设定固定流程后，组织成员填写审批单时，审批人已经默认设置为“酋长 > 部落”，且成员自己不能修改。 </p> </div> </div> <div class="m-t-xs"> <label class="i-checks"> <input class="ck" name="iCheck" type="radio" data-type="3" /> 分条件设置流程 </label> <span class="fc-ccc">（申请人提交的表单会进入相应审批条件设置的审批流程）</span> <a class="btn btn-link" data-action="setApprovalCondition" data-type="3" style="display: none;">设置审批条件</a> </div> <div id="flowTaskGroupList"> ';
if(condProcess!=null && condProcess.length>0){
$out+=' ';
$each(condProcess,function(f,i){
$out+=' <div class="panel panel-default" data-type="3" data-i="';
$out+=$escape(i);
$out+='"> <div class="panel-heading"> ';
$out+=$escape(f.title);
$out+=' </div> <div class="panel-body"> ';
if(f.flowTaskList!=null && f.flowTaskList.length>0){
$out+=' ';
$each(f.flowTaskList,function(p,pi){
$out+=' <div class="approver-outbox"> ';
$each(p.candidateUserList,function(u,ui){
$out+=' <div class="approver-box text-center"> <div class="img-circle"> <img alt="image" class="img-circle" src="';
$out+=$escape(_isNullOrBlank(u.imgUrl)?_url('/assets/img/head_default.png'):u.imgUrl);
$out+='" width="50" height="50"> </div> <div class="m-t-xs">';
$out+=$escape(u.name);
$out+='</div> <a href="javascript:void(0);" class="approver-remove" data-action="removeApprover" style="display: none;"><i class="glyphicon glyphicon-remove"></i></a> </div> ';
});
$out+=' </div> ';
if(pi+1 < f.flowTaskList.length ){
$out+=' <div class="arrow-icon p-h-m"> <i class="fa fa-long-arrow-right"></i> </div> ';
}
$out+=' ';
});
$out+=' ';
}
$out+=' <div class="approver-box text-center"> <a class="btn btn-default btn-circle " type="button" data-action="addReview"> <i class="fa fa-plus"></i> </a> <div class="m-t-xs">添加</div> </div> </div> </div> ';
});
$out+=' ';
}
$out+=' </div> </div> </div> <div class="row"> <div class="col-md-2"></div> <div class="col-md-10"> <a class="btn btn-primary" data-action="save">保存</a> <a class="btn btn-default" data-action="back">返回</a> </div> </div> </div> </div>';
return new String($out);
});/*v:1*/
template('m_approval/m_approval_mgt_setProcessCondition',function($data,$filename
/**/) {
'use strict';var $utils=this,$helpers=$utils.$helpers,$escape=$utils.$escape,processData=$data.processData,$out='';$out+='<form class="form-horizontal m-r m-l m_approval_mgt_setProcessCondition "> <div class="form-group"> <h4>';
$out+=$escape(processData.name);
$out+='</h4> <p class="fc-ccc"> 请输入“';
$out+=$escape(processData.name);
$out+='（';
$out+=$escape(processData.unit);
$out+='）”的分隔数字，我们将为您自动生成数值区间做为审批条件： </p> </div> <div class="form-group"> <div class="col-md-2 m-b-xs"> <input class="form-control input-sm" type="text" name="conditionalVal"> </div> <div class="col-md-1 m-b-xs p-xxs text-center"> < </div> <div class="col-md-2 m-b-xs"> <input class="form-control input-sm" type="text" name="conditionalVal"> </div> <div class="col-md-1 m-b-xs"> <a class="btn btn-primary btn-circle " type="button" data-action="addCondition"> <i class="fa fa-plus"></i> </a> </div> </div> <div class="well m-b-none"> <p>例如：</p> <p>1、输入“报销金额”分隔数字</p> <div class="row"> <div class="col-md-2 m-b-xs"> <input class="form-control input-sm" type="text" value="1000" readonly> </div> <div class="col-md-1 m-b-xs p-xxs text-center"> < </div> <div class="col-md-2 m-b-xs"> <input class="form-control input-sm" type="text" value="3000" readonly> </div> </div> <p>2、我们将为您自动生成数值区间做为审批条件</p> <div class="row"> <div class="col-md-12 "> <span class="label label-primary">报销金额 < 1000</span> </div> <div class="col-md-12 m-t-xs"> <span class="label label-white">审批人：张三</span> </div> <div class="col-md-12 m-t-xs"> <span class="label label-primary">1000 < 报销金额 < 3000</span> </div> <div class="col-md-12 m-t-xs"> <span class="label label-white">审批人：李四</span> </div> <div class="col-md-12 m-t-xs"> <span class="label label-white">审批人：王五</span> </div> <div class="col-md-12 m-t-xs"> <span class="label label-primary">报销金额 >= 3000</span> </div> <div class="col-md-12 m-t-xs"> <span class="label label-white">审批人：张三</span> </div> </div> </div> </form>';
return new String($out);
});/*v:1*/
template('m_approval/m_approval_mgt_setProcess_approver',function($data,$filename
/**/) {
'use strict';var $utils=this,$helpers=$utils.$helpers,isAppendArrow=$data.isAppendArrow,$each=$utils.$each,approverList=$data.approverList,p=$data.p,i=$data.i,$escape=$utils.$escape,_url=$helpers._url,$out='';if(isAppendArrow==1){
$out+=' <div class="arrow-icon p-h-m"> <i class="fa fa-long-arrow-right"></i> </div> ';
}
$out+=' ';
$each(approverList,function(p,i){
$out+=' <div class="approver-outbox"> <div class="approver-box text-center"> <div class="img-circle"> <img alt="image" class="img-circle" src="';
$out+=$escape(_url('/assets/img/head_default.png'));
$out+='" width="50" height="50"> </div> <div class="m-t-xs">';
$out+=$escape(p.userName);
$out+='</div> <a href="javascript:void(0);" class="approver-remove" data-action="removeApprover" style="display: none;"><i class="glyphicon glyphicon-remove"></i></a> </div> </div> ';
if((i+1) < approverList.length ){
$out+=' <div class="arrow-icon p-h-m"> <i class="fa fa-long-arrow-right"></i> </div> ';
}
$out+=' ';
});
return new String($out);
});/*v:1*/
template('m_approval/m_approval_mgt_setProcess_flow',function($data,$filename
/**/) {
'use strict';var $utils=this,$helpers=$utils.$helpers,$each=$utils.$each,flowTaskGroupList=$data.flowTaskGroupList,f=$data.f,i=$data.i,$escape=$utils.$escape,$out='';$each(flowTaskGroupList,function(f,i){
$out+=' <div class="panel panel-default" data-type="3" data-i="';
$out+=$escape(i);
$out+='"> <div class="panel-heading"> ';
$out+=$escape(f.title);
$out+=' </div> <div class="panel-body">  <div class="approver-box text-center"> <a class="btn btn-default btn-circle " type="button" data-action="addReview"> <i class="fa fa-plus"></i> </a> <div class="m-t-xs">添加</div> </div> </div> </div> ';
});
return new String($out);
});/*v:1*/
template('m_browser_tips/m_browser_tips',function($data,$filename
/**/) {
'use strict';var $utils=this,$helpers=$utils.$helpers,$escape=$utils.$escape,_url=$helpers._url,$out='';$out+='<div class="m-browser-tips"> <div class="tips-head"> <img src="';
$out+=$escape(_url('/assets/img/logo_blue.png'));
$out+='"> </div> <div class="tips-content"> <p>由于你当前使用的浏览器版本过低，若继续访问可能会导致部分功能展示不正常，我们推荐你使用以下浏览器进行访问。</p> <p style="margin: 50px 0 30px 0;"><a href="javascript:void(0)" data-action="continue">&gt;&gt;&gt;&nbsp;继续访问</a></p> <ul> <li> <img src="';
$out+=$escape(_url('/assets/img/browser/chrome.png'));
$out+='"> <p>Chrome（推荐）</p> </li> <li> <img src="';
$out+=$escape(_url('/assets/img/browser/firefox.png'));
$out+='"> <p>Firefox</p> </li> <li> <img src="';
$out+=$escape(_url('/assets/img/browser/360.png'));
$out+='"> <p>360极速</p> </li> <li> <img src="';
$out+=$escape(_url('/assets/img/browser/ie.png'));
$out+='"> <p>IE 10+</p> </li> </ul> </div> <div> <span style="font-size: 12px;bottom: 10px;right:15px;position: absolute;"><input id="m-browser-never-tips" type="checkbox" />&nbsp;不再提示</span> </div> </div>';
return new String($out);
});/*v:1*/
template('m_common/m_attach',function($data,$filename
/**/) {
'use strict';var $utils=this,$helpers=$utils.$helpers,$escape=$utils.$escape,netFileId=$data.netFileId,fullPath=$data.fullPath,fileName=$data.fileName,$out='';$out+='<span class="label m-r-xs" style="background: #ecf0f1;padding: 5px 10px;"> <a href="javascript:void(0)" data-action="preview" data-net-file-id="';
$out+=$escape(netFileId);
$out+='" data-src="';
$out+=$escape(fullPath);
$out+='" data-name="';
$out+=$escape(fileName);
$out+='">';
$out+=$escape(fileName);
$out+='</a> <a class="curp m-l-xs" href="javascript:void(0)" data-action="deleteAttach" data-net-file-id="';
$out+=$escape(netFileId);
$out+='"> <i class="fa fa-times color-red"></i> </a> </span>';
return new String($out);
});/*v:1*/
template('m_common/m_bottom',function($data,$filename
/**/) {
'use strict';var $utils=this,$helpers=$utils.$helpers,$escape=$utils.$escape,_url=$helpers._url,$out='';$out+='<div class="pull-right"> </div> <div> <a href="';
$out+=$escape(_url('/'));
$out+='" target="_blank" style="color: #676a6c"><strong>Copyright</strong>&nbsp;imaoding.com&nbsp;&copy;&nbsp;2015-2017</a> <span id="footDiskInfo">已使用：0B&nbsp;&nbsp;总容量：5.0GB</span> </div>';
return new String($out);
});/*v:1*/
template('m_common/m_dialog','<div class="dialogOBox" style="height: 100%;overflow: auto;"> </div>');/*v:1*/
template('m_common/m_inputProcessTime',function($data,$filename
/**/) {
'use strict';var $utils=this,$helpers=$utils.$helpers,$escape=$utils.$escape,appointmentStartTime=$data.appointmentStartTime,$timeInfo=$data.$timeInfo,appointmentEndTime=$data.appointmentEndTime,$isHaveMemo=$data.$isHaveMemo,$out='';$out+='<style> .form-horizontal .m-r-xs{margin:5px -5px;} /*label.error{position: absolute;top:30px;left: -5px;}*/ </style> <form class="form-horizontal rounded-bottom inputTimeOBox p-m"> <div class="col-md-4"> <div class="form-group m-r-xs"> <label>开始时间</label> <div class="input-group"> <input type="text" class="form-control timeInput startTime input-sm" id="ipt_startTime" name="startTime" data-appointmentStartTime = "';
$out+=$escape(appointmentStartTime);
$out+='" placeholder="开始日期" readonly onFocus="startTimeFun(this,m_inputProcessTime_onpicked)" value="';
$out+=$escape($timeInfo.startTime);
$out+='" style="width: 110px"> <span class="input-group-addon no-padding"> <i class="icon-sm icon-append fa fa-calendar" style="height: 28px;line-height: 28px;"></i> </span> </div> </div> </div> <div class="col-md-4"> <div class="form-group m-r-xs"> <label>结束时间</label> <div class="input-group"> <input type="text" class="form-control timeInput endTime input-sm" id="ipt_endTime" name="endTime" data-appointmentEndTime = "';
$out+=$escape(appointmentEndTime);
$out+='" placeholder="结束日期" readonly onFocus="endTimeFun(this,m_inputProcessTime_onpicked)" value="';
$out+=$escape($timeInfo.endTime);
$out+='" style="width: 110px"> <span class="input-group-addon no-padding"> <i class="icon-sm icon-append fa fa-calendar" style="height: 28px;line-height: 28px;"></i> </span> </div> </div> </div> <div class="col-md-4"> <div class="form-group m-r-xs"> <label>总天数</label> <div class="input-group spinner dayCountSpinner" data-trigger="spinner"> <input type="text" class="form-control text-center input-sm dayCount" value="0" data-rule="quantity"> <div class="input-group-addon"> <a href="javascript:;" class="spin-up" style="height: 8px;width: 8px;" data-spin="up"><i class="fa fa-caret-up"></i></a> <a href="javascript:;" class="spin-down" style="height: 8px;width: 8px;" data-spin="down"><i class="fa fa-caret-down"></i></a> </div> </div> </div> </div> ';
if($isHaveMemo){
$out+=' <div class="col-md-12"> <div class="form-group m-r-xs"> <label>变更原因</label> <textarea name="memo" class="form-control">';
$out+=$escape($timeInfo.memo);
$out+='</textarea> </div> </div> ';
}
$out+=' <div class="clearfix"></div> </form>';
return new String($out);
});/*v:1*/
template('m_common/m_leftNav',function($data,$filename
/**/) {
'use strict';var $utils=this,$helpers=$utils.$helpers,$escape=$utils.$escape,rootPath=$data.rootPath,userInfo=$data.userInfo,$out='';$out+='<nav class="navbar-default navbar-static-side" role="navigation"> <div class="navbar-header" style="float: none;"> <a class="navbar-minimalize minimalize-styl-2 btn btn-primary" href="#"><i id=\'navBarZoomIcon\' class="fa fa-outdent"></i></a> </div> <div class="sidebar-collapse"> <ul class="nav metismenu" id="side-menu"> <li class="nav-header"> <div class="dropdown profile-element"> <img alt="个人头像" class="img-circle" src="';
$out+=$escape(rootPath);
$out+='/assets/img/profile_small.jpg"> <a data-toggle="dropdown" class="dropdown-toggle" href="#"> <span class="clear"> <span class="block m-t-xs"> <strong class="font-bold">';
$out+=$escape(userInfo.userName);
$out+='</strong><b class="caret"></b> </span></span> </a> <ul class="dropdown-menu animated fadeInUp m-t-xs"> <li><a href="';
$out+=$escape(rootPath);
$out+='//iWork/personal/center">个人中心</a></li> </ul> </div> <div class="logo-element"> <img alt="个人头像" class="img-circle" src="';
$out+=$escape(rootPath);
$out+='/assets/img/profile_small.jpg"> </div> </li> <li class="active"> <a href="javascript:void(0);"><i class="fa fa-home"></i> <span class="nav-label">工作台</span></a> </li> <li> <a href="expense.html"><i class="fa fa-money"></i> <span class="nav-label">费用报销</span> </a> </li> <li> <a href="expense.html"><i class="fa fa-envelope"></i> <span class="nav-label">通知公告</span> </a> </li> <li> <a href="expense.html"><i class="fa fa-users"></i> <span class="nav-label">人员管理</span> </a> </li> <li> <a href="expense.html"><i class="fa fa-cogs"></i> <span class="nav-label">后台管理</span> </a> </li> </ul> </div> </nav>';
return new String($out);
});/*v:1*/
template('m_common/m_popover',function($data,$filename
/**/) {
'use strict';var $utils=this,$helpers=$utils.$helpers,$escape=$utils.$escape,popoverStyle=$data.popoverStyle,$string=$utils.$string,titleHtml=$data.titleHtml,contentStyle=$data.contentStyle,content=$data.content,$out='';$out+='<div class="popover m-popover box-shadow" role="tooltip" style="';
$out+=$escape(popoverStyle);
$out+='"> <div class="arrow" style="left: 50%;"></div>  ';
$out+=$string(titleHtml);
$out+=' <div class="popover-content" style="';
$out+=$escape(contentStyle);
$out+='"> ';
$out+=$string(content);
$out+=' </div> </div>';
return new String($out);
});/*v:1*/
template('m_common/m_popover_confirm',function($data,$filename
/**/) {
'use strict';var $utils=this,$helpers=$utils.$helpers,$string=$utils.$string,confirmMsg=$data.confirmMsg,$out='';$out+='<div> <p class="f-s-13">';
$out+=$string(confirmMsg);
$out+='</p> <p class="pull-right" > <button type="button" class="popover-btn-no btn-u btn-u-default btn-u-xs rounded m-popover-close left m-r-4" style="line-height:22px;">取消 </button> <button type="button" class="popover-btn-yes btn-u btn-u-red btn-u-xs rounded m-popover-submit m-l-sm left" style="line-height:22px;">确定</button> </p> </div>';
return new String($out);
});/*v:1*/
template('m_common/m_quickDatePicker',function($data,$filename
/**/) {
'use strict';var $utils=this,$helpers=$utils.$helpers,isClear=$data.isClear,$out='';$out+='<style> #quickDatePicker iframe{box-shadow: none !important;} </style> <div id=\'quickDatePicker\' class="quickDatePicker"> </div> <div class="row"> <div class="col-md-12 text-right m-b-sm"> ';
if(isClear){
$out+=' <button type="button" class="btn btn-primary btn-sm m-popover-clear">清空</button> ';
}
$out+=' </div> </div>';
return new String($out);
});/*v:1*/
template('m_common/m_top',function($data,$filename
/**/) {
'use strict';var $utils=this,$helpers=$utils.$helpers,$escape=$utils.$escape,rootPath=$data.rootPath,companyInfo=$data.companyInfo,_isNullOrBlank=$helpers._isNullOrBlank,isAuth=$data.isAuth,orgList=$data.orgList,$each=$utils.$each,o=$data.o,i=$data.i,roleCodes=$data.roleCodes,adminFlag=$data.adminFlag,userInfo=$data.userInfo,unReadNotice=$data.unReadNotice,unReadMessage=$data.unReadMessage,$out='';$out+='<style> a.svg { display: inline-block; position: relative; } a.svg:after { content: ""; position: absolute; top: 0; right: 0; bottom: 0; left: 0; } .navbar-brand{ height: 60px; padding: 12px 38px; } </style> <nav class="navbar navbar-static-top" role="navigation" style="margin-bottom: 0px;">  <div class="navbar-header"> <button aria-controls="navbar" aria-expanded="false" data-target="#navbar" data-toggle="collapse" class="navbar-toggle collapsed" type="button"> <i class="fa fa-reorder"></i> </button> <a href="';
$out+=$escape(rootPath);
$out+='" class="navbar-brand svg" target="_blank"> <object class="maoding_logo pt-relative" data="';
$out+=$escape(rootPath);
$out+='/assets/img/logo_white.png"></object> </a> </div>  <div id="navbar" class="navbar-collapse collapse"> ';
if(companyInfo&&!_isNullOrBlank(companyInfo.filePath)){
$out+=' <ul class="nav navbar-top-links navbar-left" style="padding: 0 25px 0 5px;"> ';
}else{
$out+=' <ul class="nav navbar-top-links navbar-left" style="padding: 0 10px 0 20px;"> ';
}
$out+=' <li class="pull-left"> ';
if(companyInfo!=null && companyInfo.companyName!=null && companyInfo.companyName!=''){
$out+=' <div class="dropdown l-h-60 no-pd"> <a class="orgInfo" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false" href="javascript:void(0)"> ';
$out+=$escape(companyInfo.companyName);
$out+=' ';
if(isAuth && isAuth==2){
$out+=' <object data="';
$out+=$escape(rootPath);
$out+='/assets/img/org/verifiedIcon.svg" type="image/svg+xml" style="height: 16px;margin-bottom: 4px; vertical-align: middle;"></object> <span style="color: #F8AC5B;">已认证</span> ';
}
$out+=' <span class="caret"></span> </a> <ul id=\'m_top_orgList\' class="dropdown-menu dropdown-menu-left dropdown-menu-new" style="min-width: 250px;margin-left:-7px;"> ';
if(orgList&&orgList.length>1){
$out+=' <li style="margin: 2px 0 0 0;"> <a class="title pt-relative" href="javascript:void(0)"><span class="lineLeft"></span>切换组织<span class="lineRight"></span></a> </li> ';
$each(orgList,function(o,i){
$out+=' ';
if(o.id!== companyInfo.id ){
$out+=' <li> <a href="javascript:void(0);" data-action="switchOrg" org-id="';
$out+=$escape(o.id);
$out+='"> <div> ';
$out+=$escape(o.companyName);
$out+=' </div> </a> </li> ';
}
$out+=' ';
});
$out+=' ';
}
$out+=' </ul> </div> ';
}
$out+=' </li> ';
if((roleCodes!=null && ( roleCodes.indexOf('sys_enterprise_logout')>-1 || roleCodes.indexOf('com_enterprise_edit')>-1 || roleCodes.indexOf('hr_org_set')>-1 || roleCodes.indexOf('hr_employee')>-1
                || roleCodes.indexOf('org_data_import')>-1 || roleCodes.indexOf('data_import')>-1 || roleCodes.indexOf('org_partner')>-1 || roleCodes.indexOf('sys_role_permission')>-1
                || roleCodes.indexOf('sys_role_auth')>-1 ) ) || adminFlag=='1'){
$out+=' <li class="pull-left"> <a data-action="backstageMgt" title="后台管理" style="padding: 22px 20px 14px 10px;"> <i class="fa fa-cog" style="margin-right: 9px;margin-left: 2px;"></i> </a> </li> ';
}
$out+=' </ul>  <ul class="nav navbar-top-links navbar-right"> <li class="pull-left"> <div class="dropdown l-h-60 no-pd"> <img alt="image" class="img-circle m-t-n-xs" src="';
$out+=$escape(userInfo.imgUrl);
$out+='" style="width: 40px;height: 40px;margin-right:5px;"> <a class="userInfo" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false" data-type="textUserName" href="javascript:void(0)"> ';
$out+=$escape(userInfo.userName);
$out+='<span class="caret"></span> </a> <ul class="dropdown-menu dropdown-menu-left dropdown-menu-new" style="z-index: 99999"> <li><a href="javascript:void(0)" data-action="personalSettings">个人设置</a></li> <li><a href="javascript:void(0)" data-action="createOrg">创建组织</a></li> <li class="divider"></li> <li><a href="';
$out+=$escape(rootPath);
$out+='/iWork/sys/logout">退出登录</a></li> </ul> </div> </li> <li class="pull-left"> <a class="messageInfo" href="javascript:void(0);" data-action="announcement"> <i class="fa fa-bell"></i><span id="unReadNoticeCount" class="label label-warning">';
$out+=$escape(unReadNotice);
$out+='</span> </a> </li> <li class="pull-left"> <a class="messageInfo" href="javascript:void(0);" data-action="messageCenter"> <i class="fa fa-envelope"></i> <span id="unReadMessageCount" class="label label-warning">';
$out+=$escape(unReadMessage);
$out+='</span> </a> </li> </ul> </div> </nav>';
return new String($out);
});/*v:1*/
template('m_cost/m_cost_addNode','<div class="ibox m-contractPayment-add"> <div class="ibox-content"> <div class="row"> <div class="col-sm-12"> <form > <div class="form-group"> <label>节点描述</label> <input placeholder="描述" class="form-control" type="text" name="feeDescription"> </div> <div class="form-group"> <label>比例</label> <div class="input-group"> <input placeholder="比例" class="form-control" type="text" data-action="feeCalculation" name="feeProportion"> <span class="input-group-addon">%</span> </div> </div> <div class="form-group"> <label>金额</label> <div class="input-group"> <input placeholder="金额" class="form-control" type="text" data-action="feeCalculation" name="fee"> <span class="input-group-addon">万元</span> </div> </div> </form> </div> </div> </div> </div>');/*v:1*/
template('m_cost/m_cost_addPaidFee',function($data,$filename
/**/) {
'use strict';var $utils=this,$helpers=$utils.$helpers,$escape=$utils.$escape,doType=$data.doType,$out='';$out+='<form class="form feeForm wid-270"> <div class="form-group m-b-xs"> <label class="col-24-md-8 control-label no-pd-left m-t-xs">';
$out+=$escape(doType==2?'付款':'到账');
$out+='金额</label> <div class="col-24-md-16 no-padding"> <div class="input-group"> <input placeholder="金额" class="form-control pay-input" type="text" name="fee" > <span class="input-group-addon">万元</span> </div> </div> <div class="clearfix"></div> </div> <div class="form-group m-b-xs"> <label class="col-24-md-8 control-label no-pd-left m-t-xs">';
$out+=$escape(doType==2?'付款':'到账');
$out+='日期</label> <div class="col-24-md-16 inpt-group no-pd-left"> <div class="input-group"> <input class="form-control pay-input" type="text" name="paidDate" onFocus="WdatePicker({maxDate:new Date().toLocaleDateString()})" readonly /> <span class="input-group-addon"><i class="icon-append fa fa-calendar"></i></span> </div> </div> <div class="clearfix"></div> </div> <div class="form-group m-b-xs no-pd-right col-md-12"> <button type="button" class="btn btn-default btn-sm m-popover-close pull-right m-b-sm"> <i class="glyphicon glyphicon-remove"></i> </button> <button type="button" class="btn btn-primary btn-sm m-popover-submit pull-right m-b-sm m-r-xs"> <i class="fa fa-check"></i> </button> </div> </form>';
return new String($out);
});/*v:1*/
template('m_cost/m_cost_addPayment',function($data,$filename
/**/) {
'use strict';var $utils=this,$helpers=$utils.$helpers,$escape=$utils.$escape,currentDate=$data.currentDate,$out='';$out+='<div class="ibox no-margins"> <div class="ibox-content no-borders"> <form class="form-horizontal"> <div class="form-group"> <label class="col-sm-2 control-label">金额：</label> <div class="col-sm-10"> <div class="input-group"> <input placeholder="请输入发起金额" class="form-control" type="text" name="fee"> <span class="input-group-addon">万元</span> </div> </div> </div> <div class="form-group"> <label class="col-sm-2 control-label">是否开票：</label> <div class="col-sm-10 m-t-xs"> <label class="i-checks"> <input class="ck" type="checkbox" name="addInvoiceCk"/> <span class="v-middle fw-normal">开票信息</span> </label> <span class="text-muted f-s-12">(若需要开票，请勾选并填写相关信息)</span> </div> </div> <div class="hr-line-dashed m-t-none"></div> <div class="invoice-box" style="display: none;"> <div class="form-group"> <label class="col-sm-2 control-label">申请日期：</label> <div class="col-sm-10"> <div class="input-group"> <input type="text" class="form-control" name="applyDate" placeholder="申请日期" readonly onclick="WdatePicker()" value="';
$out+=$escape(currentDate);
$out+='"> <span class="input-group-addon"> <i class="icon-append fa fa-calendar"></i> </span> </div> </div> </div> <div class="form-group"> <label class="col-sm-2 control-label">收票方名称：</label> <div class="col-sm-10"> <select class="form-control" name="invoiceName" style="width: 548px;"> </select> </div> </div> <div class="form-group"> <label class="col-sm-2 control-label">纳税识别号：</label> <div class="col-sm-10"> <input placeholder="请输入纳税识别号" class="form-control" type="text" name="taxIdNumber"> </div> </div> <div class="form-group"> <label class="col-sm-2 control-label">开票内容：</label> <div class="col-sm-10"> <input placeholder="请输入开票内容" class="form-control" type="text" name="invoiceContent"> </div> </div> <div class="form-group"> <label class="col-sm-2 control-label">备注：</label> <div class="col-sm-10"> <textarea placeholder="请输入备注" class="form-control" type="text" name="invoiceRemark"></textarea> </div> </div> </div> </form> </div> </div> ';
return new String($out);
});/*v:1*/
template('m_cost/m_cost_collectionPlan',function($data,$filename
/**/) {
'use strict';var $utils=this,$helpers=$utils.$helpers,isManager=$data.isManager,dataList=$data.dataList,$escape=$utils.$escape,_url=$helpers._url,$out='';$out+='<div class="ibox"> <div class="ibox-content"> <div class="row"> <div class="col-md-12 text-right"> ';
if(isManager==1){
$out+=' <a class="btn btn-primary" data-action="addCollectionPlan">添加收款计划</a> ';
}
$out+=' </div> </div> <div class="m-t-xs" id="collectionPlanBox"> ';
if(dataList==null || dataList.length==0){
$out+=' <div class="panel panel-default no-borders m-t-xs"> <div class="panel-body text-center"> <img src="';
$out+=$escape(_url('/assets/img/default/without_data.png'));
$out+='"> <span class="fc-dark-blue dp-block">没有相关数据</span> </div> </div> ';
}
$out+=' </div> </div> </div>';
return new String($out);
});/*v:1*/
template('m_cost/m_cost_collectionPlan_add',function($data,$filename
/**/) {
'use strict';var $utils=this,$helpers=$utils.$helpers,$escape=$utils.$escape,title=$data.title,doType=$data.doType,$out='';$out+='<form class="form-horizontal m_cost_collectionPlan_add m-r m-l "> <div class="form-group"> <label class="col-24-md-5 control-label">';
$out+=$escape(title);
$out+='类型：</label> <div class="col-24-md-19"> <select class="form-control" name="feeType" style="width: 100%;"> <option value="">请选择</option> ';
if(doType==0){
$out+=' <option value="1">合同回款</option> ';
}
$out+=' <option value="2">技术审查费</option> <option value="3">合作设计费</option> ';
if(doType==0){
$out+=' <option value="5">其他收入</option> ';
}else{
$out+=' <option value="4">其他支出</option> ';
}
$out+=' </select> </div> </div> <div class="form-group"> <label class="col-24-md-5 control-label no-pd-left">计划';
$out+=$escape(title);
$out+='金额：</label> <div class="col-24-md-19"> <div class="input-group"> <input class="form-control" type="text" name="fee"> <span class="input-group-addon">万元</span> </div> </div> </div> <div class="form-group"> <label class="col-24-md-5 control-label"> ';
if(doType==1){
$out+=' 收款单位： ';
}else{
$out+=' 付款单位： ';
}
$out+=' </label> <div class="col-24-md-19"> <select class="form-control full-width" name="receivingUnit" readonly="" > </select> </div> </div> <div class="form-group"> <label class="col-24-md-5 control-label">关联合同：</label> <div class="col-24-md-19"> <div class="input-group select2-multiple"> <select class="js-example-disabled-results form-control" name="projectContract" multiple="multiple" readonly="" style="width: 392px;"> </select> <div class="input-group-btn"> <button tabindex="-1" class="web-uploader btn btn-primary" type="button" data-action="upload"></button> </div> </div> </div> </div> </form>';
return new String($out);
});/*v:1*/
template('m_cost/m_cost_collectionPlan_item',function($data,$filename
/**/) {
'use strict';var $utils=this,$helpers=$utils.$helpers,$escape=$utils.$escape,pageText=$data.pageText,isManager=$data.isManager,operateCompanyId=$data.operateCompanyId,currentCompanyId=$data.currentCompanyId,totalCost=$data.totalCost,_expNumberFilter=$helpers._expNumberFilter,_isNullOrBlank=$helpers._isNullOrBlank,attachList=$data.attachList,$each=$utils.$each,a=$data.a,$index=$data.$index,companyName=$data.companyName,pointList=$data.pointList,p=$data.p,i=$data.i,startReceiveFlag=$data.startReceiveFlag,v=$data.v,vi=$data.vi,isFinancial=$data.isFinancial,_momentFormat=$helpers._momentFormat,c=$data.c,ci=$data.ci,total=$data.total,$out='';$out+='<div class="panel-body popover-box no-borders no-padding"> <table class="table table-bordered"> <thead> <tr> <th colspan="10"> <div class="row"> <div class="col-md-3">';
$out+=$escape(pageText.title);
$out+='</div> <div class="col-md-3"> 计划收款金额： <span class="text-navy "> ';
if(isManager==1 && operateCompanyId==currentCompanyId){
$out+=' <a href="javascript:void(0);" class="totalContract ';
$out+=$escape(totalCost!=null && totalCost-0>0?'':'withoutSet');
$out+='" data-value="';
$out+=$escape(totalCost);
$out+='"> ';
$out+=$escape(totalCost!=null && totalCost-0>0?_expNumberFilter(totalCost):'未设置');
$out+='</a> ';
}else{
$out+=' ';
$out+=$escape(totalCost==null||totalCost-0==0?'0':_expNumberFilter(totalCost));
$out+=' ';
}
$out+=' &nbsp;';
$out+=$escape(_isNullOrBlank(totalCost==null)?'':'万元');
$out+=' </span> </div> <div class="col-md-3"> 合同附件： ';
if(attachList!=null && attachList.length>0){
$out+=' ';
$each(attachList,function(a,$index){
$out+=' <a href="';
$out+=$escape(a.fileFullPath);
$out+='" target="_blank">';
$out+=$escape(a.fileName);
$out+='</a> ';
});
$out+=' ';
}else{
$out+=' <span>无</span> ';
}
$out+=' </div> <div class="col-md-3"> 付款单位：';
$out+=$escape(companyName);
$out+=' </div> </div> </th> </tr> <tr> <th colspan="3" class="text-center v-middle">节点信息</th> <th colspan="2" class="text-center v-middle">收款信息</th> <th colspan="2" class="text-center v-middle">开票信息</th> <th colspan="3" class="text-center v-middle">到账明细</th> </tr> <tr> <th width="18%" class="text-center v-middle">回款节点</th> <th width="7%" class="text-center v-middle">比例</th> <th width="9%" class="text-center v-middle">金额（万元）</th> <th width="9%" class="text-center">发起人</th> <th width="9%" class="text-center">金额（万元）</th> <th width="8%" class="text-center">发票号码</th> <th width="6%" class="text-center">发票类型</th> <th width="13%" class="text-center">到账金额（万元）</th> <th width="9%" class="text-center">到账日期</th> <th width="12%" class="text-center">应收（万元）</th> </tr> </thead> <tbody class="border-no-t"> ';
$each(pointList,function(p,i){
$out+=' <tr data-i="';
$out+=$escape(i);
$out+='" data-id="';
$out+=$escape(p.id);
$out+='" data-fee="';
$out+=$escape(p.fee);
$out+='" data-backFee="';
$out+=$escape(p.backFee);
$out+='">  <td class="feeDescription" rowspan="';
$out+=$escape(p.pointDetailList.length==0?1:p.pointDetailList.length);
$out+='"> ';
if(isManager==1 && operateCompanyId==currentCompanyId){
$out+=' <span class="feeDescription pt-relative l-h-22" data-string="';
$out+=$escape(p.feeDescription);
$out+='"> <a href="javascript:void(0)" data-action="editContract" data-edit-type="1" data-id="';
$out+=$escape(p.id);
$out+='">';
$out+=$escape(p.feeDescription);
$out+='</a> </span> ';
}else{
$out+=' <span class="feeDescription pt-relative" data-string="';
$out+=$escape(p.feeDescription);
$out+='"> ';
$out+=$escape(p.feeDescription);
$out+=' </span> ';
}
$out+=' ';
if(isManager==1 && p.backFee-0!=p.fee && (p.fee!=null && p.fee-0>0)  && startReceiveFlag==1){
$out+=' <a href="javascript:void(0)" class="btn btn-primary btn-xs pull-right" data-action="initiatedContract" data-id="';
$out+=$escape(p.id);
$out+='" >发起回款</a> ';
}
$out+=' ';
if(isManager==1 && p.id!=null && operateCompanyId==currentCompanyId){
$out+=' <a href="javascript:void(0)" class="btn btn-danger btn-xs pull-right m-r-xs" data-action="delCostPoint" data-id="';
$out+=$escape(p.id);
$out+='" >删除</a> ';
}
$out+=' </td>  <td rowspan="';
$out+=$escape(p.pointDetailList.length==0?1:p.pointDetailList.length);
$out+='" class="text-center feeProportion ';
$out+=$escape(p.pid==null?'f-w-bold':'');
$out+='" data-value="';
$out+=$escape(p.feeProportion);
$out+='"> ';
if(isManager==1 && totalCost!=null && totalCost-0>0 && operateCompanyId==currentCompanyId){
$out+=' <a href="javascript:void(0)" class="border-b-dashed ';
$out+=$escape(p.feeProportion!=null && p.feeProportion-0>0?'':'withoutSet');
$out+='" data-action="editContract" data-edit-type="2" data-id="';
$out+=$escape(p.id);
$out+='"> ';
$out+=$escape(!(p.feeProportion!=null && p.feeProportion-0>0)?'未设置':p.feeProportion+'%');
$out+=' </a> ';
}else{
$out+=' ';
$out+=$escape(p.feeProportion==null || p.feeProportion-0==0?'0':p.feeProportion+'%');
$out+=' ';
}
$out+=' </td>  <td rowspan="';
$out+=$escape(p.pointDetailList.length==0?1:p.pointDetailList.length);
$out+='" class="text-center fee ';
$out+=$escape(p.pid==null?'f-w-bold':'');
$out+='" data-value="';
$out+=$escape(p.fee);
$out+='"> ';
if(isManager==1 && totalCost!=null && totalCost-0>0 && operateCompanyId==currentCompanyId){
$out+=' <a href="javascript:void(0)" class="border-b-dashed ';
$out+=$escape(p.fee!=null && p.fee-0>0?'':'withoutSet');
$out+='" data-action="editContract" data-edit-type="3" data-id="';
$out+=$escape(p.id);
$out+='" > ';
$out+=$escape(p.fee!=null && p.fee-0>0?_expNumberFilter(p.fee):'未设置');
$out+=' </a> ';
}else{
$out+=' ';
$out+=$escape(p.fee!=null && p.fee-0>0?_expNumberFilter(p.fee):'0');
$out+=' ';
}
$out+=' </td>  <td class="text-center"> ';
if(p.pointDetailList!=null && p.pointDetailList.length>0){
$out+=' <span data-toggle="tooltip" data-placement="top" title="';
$out+=$escape(p.pointDetailList[0].createDate);
$out+='"> ';
$out+=$escape(p.pointDetailList[0].userName);
$out+=' </span> ';
}
$out+=' </td>  <td class=" totalPaidFee text-center" data-value="';
$out+=$escape(p.pointDetailList.length>0?p.pointDetailList[0].fee:'');
$out+='"> <div> ';
if(p.pointDetailList!=null && p.pointDetailList.length>0){
$out+=' ';
if(isManager==1 && (p.pointDetailList[0].paymentList==null || p.pointDetailList[0].paymentList.length==0) && p.pointDetailList[0].companyId==currentCompanyId){
$out+=' <a href="javascript:void(0)" data-action="editContract" data-edit-type="4" data-id="';
$out+=$escape(p.pointDetailList[0].id);
$out+='" data-point-id="';
$out+=$escape(p.id);
$out+='"> ';
$out+=$escape(_expNumberFilter(p.pointDetailList[0].fee));
$out+=' </a> ';
}else{
$out+=' ';
$out+=$escape(_expNumberFilter(p.pointDetailList[0].fee));
$out+=' ';
}
$out+=' ';
if(p.pointDetailList[0]!=null && p.pointDetailList[0].id!=null && isManager==1 && p.pointDetailList[0].companyId==currentCompanyId){
$out+=' <a href="javascript:void(0)" class="btn btn-danger btn-xs pull-right" data-action="delCostPointDetail" data-id="';
$out+=$escape(p.pointDetailList[0].id);
$out+='">删除</a> ';
}
$out+=' ';
}
$out+=' </div> </td>  <td class="text-center"> ';
if(p.pointDetailList!=null && p.pointDetailList.length>0 && !_isNullOrBlank(p.pointDetailList[0].invoice) && !_isNullOrBlank(p.pointDetailList[0].roleMap.invoiceConfirm)){
$out+=' <a href="javascript:void(0)" class="btn btn-primary btn-xs" data-action="confirmInvoice" data-id="';
$out+=$escape(p.pointDetailList[0].id);
$out+='" data-invoice="';
$out+=$escape(p.pointDetailList[0].invoice);
$out+='">确认开票</a> ';
}else if(p.pointDetailList!=null && p.pointDetailList.length>0){
$out+=' ';
$out+=$escape(p.pointDetailList[0].invoiceNo);
$out+=' ';
}
$out+=' </td> <td class="text-center"> ';
if(p.pointDetailList!=null && p.pointDetailList.length>0 && p.pointDetailList[0].invoiceType==1){
$out+=' 普票 ';
}else if(p.pointDetailList!=null && p.pointDetailList.length>0 && p.pointDetailList[0].invoiceType==2){
$out+=' 专票 ';
}
$out+=' </td>  <td class="text-center no-padding" colspan="2"> ';
if(p.pointDetailList!=null  && p.pointDetailList.length>0 && p.pointDetailList[0].paymentList.length>0){
$out+=' ';
$each(p.pointDetailList[0].paymentList,function(v,vi){
$out+=' <div class="';
$out+=$escape(p.pointDetailList[0].paymentList.length==vi+1 && !(p.pointDetailList[0].roleMap!=null && p.pointDetailList[0].roleMap.financialForFee!=null)?'l-h-38':'paid-detail-box');
$out+='"> <div class="bPaidFee"> <span>';
$out+=$escape(_expNumberFilter(v.fee));
$out+='</span> ';
if(isFinancial=="1" && p.pointDetailList[0].companyId==currentCompanyId){
$out+=' <a href="javascript:void(0)" class="btn btn-danger btn-xs pull-right m-r-xs" data-action="delPaidFee" data-id="';
$out+=$escape(v.id);
$out+='">删除</a> ';
}
$out+=' </div> <div class="paid-date">';
$out+=$escape(_momentFormat(v.paidDate,'YYYY/MM/DD'));
$out+='</div> <div class="clearfix"></div> </div> ';
});
$out+=' ';
}
$out+=' ';
if(p.pointDetailList.length>0 && p.pointDetailList[0].roleMap!=null && p.pointDetailList[0].roleMap.financialForFee!=null){
$out+=' <span data-toggle="tooltip" data-placement="top" title="添加到账金额" class="l-h-38"> <a class="btn btn-outline full-width no-padding" href="javascript:void(0)" data-id="';
$out+=$escape(p.pointDetailList[0].roleMap.financialForFee);
$out+='" data-limit="';
$out+=$escape(p.pointDetailList.length>0?p.pointDetailList[0].notReceiveFee:'');
$out+='" data-action="costConfirm" type="button" > <i class="fa fa-plus color-dark-blue f-s-20" ></i> </a> </span> ';
}
$out+=' </td> <td class="text-center"> ';
if(p.pointDetailList!=null && p.pointDetailList.length>0){
$out+=' ';
$out+=$escape(_expNumberFilter(p.pointDetailList[0].notReceiveFee));
$out+=' ';
}
$out+=' </td> </tr> ';
if(p.pointDetailList!=null && p.pointDetailList.length>1){
$out+=' ';
$each(p.pointDetailList,function(c,ci){
$out+=' ';
if(ci>0){
$out+=' <tr data-id="';
$out+=$escape(p.id);
$out+='" data-fee="';
$out+=$escape(p.fee);
$out+='" data-backFee="';
$out+=$escape(p.backFee);
$out+='">  <td class="text-center"> <span data-toggle="tooltip" data-placement="top" title="';
$out+=$escape(c.createDate);
$out+='"> ';
$out+=$escape(c.userName);
$out+=' </span> </td>  <td class=" totalPaidFee text-center" data-value="';
$out+=$escape(c.fee);
$out+='"> <div> ';
if(isManager==1 && (c.paymentList==null || c.paymentList.length==0) && c.companyId==currentCompanyId){
$out+=' <a href="javascript:void(0)" data-action="editContract" data-edit-type="4" data-id="';
$out+=$escape(c.id);
$out+='" data-point-id="';
$out+=$escape(p.id);
$out+='"> ';
$out+=$escape(_expNumberFilter(c.fee));
$out+=' </a> ';
}else{
$out+=' ';
$out+=$escape(_expNumberFilter(c.fee));
$out+=' ';
}
$out+=' ';
if(c.id!=null && isManager==1 && c.companyId==currentCompanyId){
$out+=' <a href="javascript:void(0)" class="btn btn-danger btn-xs pull-right" data-action="delCostPointDetail" data-id="';
$out+=$escape(c.id);
$out+='">删除</a> ';
}
$out+=' </div> </td>  <td class="text-center"> ';
if(!_isNullOrBlank(c.invoice) && !_isNullOrBlank(c.roleMap.invoiceConfirm)){
$out+=' <a href="javascript:void(0)" class="btn btn-primary btn-xs" data-action="confirmInvoice" data-id="';
$out+=$escape(c.id);
$out+='" data-invoice="';
$out+=$escape(c.invoice);
$out+='">确认开票</a> ';
}else{
$out+=' ';
$out+=$escape(c.invoiceNo);
$out+=' ';
}
$out+=' </td> <td class="text-center"> ';
if(c.invoiceType==1){
$out+=' 普票 ';
}else if(c.invoiceType==2){
$out+=' 专票 ';
}
$out+=' </td>  <td class="text-center no-padding" colspan="2"> ';
if(c.paymentList.length>0){
$out+=' ';
$each(c.paymentList,function(v,vi){
$out+=' <div class="';
$out+=$escape(c.paymentList.length==vi+1 && !(c.roleMap!=null && c.roleMap.financialForFee!=null)?'l-h-38':'paid-detail-box');
$out+='" > <div class="bPaidFee"> <span>';
$out+=$escape(_expNumberFilter(v.fee));
$out+='</span> ';
if(isFinancial=="1" && c.companyId==currentCompanyId){
$out+=' <a href="javascript:void(0)" class="btn btn-danger btn-xs pull-right m-r-xs" data-action="delPaidFee" data-id="';
$out+=$escape(v.id);
$out+='">删除</a> ';
}
$out+=' </div> <div class="paid-date">';
$out+=$escape(_momentFormat(v.paidDate,'YYYY/MM/DD'));
$out+='</div> <div class="clearfix"></div> </div> ';
});
$out+=' ';
}
$out+=' ';
if(c.roleMap!=null && c.roleMap.financialForFee!=null ){
$out+=' <span data-toggle="tooltip" data-placement="top" title="添加到账金额" class="l-h-38"> <a class="btn btn-outline full-width no-padding" data-id="';
$out+=$escape(c.roleMap.financialForFee);
$out+='" data-limit="';
$out+=$escape(c.notReceiveFee);
$out+='" href="javascript:void(0)" data-action="costConfirm" type="button" > <i class="fa fa-plus color-dark-blue f-s-20" ></i> </a> </span> ';
}
$out+=' </td> <td class="text-center">';
$out+=$escape(_expNumberFilter(c.notReceiveFee));
$out+='</td> </tr> ';
}
$out+=' ';
});
$out+=' ';
}
$out+=' ';
});
$out+=' ';
if(isManager==1 && totalCost!=null && totalCost-0>0 && operateCompanyId==currentCompanyId){
$out+=' <tr> <td colspan="10" align="center"> <span data-toggle="tooltip" data-placement="top" title="添加回款节点"> <a class="btn btn-outline full-width border-dashed" href="javascript:void(0)" data-action="addContract" type="button" > <i class="fa fa-plus color-dark-blue f-s-20" ></i> </a> </span> </td> </tr> ';
}
$out+=' <tr class="gray-bg"> <td class="text-center">合计</td> <td class="text-center f-w-bold">';
$out+=$escape(total.feeProportion==null || total.feeProportion-0==0?'0':total.feeProportion+'%');
$out+='</td> <td class="text-center f-w-bold">';
$out+=$escape(total.fee==null || total.fee-0==0?0:_expNumberFilter(total.fee));
$out+='</td> <td></td> <td class="text-center">';
$out+=$escape(total.backMoney==null || total.backMoney-0==0?0:_expNumberFilter(total.backMoney));
$out+='</td> <td></td> <td></td> <td class="text-center">';
$out+=$escape(total.toTheMoney==null || total.toTheMoney-0==0?0:_expNumberFilter(total.toTheMoney));
$out+='</td> <td></td> <td class="text-center">';
$out+=$escape(total.receivedUncollected==null || total.receivedUncollected-0==0?0:_expNumberFilter(total.receivedUncollected));
$out+='</td> </tr> </tbody> </table> </div> ';
return new String($out);
});/*v:1*/
template('m_cost/m_cost_confirmInvoice',function($data,$filename
/**/) {
'use strict';var $utils=this,$helpers=$utils.$helpers,$escape=$utils.$escape,_isNullOrBlank=$helpers._isNullOrBlank,pointInfo=$data.pointInfo,_expNumberFilter=$helpers._expNumberFilter,_momentFormat=$helpers._momentFormat,invoiceInfo=$data.invoiceInfo,$out='';$out+='<div class="ibox no-margins"> <div class="ibox-content no-borders"> <form class="form-horizontal"> <div class="form-group m-b-none"> <label class="col-sm-2 text-right">金额：</label> <div class="col-sm-10"> ';
$out+=$escape(_isNullOrBlank(pointInfo.fee)?'0':_expNumberFilter(pointInfo.fee));
$out+=' 万元 </div> </div> <div class="form-group m-b-none"> <label class="col-sm-2 text-right">申请日期：</label> <div class="col-sm-10"> ';
$out+=$escape(_momentFormat(invoiceInfo.applyDate,'YYYY/MM/DD'));
$out+=' </div> </div> <div class="form-group m-b-none"> <label class="col-sm-2 text-right">收票方名称：</label> <div class="col-sm-10"> ';
$out+=$escape(invoiceInfo.relationCompanyName);
$out+=' </div> </div> <div class="form-group m-b-none"> <label class="col-sm-2 text-right">纳税识别号：</label> <div class="col-sm-10"> ';
$out+=$escape(invoiceInfo.taxIdNumber);
$out+=' </div> </div> <div class="form-group m-b-none"> <label class="col-sm-2 text-right">备注：</label> <div class="col-sm-10"> ';
$out+=$escape(invoiceInfo.invoiceRemark);
$out+=' </div> </div> <div class="hr-line-dashed m-t-none"></div> <div class="form-group"> <label class="col-sm-2 control-label">发票号码：</label> <div class="col-sm-10"> <input placeholder="请输入发票号码" class="form-control" type="text" name="invoiceNo"> </div> </div> <div class="form-group"> <label class="col-sm-2 control-label">发票种类：</label> <div class="col-sm-10 "> <label class="i-checks"> <input class="ck" type="radio" name="invoiceType" checked value="1"/> <span class="v-middle">普票</span> </label> <label class="i-checks"> <input class="ck" type="radio" name="invoiceType" value="2"/> <span class="v-middle">专票</span> </label> </div> </div> <div class="invoice-box" style="display: none;"> <div class="form-group"> <label class="col-sm-2 control-label">地址：</label> <div class="col-sm-10"> <input placeholder="请输入地址" class="form-control" type="text" name="address"> </div> </div> <div class="form-group"> <label class="col-sm-2 control-label">电话：</label> <div class="col-sm-10"> <input placeholder="请输入电话" class="form-control" type="text" name="cellphone"> </div> </div> <div class="form-group"> <label class="col-sm-2 control-label">开户行：</label> <div class="col-sm-10"> <input placeholder="请输入开户行" class="form-control" type="text" name="accountBank" /> </div> </div> <div class="form-group"> <label class="col-sm-2 control-label">账号：</label> <div class="col-sm-10"> <input placeholder="请输入账号" class="form-control" type="text" name="bankNo" /> </div> </div> </div> </form> </div> </div> ';
return new String($out);
});/*v:1*/
template('m_cost/m_cost_menu',function($data,$filename
/**/) {
'use strict';var $utils=this,$helpers=$utils.$helpers,$escape=$utils.$escape,projectName=$data.projectName,id=$data.id,projectNameCode=$data.projectNameCode,$out='';$out+='<div class="ibox"> <div class="ibox-title secondary-menu-outbox"> <div class="row"> <div class="col-md-6">  <div class="no-margin p-h-sm breadcrumb-box" > <ol class="breadcrumb "> <li> 我的项目 </li> <li class=" fa fa-angle-right"> ';
$out+=$escape(projectName);
$out+=' </li> <li class="active fa fa-angle-right"> <strong>收款计划</strong> </li> </ol> </div> </div> <div class="col-md-6 text-right"> <div class="pull-right m-r-xl"> <ul class="secondary-menu-ul"> <!--<li class="active"> <a href="#/projectDetails/cost?type=details&id=';
$out+=$escape(id);
$out+='&projectName=';
$out+=$escape(projectNameCode);
$out+='" id="details">收支明细</a> </li>--> <li class="active"> <a href="#/projectDetails/cost?type=collectionPlan&id=';
$out+=$escape(id);
$out+='&projectName=';
$out+=$escape(projectNameCode);
$out+='" id="collectionPlan">收款计划</a> </li> <li class="" > <a href="#/projectDetails/cost?type=paymentPlan&id=';
$out+=$escape(id);
$out+='&projectName=';
$out+=$escape(projectNameCode);
$out+='" id="paymentPlan">付款计划</a> </li> </ul> </div> </div> <div class="clearfix"></div> </div> </div> <div class="ibox-content no-padding" id="content-box"> </div> </div> ';
return new String($out);
});/*v:1*/
template('m_cost/m_cost_paymentApplication',function($data,$filename
/**/) {
'use strict';var $utils=this,$helpers=$utils.$helpers,$escape=$utils.$escape,pointInfo=$data.pointInfo,$out='';$out+='<div class="ibox no-margins"> <div class="ibox-content no-borders"> <form class="form-horizontal"> <div class="form-group m-b-none"> <label class="col-24-md-5 text-right">收款方：</label> <div class="col-24-md-19"> ';
$out+=$escape(pointInfo.companyName);
$out+=' </div> </div> <div class="form-group m-b-none"> <label class="col-24-md-5 text-right">关联节点：</label> <div class="col-24-md-19"> ';
$out+=$escape(pointInfo.feeDescription);
$out+=' </div> </div> <div class="form-group m-b-none"> <label class="col-24-md-5 text-right">节点金额：</label> <div class="col-24-md-19"> ';
$out+=$escape(pointInfo.fee);
$out+=' 万元 </div> </div> ';
if(pointInfo.isInnerCompany){
$out+=' <div class="form-group m-b-none"> <label class="col-24-md-5 text-right">申请人：</label> <div class="col-24-md-19"> ';
$out+=$escape(pointInfo.userName);
$out+=' </div> </div> <div class="form-group m-b-none"> <label class="col-24-md-5 text-right">申请金额：</label> <div class="col-24-md-19"> ';
$out+=$escape(pointInfo.subFee);
$out+=' 万元 </div> </div> ';
}
$out+=' <div class="hr-line-dashed m-t-none"></div> <div class="form-group ';
$out+=$escape(pointInfo.isInnerCompany?'hide':'');
$out+='"> <label class="col-24-md-5 control-label">申请付款金额：</label> <div class="col-24-md-19"> <div class="input-group"> <input placeholder="金额" class="form-control pay-input" type="text" name="fee" value="';
$out+=$escape(pointInfo.subFee);
$out+='"> <span class="input-group-addon">万元</span> </div> </div> </div> <div class="form-group"> <label class="col-24-md-5 control-label">备注：</label> <div class="col-24-md-19"> <textarea placeholder="请输入备注" class="form-control" type="text" name="pointDetailDescription"></textarea> </div> </div> </form> </div> </div> ';
return new String($out);
});/*v:1*/
template('m_cost/m_cost_paymentPlan',function($data,$filename
/**/) {
'use strict';var $utils=this,$helpers=$utils.$helpers,isManager=$data.isManager,dataList=$data.dataList,$escape=$utils.$escape,_url=$helpers._url,$out='';$out+='<div class="ibox"> <div class="ibox-content"> <div class="row"> <div class="col-md-12 text-right"> ';
if(isManager==1){
$out+=' <a class="btn btn-primary" data-action="addCollectionPlan">添加付款计划</a> ';
}
$out+=' </div> </div> <div class="m-t-xs" id="collectionPlanBox" > ';
if(dataList==null || dataList.length==0){
$out+=' <div class="panel panel-default no-borders m-t-xs"> <div class="panel-body text-center"> <img src="';
$out+=$escape(_url('/assets/img/default/without_data.png'));
$out+='"> <span class="fc-dark-blue dp-block">没有相关数据</span> </div> </div> ';
}
$out+=' </div> </div> </div>';
return new String($out);
});/*v:1*/
template('m_cost/m_cost_paymentPlan_item',function($data,$filename
/**/) {
'use strict';var $utils=this,$helpers=$utils.$helpers,$escape=$utils.$escape,pageText=$data.pageText,isManager=$data.isManager,operateCompanyId=$data.operateCompanyId,currentCompanyId=$data.currentCompanyId,totalCost=$data.totalCost,_expNumberFilter=$helpers._expNumberFilter,_isNullOrBlank=$helpers._isNullOrBlank,attachList=$data.attachList,$each=$utils.$each,a=$data.a,$index=$data.$index,companyName=$data.companyName,pointList=$data.pointList,p=$data.p,i=$data.i,startPayFlag=$data.startPayFlag,startPayFlagForInner=$data.startPayFlagForInner,v=$data.v,vi=$data.vi,isFinancial=$data.isFinancial,_momentFormat=$helpers._momentFormat,c=$data.c,ci=$data.ci,total=$data.total,$out='';$out+='<div class="panel-body popover-box no-borders no-padding"> <table class="table table-bordered"> <thead> <tr> <th colspan="10"> <div class="row"> <div class="col-md-3">';
$out+=$escape(pageText.title);
$out+='</div> <div class="col-md-3"> <span>计划付款金额：</span> <span class="text-navy "> ';
if(isManager==1 && operateCompanyId==currentCompanyId){
$out+=' <a href="javascript:void(0);" class="totalContract ';
$out+=$escape(totalCost!=null && totalCost-0>0?'':'withoutSet');
$out+='" data-value="';
$out+=$escape(totalCost);
$out+='"> ';
$out+=$escape(totalCost!=null && totalCost-0>0?_expNumberFilter(totalCost):'未设置');
$out+='</a> ';
}else{
$out+=' ';
$out+=$escape(totalCost==null||totalCost-0==0?'0':_expNumberFilter(totalCost));
$out+=' ';
}
$out+=' &nbsp;';
$out+=$escape(_isNullOrBlank(totalCost==null)?'':'万元');
$out+=' </span> </div> <div class="col-md-3"> 合同附件： ';
if(attachList!=null && attachList.length>0){
$out+=' ';
$each(attachList,function(a,$index){
$out+=' <a href="';
$out+=$escape(a.fileFullPath);
$out+='" target="_blank">';
$out+=$escape(a.fileName);
$out+='</a> ';
});
$out+=' ';
}else{
$out+=' <span>无</span> ';
}
$out+=' </div> <div class="col-md-3"> 收款单位：';
$out+=$escape(companyName);
$out+=' </div> </div> </th> </tr> <tr> <th colspan="3" class="text-center v-middle">付款节点</th> <th colspan="3" class="text-center v-middle">付款通知</th> <th colspan="3" class="text-center v-middle">付款明细</th> </tr> <tr> <th width="18%" class="text-center v-middle">付款节点</th> <th width="7%" class="text-center v-middle">比例</th> <th width="9%" class="text-center v-middle">金额（万元）</th> <th width="9%" class="text-center">发起人</th> <th width="9%" class="text-center">金额（万元）</th> <th width="14%" class="text-center">审批人</th> <th width="13%" class="text-center">付款金额（万元）</th> <th width="9%" class="text-center">付款日期</th> <th width="12%" class="text-center">应付（万元）</th> </tr> </thead> <tbody class="border-no-t"> ';
$each(pointList,function(p,i){
$out+=' <tr data-i="';
$out+=$escape(i);
$out+='" data-id="';
$out+=$escape(p.id);
$out+='" data-fee="';
$out+=$escape(p.fee);
$out+='" data-backFee="';
$out+=$escape(p.backFee);
$out+='">  <td class="feeDescription" rowspan="';
$out+=$escape(p.pointDetailList.length==0?1:p.pointDetailList.length);
$out+='"> ';
if( isManager==1 && operateCompanyId==currentCompanyId){
$out+=' <span class="feeDescription pt-relative l-h-22" data-string="';
$out+=$escape(p.feeDescription);
$out+='"> <a href="javascript:void(0)" data-action="editContract" data-edit-type="1" data-id="';
$out+=$escape(p.id);
$out+='">';
$out+=$escape(p.feeDescription);
$out+='</a> </span> ';
}else{
$out+=' <span class="feeDescription pt-relative" data-string="';
$out+=$escape(p.feeDescription);
$out+='"> ';
$out+=$escape(p.feeDescription);
$out+=' </span> ';
}
$out+=' ';
if(isManager==1 && p.backFee-0!=p.fee && (p.fee!=null && p.fee-0>0) && startPayFlag==1){
$out+=' <a href="javascript:void(0)" class="btn btn-primary btn-xs pull-right" data-action="paymentRequest2" >付款申请</a> ';
}
$out+=' ';
if(isManager==1 && p.id!=null && operateCompanyId==currentCompanyId){
$out+=' <a href="javascript:void(0)" class="btn btn-danger btn-xs pull-right m-r-xs" data-action="delCostPoint" data-id="';
$out+=$escape(p.id);
$out+='" >删除</a> ';
}
$out+=' </td>  <td rowspan="';
$out+=$escape(p.pointDetailList.length==0?1:p.pointDetailList.length);
$out+='" class="text-center feeProportion ';
$out+=$escape(p.pid==null?'f-w-bold':'');
$out+='" data-value="';
$out+=$escape(p.feeProportion);
$out+='"> ';
if(isManager==1 && totalCost!=null && totalCost-0>0 && operateCompanyId==currentCompanyId){
$out+=' <a href="javascript:void(0)" class="border-b-dashed ';
$out+=$escape(p.feeProportion!=null && p.feeProportion-0>0?'':'withoutSet');
$out+='" data-action="editContract" data-edit-type="2" data-id="';
$out+=$escape(p.id);
$out+='">';
$out+=$escape(!(p.feeProportion!=null && p.feeProportion-0>0)?'未设置':p.feeProportion+'%');
$out+='</a> ';
}else{
$out+=' ';
$out+=$escape(p.feeProportion==null || p.feeProportion-0==0?'0':p.feeProportion+'%');
$out+=' ';
}
$out+=' </td>  <td rowspan="';
$out+=$escape(p.pointDetailList.length==0?1:p.pointDetailList.length);
$out+='" class="text-center fee ';
$out+=$escape(p.pid==null?'f-w-bold':'');
$out+='" data-value="';
$out+=$escape(p.fee);
$out+='"> ';
if(isManager==1 && totalCost!=null && totalCost-0>0 && operateCompanyId==currentCompanyId){
$out+=' <a href="javascript:void(0)" class="border-b-dashed ';
$out+=$escape(p.fee!=null && p.fee-0>0?'':'withoutSet');
$out+='" data-action="editContract" data-edit-type="3" data-id="';
$out+=$escape(p.id);
$out+='" > ';
$out+=$escape(p.fee!=null && p.fee-0>0?_expNumberFilter(p.fee):'未设置');
$out+=' </a> ';
}else{
$out+=' ';
$out+=$escape(p.fee!=null && p.fee-0>0?_expNumberFilter(p.fee):'0');
$out+=' ';
}
$out+=' </td>  <td class="text-center"> ';
if(p.pointDetailList!=null && p.pointDetailList.length>0 &&  startPayFlagForInner==1 && p.pointDetailList[0].feeStatus==0){
$out+=' <a href="javascript:void(0)" class="btn btn-primary btn-xs" data-action="paymentRequest" data-id="';
$out+=$escape(p.pointDetailList[0].id);
$out+='" >付款申请</a> ';
}else if(p.pointDetailList!=null && p.pointDetailList.length>0){
$out+=' <span data-toggle="tooltip" data-placement="top" title="';
$out+=$escape(p.pointDetailList[0].createDate);
$out+='"> ';
$out+=$escape(p.pointDetailList[0].userName);
$out+=' </span> ';
}
$out+=' </td>  <td class=" totalPaidFee text-center" data-value="';
$out+=$escape(p.pointDetailList.length>0?p.pointDetailList[0].fee:'');
$out+='"> <div> ';
if(p.pointDetailList!=null && p.pointDetailList.length>0){
$out+=' ';
if(isManager==1 && (p.pointDetailList[0].paymentList==null || p.pointDetailList[0].paymentList.length==0) && p.pointDetailList[0].companyId==currentCompanyId){
$out+=' <a href="javascript:void(0)" data-action="editContract" data-edit-type="4" data-id="';
$out+=$escape(p.pointDetailList[0].id);
$out+='" data-point-id="';
$out+=$escape(p.id);
$out+='"> ';
$out+=$escape(_expNumberFilter(p.pointDetailList[0].fee));
$out+=' </a> ';
}else{
$out+=' ';
$out+=$escape(_expNumberFilter(p.pointDetailList[0].fee));
$out+=' ';
}
$out+=' ';
if(p.pointDetailList[0]!=null && p.pointDetailList[0].id!=null && isManager==1 && p.pointDetailList[0].companyId==currentCompanyId){
$out+=' <a href="javascript:void(0)" class="btn btn-danger btn-xs pull-right" data-action="delCostPointDetail" data-id="';
$out+=$escape(p.pointDetailList[0].id);
$out+='">删除</a> ';
}
$out+=' ';
}
$out+=' </div> </td>  <td class="text-center"> ';
if(p.pointDetailList!=null && p.pointDetailList.length>0){
$out+=' ';
$out+=$escape(p.pointDetailList[0].auditPersonName);
$out+=' ';
}
$out+=' </td>  <td class="text-center no-padding" colspan="2"> ';
if(p.pointDetailList!=null  && p.pointDetailList.length>0 && p.pointDetailList[0].paymentList.length>0){
$out+=' ';
$each(p.pointDetailList[0].paymentList,function(v,vi){
$out+=' <div class="';
$out+=$escape(p.pointDetailList[0].paymentList.length==vi+1 && !(p.pointDetailList[0].roleMap!=null && p.pointDetailList[0].roleMap.financialForFee!=null)?'l-h-38':'paid-detail-box');
$out+='"> <div class="bPaidFee"> <span>';
$out+=$escape(_expNumberFilter(v.fee));
$out+='</span> ';
if(isFinancial=="1" && p.pointDetailList[0].companyId==currentCompanyId){
$out+=' <a href="javascript:void(0)" class="btn btn-danger btn-xs pull-right m-r-xs" data-action="delPaidFee" data-id="';
$out+=$escape(v.id);
$out+='">删除</a> ';
}
$out+=' </div> <div class="paid-date">';
$out+=$escape(_momentFormat(v.payDate,'YYYY/MM/DD'));
$out+='</div> <div class="clearfix"></div> </div> ';
});
$out+=' ';
}
$out+=' ';
if(p.pointDetailList.length>0 && p.pointDetailList[0].roleMap!=null && p.pointDetailList[0].roleMap.financialForFee!=null){
$out+=' <span data-toggle="tooltip" data-placement="top" title="添加付款金额" class="l-h-38"> <a class="btn btn-outline full-width no-padding" href="javascript:void(0)" data-id="';
$out+=$escape(p.pointDetailList[0].roleMap.financialForFee);
$out+='" data-limit="';
$out+=$escape(p.pointDetailList.length>0?p.pointDetailList[0].notPayFee2:'');
$out+='" data-action="costConfirm" type="button" > <i class="fa fa-plus color-dark-blue f-s-20" ></i> </a> </span> ';
}
$out+=' </td> <td class="text-center"> ';
if(p.pointDetailList!=null && p.pointDetailList.length>0){
$out+=' ';
$out+=$escape(_expNumberFilter(p.pointDetailList[0].notPayFee));
$out+=' ';
}
$out+=' </td> </tr> ';
if(p.pointDetailList!=null && p.pointDetailList.length>1){
$out+=' ';
$each(p.pointDetailList,function(c,ci){
$out+=' ';
if(ci>0){
$out+=' <tr data-i="';
$out+=$escape(i);
$out+='" data-id="';
$out+=$escape(p.id);
$out+='" data-fee="';
$out+=$escape(p.fee);
$out+='" data-backFee="';
$out+=$escape(p.backFee);
$out+='">  <td class="text-center"> ';
if(startPayFlagForInner==1 && c.feeStatus==0){
$out+=' <a href="javascript:void(0)" class="btn btn-primary btn-xs" data-action="paymentRequest" data-id="';
$out+=$escape(c.id);
$out+='" >付款申请</a> ';
}else{
$out+=' <span data-toggle="tooltip" data-placement="top" title="';
$out+=$escape(c.createDate);
$out+='"> ';
$out+=$escape(c.userName);
$out+=' </span> ';
}
$out+=' </td>  <td class=" totalPaidFee text-center" data-value="';
$out+=$escape(c.fee);
$out+='"> <div> ';
if(isManager==1 && (c.paymentList==null || c.paymentList.length==0) && c.companyId==currentCompanyId){
$out+=' <a href="javascript:void(0)" data-action="editContract" data-edit-type="4" data-id="';
$out+=$escape(c.id);
$out+='" data-point-id="';
$out+=$escape(p.id);
$out+='"> ';
$out+=$escape(_expNumberFilter(c.fee));
$out+=' </a> ';
}else{
$out+=' ';
$out+=$escape(_expNumberFilter(c.fee));
$out+=' ';
}
$out+=' ';
if(c.id!=null && isManager==1 && c.companyId==currentCompanyId){
$out+=' <a href="javascript:void(0)" class="btn btn-danger btn-xs pull-right" data-action="delCostPointDetail" data-id="';
$out+=$escape(c.id);
$out+='">删除</a> ';
}
$out+=' </div> </td>  <td class="text-center"> ';
$out+=$escape(c.auditPersonName);
$out+=' </td>  <td class="text-center no-padding" colspan="2"> ';
if(c.paymentList.length>0){
$out+=' ';
$each(c.paymentList,function(v,vi){
$out+=' <div class="';
$out+=$escape(c.paymentList.length==vi+1 && !(c.roleMap!=null && c.roleMap.financialForFee!=null)?'l-h-38':'paid-detail-box');
$out+='" > <div class="bPaidFee"> <span>';
$out+=$escape(_expNumberFilter(v.fee));
$out+='</span> ';
if(isFinancial=="1" && c.companyId==currentCompanyId){
$out+=' <a href="javascript:void(0)" class="btn btn-danger btn-xs pull-right m-r-xs" data-action="delPaidFee" data-id="';
$out+=$escape(v.id);
$out+='">删除</a> ';
}
$out+=' </div> <div class="paid-date">';
$out+=$escape(_momentFormat(v.payDate,'YYYY/MM/DD'));
$out+='</div> <div class="clearfix"></div> </div> ';
});
$out+=' ';
}
$out+=' ';
if(c.roleMap!=null && c.roleMap.financialForFee!=null ){
$out+=' <span data-toggle="tooltip" data-placement="top" title="添加付款金额" class="l-h-38"> <a class="btn btn-outline full-width no-padding" data-id="';
$out+=$escape(c.roleMap.financialForFee);
$out+='" data-limit="';
$out+=$escape(c.notPayFee2);
$out+='" href="javascript:void(0)" data-action="costConfirm" type="button" > <i class="fa fa-plus color-dark-blue f-s-20" ></i> </a> </span> ';
}
$out+=' </td> <td class="text-center">';
$out+=$escape(_expNumberFilter(c.notPayFee));
$out+='</td> </tr> ';
}
$out+=' ';
});
$out+=' ';
}
$out+=' ';
});
$out+=' ';
if(isManager==1 && totalCost!=null && totalCost-0>0 && operateCompanyId==currentCompanyId){
$out+=' <tr> <td colspan="10" align="center"> <span data-toggle="tooltip" data-placement="top" title="添加付款节点"> <a class="btn btn-outline full-width border-dashed" href="javascript:void(0)" data-action="addContract" type="button" > <i class="fa fa-plus color-dark-blue f-s-20" ></i> </a> </span> </td> </tr> ';
}
$out+=' <tr class="gray-bg"> <td class="text-center">合计</td> <td class="text-center f-w-bold">';
$out+=$escape(total.feeProportion==null || total.feeProportion-0==0?'0':total.feeProportion+'%');
$out+='</td> <td class="text-center f-w-bold">';
$out+=$escape(total.fee==null || total.fee-0==0?0:_expNumberFilter(total.fee));
$out+='</td> <td></td> <td class="text-center">';
$out+=$escape(total.backMoney==null || total.backMoney-0==0?0:_expNumberFilter(total.backMoney));
$out+='</td> <td ></td> <td class="text-center">';
$out+=$escape(total.payTheMoney==null || total.payTheMoney-0==0?0:_expNumberFilter(total.payTheMoney));
$out+='</td> <td></td> <td class="text-center">';
$out+=$escape(total.payUncollected==null || total.payUncollected-0==0?0:_expNumberFilter(total.payUncollected));
$out+='</td> </tr> </tbody> </table> </div> ';
return new String($out);
});/*v:1*/
template('m_cost/m_editFee','<form class=" form m-editFee wid-270"> <div class="form-group m-b-xs clearfix"> <label class="col-md-2 control-label no-pd-left m-t-xs no-pd-right">比例</label> <div class="col-md-10 no-pd-right wid-225 input-group" style="padding-left:15px;"> <input type="text" class="form-control full-width" name="feeProportion" data-action="feeCalculation" placeholder="比例" > <span class="input-group-addon">%</span> </div> </div> <div class="form-group m-b-xs clearfix"> <label class="col-md-2 control-label no-pd-left m-t-xs no-pd-right">金额</label> <div class="col-md-10 no-pd-right wid-225 input-group" style="padding-left:15px;" > <input type="text" class="form-control full-width" name="fee" data-action="feeCalculation" placeholder="金额"> <span class="input-group-addon">万元</span> </div> </div> <div class="form-group col-md-12 m-b-xs no-pd-right clearfix"> <button type="button" class="btn btn-default btn-sm m-popover-close pull-right "> <i class="glyphicon glyphicon-remove"></i> </button> <button type="button" class="btn btn-primary btn-sm m-popover-submit pull-right m-r-xs"> <i class="fa fa-check"></i> </button> <div class="clearfix"></div> </div> </form>');/*v:1*/
template('m_cost/m_editPaidFee','<form class="form feeForm wid-270"> <div class="form-group m-b-xs"> <label class="col-24-md-8 control-label no-pd-left m-t-xs">付款金额</label> <div class="col-24-md-16 no-padding"> <div class="input-group"> <input placeholder="金额" class="form-control" type="text" name="fee" data-action="feeCalculation"> <span class="input-group-addon">万元</span> </div> </div> <div class="clearfix"></div> </div> <div class="form-group m-b-xs hide"> <label class="col-24-md-8 control-label m-t-xs no-pd-left m-t-xs">付款日期</label> <div class="col-24-md-16 no-padding"> <div class="input-group"> <input class="form-control" type="text" name="paidDate" onFocus="WdatePicker({maxDate:new Date().toLocaleDateString()})" readonly /> <span class="input-group-addon"><i class="icon-append fa fa-calendar"></i></span> </div> </div> <div class="clearfix"></div> </div> <div class="form-group col-md-12 m-b-xs no-pd-right"> <button type="button" class="btn btn-default btn-sm m-popover-close pull-right m-b-sm"> <i class="glyphicon glyphicon-remove"></i> </button> <button type="button" class="btn btn-primary btn-sm m-popover-submit pull-right m-b-sm m-r-xs"> <i class="fa fa-check"></i> </button>     </div> </form>');/*v:1*/
template('m_docmgr/m_docmgr',function($data,$filename
/**/) {
'use strict';var $utils=this,$helpers=$utils.$helpers,$escape=$utils.$escape,projectName=$data.projectName,$out='';$out+='<div class="ibox"> <div class="ibox-title secondary-menu-outbox"> <div class="row"> <div class="col-md-6">  <div class="no-margin p-h-sm breadcrumb-box" > <ol class="breadcrumb "> <li> 我的项目 </li> <li class=" fa fa-angle-right"> ';
$out+=$escape(projectName);
$out+=' </li> <li class="active fa fa-angle-right"> <strong>文档库</strong> </li> </ol> </div> </div> <div class="col-md-6 text-right"> <a class="btn btn-primary btn-sm m-t-sm btn-flag" data-action="uploadFile">上传文件</a> <a class="btn btn-primary btn-sm m-t-sm btn-flag" data-action="createFolder">新建文件夹</a> <a class="btn btn-primary btn-sm m-t-sm" data-action="sendArchiveNotice" style="display: none;">发送归档通知</a> </div> <div class="clearfix"></div> </div> </div> <div class="ibox-content no-padding"> <div class="col-24-sm-8 col-24-md-8 col-24-lg-6" id="documentTreeBox" style="height: 500px;overflow: auto;border-right:solid 1px #d9d9d9;"> <div class="m-t-md" id="documentDirectoryTree"> <ul class="sidebar-nav list-group sidebar-nav-v1"> </ul> </div> </div> <div class="col-24-sm-16 col-24-md-16 col-24-lg-18 no-padding"> <div class="docmgr panel panel-default tag-box-v4 border-none" id="fileItems"> </div> </div> </div> </div> ';
return new String($out);
});/*v:1*/
template('m_docmgr/m_docmgr_createFolder',function($data,$filename
/**/) {
'use strict';var $utils=this,$helpers=$utils.$helpers,$escape=$utils.$escape,fileTypeStr=$data.fileTypeStr,itemData=$data.itemData,$out='';$out+='<div class="ibox"> <div class="ibox-content"> <form class="createFolder"> <div class="row"> <div class="form-group col-md-12"> <label for="folderName"> ';
$out+=$escape(fileTypeStr);
$out+='名称 <span class="color-red">*</span> </label> <input type="text" id="folderName" class="form-control" name="folderName" value="';
$out+=$escape(itemData!=null?itemData.fileName:'');
$out+='"> </div> </div> </form> </div> </div> ';
return new String($out);
});/*v:1*/
template('m_docmgr/m_docmgr_fileItem',function($data,$filename
/**/) {
'use strict';var $utils=this,$helpers=$utils.$helpers,$escape=$utils.$escape,item=$data.item,_momentFormat=$helpers._momentFormat,$out='';$out+='<tr class="file-list-row"> <td> <div class="file-icon ';
$out+=$escape(item.type===0?'file-icon-dir-small':'file-icon-file-small');
$out+='"></div> <div class="file-name"> <div class="text"> <a id=';
$out+=$escape(item.id);
$out+=' data-pid="';
$out+=$escape(item.pid);
$out+='" data-fileType="';
$out+=$escape(item.type);
$out+='" data-download="';
$out+=$escape(item.fileGroup);
$out+='/';
$out+=$escape(item.filePath);
$out+='" data-fileName="';
$out+=$escape(item.fileName);
$out+='" href="javascript:void(0);" title="';
$out+=$escape(item.fileName);
$out+='">';
$out+=$escape(item.fileName);
$out+='</a> </div> </div> </td> <td class="file-operate"> <div class="file-operate-list"> ';
if(item.type===1){
$out+=' <a class="file-operate-download f-s-16" href="javascript:void(0);" title="下载"><i class="glyphicon glyphicon-save text-success"></i></a> ';
}
$out+=' ';
if(item.isCustomize!==1&&item.editFlag===1){
$out+=' <a class="file-operate-delete f-s-16" href="javascript:void(0);" ><i class="glyphicon glyphicon-trash color-red"></i></a> ';
}
$out+=' </div> </td> <td class="file-size">';
$out+=$escape(item.fileSize);
$out+=' </td> <td class="file-user"><span data-toggle="tooltip" data-placement="top" title="';
$out+=$escape(item.companyName);
$out+='">';
$out+=$escape(item.createBy);
$out+='</span></td> <td class="file-date">';
$out+=$escape(_momentFormat(item.createDate,'YYYY/MM/DD'));
$out+='</td> </tr>';
return new String($out);
});/*v:1*/
template('m_docmgr/m_docmgr_fileItems',function($data,$filename
/**/) {
'use strict';var $utils=this,$helpers=$utils.$helpers,fileItems=$data.fileItems,$escape=$utils.$escape,rootPath=$data.rootPath,$each=$utils.$each,item=$data.item,index=$data.index,_momentFormat=$helpers._momentFormat,$out='';if((fileItems===void 0 || fileItems===null || fileItems.length===0) ){
$out+=' <tr class="file-list-row no-data"> <td colspan="5" class="file-not-found text-center"> <div> <img src="';
$out+=$escape(rootPath);
$out+='/assets/img/default/without_file.png"> </div> <span class="fc-dark-blue">当前目录不存在任何文件</span> </td> </tr> ';
}else{
$out+=' ';
$each(fileItems,function(item,index){
$out+=' <tr class="file-list-row"> <td style="max-width: 200px;"> <a id=';
$out+=$escape(item.id);
$out+=' data-pid="';
$out+=$escape(item.pid);
$out+='" data-fileType="';
$out+=$escape(item.type);
$out+='" data-download="';
$out+=$escape(item.fileGroup);
$out+='/';
$out+=$escape(item.filePath);
$out+='" data-fileName="';
$out+=$escape(item.fileName);
$out+='" href="javascript:void(0);" title="';
$out+=$escape(item.fileName);
$out+='"> <div class="file-icon ';
$out+=$escape(item.type===0?'file-icon-dir-small':'file-icon-file-small');
$out+='"></div> <div class="file-name"> <div class="text">';
$out+=$escape(item.fileName);
$out+='</div> </div> </a> </td> <td class="file-operate"> <div class="file-operate-list"> ';
if(item.type===1){
$out+=' <a class="file-operate-download f-s-16" href="javascript:void(0);" title="下载"><i class="glyphicon glyphicon-save text-warning"></i></a> ';
}
$out+=' ';
if(item.isCustomize!==1&&item.editFlag===1){
$out+=' <a class="file-operate-rename f-s-16" href="javascript:void(0);" title="重命名"><i class="glyphicon glyphicon-edit text-success" ></i></a> <a class="file-operate-delete f-s-16" href="javascript:void(0);"><i class="glyphicon glyphicon-trash color-red" ></i></a> ';
}
$out+=' </div> </td> <td class="file-size">';
$out+=$escape(item.fileSize);
$out+=' </td> <td class="file-user"><span data-toggle="tooltip" data-placement="top" title="';
$out+=$escape(item.companyName);
$out+='">';
$out+=$escape(item.createBy);
$out+='</span></td> <td class="file-date">';
$out+=$escape(_momentFormat(item.createDate,'YYYY/MM/DD'));
$out+='</td> </tr> ';
});
$out+=' ';
}
return new String($out);
});/*v:1*/
template('m_docmgr/m_docmgr_fileItems_list',function($data,$filename
/**/) {
'use strict';var $utils=this,$helpers=$utils.$helpers,fileItems=$data.fileItems,$escape=$utils.$escape,rootPath=$data.rootPath,$each=$utils.$each,item=$data.item,index=$data.index,_fastdfsUrl=$helpers._fastdfsUrl,_momentFormat=$helpers._momentFormat,$out='';$out+='<table class="table file-list"> <thead> <tr class="file-list-row">  <th width="5%">  </th> <th width="45%">文件名</th> <th width="15%">大小</th> <th width="15%">创建人</th> <th width="15%">创建时间</th> </tr> </thead> <tbody class="file-list-items" > ';
if((fileItems===void 0 || fileItems===null || fileItems.length===0) ){
$out+=' <tr class="file-list-row no-data"> <td colspan="5" class="file-not-found text-center"> <div> <img src="';
$out+=$escape(rootPath);
$out+='/assets/img/default/without_file.png"> </div> <span class="fc-dark-blue">当前目录不存在任何文件</span> </td> </tr> ';
}else{
$out+=' ';
$each(fileItems,function(item,index){
$out+=' <tr class="file-list-row" data-i="';
$out+=$escape(index);
$out+='" data-id="';
$out+=$escape(item.id);
$out+='" data-type="';
$out+=$escape(item.type);
$out+='" id="box';
$out+=$escape(item.id);
$out+='" unselectable="on" onselectstart="return false;" style="-moz-user-select:none;-webkit-user-select:none; cursor: default;">  <td> <div class="list-action-box"> ';
if(item.type==2 || item.type==1 || (item.type==0 || item.type==1) ||  item.type==50 || (item.sendResults==1 && item.type==30)){
$out+=' <div class="btn-group singleOperation" style="display: none;"> <button type="button" class="btn btn-default btn-xs dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false"> <span class="fa fa-angle-down"></span> </button> <ul class="dropdown-menu" id="menu';
$out+=$escape(item.id);
$out+='"> ';
if(item.type==2){
$out+=' <li> <a href="javascript:void(0);" data-action="editFileName">修改名称</a> </li> ';
}
$out+=' ';
if(item.type==1){
$out+=' <li> <a href="javascript:void(0);" data-action="downloadFile">下载文件</a> </li> ';
}
$out+='  ';
if(item.type==0 || item.type==1){
$out+=' <li> <a href="javascript:void(0);" data-action="delFile">删除文件</a> </li> ';
}
$out+=' ';
if(item.type==50){
$out+=' <li> <a href="javascript:void(0);" data-action="submitDocResults">提交成果</a> </li> ';
}
$out+=' ';
if(item.sendResults==1 && item.type==30){
$out+=' <li> <a href="javascript:void(0);" data-action="sendDocResults">发送成果</a> </li> ';
}
$out+=' </ul> </div> ';
}
$out+=' </div> </td> <td style="max-width: 200px;"> <a href="javascript:void(0);" id=';
$out+=$escape(item.id);
$out+=' data-pid="';
$out+=$escape(item.pid);
$out+='" data-fileType="';
$out+=$escape(item.type);
$out+='" data-download="';
$out+=$escape(item.fileGroup);
$out+='/';
$out+=$escape(item.filePath);
$out+='" data-fileName="';
$out+=$escape(item.fileName);
$out+='" title="';
$out+=$escape(item.fileName);
$out+='" data-action="intoSubDirectory"> ';
if(item.type===0 || item.type===40 || item.type===30 || item.type===2 || item.type === 41){
$out+=' <div class="file-icon file-icon-dir-small"></div> ';
}else if(item.type===50){
$out+=' <div class="fa fa-steam-square"></div> ';
}else{
$out+=' <div class="file-icon file-icon-file-small"></div> ';
}
$out+=' <div class="file-name"> <div class="text"> ';
if(item.type==1){
$out+=' <a href="';
$out+=$escape(_fastdfsUrl(item.fileGroup+'/'+item.filePath));
$out+='" target="_blank"> ';
$out+=$escape(item.fileName);
$out+=' </a> ';
}else{
$out+=' ';
$out+=$escape(item.fileName);
$out+=' ';
}
$out+=' </div> </div> </a> </td> <!--<td class="file-operate"> <div class="file-operate-list"> ';
if(item.type===1){
$out+=' <a class="file-operate-download f-s-16" href="javascript:void(0);" title="下载"><i class="glyphicon glyphicon-save text-warning"></i></a> ';
}
$out+=' ';
if(item.isCustomize!==1&&item.editFlag===1){
$out+=' <a class="file-operate-rename f-s-16" href="javascript:void(0);" title="重命名"><i class="glyphicon glyphicon-edit text-success" ></i></a> <a class="file-operate-delete f-s-16" href="javascript:void(0);"><i class="glyphicon glyphicon-trash color-red" ></i></a> ';
}
$out+=' </div> </td>--> <td class="file-size">';
$out+=$escape(item.fileSize);
$out+=' </td> <td class="file-user"><span data-toggle="tooltip" data-placement="top" title="';
$out+=$escape(item.companyName);
$out+='">';
$out+=$escape(item.createBy);
$out+='</span></td> <td class="file-date">';
$out+=$escape(_momentFormat(item.createDate,'YYYY/MM/DD'));
$out+='</td> </tr> ';
});
$out+=' ';
}
$out+=' </tbody> </table> <iframe class="iframeDown dp-none"></iframe>';
return new String($out);
});/*v:1*/
template('m_docmgr/m_docmgr_fileUpload','<style> .uploadmgrContainer .tag-box{ margin-bottom: 0; } </style> <div class="ibox"> <div class="ibox-content"> <div class="uploadmgrContainer"> </div> </div> </div> ');/*v:1*/
template('m_docmgr/m_docmgr_sendArchiveNotice',function($data,$filename
/**/) {
'use strict';var $utils=this,$helpers=$utils.$helpers,$escape=$utils.$escape,selectedNodeObj=$data.selectedNodeObj,nowDate=$data.nowDate,$out='';$out+='<div class="ibox"> <div class="ibox-content"> <form class="sendArchiveNotice"> <div class="row"> <div class="form-group col-md-12"> <label class="col-24-md-5 text-right m-t-sm">归档任务<span class="color-red">*</span>：</label> <div class="col-24-md-19"> <input type="text" class="form-control" name="taskName" maxlength="50" value="';
$out+=$escape(selectedNodeObj.text);
$out+='"> </div> </div> <div class="form-group col-md-12"> <label class="col-24-md-5 text-right m-t-sm">通知人员<span class="color-red">*</span>：</label> <div class="col-24-md-19"> <select class="js-example-disabled-results form-control" name="users" disabled> </select> </div> </div> <div class="form-group col-md-12"> <label class="col-24-md-5 text-right m-t-sm">归档截止时间<span class="color-red">*</span>：</label> <div class="col-24-md-19"> <input type="text" class="form-control" name="deadline" onFocus="WdatePicker({dateFmt:\'yyyy-MM-dd\'})" readonly value="';
$out+=$escape(nowDate);
$out+='"> </div> </div> <div class="form-group col-md-12"> <label class="col-24-md-5 text-right m-t-sm">备注：</label> <div class="col-24-md-19"> <textarea class="form-control" name="remarks"> </textarea> </div> </div> </div> </form> </div> </div> ';
return new String($out);
});/*v:1*/
template('m_docmgr/m_docmgr_sendDocResults',function($data,$filename
/**/) {
'use strict';var $utils=this,$helpers=$utils.$helpers,$escape=$utils.$escape,companyData=$data.companyData,$out='';$out+='<div class="ibox"> <div class="ibox-content"> <form class="sendArchiveNotice"> <div class="row"> <div class="form-group col-md-12"> <label class="col-24-md-5 text-right m-t-sm">甲方：</label> <div class="col-24-md-19 m-t-sm"> ';
$out+=$escape(companyData.companyName);
$out+=' </div> </div> </div> </form> </div> </div> ';
return new String($out);
});/*v:1*/
template('m_docmgr/m_projectArchiving','<div class="ibox m_projectArchiving"> <div class="ibox-title secondary-menu-outbox"> <div class="row"> <div class="col-md-6"> <div class="pull-left m-r-xl"> <h3 class="dp-inline-block" >项目文档</h3> </div> </div> <div class="col-md-6 text-right"> <a class="btn btn-primary btn-sm m-t-sm pull-right m-l-xs" data-action="sendArchiveNotice" style="display: none;">发送归档通知</a> <a class="btn btn-primary btn-sm m-t-sm btn-flag pull-right m-l-xs" data-action="uploadFile" style="display: none;">上传文件</a> <a class="btn btn-primary btn-sm m-t-sm btn-flag pull-right m-l-xs" data-action="createFolder" style="display: none;">新建文件夹</a>  </div> <div class="clearfix"></div> </div> </div> <div class="ibox-content no-padding"> <div class="col-24-sm-8 col-24-md-8 col-24-lg-6" id="documentTreeBox" style="height: 500px;overflow: auto;border-right:solid 1px #d9d9d9;"> <div class="row m-t-sm"> <div class="col-md-3 no-pd-right select-search-box" > <select class="select-search-by" name="selectSearchBy"> <option value="0" selected>项目名称</option> <option value="1">文件名称</option> </select> </div> <div class="col-md-9"> <div class="input-group "> <input class="form-control" type="text" name="projectName" placeholder="请输入项目名称"> <span class="input-group-btn"> <button type="button" class="btn btn-primary" data-action="searchByProjectName">搜索</button> </span> </div> </div> </div> <div class="m-t-md" id="documentDirectoryTree"> <ul class="sidebar-nav list-group sidebar-nav-v1"> </ul> </div> </div> <div class="col-24-sm-16 col-24-md-16 col-24-lg-18 no-padding"> <div class="docmgr panel panel-default tag-box-v4 border-none" id="fileItems" > </div> <div class="col-md-12 p-w-m"> <div id="data-pagination-container" class="m-pagination pull-right " style="display: none;"></div> </div> </div> </div> </div> ');/*v:1*/
template('m_docmgr/m_uploadmgr',function($data,$filename
/**/) {
'use strict';var $utils=this,$helpers=$utils.$helpers,$escape=$utils.$escape,boxClass=$data.boxClass,isShowBtnClose=$data.isShowBtnClose,$out='';$out+='<div class="uploadmgr ';
$out+=$escape(boxClass==null?'tag-box tag-box-v1 box-shadow shadow-effect-1':boxClass);
$out+='"> <div class="alertmgr"></div> <a href="javascript:void(0)" class="btn-select btn-u btn-u-sm btn-u-dark-blue rounded" type="button"><i class="fa fa-plus"></i>&nbsp;选择文件</a>  ';
if(isShowBtnClose){
$out+=' <a href="javascript:void(0)" type="button" class="btn-close close">×</a> ';
}
$out+=' <div class="upload-item-list"> </div> <p class="pull-right"></p> </div>';
return new String($out);
});/*v:1*/
template('m_docmgr/m_uploadmgr_uploadItem',function($data,$filename
/**/) {
'use strict';var $utils=this,$helpers=$utils.$helpers,$escape=$utils.$escape,file=$data.file,pid=$data.pid,$out='';$out+='<div class="uploadItem uploadItem_';
$out+=$escape(file.id);
$out+='" data-fileId="';
$out+=$escape(file.id);
$out+='" data-pid="';
$out+=$escape(pid);
$out+='">  <h3 class="heading-xs"> <span class="file-name">';
$out+=$escape(file.name);
$out+='</span> <span style="padding-left:5px;" class="span_progress"></span> <a class="pull-right btn-link " data-action="removeFile"> <i class="glyphicon glyphicon-remove"></i> </a> <a class="pull-right btn-link m-r-xs" data-action="pauseUpload" style="display: none;"> <i class="glyphicon glyphicon-pause"></i> </a> <a class="pull-right btn-link m-r-xs" data-action="continueUpload" style="display: none;"> <i class="glyphicon glyphicon-play"></i> </a> <span class="span_status pull-right m-r-sm"></span> <div class="clearfix"></div> </h3> <div class="progress progress-u progress-xs"> <div class="progress-bar progress-bar-u" role="progressbar" name="div_progress" aria-valuenow="0" aria-valuemin="0" aria-valuemax="100" style="width: 0%" > </div> </div> </div>';
return new String($out);
});/*v:1*/
template('m_filterableField/m_filterTag',function($data,$filename
/**/) {
'use strict';var $utils=this,$helpers=$utils.$helpers,filters=$data.filters,$each=$utils.$each,f=$data.f,$index=$data.$index,$escape=$utils.$escape,_jsonStringify=$helpers._jsonStringify,_filterDateRangeToString=$helpers._filterDateRangeToString,$out='';if(filters&&filters.length>0){
$out+=' <span class="f-s-13 fw-600 fc-dark-blue">过滤条件：</span> ';
$each(filters,function(f,$index){
$out+=' <div class="filter-tag" data-field="';
$out+=$escape(f.field);
$out+='" data-filterJson="';
$out+=$escape(_jsonStringify(f));
$out+='"> <a href="javascript:void(0)" class="filter-tag-remove"><i class="fa fa-times"></i></a> ';
if(f.filterType === 'contain'){
$out+=' ';
$out+=$escape(f.fieldDisplayName);
$out+='：';
$out+=$escape(f.filterValue);
$out+=' ';
}else if(f.filterType === 'custom'){
$out+=' ';
$out+=$escape(f.fieldDisplayName);
$out+='：';
$out+=$escape(f.filterValueDisplayName);
$out+=' ';
}else if(f.filterType === 'select_local_data'){
$out+=' ';
$out+=$escape(f.fieldDisplayName);
$out+='：';
$out+=$escape(f.filterValueDisplayName);
$out+=' ';
}else if(f.filterType === 'dateRange'){
$out+=' ';
$out+=$escape(f.fieldDisplayName);
$out+='：';
$out+=$escape(_filterDateRangeToString(f.filterValue));
$out+=' ';
}
$out+=' </div> ';
});
$out+=' ';
}
return new String($out);
});/*v:1*/
template('m_filterableField/m_filterType_contain','<form class="form-inline"> <div class="form-group filter-control"> <input type="text" class="form-control input-sm" name="filter_contain" style="width: 150px;min-width: 150px;"> </div> <div class="text-right m-t-xs m-b-xs"> <button type="button" class="btn btn-default btn-sm filter-clear"> <i class="fa fa-eraser"></i> </button> <button type="button" class="btn btn-primary btn-sm filter-submit"> <i class="fa fa-check"></i> </button> </div> </form>');/*v:1*/
template('m_filterableField/m_filterType_dateRange','<style> form.form-inline div.input-group{width:30px;} </style> <form class="form-inline" style="width: 305px;"> <div class="form-group filter-control"> <div class="input-group"> <input type="text" id="filter_startDate" name="filter_startDate" onFocus="WdatePicker({maxDate:\'#F{$dp.$D(\\\'filter_endDate\\\')||\\\'2099-12-30\\\'}\'})" placeholder="开始时间" class="form-control input-sm curp wth-100 min-wth-100 bg-none" readonly="readonly"> <span class="input-group-addon"><i class="icon-append fa fa-calendar"></i></span> </div> <div class="text-align-center dp-inline-block"style="width: 20px;">~</div> <div class="input-group"> <input type="text" id="filter_endDate" name="filter_endDate" onFocus="WdatePicker({minDate:\'#F{$dp.$D(\\\'filter_startDate\\\')}\',maxDate:\'2099-12-30\'})" placeholder="结束时间" class="form-control input-sm curp wth-100 min-wth-100 bg-none" readonly="readonly"> <span class="input-group-addon"><i class="icon-append fa fa-calendar"></i></span> </div> </div> <div class="text-right m-t-xs m-b-xs"> <button type="button" class="btn btn-default btn-sm filter-clear"> <i class="fa fa-eraser"></i> </button> <button type="button" class="btn btn-primary btn-sm filter-submit"> <i class="fa fa-check"></i> </button> </div> </form>');/*v:1*/
template('m_filterableField/m_filterType_select','<form class="form-inline"> <div class="form-group filter-control"> <select class="form-control input-sm" name="filter_select" style="width: 150px;min-width: 150px;"></select> </div> <button type="button" class="btn btn-default btn-sm filter-clear"> <i class="fa fa-eraser"></i> </button> <button type="button" class="btn btn-primary btn-sm filter-submit"> <i class="fa fa-check"></i> </button> </form> <script type="text/javascript"> $(\'select[name="filter_select"]\').select2({ clear:true, language: "zh-CN", ajax: { contentType: "application/json", url: restApi.url_getUserByKeyWord, dataType: \'json\', type: \'POST\', delay: 500, data: function (params) { var ret = { keyword: params.term /*,companyId: window.currentCompanyId*/ }; return JSON.stringify(ret); }, processResults: function (data, params) { return { results: $.map(data.data, function (o, i) { return { id: o.id, text: o.user_name } }) }; }, cache: true } }); </script>');/*v:1*/
template('m_filterableField/m_filterType_select_local_data','<form class="form-inline"> <div class="form-group filter-control"> <select class="form-control input-sm" name="filter_select" style="width: 265px;min-width: 265px;"></select> </div> <div class="text-right m-t-xs m-b-xs">    <button type="button" class="btn btn-primary btn-sm filter-submit"> <i class="fa fa-check"></i> </button> </div> </form> <script type="text/javascript"> </script>');/*v:1*/
template('m_filterableField/m_filter_address','<div class="data-list-filter p-xs" > <div class="m-b-sm"> <div class="form-group m-b-xs col-md-12 no-pd-right no-pd-left" style="margin: 0 0 5px 0"> <label for="selectRegion" class="m-l-xs">所在地区</label> <div class="input-group cityBox" id="selectRegion" name="selectRegion"> <div class="dp-inline-block m-l-xs"> <select class="prov form-control" name="province"></select> </div> <div class="dp-inline-block m-l-xs"> <select class="city form-control" name="city" disabled="disabled" ></select> </div> <div class="dp-inline-block m-l-xs"> <select class="dist form-control" name="county" disabled="disabled" ></select> </div> </div> </div> </div> <div class="m-t-xs"> <button type="button" class="btn btn-primary btn-xs rounded pull-right" data-action="confirm">确定</button> <button type="button" class="btn btn-default btn-xs rounded pull-right m-r-xs" data-action="cancel">取消</button> <div class="clearfix"></div> </div> </div> ');/*v:1*/
template('m_filterableField/m_filter_checkbox',function($data,$filename
/**/) {
'use strict';var $utils=this,$helpers=$utils.$helpers,$each=$utils.$each,checkList=$data.checkList,d=$data.d,$index=$data.$index,currCheckedVal=$data.currCheckedVal,$escape=$utils.$escape,$out='';$out+='<div class="data-list-filter p-sm" > <div class="m-b-sm" style="border-bottom: solid 1px #f2f2f2;"> <label class="i-checks fw-normal"> <input name="ipt_allCheck" type="checkbox" value="0"/> <span class="i-checks-span">全选</span> </label> </div> <div> ';
$each(checkList,function(d,$index){
$out+=' <div class="col-md-4 no-pd-right no-pd-left"> <label class="i-checks fw-normal"> ';
if(currCheckedVal.indexOf(d.id)>-1){
$out+=' <input name="ipt_check" type="checkbox" checked value="';
$out+=$escape(d.id);
$out+='"/> ';
}else{
$out+=' <input name="ipt_check" type="checkbox" value="';
$out+=$escape(d.id);
$out+='"/> ';
}
$out+=' <span class="i-checks-span">';
$out+=$escape(d.name);
$out+='</span> </label> </div> ';
});
$out+=' <div class="clearfix"></div> </div> <div class="m-t-xs"> <button type="button" class="btn btn-primary btn-xs rounded pull-right" data-action="confirm">确定</button> <button type="button" class="btn btn-default btn-xs rounded pull-right m-r-xs" data-action="cancel">取消</button> <div class="clearfix"></div> </div> </div> ';
return new String($out);
});/*v:1*/
template('m_filterableField/m_filter_checkbox_select',function($data,$filename
/**/) {
'use strict';var $utils=this,$helpers=$utils.$helpers,$escape=$utils.$escape,boxStyle=$data.boxStyle,$each=$utils.$each,selectList=$data.selectList,s=$data.s,$index=$data.$index,isParentCheck=$data.isParentCheck,sub=$data.sub,colClass=$data.colClass,$out='';$out+='<div class="data-list-filter " style="';
$out+=$escape(boxStyle);
$out+='"> <div class="m-b-sm check-box-title" > <label class="i-checks fw-normal"> <input name="itemCk" type="checkbox" value=""/> <span class="i-checks-span">全选</span> </label> </div> <div class="p-w-sm"> ';
$each(selectList,function(s,$index){
$out+=' ';
if(s.childList!=null && s.childList.length>0){
$out+=' <div class="col-md-12 no-pd-right no-pd-left"> ';
if(isParentCheck){
$out+=' <label class="i-checks fw-normal"> ';
if(s.isSelected){
$out+=' <input name="itemCk" type="checkbox" checked value="';
$out+=$escape(s.id);
$out+='"/> ';
}else{
$out+=' <input name="itemCk" type="checkbox" value="';
$out+=$escape(s.id);
$out+='" /> ';
}
$out+=' <span class="i-checks-span">';
$out+=$escape(s.name);
$out+='</span> </label> ';
}else{
$out+=' <label>';
$out+=$escape(s.name);
$out+='</label> ';
}
$out+=' </div> ';
$each(s.childList,function(sub,$index){
$out+=' <div class="';
$out+=$escape(colClass?colClass:'col-md-4');
$out+=' no-pd-right no-pd-left"> <label class="i-checks fw-normal"> ';
if(sub.isSelected){
$out+=' <input name="itemCk" type="checkbox" checked value="';
$out+=$escape(sub.id);
$out+='"/> ';
}else{
$out+=' <input name="itemCk" type="checkbox" value="';
$out+=$escape(sub.id);
$out+='" /> ';
}
$out+=' <span class="i-checks-span">';
$out+=$escape(sub.name);
$out+='</span> </label> </div> ';
});
$out+=' ';
}else{
$out+=' <div class="';
$out+=$escape(colClass?colClass:'col-md-4');
$out+=' no-pd-right no-pd-left"> <label class="i-checks fw-normal"> ';
if(s.isSelected){
$out+=' <input name="itemCk" type="checkbox" checked value="';
$out+=$escape(s.id);
$out+='"/> ';
}else{
$out+=' <input name="itemCk" type="checkbox" value="';
$out+=$escape(s.id);
$out+='" /> ';
}
$out+=' <span class="i-checks-span">';
$out+=$escape(s.name);
$out+='</span> </label> </div> ';
}
$out+=' ';
});
$out+=' <div class="clearfix"></div> </div> </div> ';
return new String($out);
});/*v:1*/
template('m_filterableField/m_filter_input',function($data,$filename
/**/) {
'use strict';var $utils=this,$helpers=$utils.$helpers,$escape=$utils.$escape,placeholder=$data.placeholder,txtVal=$data.txtVal,$out='';$out+='<div class="data-list-filter p-xs"> <div> <div class="form-group"> <input type="text" class="form-control input-sm" name="txtVal" placeholder="';
$out+=$escape(placeholder);
$out+='" value="';
$out+=$escape(txtVal);
$out+='"> </div> <div class="m-t-xs"> <button type="button" class="btn btn-primary btn-xs rounded pull-right" data-action="sureFilter">确定</button>  <div class="clearfix"></div> </div> </div> </div>';
return new String($out);
});/*v:1*/
template('m_filterableField/m_filter_select',function($data,$filename
/**/) {
'use strict';var $utils=this,$helpers=$utils.$helpers,$each=$utils.$each,selectList=$data.selectList,s=$data.s,$index=$data.$index,$escape=$utils.$escape,currCheckValue=$data.currCheckValue,$out='';$out+='<div class="data-list-filter"> <ul class="dropdown-menu"> ';
$each(selectList,function(s,$index){
$out+=' <li> <a data-state-no="';
$out+=$escape(s.fieldValue);
$out+='"> <span class="check"> ';
if(s.fieldValue == currCheckValue){
$out+=' <i class="fa fa-check"></i> ';
}
$out+=' </span> ';
$out+=$escape(s.fieldName);
$out+=' </a> </li> ';
});
$out+=' </ul> </div>';
return new String($out);
});/*v:1*/
template('m_filterableField/m_filter_select1',function($data,$filename
/**/) {
'use strict';var $utils=this,$helpers=$utils.$helpers,$each=$utils.$each,selectList=$data.selectList,s=$data.s,$index=$data.$index,$escape=$utils.$escape,isMultiple=$data.isMultiple,$out='';$out+='<div class="data-list-filter"> <ul class="dropdown-menu"> ';
$each(selectList,function(s,$index){
$out+=' <li> <a class="no-margins p-r-5" data-state-no="';
$out+=$escape(s.id);
$out+='"> ';
if(isMultiple){
$out+=' <label class="i-checks fw-normal"> ';
if(s.isSelected){
$out+=' <input name="itemCk" type="checkbox" checked value="';
$out+=$escape(s.id);
$out+='"/> ';
}else{
$out+=' <input name="itemCk" type="checkbox" value="';
$out+=$escape(s.id);
$out+='" /> ';
}
$out+=' <span class="i-checks-span">';
$out+=$escape(s.name);
$out+='</span> </label> ';
}else{
$out+=' <span class="check"> ';
if(s.isSelected){
$out+=' <i class="fa fa-check"></i> ';
}
$out+=' </span> ';
$out+=$escape(s.name);
$out+=' ';
}
$out+=' </a> </li> ';
});
$out+=' </ul> </div>';
return new String($out);
});/*v:1*/
template('m_filterableField/m_filter_time',function($data,$filename
/**/) {
'use strict';var $utils=this,$helpers=$utils.$helpers,$escape=$utils.$escape,startTime=$data.startTime,endTime=$data.endTime,$out='';$out+='<div class="data-list-filter p-xs"> <div> <div class="form-group"> <div class="input-group"> <input type="text" class="form-control input-sm" id="ipt_startTime" name="startTime" placeholder="开始时间" readonly onFocus="WdatePicker({maxDate:\'#F{$dp.$D(\\\'ipt_endTime\\\')}\'})" value="';
$out+=$escape(startTime);
$out+='"> <span class="input-group-addon no-padding"> <i class="icon-sm icon-append fa fa-calendar" style="height: 28px;line-height: 28px;"></i> </span> </div> </div> <div class="form-group m-t-xs"> <div class="input-group "> <input type="text" class="form-control input-sm" id="ipt_endTime" name="endTime" placeholder="结束时间" readonly onFocus="WdatePicker({minDate:\'#F{$dp.$D(\\\'ipt_startTime\\\')}\'})" value="';
$out+=$escape(endTime);
$out+='"> <span class="input-group-addon no-padding"> <i class="icon-sm icon-append fa fa-calendar" style="height: 28px;line-height: 28px;"></i> </span> </div> </div> <div class="m-t-xs"> <button type="button" class="btn btn-primary btn-xs rounded pull-right" data-action="sureTimeFilter">确定</button> <button type="button" class="btn btn-default btn-xs rounded pull-right m-r-xs" data-action="clearTimeInput">清空</button> <div class="clearfix"></div> </div> </div> </div>';
return new String($out);
});/*v:1*/
template('m_filterableField/m_filter_timeCombination','<div class="m_filter_timeCombination"> <div class="form-group"> <label class="m-t-xs">时间：</label> <div class="pull-right m-l-xs"> <input type="text" class="form-control input-sm wth-100" name="ipt_year" onclick="" placeholder="请选择年份" readonly/> <select class="form-control input-sm wth-100 no-padding" name="ipt_month"> </select> </div> <div class="btn-group pull-right"> <a class="btn btn-default btn-sm m-r-none" href="javascript:void(0)" data-action="setTime" data-days="30">一个月</a> <a class="btn btn-default btn-sm m-r-none" href="javascript:void(0)" data-action="setTime" data-days="90">一季度</a> <a class="btn btn-default btn-sm m-r-none" href="javascript:void(0)" data-action="setTime" data-days="180">半年</a> <a class="btn btn-default btn-sm m-r-none" href="javascript:void(0)" data-action="setTime" data-days="360">一年</a> </div> <div class="clearfix"></div> </div> <div class="form-group"> <div class="input-group dp-inline-block"> <input type="text" class="form-control input-sm time-input" id="ipt_startTime" name="startTime" placeholder="开始日期" readonly="" value=""> <span class="input-group-addon no-padding"> <i class="icon-sm icon-append fa fa-calendar"></i> </span> </div> <div class="input-group dp-inline-block"> <input type="text" class="form-control input-sm time-input" id="ipt_endTime" name="endTime" placeholder="结束日期" readonly="" value=""> <span class="input-group-addon no-padding"> <i class="icon-sm icon-append fa fa-calendar"></i> </span> </div> </div> </div>');/*v:1*/
template('m_filterableField/m_popover_filter',function($data,$filename
/**/) {
'use strict';var $utils=this,$helpers=$utils.$helpers,$escape=$utils.$escape,popoverStyle=$data.popoverStyle,_isNullOrBlank=$helpers._isNullOrBlank,title=$data.title,$string=$utils.$string,titleHtml=$data.titleHtml,$out='';$out+='<div class="popover popover-filter box-shadow" role="tooltip" style="';
$out+=$escape(popoverStyle);
$out+='"> <div class="arrow border-top" style="left: 50%;"></div>  ';
if(!_isNullOrBlank(title) ){
$out+=' ';
$out+=$string(titleHtml);
$out+=' ';
}
$out+=' <div class="popover-content p-sm"> </div> </div>';
return new String($out);
});/*v:1*/
template('m_finance/m_addExpDetailTr',function($data,$filename
/**/) {
'use strict';var $utils=this,$helpers=$utils.$helpers,$escape=$utils.$escape,detail=$data.detail,$each=$utils.$each,projectList=$data.projectList,pro=$data.pro,d=$data.d,$out='';$out+=' <tr target="target';
$out+=$escape(detail);
$out+='"> <td> <input class="form-control" type="text" id="expAmount" class="form-control" maxlength="20" name="expAmount';
$out+=$escape(detail);
$out+='" placeholder="输入报销金额"> </td> <td class="expTypeTd"> </td> <td> <input type="text" id="expUse" name="expUse';
$out+=$escape(detail);
$out+='" class="form-control" placeholder="输入用途说明" maxlength="1000" /> </td> <td> <select id="projectId" name="projectId';
$out+=$escape(detail);
$out+='" class="form-control curp p-r-24"> <option value="">选择关联项目</option> ';
$each(projectList,function(pro,d){
$out+=' <option value="';
$out+=$escape(pro.id);
$out+='">';
$out+=$escape(pro.projectName);
$out+='</option> ';
});
$out+=' </select> </td> <td> ';
if(detail!=0){
$out+=' <div class="m-t-xs"> <a href="javascript:void(0);" class="btn-u btn-u-sm btn-u-red getClickFun rounded" i="';
$out+=$escape(detail);
$out+='" data-action="deleteDetail" title="删除"><i class="fa fa-close"></i></a> </div> ';
}
$out+=' </td> </tr>';
return new String($out);
});/*v:1*/
template('m_finance/m_costSharing_settings','<div class="m_costSharing_settings" > <div class="col-24-sm-8 col-24-md-8 col-24-lg-6 no-padding" id="left-box" style="border-right: solid 1px #ccc;"> <div class="clearfix margin-bottom-10"></div> <div id="organization_treeH"> <ul class="sidebar-nav list-group sidebar-nav-v1"> </ul> </div> </div> <div class="col-24-sm-16 col-24-md-16 col-24-lg-18 no-padding " id="right-box"> </div> </div> ');/*v:1*/
template('m_finance/m_costSharing_settings_content',function($data,$filename
/**/) {
'use strict';var $utils=this,$helpers=$utils.$helpers,$each=$utils.$each,feeEntryFieldList=$data.feeEntryFieldList,f=$data.f,i=$data.i,$escape=$utils.$escape,c=$data.c,ci=$data.ci,$out='';$out+='<div class="m_feeEntry_settings" > <table class="table table-bordered table-responsive"> <thead> <tr> <th width="35%">收支分类</th> <th width="45%">收支分类细类</th> <th width="20%">数据来源</th> </tr> </thead> <tbody> ';
$each(feeEntryFieldList,function(f,i){
$out+=' <tr> <td rowspan="';
$out+=$escape(f.childList!=null && f.childList.length>0 ?f.childList.length+1:'');
$out+='" class="gray-bg v-middle"> <div class="check-box"> <label class="i-checks pull-left"> <input name="itemCk" type="checkbox" data-code="';
$out+=$escape(f.code);
$out+='" data-pid="';
$out+=$escape(f.pid);
$out+='" data-id="';
$out+=$escape(f.id);
$out+='"/> <span class="i-checks-span">';
$out+=$escape(f.name);
$out+='</span> </label> </div> </td> <td> ';
if(f.childList!=null && f.childList.length>0){
$out+=' <div class="check-box"> <label class="i-checks pull-left"> ';
if(f.childList[0].showStatus == 1){
$out+=' ';
if(f.childList[0].categoryType == 0){
$out+=' <input name="itemCk" type="checkbox" data-code="';
$out+=$escape(f.childList[0].code);
$out+='" data-pid="';
$out+=$escape(f.childList[0].pid);
$out+='" data-id="';
$out+=$escape(f.childList[0].id);
$out+='" checked disabled/> ';
}else{
$out+=' <input name="itemCk" type="checkbox" data-code="';
$out+=$escape(f.childList[0].code);
$out+='" data-pid="';
$out+=$escape(f.childList[0].pid);
$out+='" data-id="';
$out+=$escape(f.childList[0].id);
$out+='" checked/> ';
}
$out+=' ';
}else{
$out+=' ';
if(f.childList[0].categoryType == 0){
$out+=' <input name="itemCk" type="checkbox" data-code="';
$out+=$escape(f.childList[0].code);
$out+='" data-pid="';
$out+=$escape(f.childList[0].pid);
$out+='" data-id="';
$out+=$escape(f.childList[0].id);
$out+='" disabled/> ';
}else{
$out+=' <input name="itemCk" type="checkbox" data-code="';
$out+=$escape(f.childList[0].code);
$out+='" data-pid="';
$out+=$escape(f.childList[0].pid);
$out+='" data-id="';
$out+=$escape(f.childList[0].id);
$out+='"/> ';
}
$out+=' ';
}
$out+=' <span class="i-checks-span">';
$out+=$escape(f.childList[0].name);
$out+='</span> </label> </div> ';
}else{
$out+=' <button class="btn btn-link btn-add" data-action="addFeeField" title="添加设计任务" data-id="';
$out+=$escape(f.id);
$out+='"><i class="fa fa-plus"></i></button> ';
}
$out+=' </td> <td> ';
if(f.childList!=null && f.childList.length>0 && (f.childList[0].categoryType==2 || f.childList[0].categoryType==3)){
$out+=' 人工输入 ';
}
$out+=' </td> </tr> ';
if(f.childList!=null && f.childList.length>0){
$out+=' ';
$each(f.childList,function(c,ci){
$out+=' ';
if(ci>0){
$out+=' <tr class=""> <td> <div class="check-box"> <label class="i-checks pull-left"> ';
if(c.showStatus==1){
$out+=' ';
if(c.categoryType==0){
$out+=' <input name="itemCk" type="checkbox" data-code="';
$out+=$escape(c.code);
$out+='" data-pid="';
$out+=$escape(c.pid);
$out+='" data-id="';
$out+=$escape(c.id);
$out+='" checked disabled/> ';
}else{
$out+=' <input name="itemCk" type="checkbox" data-code="';
$out+=$escape(c.code);
$out+='" data-pid="';
$out+=$escape(c.pid);
$out+='" data-id="';
$out+=$escape(c.id);
$out+='" checked/> ';
}
$out+=' ';
}else{
$out+=' ';
if(c.categoryType==0){
$out+=' <input name="itemCk" type="checkbox" data-code="';
$out+=$escape(c.code);
$out+='" data-pid="';
$out+=$escape(c.pid);
$out+='" data-id="';
$out+=$escape(c.id);
$out+='" disabled/> ';
}else{
$out+=' <input name="itemCk" type="checkbox" data-code="';
$out+=$escape(c.code);
$out+='" data-pid="';
$out+=$escape(c.pid);
$out+='" data-id="';
$out+=$escape(c.id);
$out+='"/> ';
}
$out+=' ';
}
$out+=' <span class="i-checks-span">';
$out+=$escape(c.name);
$out+='</span> </label> </div> </td> <td> ';
if(c.categoryType==2 || c.categoryType==3){
$out+=' 人工输入 ';
}
$out+=' </td> </tr> ';
}
$out+=' ';
});
$out+=' <tr> <td > <button class="btn btn-link btn-add" data-action="addFeeField" title="添加设计任务" data-id="';
$out+=$escape(f.id);
$out+='"><i class="fa fa-plus"></i></button> </td> <td></td> </tr> ';
}
$out+=' ';
});
$out+=' </tbody> </table> </div> ';
return new String($out);
});/*v:1*/
template('m_finance/m_costSummary',' <div class="ibox ibox_min_height m_costSummary"> <div class="ibox-title secondary-menu-outbox"> <div class="row"> <div class="col-md-6">  <div class="no-margin p-h-sm breadcrumb-box" > <ol class="breadcrumb"> <li> 审批管理 </li> <li class="active fa fa-angle-right"> <strong>费用汇总</strong> </li> </ol> </div> </div> <div class="col-md-6 text-right p-w-sm"> </div> <div class="clearfix"></div> </div> </div> <div class="ibox-content no-padding"> <div class="" id="summary"> <input type="hidden" name="approveStatus" value=""/> <input type="hidden" name="myExpStartDate" value=""/> <input type="hidden" name="myExpEndDate" value=""/> <input type="hidden" name="expNo" value=""/> <input type="hidden" name="expType" value=""/> <input type="hidden" name="approveStartDate" value=""/> <input type="hidden" name="approveEndDate" value=""/> <input type="hidden" name="approveUserName" value=""/> <input type="hidden" name="allocationStatus" value=""/> <input type="hidden" name="allocationStartDate" value=""/> <input type="hidden" name="allocationEndDate" value=""/> <input type="hidden" name="applyCompanyName" value=""/> <input type="hidden" name="sortAllocationDate" value=""/>  <section class="mySummaryListBox"> <div class="row"> <div class="col-md-12" id="mySummaryListData"></div> <div class="col-md-12 padding-right-25"> <div id="mySummary-pagination-container" class="m-pagination pull-right"></div> </div> </div> </section>  </div> </div> </div> ');/*v:1*/
template('m_finance/m_costSummary_list',function($data,$filename
/**/) {
'use strict';var $utils=this,$helpers=$utils.$helpers,$each=$utils.$each,myDataList=$data.myDataList,p=$data.p,$index=$data.$index,$escape=$utils.$escape,pageIndex=$data.pageIndex,_momentFormat=$helpers._momentFormat,_expNumberFilter=$helpers._expNumberFilter,rootPath=$data.rootPath,expSumAmount=$data.expSumAmount,financialAllocationSumAmount=$data.financialAllocationSumAmount,$out='';$out+='<style> .table-hover>tbody>tr.no-data:hover { background-color: transparent; } </style> <table class="table table-hover table-bordered table-responsive dataTable" > <thead> <tr> <th width="6%">序号</th> <th width="10%"> 编号 <a class="icon-filter pull-right" id="filterExpNo" style="display: none;"><i class="icon iconfont icon-shaixuan"></i></a> </th>  <th width="10%"> 申请时间 <a class="icon-filter pull-right" id="filterExpDate" style="display: none;"><i class="icon iconfont icon-shaixuan"></i></a> </th> <th width="10%"> 申请人 <a class="icon-filter pull-right" id="filterApproveUserName" style="display: none;"><i class="icon iconfont icon-shaixuan"></i></a> </th> <th width="10%"> 所在组织 <a class="icon-filter pull-right" id="filterTheOrg" style="display: none;"><i class="icon iconfont icon-shaixuan"></i></a> </th> <th width="15%">用途说明</th> <th width="10%" class="text-center"><span>申请金额（元）</span></th> <th width="10%"> 审批人 </th> <th width="10%"> 审批时间  </th>  <th width="10%" class="sorting_desc" data-action="sort" data-sort-type="allocationDate"> 拨款时间 <a class="icon-filter pull-right" id="filterAllocationDate" style="display: none;"><i class="icon iconfont icon-shaixuan"></i></a> </th> </tr> </thead> <tbody> ';
$each(myDataList,function(p,$index){
$out+=' <tr class="curp" data-action="openShowExp" i="';
$out+=$escape($index);
$out+='" versionNum="';
$out+=$escape(p.versionNum);
$out+='"> <td>';
$out+=$escape($index+1+pageIndex*10);
$out+='</td> <td>';
$out+=$escape(p.expNo);
$out+='</td> <!--<td> ';
if(p.type==1){
$out+=' 报销申请 ';
}else{
$out+=' 费用申请 ';
}
$out+=' </td>--> <td>';
$out+=$escape(_momentFormat(p.expDate,'YYYY/MM/DD'));
$out+='</td> <td>';
$out+=$escape(p.userName);
$out+='</td> <td>';
$out+=$escape(p.departName);
$out+='</td> <td>';
$out+=$escape(p.expUse);
$out+='</td> <td class="text-right"> <span class="td-span-pr">';
$out+=$escape(_expNumberFilter(p.expSumAmount));
$out+='</span> </td> <td>';
$out+=$escape(p.auditPersonName);
$out+='</td> <td>';
$out+=$escape(_momentFormat(p.approveDate,'YYYY/MM/DD'));
$out+='</td> <!--<td> ';
if(p.approveStatus==1){
$out+=' <a type="button" class="btn-u btn-u-xs rounded" data-action="agreeToGrant" data-id="';
$out+=$escape(p.id);
$out+='">同意拨款</a> ';
}else if(p.approveStatus==6){
$out+=' 已拨款 ';
}
$out+=' </td>--> <td> ';
if(p.allocationDate!=null && p.allocationDate!=''){
$out+=' ';
$out+=$escape(_momentFormat(p.allocationDate,'YYYY/MM/DD'));
$out+=' ';
}else if(p.approveStatus==1 && p.role!=null && p.role.financialAllocation==1){
$out+=' <a type="button" class="btn btn-primary btn-xs rounded" data-action="agreeToGrant" data-id="';
$out+=$escape(p.id);
$out+='">同意拨款</a> ';
}else{
$out+=' 待拨款 ';
}
$out+=' ';
if(p.role!=null && p.role.financialRecall==1){
$out+=' <a type="button" class="btn btn-default btn-xs rounded" data-action="sendBack" data-id="';
$out+=$escape(p.id);
$out+='">退回</a> ';
}
$out+=' </td> </tr> ';
});
$out+=' ';
if(myDataList==null || myDataList.length==0){
$out+=' <tr class="no-data"> <td colspan="10" align="center"> <div class="text-center"> <img src="';
$out+=$escape(rootPath);
$out+='/assets/img/default/without_exp.png"> </div> <span style="color:#4765a0">暂无汇总内容</span> </td> </tr> ';
}
$out+=' </tbody> </table> ';
if(myDataList!=null && myDataList.length!=0){
$out+=' <div class="row"> <div class="col-md-6"> &nbsp;&nbsp;总申请金额：<span style="color:#ff756d;">';
$out+=$escape(_expNumberFilter(expSumAmount));
$out+='</span>元 &nbsp;&nbsp;总拨款金额：<span style="color:#ff756d;">';
$out+=$escape(_expNumberFilter(financialAllocationSumAmount));
$out+='</span>元 </div> </div> ';
}
return new String($out);
});/*v:1*/
template('m_finance/m_expTypeSelect',function($data,$filename
/**/) {
'use strict';var $utils=this,$helpers=$utils.$helpers,$each=$utils.$each,expTypeList=$data.expTypeList,value=$data.value,i=$data.i,$escape=$utils.$escape,item=$data.item,d=$data.d,$out='';$out+='<div class="m_expTypeSelect"> <input type="text" class="form-control curp bg-none" readonly="readonly" id="collectExpType" name="collectExpType" data-action="collectExpType" placeholder="报销类别"> <div class=" typeNameArea hide pt-absolute" style="z-index: 99;min-width: 596px;"> <div class="thumbnail clearfix click p-sm"> <div class="clearBtn"> <a href="javascript:void(0);" data-action="deleteAll" class="btn-u btn-u-red btn-u-xs rounded">清除</a> </div> ';
$each(expTypeList,function(value,i){
$out+=' <div class="items col-lg-2 text-center no-padding"> <a href="javascript:void(0);" class="click firstItem color-dark curp" data-action="firstItem" name="';
$out+=$escape(value.parent.name);
$out+='" id="';
$out+=$escape(value.parent.id);
$out+='">';
$out+=$escape(value.parent.name);
$out+='</a> <hr/> ';
$each(value.child,function(item,d){
$out+=' <div class="childItem margin-bottom-5"> <a href="javascript:void(0);" data-action="childItem" parent-name="';
$out+=$escape(value.parent.name);
$out+='" name="';
$out+=$escape(item.name);
$out+='" id="';
$out+=$escape(item.id);
$out+='" class="color-dark curp">';
$out+=$escape(item.name);
$out+='</a> </div> ';
});
$out+=' </div> ';
});
$out+=' <div class="items col-lg-2 text-center no-padding"><a class="click firstItem color-dark " >&nbsp;</a><hr/></div> </div> </div> </div>';
return new String($out);
});/*v:1*/
template('m_finance/m_expTypeSetting',function($data,$filename
/**/) {
'use strict';var $utils=this,$helpers=$utils.$helpers,$each=$utils.$each,expTypeList=$data.expTypeList,mainE=$data.mainE,i=$data.i,$escape=$utils.$escape,ch=$data.ch,j=$data.j,$out='';$out+='<div class="ibox ibox_min_height">  <div class="ibox-content no-padding"> <form id="expTypeSetting"> <fieldset id="expTypeMainContent"> <section class="categoryListOBox"> ';
$each(expTypeList,function(mainE,i){
$out+=' <div class="col-md-12" style="padding:10px 0 10px;"> <div class="row"> <div class="col-24-md-offset-1 col-24-md-22"> <div class="headline"><h2>';
$out+=$escape(mainE.parent.name);
$out+='</h2></div> </div> </div> <div class="row"> <div class="col-24-md-offset-4 col-24-md-16 "> <div class="row"> ';
$each(mainE.child,function(ch,j){
$out+=' <div class="col-md-12 "> <div class="row margin-bottom-10"> <div class="col-md-2"> <strong>';
$out+=$escape(ch.name);
$out+='</strong> </div> <div class="col-md-10"> ';
$out+=$escape(ch.expTypeMemo);
$out+=' </div> </div> </div> ';
});
$out+=' <div class="col-md-12 "> <div class="row"> <div class="col-md-3" style="padding: 8px 13px;"> <a href="javascript:void(0)" class="editExpButton roleControl" roleCode="sys_finance_type" flag="2" parent_name="';
$out+=$escape(mainE.parent.name);
$out+='" data-action="editButton';
$out+=$escape(i);
$out+='" style="color:#4765a0">修改';
$out+=$escape(mainE.parent.name);
$out+='>></a> </div> </div> </div> </div> </div> </div> </div> ';
});
$out+=' </section> </fieldset> </form> </div> </div> ';
return new String($out);
});/*v:1*/
template('m_finance/m_expTypeSetting_edit',function($data,$filename
/**/) {
'use strict';var $utils=this,$helpers=$utils.$helpers,$escape=$utils.$escape,expTypeData=$data.expTypeData,$each=$utils.$each,value=$data.value,i=$data.i,$out='';$out+='<section class="categorySettingOBox"> <div class="col-md-12 margin-bottom-10" style="padding:10px 0 10px;"> <div class="row"> <div class="col-24-md-offset-1 col-24-md-22"> <div class="headline"><h2>';
$out+=$escape(expTypeData.parent.name);
$out+='</h2></div> </div> </div> <div class="row"> <div class="col-24-md-offset-1 col-24-md-22"> <table class="table"> <thead> <tr> <th width="20%">类别名称</th> <th width="70%">类别描述</th> <th width="10%">操作</th> </tr> </thead> <tbody> ';
$each(expTypeData.child,function(value,i){
$out+=' <tr class="categoryInput out-box" id="';
$out+=$escape(value.id);
$out+='"> <td> <input class="form-control" type="text" id="categoryName" name="categoryName" value="';
$out+=$escape(value.name);
$out+='"/> </td> <td> <input class="form-control" type="text" id="categoryMemo" name="categoryMemo" value="';
$out+=$escape(value.expTypeMemo);
$out+='" /> </td> <td> <div class="btn_del" style="padding-top: 5px;"> ';
if(!(expTypeData.parent.name=='其他费用' && i==0)){
$out+=' <a class="btn-u btn-u-sm btn-u-red rounded" data-action="categoryDelete" href="javascript:void(0);"><i class="fa fa-close"></i> </a> ';
}
$out+=' </div> </td> </tr> ';
});
$out+=' <tr class="addList"> <td align="center" colspan="3"> <div class="call-action-v1 call-action-v1-boxed rounded tag-box-v4 curp" data-action="addList" > <div class="call-action-v1-box margin-bottom-10 margin-top-10"> <div class="call-action-v1-in text-center color-dark-blue"> <a href="javascript:void(0);" style="cursor: pointer;"><i class="fa fa-plus fa-2x"></i></a> </div> </div> </div> </td> </tr> </tbody> </table> </div> </div>         </div> </section> <div class="footTools"> <div class="col-24-md-offset-1 col-24-md-22 text-right"> <a class="btn btn-default rounded" data-action="cancelEditType">返回</a> <a class="btn btn-primary rounded" data-action="saveEditType">保存</a> </div> </div>';
return new String($out);
});/*v:1*/
template('m_finance/m_feeEntry','<div class="ibox m_feeEntry no-margin"> <div class="ibox-title secondary-menu-outbox"> <div class="row"> <div class="col-md-6">  <div class="no-margin p-h-sm breadcrumb-box" > <ol class="breadcrumb"> <li> 财务管理 </li> <li class="active fa fa-angle-right"> <strong>费用录入</strong> </li> </ol> </div> </div> <div class="col-md-6 text-right p-sm"> </div> <div class="clearfix"></div> </div> </div> <div class="ibox-content no-padding" > <div class="no-margin p-sm breadcrumb-box"> <form class="form-inline"> <div class="form-group z-index-1"> <label>当前组织：</label> <div class="btn-group" id="selectOrg"> </div> </div> </form> </div> <div class="col-24-sm-8 col-24-md-8 col-24-lg-6 no-padding" id="left-box"> </div> <div class="col-24-sm-16 col-24-md-16 col-24-lg-18 no-padding " id="right-box"> </div> </div> </div> ');/*v:1*/
template('m_finance/m_feeEntry_content',function($data,$filename
/**/) {
'use strict';var $utils=this,$helpers=$utils.$helpers,$escape=$utils.$escape,_momentFormat=$helpers._momentFormat,expFixedData=$data.expFixedData,_expNumberFilter=$helpers._expNumberFilter,$each=$utils.$each,p=$data.p,pi=$data.pi,s=$data.s,si=$data.si,$out='';$out+='<div class="text-center border-bottom date-chose-box"> <span class="f-s-20 pull-left m-l-md">';
$out+=$escape(_momentFormat(expFixedData.expDate,'YYYY年MM月'));
$out+='</span> <span class="pull-right m-r-md">支出：<span class="f-s-20">';
$out+=$escape(_expNumberFilter(expFixedData.expAmount));
$out+='</span> 元</span> <span class="pull-right m-r-md">收入：<span class="f-s-20">';
$out+=$escape(_expNumberFilter(expFixedData.incomeAmount));
$out+='</span> 元</span> <div class="clearfix"></div> </div> <div class="p-m"> <form id="expFixedForm"> <table class="table table-bordered table-responsive"> <thead> <tr> <th colspan="2">类别名称</th> <th>金额（元）</th> </tr> </thead> <tbody> ';
if(expFixedData.fixedList!=null && expFixedData.fixedList.length>0){
$out+=' ';
$each(expFixedData.fixedList,function(p,pi){
$out+=' ';
if(p.detailList!=null && p.detailList.length>0){
$out+=' ';
$each(p.detailList,function(s,si){
$out+=' <tr> ';
if(si==0){
$out+=' <td rowspan="';
$out+=$escape(p.detailList.length);
$out+='" class="v-middle">';
$out+=$escape(p.expTypeName);
$out+='</td> ';
}
$out+=' <td class="v-middle">';
$out+=$escape(s.expTypeName);
$out+='</td> <td class="v-middle"> <input class="form-control input-sm" type="text" name="expAmount" maxlength="50" value="';
$out+=$escape(s.expAmount);
$out+='" id="';
$out+=$escape(s.id);
$out+='" data-exptype="';
$out+=$escape(s.expType);
$out+='" data-parent-name="';
$out+=$escape(p.expTypeName);
$out+='" data-name="';
$out+=$escape(s.expTypeName);
$out+='" data-seq="';
$out+=$escape(s.seq);
$out+='"> </td> </tr> ';
});
$out+=' ';
}
$out+=' ';
});
$out+=' ';
}
$out+='  </tbody> </table> </form> <div class="text-right"> <a class="btn btn-primary" data-action="saveExpFixed">保存</a> </div> </div>';
return new String($out);
});/*v:1*/
template('m_finance/m_feeEntry_monthList',function($data,$filename
/**/) {
'use strict';var $utils=this,$helpers=$utils.$helpers,$escape=$utils.$escape,selectedYear=$data.selectedYear,currentYear=$data.currentYear,$each=$utils.$each,monthList=$data.monthList,m=$data.m,mi=$data.mi,currentExpDate=$data.currentExpDate,_momentFormat=$helpers._momentFormat,_expNumberFilter=$helpers._expNumberFilter,$out='';$out+='<div class="text-center f-s-20 border-bottom date-chose-box"> <a class="m-r-md" data-action="prevYear"><i class="fa fa-angle-left"></i></a> <span data-type="selectedYear">';
$out+=$escape(selectedYear);
$out+='</span> ';
if(selectedYear<currentYear){
$out+=' <a class="m-l-md" data-action="nextYear"><i class="fa fa-angle-right"></i></a> ';
}else{
$out+=' <span class="m-l-md fc-ccc"><i class="fa fa-angle-right"></i></span> ';
}
$out+=' </div> ';
$each(monthList,function(m,mi){
$out+=' <div class="month-menu-box curp ';
$out+=$escape(currentExpDate==null?(mi==0?'active':''):(currentExpDate==m.expDate?'active':''));
$out+='" data-action="getExpFixed" data-expdate="';
$out+=$escape(m.expDate);
$out+='"> <div class="col-md-6 month"> ';
$out+=$escape(_momentFormat(m.expDate,'MM月'));
$out+=' <div class="user-name"> 财务人员： ';
if(m.userName!=null && m.userName!=''){
$out+=' ';
$out+=$escape(m.userName);
$out+=' ';
}else{
$out+=' -- ';
}
$out+=' </div> </div> <div class="col-md-6 detail text-right"> <div class="income"> 收入：<span>';
$out+=$escape(_expNumberFilter(m.incomeAmount));
$out+='</span> 元 </div> <div class="expenditure"> 支出：<span>';
$out+=$escape(_expNumberFilter(m.expAmount));
$out+='</span> 元 </div> </div> </div> ';
});
$out+=' ';
return new String($out);
});/*v:1*/
template('m_finance/m_feeEntry_settings','<div class="m_feeEntry_settings" > <form class="form-inline m-md"> <div class="form-group z-index-1"> <label class="">当前组织：</label> <div class="btn-group" id="selectOrg"> </div> </div> <div class="form-group z-index-1"> <label class="m-l-xs">收支筛选：</label> <select class="form-control" name="payType" style="padding: 2px 12px;height: 30px;width: 70px;" data-action="categoryTypeSelect"> <option value="">全部</option> <option value="1">收入</option> <option value="2">支出</option> </select> </div> </form>  <div class="m-md" id="right-box"> </div> </div> ');/*v:1*/
template('m_finance/m_feeEntry_settings_add','<style> body>span.select2-container{ z-index: 1125 !important; } </style> <form class="addFeeFieldForm"> <div class="p-h-m"> <label class="col-md-3 no-pd-right m-t-xs">类型名称：</label> <div class="col-md-9"> <input class="form-control input-sm" type="text" name="feeField" placeholder="请输入类型名称"/> </div> </div>  </form>');/*v:1*/
template('m_finance/m_feeEntry_settings_content',function($data,$filename
/**/) {
'use strict';var $utils=this,$helpers=$utils.$helpers,$each=$utils.$each,feeEntryFieldList=$data.feeEntryFieldList,f=$data.f,i=$data.i,$escape=$utils.$escape,c=$data.c,ci=$data.ci,$out='';$out+='<div class="m_feeEntry_settings" > <table class="table table-bordered table-responsive"> <thead> <tr> <th width="20%">收支分类</th> <th width="40%">收支分类子项</th> <th width="30%">数据来源</th> </tr> </thead> <tbody> ';
$each(feeEntryFieldList,function(f,i){
$out+=' <tr> <td rowspan="';
$out+=$escape(f.childList!=null && f.childList.length>0 ?f.childList.length+1:'');
$out+='" class="gray-bg v-middle"> <div class="check-box"> <label class="i-checks pull-left"> <input name="itemCk" type="checkbox" data-code="';
$out+=$escape(f.code);
$out+='" data-pid="';
$out+=$escape(f.pid);
$out+='" data-id="';
$out+=$escape(f.id);
$out+='"/> <span class="i-checks-span">';
$out+=$escape(f.name);
$out+='</span> </label> </div> </td> <td> ';
if(f.childList!=null && f.childList.length>0){
$out+=' <div class="check-box"> <label class="i-checks pull-left"> ';
if(f.childList[0].showStatus == 1){
$out+=' ';
if(f.childList[0].disabled==true){
$out+=' <input name="itemCk" type="checkbox" data-code="';
$out+=$escape(f.childList[0].code);
$out+='" data-pid="';
$out+=$escape(f.childList[0].pid);
$out+='" data-id="';
$out+=$escape(f.childList[0].id);
$out+='" checked disabled/> ';
}else{
$out+=' <input name="itemCk" type="checkbox" data-code="';
$out+=$escape(f.childList[0].code);
$out+='" data-pid="';
$out+=$escape(f.childList[0].pid);
$out+='" data-id="';
$out+=$escape(f.childList[0].id);
$out+='" checked/> ';
}
$out+=' ';
}else{
$out+=' ';
if(f.childList[0].disabled==true){
$out+=' <input name="itemCk" type="checkbox" data-code="';
$out+=$escape(f.childList[0].code);
$out+='" data-pid="';
$out+=$escape(f.childList[0].pid);
$out+='" data-id="';
$out+=$escape(f.childList[0].id);
$out+='" disabled/> ';
}else{
$out+=' <input name="itemCk" type="checkbox" data-code="';
$out+=$escape(f.childList[0].code);
$out+='" data-pid="';
$out+=$escape(f.childList[0].pid);
$out+='" data-id="';
$out+=$escape(f.childList[0].id);
$out+='"/> ';
}
$out+=' ';
}
$out+=' <span class="i-checks-span">';
$out+=$escape(f.childList[0].name);
$out+='</span> </label> </div> ';
if(f.childList[0].isDefaulted !=1){
$out+=' <a href="javascript:void(0);" data-action="editName" data-id="';
$out+=$escape(f.childList[0].id);
$out+='" data-pid="';
$out+=$escape(f.id);
$out+='" data-name="';
$out+=$escape(f.childList[0].name);
$out+='" data-category-type="';
$out+=$escape(f.childList[0].categoryType);
$out+='" style="display: none;"> <i class="ic-edit"></i> </a> <a href="javascript:void(0);" data-action="delFeeField" data-id="';
$out+=$escape(f.childList[0].id);
$out+='" style="display: none;"> <i class="glyphicon glyphicon-remove text-danger"></i> </a> ';
}
$out+=' ';
}else{
$out+=' <a class="btn btn-link btn-add" data-action="addFeeField" title="添加设计任务" data-id="';
$out+=$escape(f.id);
$out+='"><i class="fa fa-plus"></i></a> ';
}
$out+=' </td> <td> ';
if(f.childList!=null && f.childList.length>0){
$out+=' ';
$out+=$escape(f.childList[0].dataSource);
$out+=' ';
}
$out+=' </td> </tr> ';
if(f.childList!=null && f.childList.length>0){
$out+=' ';
$each(f.childList,function(c,ci){
$out+=' ';
if(ci>0){
$out+=' <tr class=""> <td> <div class="check-box"> <label class="i-checks pull-left"> ';
if(c.showStatus==1){
$out+=' ';
if(c.disabled==true){
$out+=' <input name="itemCk" type="checkbox" data-code="';
$out+=$escape(c.code);
$out+='" data-pid="';
$out+=$escape(c.pid);
$out+='" data-id="';
$out+=$escape(c.id);
$out+='" checked disabled/> ';
}else{
$out+=' <input name="itemCk" type="checkbox" data-code="';
$out+=$escape(c.code);
$out+='" data-pid="';
$out+=$escape(c.pid);
$out+='" data-id="';
$out+=$escape(c.id);
$out+='" checked/> ';
}
$out+=' ';
}else{
$out+=' ';
if(c.disabled==true){
$out+=' <input name="itemCk" type="checkbox" data-code="';
$out+=$escape(c.code);
$out+='" data-pid="';
$out+=$escape(c.pid);
$out+='" data-id="';
$out+=$escape(c.id);
$out+='" disabled/> ';
}else{
$out+=' <input name="itemCk" type="checkbox" data-code="';
$out+=$escape(c.code);
$out+='" data-pid="';
$out+=$escape(c.pid);
$out+='" data-id="';
$out+=$escape(c.id);
$out+='"/> ';
}
$out+=' ';
}
$out+=' <span class="i-checks-span">';
$out+=$escape(c.name);
$out+='</span> </label> </div> ';
if(c.isDefaulted !=1){
$out+=' <a href="javascript:void(0);" data-action="editName" data-id="';
$out+=$escape(c.id);
$out+='" data-pid="';
$out+=$escape(f.id);
$out+='" data-name="';
$out+=$escape(c.name);
$out+='" data-category-type="';
$out+=$escape(c.categoryType);
$out+='" style="display: none;"> <i class="ic-edit"></i> </a> <a href="javascript:void(0);" data-action="delFeeField" data-id="';
$out+=$escape(c.id);
$out+='" style="display: none;"> <i class="glyphicon glyphicon-remove text-danger"></i> </a> ';
}
$out+=' </td> <td> ';
$out+=$escape(c.dataSource);
$out+=' </td> </tr> ';
}
$out+=' ';
});
$out+=' <tr> <td> <a class="btn btn-link btn-add" data-action="addFeeField" title="添加设计任务" data-id="';
$out+=$escape(f.id);
$out+='"><i class="fa fa-plus"></i></a> </td> <td></td> </tr> ';
}
$out+=' ';
});
$out+=' </tbody> </table> </div> ';
return new String($out);
});/*v:1*/
template('m_finance/m_finance_basic_settings',function($data,$filename
/**/) {
'use strict';var $utils=this,$helpers=$utils.$helpers,$each=$utils.$each,companyDataList=$data.companyDataList,c=$data.c,i=$data.i,$escape=$utils.$escape,_expNumberDecimalFilter=$helpers._expNumberDecimalFilter,$out='';$out+='<div class="m_finance_basic_settings p-m" > <div class="fc-000 font-bold"> <p>说明：</p> <P>1、余额初始值：设置日期：年、月由用户确定，日期由系统默认为用户确定月份的最后一天。</P> <p>2、余额初始日期：对应于设定日期各团队的账面资金。设置日期之后相应的各项财务数据将在此基础上产生，避免由于录入历史财务数据的不完整带来的各项财务数据的不准确。</p> <p>3、最低余额：确保各团队正常运作的最低余额（账面可流动资金），根据企业的实际需求可设置可不设置。</p> </div> <table class="table table-bordered table-responsive"> <thead> <tr> <th width="20%">组织名称</th> <th width="17%" class="text-right">录入余额初始值（元）</th> <th width="16%" class="text-right">录入余额初始日期</th> <th width="17%" class="text-right">设置最低余额（元）</th> <th width="10%" class="text-right">当前余额（元）</th>  <th width="10%" class="text-right">上月费用录入（元）</th> </tr> </thead> <tbody> ';
$each(companyDataList,function(c,i){
$out+=' <tr data-i="';
$out+=$escape(i);
$out+='" data-company-id="';
$out+=$escape(c.companyId);
$out+='"> <td class="fc-000 font-bold"> ';
$out+=$escape(c.companyName);
$out+=' </td> <td class="text-right"> <a href="javascript:void(0);" data-action="xEditable" data-action-type="initialBalance" data-value="';
$out+=$escape(c.initialBalance);
$out+='"> ';
$out+=$escape(c.initialBalance==null||c.initialBalance==''?'未设置':_expNumberDecimalFilter(c.initialBalance));
$out+=' </a> </td> <td class="text-right"> <a href="javascript:void(0);" data-action="editDate" data-action-type="';
$out+=$escape(i);
$out+='" class="editable editable-click" > ';
$out+=$escape(c.setBalanceDate==null||c.setBalanceDate==''?'未设置':c.setBalanceDate);
$out+=' </a> </td> <td class="text-right"> <a href="javascript:void(0);" data-action="xEditable" data-action-type="lowBalance" data-value="';
$out+=$escape(c.lowBalance);
$out+='"> ';
$out+=$escape(c.lowBalance==null||c.lowBalance==''?'未设置':_expNumberDecimalFilter(c.lowBalance));
$out+=' </a> </td> <td class="text-right">';
$out+=$escape(_expNumberDecimalFilter(c.currentBalance));
$out+='</td> <!--<td class="text-right">';
$out+=$escape(_expNumberDecimalFilter(c.currentIncome));
$out+='</td>--> <td class="text-right">';
$out+=$escape(_expNumberDecimalFilter(c.lastMonthFixFee));
$out+='</td> </tr> ';
});
$out+=' </tbody> </table> </div> ';
return new String($out);
});/*v:1*/
template('m_finance/m_finance_settings_menu',function($data,$filename
/**/) {
'use strict';var $utils=this,$helpers=$utils.$helpers,role=$data.role,$out='';$out+='<div class="ibox no-margin"> <div class="ibox-title secondary-menu-outbox"> <div class="row"> <div class="col-md-6">  <div class="no-margin p-h-sm breadcrumb-box" > <ol class="breadcrumb"> <li> 财务设置 </li> <li class="active fa fa-angle-right"> <strong>收支类别设置</strong> </li> </ol> </div> </div> <div class="col-md-6 text-right p-w-sm"> <ul class="secondary-menu-ul pull-right">  ';
if(role.expCategorySet==1){
$out+=' <li id="feeEntrySettings" class="active" ><a>收支类别设置</a></li> ';
}
$out+=' ';
if(role.baseFinanceDataSet==1){
$out+=' <li id="financeBasicSettings" ><a>基础财务数据设置</a></li> ';
}
$out+=' <!--';
if(role.shareCostSet==1){
$out+=' <li id="costSharingSettings" ><a>费用分摊项设置</a></li> ';
}
$out+='--> </ul> </div> <div class="clearfix"></div> </div> </div> <div class="ibox-content no-padding"> <div class="row"> <div class="col-md-12" id="content-box"> </div> </div> </div> </div>';
return new String($out);
});/*v:1*/
template('m_finance/m_reimbursementSummary',' <div class="ibox ibox_min_height m_reimbursementSummary"> <div class="ibox-title secondary-menu-outbox"> <div class="row"> <div class="col-md-6">  <div class="no-margin p-h-sm breadcrumb-box" > <ol class="breadcrumb"> <li> 审批管理 </li> <li class="active fa fa-angle-right"> <strong>报销汇总</strong> </li> </ol> </div> </div> <div class="col-md-6 text-right p-w-sm">  </div> <div class="clearfix"></div> </div> </div> <div class="ibox-content no-padding"> <div class="" id="summary"> <input type="hidden" name="approveStatus" value=""/> <input type="hidden" name="myExpStartDate" value=""/> <input type="hidden" name="myExpEndDate" value=""/> <input type="hidden" name="expNo" value=""/> <input type="hidden" name="expType" value=""/> <input type="hidden" name="approveStartDate" value=""/> <input type="hidden" name="approveEndDate" value=""/> <input type="hidden" name="approveUserName" value=""/> <input type="hidden" name="allocationStatus" value=""/> <input type="hidden" name="allocationStartDate" value=""/> <input type="hidden" name="allocationEndDate" value=""/> <input type="hidden" name="applayCompanyName" value=""/> <input type="hidden" name="sortAllocationDate" value=""/>  <section class="mySummaryListBox"> <div class="row"> <div class="col-md-12" id="mySummaryListData"></div> <div class="col-md-12 padding-right-25"> <div id="mySummary-pagination-container" class="m-pagination pull-right"></div> </div> </div> </section>  </div> </div> </div> ');/*v:1*/
template('m_finance/m_reimbursementSummary_list',function($data,$filename
/**/) {
'use strict';var $utils=this,$helpers=$utils.$helpers,$each=$utils.$each,myDataList=$data.myDataList,p=$data.p,$index=$data.$index,$escape=$utils.$escape,pageIndex=$data.pageIndex,_momentFormat=$helpers._momentFormat,_expNumberFilter=$helpers._expNumberFilter,rootPath=$data.rootPath,expSumAmount=$data.expSumAmount,financialAllocationSumAmount=$data.financialAllocationSumAmount,$out='';$out+='<style> .table-hover>tbody>tr.no-data:hover { background-color: transparent; } </style> <table class="table table-hover table-bordered table-responsive dataTable"> <thead> <tr> <th width="6%">序号</th> <th width="10%"> 编号 <a class="icon-filter pull-right" id="filterExpNo" style="display: none;"><i class="icon iconfont icon-shaixuan"></i></a> </th>  <th width="10%"> 申请时间 <a class="icon-filter pull-right" id="filterExpDate" style="display: none;"><i class="icon iconfont icon-shaixuan"></i></a> </th> <th width="10%"> 申请人 <a class="icon-filter pull-right" id="filterApproveUserName" style="display: none;"><i class="icon iconfont icon-shaixuan"></i></a> </th> <th width="10%"> 所在组织 <a class="icon-filter pull-right" id="filterTheOrg" style="display: none;"><i class="icon iconfont icon-shaixuan"></i></a> </th> <th width="15%">用途说明</th> <th width="10%" class="text-center"><span class="">申请金额（元）</span></th> <th width="10%"> 审批人 </th> <th width="10%"> 审批时间  </th>  <th width="10%" class="sorting_desc" data-action="sort" data-sort-type="allocationDate"> 拨款时间 <a class="icon-filter pull-right" id="filterAllocationDate" style="display: none;"><i class="icon iconfont icon-shaixuan"></i></a> </th> </tr> </thead> <tbody> ';
$each(myDataList,function(p,$index){
$out+=' <tr class="curp" data-action="openShowExp" i="';
$out+=$escape($index);
$out+='" versionNum="';
$out+=$escape(p.versionNum);
$out+='"> <td>';
$out+=$escape($index+1+pageIndex*10);
$out+='</td> <td>';
$out+=$escape(p.expNo);
$out+='</td> <!--<td> ';
if(p.type==1){
$out+=' 报销申请 ';
}else{
$out+=' 费用申请 ';
}
$out+=' </td>--> <td>';
$out+=$escape(_momentFormat(p.expDate,'YYYY/MM/DD'));
$out+='</td> <td>';
$out+=$escape(p.userName);
$out+='</td> <td>';
$out+=$escape(p.departName);
$out+='</td> <td>';
$out+=$escape(p.expUse);
$out+='</td> <td class="text-right"> <span class="td-span-pr">';
$out+=$escape(_expNumberFilter(p.expSumAmount));
$out+='</span> </td> <td>';
$out+=$escape(p.auditPersonName);
$out+='</td> <td>';
$out+=$escape(_momentFormat(p.approveDate,'YYYY/MM/DD'));
$out+='</td> <!--<td> ';
if(p.approveStatus==1){
$out+=' <a type="button" class="btn-u btn-u-xs rounded" data-action="agreeToGrant" data-id="';
$out+=$escape(p.id);
$out+='">同意拨款</a> ';
}else if(p.approveStatus==6){
$out+=' 已拨款 ';
}
$out+=' </td>--> <td> ';
if(p.allocationDate!=null && p.allocationDate!=''){
$out+=' ';
$out+=$escape(_momentFormat(p.allocationDate,'YYYY/MM/DD'));
$out+=' ';
}else if(p.approveStatus==1 && p.role!=null && p.role.financialAllocation==1){
$out+=' <a type="button" class="btn btn-primary btn-xs rounded" data-action="agreeToGrant" data-id="';
$out+=$escape(p.id);
$out+='">同意拨款</a> ';
}else{
$out+=' 待拨款 ';
}
$out+=' ';
if(p.role!=null && p.role.financialRecall==1){
$out+=' <a type="button" class="btn btn-default btn-xs rounded" data-action="sendBack" data-id="';
$out+=$escape(p.id);
$out+='">退回</a> ';
}
$out+=' </td> </tr> ';
});
$out+=' ';
if(myDataList==null || myDataList.length==0){
$out+=' <tr class="no-data"> <td colspan="10" align="center"> <div class="text-center"> <img src="';
$out+=$escape(rootPath);
$out+='/assets/img/default/without_exp.png"> </div> <span style="color:#4765a0">暂无汇总内容</span> </td> </tr> ';
}
$out+=' </tbody> </table> ';
if(myDataList!=null && myDataList.length!=0){
$out+=' <div class="row"> <div class="col-md-6"> &nbsp;&nbsp;总申请金额：<span style="color:#ff756d;">';
$out+=$escape(_expNumberFilter(expSumAmount));
$out+='</span>元 &nbsp;&nbsp;总拨款金额：<span style="color:#ff756d;">';
$out+=$escape(_expNumberFilter(financialAllocationSumAmount));
$out+='</span>元 </div> </div> ';
}
return new String($out);
});/*v:1*/
template('m_finance/m_reimbursement_add',function($data,$filename
/**/) {
'use strict';var $utils=this,$helpers=$utils.$helpers,$escape=$utils.$escape,reimburseObj=$data.reimburseObj,$out='';$out+='<div class="ibox"> <div class="ibox-title secondary-menu-outbox"> <div class="row"> <div class="col-md-6">  <div class="no-margin p-h-sm breadcrumb-box" > <ol class="breadcrumb"> <li> 个人报销 </li> <li class="active fa fa-angle-right"> <strong>我要报销</strong> </li> </ol> </div> </div> <div class="col-md-6 text-right p-sm"> </div> <div class="clearfix"></div> </div> </div> <div class="ibox-content" id="toExpApplication"> <form class="tessExpenseBox" style="overflow-x:hidden;"> <fieldset> <section> <div class="headline"> <h2>基础内容</h2> </div> <div class="row"> <div class="form-group col-md-12"> <label for="receiptType">单据类型<span class="color-red">*</span></label> <select id="receiptType" name="" class="form-control curp p-r-24"> <option value="1">报销申请</option> <option value="2">费用申请</option> </select> </div> <div class="form-group col-md-12"> <label for="auditPerson">审批人<span class="color-red">*</span></label> <input id=\'auditPerson\' type="text" class="getClickFun form-control" value="';
$out+=$escape(reimburseObj.auditPersonName);
$out+='" data-action="auditPerson" userid="';
$out+=$escape(reimburseObj.auditPerson);
$out+='" id="auditPerson" readonly="readonly" placeholder="选择审批人" style="background-color: #fff;"> </div> <div class="form-group col-md-12 margin-bottom-20"> <label for="remark">备注</label> <input type="text" id="remark" class="form-control" value="';
$out+=$escape(reimburseObj.remark);
$out+='" maxlength="1000"> </div> <div class="col-md-12 margin-bottom-10"> <span id="showFileLoading"> </span> <button class="getClickFun btn-u btn-u-sm btn-u-dark-blue rounded" id="fileUpload" data-action="fileUpload" type="button"><i class="fa fa-upload"></i>&nbsp;上传附件 </button> </div> <div class="col-md-12 margin-bottom-10"> <span class="uploadmgrContainer"> </span> </div> </div> </section> <section> <div class="headline"> <h2>报销条目</h2> </div> <table class="table table-responsive m-b-none" id="reimburseTable"> <thead> <tr> <th width="18%">报销金额<span class="color-red">*</span>（元）</th> <th width="24%">报销类别<span class="color-red">*</span></th> <th width="30%">用途说明<span class="color-red">*</span></th> <th width="20%">关联项目</th> <th width="8%">操作</th> </tr> </thead> <tbody> <tr> <td colspan="5" class="text-center border-no-t"> <div class="call-action-v1 rounded call-action-v1-boxed tag-box-v4 curp getClickFun" data-action="addExpItem"> <div class="call-action-v1-box margin-bottom-10 margin-top-10"> <div class="call-action-v1-in text-center"> <a href="javascript:void(0);"><i class="fa fa-plus fa-2x color-dark-blue"></i> </a> </div> </div> </div> </td> </tr> <tr> <td colspan="5"> <div class="text-right"> <p>合计：<i class="fa fa-jpy"></i> <span id="expAmount"></span>元</p> </div> </td> </tr> </tbody> </table> </section> </fieldset> <div class="footTools"></div> </form> </div> </div> ';
return new String($out);
});/*v:1*/
template('m_finance/m_showExpDetailDialog',function($data,$filename
/**/) {
'use strict';var $utils=this,$helpers=$utils.$helpers,$escape=$utils.$escape,typeStr=$data.typeStr,$each=$utils.$each,myExpDetails=$data.myExpDetails,item=$data.item,j=$data.j,file=$data.file,fastdfsUrl=$data.fastdfsUrl,expNo=$data.expNo,each=$data.each,i=$data.i,$out='';$out+='<style> .MyExpDetailsCheckExpenseOBox .float_Mask{background-color: white;padding: 21px 3px;position: absolute;top: 19px;left: 30%; } .MyExpDetailsCheckExpenseOBox.ibox-content .timeline-v2.timeline-me>li .cbp_tmtime{width: 40%;} .MyExpDetailsCheckExpenseOBox.ibox-content .timeline-v2.timeline-me:before{left: 32%} .MyExpDetailsCheckExpenseOBox.ibox-content .timeline-v2.timeline-me>li .cbp_tmicon{top: 5px;left: 32%;} .MyExpDetailsCheckExpenseOBox.ibox-content .timeline-v2.timeline-me>li .cbp_tmlabel{margin: 0 0 20px 40%;} </style> <div class="ibox m-b-xs"> <div class="ibox-content MyExpDetailsCheckExpenseOBox no-pd-bottom" style="max-height:700px;overflow-y: auto"> <fieldset style="padding-top:5px;"> <div class="headline m-b-sm"> <h2>';
$out+=$escape(typeStr);
$out+='状态</h2> </div> <div class="row"> <div class="col-md-12"> <div class="panel-body"> <ul class="timeline-v2 timeline-me"> ';
$each(myExpDetails.auditList,function(item,j){
$out+=' <li style="height: 60px;"> <time class="cbp_tmtime" datetime=""> <span style="top:0;font-size: 14px; ';
$out+=$escape((j==myExpDetails.auditList.length-1)?'color: #FF5722;':'');
$out+='">';
$out+=$escape(item.userName);
$out+='</span> <span style="top:0;font-size: 13px;">';
$out+=$escape(item.companyName);
$out+='</span> </time> <i class="cbp_tmicon rounded-x hidden-xs" style=" ';
$out+=$escape((j==myExpDetails.auditList.length-1)?'background: #FF5722;':'');
$out+='"></i> <div class="cbp_tmlabel"> <h2 style="font-size: 14px;padding:0; ';
$out+=$escape((j==myExpDetails.auditList.length-1)?'color:#FF5722;':'');
$out+='"> ';
$out+=$escape(item.approveStatusName=="待审核"?"待审批":item.approveStatusName);
$out+=' &nbsp;&nbsp;&nbsp;<span>';
$out+=$escape(item.expDate);
$out+='</span> </h2> ';
if(item.approveStatusName=='发起申请'){
$out+=' <p style="font-size: 13px;word-break: break-all;color:#999;line-height: 20px;"> ';
$out+=$escape(typeStr);
$out+='备注：';
$out+=$escape(item.remark);
$out+='</p> ';
}
$out+=' ';
if(item.approveStatusName=='退回'){
$out+=' <p style="font-size: 13px;word-break: break-all;color:#999;line-height: 20px;"> 退回原因：';
$out+=$escape(item.remark);
$out+='</p> ';
}
$out+=' </div> ';
if(item.approveStatusName.indexOf('完成')>-1){
$out+=' <span class="float_Mask"></span> ';
}
$out+=' </li> ';
});
$out+=' </ul> </div> </div> </div> ';
if(myExpDetails.expAttachEntityList&&myExpDetails.expAttachEntityList.length>0){
$out+=' <div class="headline m-b"> <h2>相关票据</h2> </div> <div class="row margin-bottom-30"> <div class="col-md-12 p-w-m"> ';
$each(myExpDetails.expAttachEntityList,function(file,j){
$out+=' <span class="label m-r-xs dp-inline-block" style="background: #ecf0f1;padding: 5px 10px;"> <a class="curp m-l-xs" href="';
$out+=$escape(fastdfsUrl);
$out+=$escape(file.fileGroup);
$out+='/';
$out+=$escape(file.filePath);
$out+='" target="_blank"> <i class="fa fa-file-image-o"></i>&nbsp;';
$out+=$escape(file.fileName);
$out+=' </a> </span> ';
});
$out+=' </div> </div> ';
}
$out+=' <div class="headline m-b-sm"> <h2>';
$out+=$escape(typeStr);
$out+='信息</h2> </div> <div class="row"> <div class="col-md-12"> <label>';
$out+=$escape(typeStr);
$out+='编号：</label> <b>';
$out+=$escape(expNo);
$out+='</b> </div> <div class="col-md-12"> <table class="table m-b-none"> <thead> <tr> <td class="no-pd-left">';
$out+=$escape(typeStr);
$out+='条目</td> <td>';
$out+=$escape(typeStr);
$out+='金额</td> <td>';
$out+=$escape(typeStr);
$out+='类别</td> <td>用途说明</td> <td class="no-pd-right">关联项目</td> </tr> </thead> <tbody> ';
$each(myExpDetails.detailList,function(each,i){
$out+=' <tr> <td class="no-pd-left">';
$out+=$escape(i+1);
$out+='</td> <td>';
$out+=$escape(each.expAmount);
$out+='</td> <td>';
$out+=$escape(each.expTypeName);
$out+='</td> <td style="word-break: break-all;">';
$out+=$escape(each.expUse);
$out+='</td> <td class="no-pd-right">';
$out+=$escape(each.projectName);
$out+='</td> </tr> ';
});
$out+=' <tr> <td colspan="5"> <div class="pull-right "> <h5>合计金额：<p class="color-red dp-inline-block">';
$out+=$escape(myExpDetails.totalExpAmount);
$out+=' </p>元 </h5> </div> </td> </tr> </tbody> </table> </div> </div> </fieldset> </div> </div>';
return new String($out);
});/*v:1*/
template('m_home/m_metismenu',function($data,$filename
/**/) {
'use strict';var $utils=this,$helpers=$utils.$helpers,$escape=$utils.$escape,_url=$helpers._url,$out='';$out+='<nav class="navbar-default navbar-static-side m_metismenu " role="navigation" style="z-index: 900;"> <div class="sidebar-collapse"> <ul class="nav metismenu" id="side-menu" style="display: block;"> <li class="navbar-minimalize" style=""> <a href="javascript:void(0);" class="svg"> <object class="pull-left" data="';
$out+=$escape(_url('/assets/img/home/workbench.svg'));
$out+='" type="image/svg+xml"></object> <span class="nav-label pull-left">工作台</span> <div class="clearfix"></div>  </a> </li> <li> <a id="addProject" class="svg" href="#/addProject"> <object class="pull-left" data="';
$out+=$escape(_url('/assets/img/home/addProject.svg'));
$out+='" type="image/svg+xml"></object> <span class="nav-label pull-left">项目立项</span> <div class="clearfix"></div> </a> </li> <li class="project-menu-box" id="project-menu-box"> <a id="projectList" class="svg" href="#/"> <object class="pull-left" data="';
$out+=$escape(_url('/assets/img/home/myProjects.svg'));
$out+='" type="image/svg+xml"></object> <span class="nav-label pull-left">我的项目</span> <div class="clearfix"></div> </a> </li> <li> <a id="myTask" class="svg" href="#/myTask"> <object class="pull-left" class="pull-left" data="';
$out+=$escape(_url('/assets/img/home/myTask.svg'));
$out+='" type="image/svg+xml"></object> <span class="nav-label pull-left">我的任务</span> <div class="clearfix"></div> </a> </li> <!--<li> <a id="projectOverview" class="svg" href="javascript:void(0);"> <object class="pull-left" data="';
$out+=$escape(_url('/assets/img/home/projectOverview.svg'));
$out+='" type="image/svg+xml"></object> <span class="nav-label pull-left">项目总览</span> <div class="clearfix"></div> </a> </li>--> <!--<li class="roleControl" roleCode="project_charge_manage" flag="2"> <a class="svg" href="javascript:void(0);"> <object class="pull-left" data="';
$out+=$escape(_url('/assets/img/home/incomeExpenditure.svg'));
$out+='" type="image/svg+xml"></object> <span class="nav-label pull-left">收支总览</span> <span class="fa arrow"></span> <div class="clearfix"></div> </a> <ul class="nav nav-second-level collapse in" > <li><a href="#/paymentsDetail" id="paymentsDetail"><span class="nav-label ">收支明细</span></a></li> <li><a href="#/paymentsStatistics" id="paymentsStatistics"><span class="nav-label ">分类统计</span></a></li> <li><a href="#/profitStatement" id="profitStatement"><span class="nav-label ">利润报表</span></a></li> </ul> </li>--> <li> <a class="svg" href="javascript:void(0);"> <object class="pull-left" data="';
$out+=$escape(_url('/assets/img/home/financialManagement.svg'));
$out+='" type="image/svg+xml"></object> <span class="nav-label pull-left">财务管理</span> <span class="fa arrow"></span> <div class="clearfix"></div> </a> <ul class="nav nav-second-level collapse in" >  <li class="roleControl" roleCode="finance_report" flag="2"><a href="#/paymentsDetail" id="paymentsDetail"><span class="nav-label ">收支明细</span></a></li> <li class="roleControl" roleCode="finance_report" flag="2"><a href="#/paymentsStatistics" id="paymentsStatistics"><span class="nav-label ">分类统计</span></a></li> <li class="roleControl" roleCode="finance_report" flag="2"><a href="#/profitStatement" id="profitStatement"><span class="nav-label ">利润报表</span></a></li> <li class="roleControl" roleCode="sys_finance_type" flag="2"><a href="#/financeSettings" id="financeSettings"><span class="nav-label ">财务设置</span></a></li> <li class="roleControl" roleCode="finance_fixed_edit" flag="2"><a href="#/feeEntry" id="feeEntry"><span class="nav-label ">费用录入</span></a></li> <li class="roleControl" ><a href="#/projectCost" id="projectCost"><span class="nav-label ">项目收支</span></a></li> <li class="roleControl" ><a href="#/invoiceSummary" id="invoiceSummary"><span class="nav-label ">发票汇总</span></a></li> </ul> </li> <li> <a class="svg" href="javascript:void(0);"> <object class="pull-left" data="';
$out+=$escape(_url('/assets/img/home/financeInformation.svg'));
$out+='" type="image/svg+xml"></object> <span class="nav-label pull-left">审批管理</span> <span class="fa arrow"></span> <div class="clearfix"></div> </a> <ul class="nav nav-second-level collapse in" > <li class="roleControl" roleCode="report_exp_static" flag="2"><a href="#/reimbursementSummary" id="reimbursementSummary"><span class="nav-label ">报销统计</span></a></li> <li class="roleControl" roleCode="report_exp_static" flag="2"><a href="#/costSummary" id="costSummary"><span class="nav-label ">费用统计</span></a></li> <li class="roleControl" roleCode="summary_leave" flag="2"><a href="#/leaveSummary" id="leaveSummary"><span class="nav-label ">请假统计</span></a></li> <li class="roleControl" roleCode="summary_leave" flag="2"><a href="#/businessSummary" id="businessSummary"><span class="nav-label ">出差统计</span></a></li> <li class="roleControl" roleCode="summary_leave" flag="2"><a href="#/workingHoursSummary" id="workingHoursSummary"><span class="nav-label ">工时统计</span></a></li> </ul> </li> <li> <a class="svg" href="javascript:void(0);"> <object class="pull-left" data="';
$out+=$escape(_url('/assets/img/home/addressBook.svg'));
$out+='" type="image/svg+xml"></object> <span class="nav-label pull-left">通讯录</span> <span class="fa arrow"></span> <div class="clearfix"></div> </a> <ul class="nav nav-second-level collapse in" > <li><a href="#/orgInfomationShow" id="orgInfomationShow"><span class="nav-label ">组织信息</span></a></li> <li><a href="#/addressBook" id="addressBook"><span class="nav-label ">通讯录</span></a></li> </ul> </li> <li class="roleControl" roleCode="project_edit" flag="2"> <a id="projectArchiving" class="svg" href="#/projectArchiving" > <object class="pull-left" data="';
$out+=$escape(_url('/assets/img/home/projectDocmgr.svg'));
$out+='" type="image/svg+xml"></object> <span class="nav-label pull-left">项目文档</span> <div class="clearfix"></div> </a> </li> </ul> </div> </nav> <div class="clearfix"></div>';
return new String($out);
});/*v:1*/
template('m_historyData/m_historyData',function($data,$filename
/**/) {
'use strict';var $utils=this,$helpers=$utils.$helpers,$escape=$utils.$escape,_url=$helpers._url,$out='';$out+='<div class="ibox ibox-shadow m_historyData"> <div class="ibox-title border-no-t"> <div class="ibox-tools"> <div class="mt-element-step-new" style="margin-bottom: 30px;"> <div class="row step-line"> <div class="mt-step-desc"> </div> <div class="col-md-4 mt-step-col first active" data-step="1"> <div class="mt-step-number bg-white">1</div> <div class="mt-step-title uppercase font-grey-cascade">文件上传</div> <div class="mt-step-content font-grey-cascade">根据模板填充数据并上传</div> </div> <div class="col-md-4 mt-step-col" data-step="2"> <div class="mt-step-number bg-white">2</div> <div class="mt-step-title uppercase font-grey-cascade">数据预览</div> <div class="mt-step-content font-grey-cascade">预览并校验要导入的数据</div> </div> <div class="col-md-4 mt-step-col last" data-step="3"> <div class="mt-step-number bg-white">3</div> <div class="mt-step-title uppercase font-grey-cascade">导入完成</div> <div class="mt-step-content font-grey-cascade">提交最终处理后的数据</div> </div> </div> </div> </div> </div> <div class="ibox-content"> <div class="row step-container" style="margin-bottom: 150px;"> <div class="col-md-12 text-center" style="margin-bottom: 20px;"> <img src="';
$out+=$escape(_url('/assets/img/default/without_exp.png'));
$out+='"> <p style="font-size:24px;">您需要准备好可导入的Excel文档和设置立项组织</p> <select id="selectOrg"></select> </div> <div class="col-md-12 text-center"> <button type="button" class="btn btn-outline btn-warning m-r-md" data-action="downloadTemplate">下载模板</button> <button type="button" class="btn btn-primary" data-action="uploadFile">上传文件</button> </div> </div> </div> </div>';
return new String($out);
});/*v:1*/
template('m_historyData/m_historyData_step2',function($data,$filename
/**/) {
'use strict';var $utils=this,$helpers=$utils.$helpers,$escape=$utils.$escape,msg=$data.msg,showSubmit=$data.showSubmit,list=$data.list,$each=$utils.$each,o=$data.o,i=$data.i,p=$data.p,t=$data.t,$out='';$out+='<div class="col-md-12"> <div class="alert alert-warning"> ';
$out+=$escape(msg);
$out+='&nbsp;&nbsp;<a href="javascript:void(0);" data-action="reImport">重新导入</a>';
if(showSubmit===true){
$out+=' <button type="button" class="btn btn-v1-green btn-sm pull-right" data-action="submit" style="position: relative;top:-5px;">提交有效数据</button>';
}
$out+=' </div> </div> <div class="col-md-12"> <table class="footable table table-stripped toggle-arrow-tiny" data-page-size="10"> <thead> <tr> <th data-sort-ignore="true" data-toggle="true">项目编号</th> <th data-sort-ignore="true">项目名称</th> <th data-sort-ignore="true">立项组织</th> <th data-sort-ignore="true">立项人</th> <th data-sort-ignore="true">立项日期</th> <th data-sort-ignore="true" data-hide="all">合同签订日期</th> <th data-sort-ignore="true" data-hide="all">项目地点</th> <th data-sort-ignore="true" data-hide="all">项目状态</th> <th data-sort-ignore="true" data-hide="all">甲方</th> <th data-sort-ignore="true" data-hide="all">乙方</th> <th data-sort-ignore="true" data-hide="all">可导入</th> <th data-sort-ignore="true">可导入</th> <th data-sort-ignore="true" data-hide="all">项目详情</th> </tr> </thead> <tbody> ';
if(list&&list.length>0 ){
$out+=' ';
$each(list,function(o,i){
$out+=' <tr> <td>';
$out+=$escape(o.projectNo);
$out+='</td> <td>';
$out+=$escape(o.projectName);
$out+='</td> <td>';
$out+=$escape(o.creatorOrgName);
$out+='</td> <td>';
$out+=$escape(o.creatorUserName);
$out+='</td> <td>';
$out+=$escape(o.projectCreateDate);
$out+='</td> <td>';
$out+=$escape(o.contractDate);
$out+='</td> <td>';
$out+=$escape(o.province+' '+o.city+' '+o.detailAddress);
$out+='</td> <td>';
$out+=$escape(o.projectStatus);
$out+='</td> <td>';
$out+=$escape(o.aCompanyName);
$out+='</td> <td>';
$out+=$escape(o.bCompanyName);
$out+='</td> <td>';
if(o.valid===true){
$out+=' <span class="fc-v1-green">是</span> ';
}else{
$out+=' <span class="fc-v1-red">否，';
$out+=$escape(o.errorReason);
$out+='</span> ';
}
$out+=' </td> <td> ';
if(o.valid===true){
$out+=' <i class="fa fa-check fc-v1-green"></i> ';
}else{
$out+=' <span class="fc-v1-red">不可导入，';
$out+=$escape(o.errorReason);
$out+='</span> ';
}
$out+=' </td> <td> ';
$each(o.designContentList,function(p,t){
$out+=' <strong>';
$out+=$escape(p.contentName);
$out+=':</strong> ';
if(p.startDate!=null){
$out+=' <span>开始时间：';
$out+=$escape(p.startDate);
$out+=',&nbsp;</span> ';
}else{
$out+=' <span>开始时间：未设置,&nbsp;</span> ';
}
$out+=' ';
if(p.endDate!=null){
$out+=' <span>结束时间：';
$out+=$escape(p.endDate);
$out+=',&nbsp;</span> ';
}else{
$out+=' <span>结束时间：未设置,&nbsp;</span> ';
}
$out+=' <span>工期：';
$out+=$escape(p.periodString);
$out+='</span></br> ';
});
$out+=' </td> </tr> ';
});
$out+=' ';
}
$out+=' </tbody> <tfoot> <tr> <td colspan="11"> <ul class="pagination pull-right"></ul> </td> </tr> </tfoot> </table> </div>';
return new String($out);
});/*v:1*/
template('m_historyData/m_historyData_step3',function($data,$filename
/**/) {
'use strict';var $utils=this,$helpers=$utils.$helpers,$escape=$utils.$escape,_url=$helpers._url,$out='';$out+='<div class="col-md-12 text-center" style="margin-bottom: 20px;"> <img src="';
$out+=$escape(_url('/assets/img/default/invite_success.png'));
$out+='"> <p style="font-size:24px;">恭喜你，导入成功！</p> </div>';
return new String($out);
});/*v:1*/
template('m_imgCropper/m_imgCropper','<div class="m_imgCropper" style="overflow: auto;max-height: 500px;"> <form class="form-horizontal rounded-4x noborder"> <div class="ibox m-b-xs"> <div class="ibox-content"> <div class="title row"> <div class="col-md-12"> <div class="margin-bottom-20"> <span>请先上传一张图片,支持jpg、jpeg、png格式。</span> <div class="btnFilePicker" class="dp-inline-block"></div> </div> </div> </div> <div class="setArea row m-b-xs hide"> <div class="col-md-9"> <div class="thumbnail thumbnail-style"> <img class="img-container img-responsive" src=""> </div> </div> <div class="col-md-3"> <div class="thumbnail thumbnail-style" style="width: 110px;height: 110px;"> <div class="clearfix"> <div class="img-preview preview-md"></div> </div> </div> </div> </div> </div> </div> </form> </div>');/*v:1*/
template('m_inviteBPartner/m_inviteBPartner',function($data,$filename
/**/) {
'use strict';var $utils=this,$helpers=$utils.$helpers,filePath=$data.filePath,$escape=$utils.$escape,_url=$helpers._url,companyName=$data.companyName,systemManager=$data.systemManager,cellphone=$data.cellphone,$out='';$out+='<div class="ibox"> <div class="ibox-title border-fff"> <span class="f-s-16 dp-inline-block l-h-16">事业合伙人邀请组织</span> </div> <div class="ibox-content text-center"> <div class="m-b-sm"> ';
if(filePath!='' && filePath!=null){
$out+=' <img alt="image" class="img-circle wth-100 h-100" src="';
$out+=$escape(filePath);
$out+='"> ';
}else{
$out+=' <img alt="image" class="img-circle wth-100 h-100" src="';
$out+=$escape(_url('/assets/img/default/org_default_headPic.png'));
$out+='"> ';
}
$out+=' </div> <p class="f-s-18">';
$out+=$escape(companyName);
$out+='</p> <p class="f-s-14 fc-aaa">企业负责人:';
$out+=$escape(systemManager);
$out+='</p> </div> <div class="ibox-content"> <div class="row"> <div class="col-sm-12"> <form role="form"> <div class="form-group"> <label class="f-s-14 fw-400">您的手机号：</label> <p class="f-s-14 fc-dark-blue fw-600">';
$out+=$escape(cellphone);
$out+='</p> </div> <div class="form-group"> <label class="f-s-14 fw-400">输入完整手机号校验身份：</label> <input name="cellphone" id=\'cellphone\' placeholder="手机号" class="form-control"></div> <div class="form-group"> <a class="btn btn-primary btn-block btn-ok">确定</a> </div> </form> </div> </div> </div> </div>';
return new String($out);
});/*v:1*/
template('m_inviteBPartner/m_inviteBPartner_create_has',function($data,$filename
/**/) {
'use strict';var $utils=this,$helpers=$utils.$helpers,$escape=$utils.$escape,a_companyName=$data.a_companyName,$out='';$out+='<div class="ibox"> <div class="ibox-title border-fff"> <span class="f-s-16 l-h-16 dp-inline-block" >创建新组织</span> </div> <div class="ibox-content"> <p class="f-s-14 l-h-14 p-h-xs">该组织创建后将会自动成为&nbsp;<span class="fc-v1-yellow">';
$out+=$escape(a_companyName);
$out+='</span>&nbsp;的事业合伙人</p> <div class="row"> <div class="col-sm-12"> <form class="createOrgOBox"> <div class="form-group"> <input name="companyName" placeholder="组织名称" class="form-control"> </div> <div class="form-group pt-fixed" style="bottom: 0;left: 20px;right: 20px;"> <a class="btn btn-primary btn-lg btn-block btn-ok" data-action="createOrgSubmit">立即创建</a> </div> </form> </div> </div> </div> </div>';
return new String($out);
});/*v:1*/
template('m_inviteBPartner/m_inviteBPartner_create_hasNo',function($data,$filename
/**/) {
'use strict';var $utils=this,$helpers=$utils.$helpers,$escape=$utils.$escape,a_companyName=$data.a_companyName,$out='';$out+='<div class="ibox"> <div class="ibox-title border-fff"> <span class="dp-inline-block f-s-16 l-h-16">创建账号和组织</span> </div> <div class="ibox-content"> <p class="f-s-14 l-h-14 p-h-xs">该组织创建后将会自动成为&nbsp;<span class="fc-v1-yellow">';
$out+=$escape(a_companyName);
$out+='</span>&nbsp;的事业合伙人</p> <div class="row"> <div class="col-sm-12"> <form role="form" class="createOrgOBox"> <div class="form-group"> <label class="fw-400 f-s-14 dp-block m-b-xs">个人信息：</label> <input name="userName" placeholder="姓名" class="form-control m-b-xs"> <input name="adminPassword" placeholder="密码" type="password" class="form-control m-b-xs"> <label class="fw-400 f-s-14 dp-block">组织信息：</label> <input name="companyName" placeholder="组织名称" class="form-control m-b-xs"> </div> <div class="form-group pt-fixed" style="bottom: 0;left: 20px;right: 20px;"> <a class="btn btn-primary btn-lg btn-block btn-ok" data-action="createOrgAndAccountSubmit">立即创建</a> </div> </form> </div> </div> </div> </div>';
return new String($out);
});/*v:1*/
template('m_inviteBPartner/m_inviteBPartner_org',function($data,$filename
/**/) {
'use strict';var $utils=this,$helpers=$utils.$helpers,$escape=$utils.$escape,a_companyName=$data.a_companyName,$each=$utils.$each,companyList=$data.companyList,c=$data.c,i=$data.i,_url=$helpers._url,$out='';$out+='<div class="ibox"> <div class="ibox-title border-fff"> <span class="dp-inline-block f-s-16 l-h-16">组织选择</span> </div> <div class="ibox-content no-pd"> <ul class="todo-list small-list m-invite-group"> <li><p class="f-s-14 l-h-14 m-t-sm"> 请选择&nbsp;<span class="fc-v1-yellow">你已创建的组织</span>&nbsp;或&nbsp;<span class="fc-v1-yellow">新创建一个组织</span>&nbsp;成为&nbsp;<span class="fc-v1-yellow">“';
$out+=$escape(a_companyName);
$out+='”</span>&nbsp;的事业合伙人</p></li> ';
$each(companyList,function(c,i){
$out+=' ';
if(c.flag===1){
$out+=' <li class="unselectable" data-action="selectOrg" data-memo="';
$out+=$escape(c.memo);
$out+='"> <div class="ibox-content box-shadow border" style="padding: 10px 20px 5px;height:90px;"> <div class="dp-inline-block p-h-sm"> <p class="fc-aaa f-s-16 l-h-16">';
$out+=$escape(c.companyName);
$out+='</p> <p class="f-s-12 l-h-12 fc-aaa">';
$out+=$escape(c.memo);
$out+='</p> </div> ';
if(c.filePath!=null && c.filePath!=''){
$out+=' <img alt="image" class="img-circle pull-right img-responsive hidden-xs" width="90" src="';
$out+=$escape(c.filePath);
$out+='"> ';
}else{
$out+=' <img alt="image" class="img-circle pull-right img-responsive hidden-xs" width="90" src="';
$out+=$escape(_url('/assets/img/default/org_default_headPic.png'));
$out+='"> ';
}
$out+=' </div> </li> ';
}else{
$out+=' <li class="selectable" data-action="selectOrgApply" data-company-id="';
$out+=$escape(c.id);
$out+='" data-company-name="';
$out+=$escape(c.companyName);
$out+='"> <div class="ibox-content box-shadow border" style="padding: 10px 20px 5px;height:90px;"> <div class="dp-inline-block p-h-sm"> <p class="f-s-16 l-h-16">';
$out+=$escape(c.companyName);
$out+='</p> <p class="f-s-12 l-h-12 fc-aaa">企业负责人:';
$out+=$escape(c.systemManager);
$out+='</p> </div> ';
if(c.filePath!=null && c.filePath!=''){
$out+=' <img alt="image" class="img-circle pull-right img-responsive hidden-xs" width="90" src="';
$out+=$escape(c.filePath);
$out+='"> ';
}else{
$out+=' <img alt="image" class="img-circle pull-right img-responsive hidden-xs" width="90" src="';
$out+=$escape(_url('/assets/img/default/org_default_headPic.png'));
$out+='"> ';
}
$out+=' </div> </li> ';
}
$out+=' ';
});
$out+=' <li class="selectable"> <a href="javascript:void(0)"> <div class="ibox-content box-shadow border" style="padding: 0;"> <p style="font-size: 16px;line-height: 16px;"> <a href="javascript:void(0)" data-action="createOrg" style="padding: 20px 20px 15px;display: inline-block;width: 100%;">创建新组织</a> </p> </div> </a> </li> </ul> </div> </div>';
return new String($out);
});/*v:1*/
template('m_inviteBPartner/m_inviteBPartner_org_hasNo',function($data,$filename
/**/) {
'use strict';var $utils=this,$helpers=$utils.$helpers,$escape=$utils.$escape,_url=$helpers._url,$out='';$out+='<div class="ibox"> <div class="ibox-content text-center no-border no-pd-right no-pd-left"> <div class="m-b-md m-t-lg"> <img alt="image" class="img-circle wid-200" src="';
$out+=$escape(_url('/assets/img/default/defaultpage_pic_data.png'));
$out+='" > </div> <p class="f-s-18 m-t-md">你还没有组织，请先创建组织</p> <div class="form-group"> <a class="btn btn-primary btn-lg btn-ok" href="javascript:void(0)" data-action="createOrg">创建组织</a> </div> </div> </div>';
return new String($out);
});/*v:1*/
template('m_inviteBPartner/m_inviteBPartner_success',function($data,$filename
/**/) {
'use strict';var $utils=this,$helpers=$utils.$helpers,$escape=$utils.$escape,_url=$helpers._url,companyName=$data.companyName,a_companyName=$data.a_companyName,$out='';$out+='<div class="ibox"> <div class="ibox-content text-center no-border no-pd-left no-pd-right"> <div class="m-b-sm"> <img alt="image" class="img-circle wth-100" src="';
$out+=$escape(_url('/assets/img/default/invite_success.png'));
$out+='" > </div> <p class="f-s-18">恭喜！</p> <p class="f-s-14 fc-aaa">';
$out+=$escape(companyName);
$out+=' 已经成为 ';
$out+=$escape(a_companyName);
$out+=' 的事业合伙人</p> </div> </div>';
return new String($out);
});/*v:1*/
template('m_inviteBranch/m_inviteBranch',function($data,$filename
/**/) {
'use strict';var $utils=this,$helpers=$utils.$helpers,filePath=$data.filePath,$escape=$utils.$escape,_url=$helpers._url,companyName=$data.companyName,systemManager=$data.systemManager,cellphone=$data.cellphone,$out='';$out+='<div class="ibox"> <div class="ibox-title border-fff"> <span class="f-s-16 dp-inline-block l-h-16">分支机构邀请组织</span> </div> <div class="ibox-content text-center"> <div class="m-b-sm"> ';
if(filePath!='' && filePath!=null){
$out+=' <img alt="image" class="img-circle wth-100 h-100" src="';
$out+=$escape(filePath);
$out+='"> ';
}else{
$out+=' <img alt="image" class="img-circle wth-100 h-100" src="';
$out+=$escape(_url('/assets/img/default/org_default_headPic.png'));
$out+='"> ';
}
$out+=' </div> <p class="f-s-18">';
$out+=$escape(companyName);
$out+='</p> <p class="f-s-14 fc-aaa">企业负责人:';
$out+=$escape(systemManager);
$out+='</p> </div> <div class="ibox-content"> <div class="row"> <div class="col-sm-12"> <form role="form"> <div class="form-group"> <label class="f-s-14 fw-400">您的手机号：</label> <p class="f-s-14 fc-dark-blue fw--600">';
$out+=$escape(cellphone);
$out+='</p> </div> <div class="form-group"> <label class="f-s14 fw-400">输入完整手机号校验身份：</label> <input name="cellphone" id=\'cellphone\' placeholder="手机号" class="form-control"></div> <div class="form-group"> <a class="btn btn-primary btn-block btn-ok">确定</a> </div> </form> </div> </div> </div> </div>';
return new String($out);
});/*v:1*/
template('m_inviteBranch/m_inviteBranch_create_has',function($data,$filename
/**/) {
'use strict';var $utils=this,$helpers=$utils.$helpers,$escape=$utils.$escape,a_companyName=$data.a_companyName,$out='';$out+='<div class="ibox"> <div class="ibox-title border-fff"> <span class="f-s-16 l-h-16 dp-inline-block">创建新组织</span> </div> <div class="ibox-content"> <p class="f-s-14 l-h-14 p-h-xs">该组织创建后将会自动成为&nbsp;<span class="fc-v1-yellow">';
$out+=$escape(a_companyName);
$out+='</span>&nbsp;的分支机构</p> <div class="row"> <div class="col-sm-12"> <form class="createOrgOBox"> <div class="form-group"> <input name="companyName" placeholder="组织名称" class="form-control"> </div> <div class="form-group pt-fixed" style="bottom: 0;left: 20px;right: 20px;"> <a class="btn btn-primary btn-lg btn-block btn-ok" data-action="createOrgSubmit">立即创建</a> </div> </form> </div> </div> </div> </div>';
return new String($out);
});/*v:1*/
template('m_inviteBranch/m_inviteBranch_create_hasNo',function($data,$filename
/**/) {
'use strict';var $utils=this,$helpers=$utils.$helpers,$escape=$utils.$escape,a_companyName=$data.a_companyName,$out='';$out+='<div class="ibox"> <div class="ibox-title border-fff"> <span class="f-s-16 l-h-16 dp-inline-block">创建账号和组织</span> </div> <div class="ibox-content"> <p class="f-s-14 l-h-14 p-h-xs">该组织创建后将会自动成为&nbsp;<span class="fc-v1-yellow">';
$out+=$escape(a_companyName);
$out+='</span>&nbsp;的分支机构</p> <div class="row"> <div class="col-sm-12"> <form role="form" class="createOrgOBox"> <div class="form-group"> <label class="f-s-14 fw-400 dp-block">个人信息：</label> <input name="userName" placeholder="姓名" class="form-control m-b-xs"> <input name="adminPassword" placeholder="密码" type="password" class="form-control m-b-xs"> <label class="f-s-14 fw-400 dp-block">组织信息：</label> <input name="companyName" placeholder="组织名称" class="form-control m-b-xs"> </div> <div class="form-group pt-fixed" style="bottom: 0;left: 20px;right: 20px;"> <a class="btn btn-primary btn-lg btn-block btn-ok" data-action="createOrgAndAccountSubmit">立即创建</a> </div> </form> </div> </div> </div> </div>';
return new String($out);
});/*v:1*/
template('m_inviteBranch/m_inviteBranch_org',function($data,$filename
/**/) {
'use strict';var $utils=this,$helpers=$utils.$helpers,$escape=$utils.$escape,a_companyName=$data.a_companyName,$each=$utils.$each,companyList=$data.companyList,c=$data.c,i=$data.i,_url=$helpers._url,$out='';$out+='<div class="ibox"> <div class="ibox-title border-fff"> <span class="f-s-16 l-h-16 dp-inline-block">组织选择</span> </div> <div class="ibox-content no-pd"> <ul class="todo-list small-list m-invite-group"> <li><p class="f-s-14 l-h-14 m-t-sm"> 请选择&nbsp;<span class="fc-v1-yellow">你已创建的组织</span>&nbsp;或&nbsp;<span class="fc-v1-yellow">新创建一个组织</span>&nbsp;成为&nbsp;<span class="fc-v1-yellow">“';
$out+=$escape(a_companyName);
$out+='”</span>&nbsp;的分支机构</p></li> ';
$each(companyList,function(c,i){
$out+=' ';
if(c.flag===1){
$out+=' <li class="unselectable" data-action="selectOrg" data-memo="';
$out+=$escape(c.memo);
$out+='"> <div class="ibox-content box-shadow border" style="padding: 10px 20px 5px;height:90px;"> <div class="dp-inline-block p-h-sm"> <p class="f-s-16 l-h-16 fc-aaa">';
$out+=$escape(c.companyName);
$out+='</p> <p class="f-s-12 l-h-12 fc-aaa">';
$out+=$escape(c.memo);
$out+='</p> </div> ';
if(c.filePath!=null && c.filePath!=''){
$out+=' <img alt="image" class="img-circle pull-right img-responsive hidden-xs" width="90" src="';
$out+=$escape(c.filePath);
$out+='"> ';
}else{
$out+=' <img alt="image" class="img-circle pull-right img-responsive hidden-xs" width="90" src="';
$out+=$escape(_url('/assets/img/default/org_default_headPic.png'));
$out+='"> ';
}
$out+=' </div> </li> ';
}else{
$out+=' <li class="selectable" data-action="selectOrgApply" data-company-id="';
$out+=$escape(c.id);
$out+='" data-company-name="';
$out+=$escape(c.companyName);
$out+='"> <div class="ibox-content box-shadow border" style="padding: 10px 20px 5px;height:90px;"> <div class="dp-inline-block p-h-sm"> <p class="f-s-16 l-h-16">';
$out+=$escape(c.companyName);
$out+='</p> <p class="f-s-12 l-h-12 fc-aaa">企业负责人:';
$out+=$escape(c.systemManager);
$out+='</p> </div> ';
if(c.filePath!=null && c.filePath!=''){
$out+=' <img alt="image" class="img-circle pull-right img-responsive hidden-xs" width="90" src="';
$out+=$escape(c.filePath);
$out+='"> ';
}else{
$out+=' <img alt="image" class="img-circle pull-right img-responsive hidden-xs" width="90" src="';
$out+=$escape(_url('/assets/img/default/org_default_headPic.png'));
$out+='"> ';
}
$out+=' </div> </li> ';
}
$out+=' ';
});
$out+=' <li class="selectable"> <a href="javascript:void(0)"> <div class="ibox-content box-shadow border" style="padding: 0;"> <p class="f-s-16 l-h-16"> <a href="javascript:void(0)" data-action="createOrg" style="padding: 20px 20px 15px;display: inline-block;width: 100%;">创建新组织</a> </p> </div> </a> </li> </ul> </div> </div>';
return new String($out);
});/*v:1*/
template('m_inviteBranch/m_inviteBranch_org_hasNo',function($data,$filename
/**/) {
'use strict';var $utils=this,$helpers=$utils.$helpers,$escape=$utils.$escape,_url=$helpers._url,$out='';$out+='<div class="ibox"> <div class="ibox-content text-center no-border no-pd-left no-pd-right"> <div class="m-b-md m-t-lg"> <img alt="image" class="img-circle wid-200" src="';
$out+=$escape(_url('/assets/img/default/defaultpage_pic_data.png'));
$out+='" > </div> <p class="f-s-18 m-t-md">你还没有组织，请先创建组织</p> <div class="form-group"> <a class="btn btn-primary btn-lg btn-ok" href="javascript:void(0)" data-action="createOrg">创建组织</a> </div> </div> </div>';
return new String($out);
});/*v:1*/
template('m_inviteBranch/m_inviteBranch_success',function($data,$filename
/**/) {
'use strict';var $utils=this,$helpers=$utils.$helpers,$escape=$utils.$escape,_url=$helpers._url,companyName=$data.companyName,a_companyName=$data.a_companyName,$out='';$out+='<div class="ibox"> <div class="ibox-content text-center no-border no-pd-right no-pd-left"> <div class="m-b-sm"> <img alt="image" class="img-circle wth-100" src="';
$out+=$escape(_url('/assets/img/default/invite_success.png'));
$out+='" > </div> <p class="f-s-18">恭喜！</p> <p class="f-s-14 fc-aaa">';
$out+=$escape(companyName);
$out+=' 已经成为 ';
$out+=$escape(a_companyName);
$out+=' 的分支机构</p> </div> </div>';
return new String($out);
});/*v:1*/
template('m_login/m_forgetPWDStep1',function($data,$filename
/**/) {
'use strict';var $utils=this,$helpers=$utils.$helpers,$escape=$utils.$escape,title=$data.title,rootPath=$data.rootPath,$out='';$out+='<style> .form-group{position: relative;} </style> <div class="passwordBox animated fadeInDown"> <div class="row"> <div class="col-md-12"> <div class="ibox-content"> <h2 class="font-bold">';
$out+=$escape(title);
$out+='</h2> <p> 请填写您的卯丁账号 </p> <div class="row"> <div class="col-lg-12"> <form class="m-t forgetStep1OBox"> <div class="form-group"> <input class="form-control" type="text" placeholder="请输入手机号" name="cellphone" id="cellphone" maxlength="11"> </div> <div class="form-group "> <div class="input-group"> <input placeholder="请输入验证码" class="input form-control" type="text" id="verifcationCode" name="verifcationCode" placeholder="验证码"> <span class="input-group-btn"> <a type="button" class="btn btn-u" id="getCode" data-action="getCode" style="width:96px;">获取验证码</a> </span> </div> </div> <a type="submit" class="btn btn-primary block full-width m-b" href="javascript:void(0)" data-action="nextStep">下一步</a> <p class="text-muted text-left">  <a href="';
$out+=$escape(rootPath);
$out+='/iWork/sys/login">返回登录</a> </p> </form> </div> </div> </div> </div> </div> <hr>         </div>';
return new String($out);
});/*v:1*/
template('m_login/m_forgetPWDStep2',function($data,$filename
/**/) {
'use strict';var $utils=this,$helpers=$utils.$helpers,$escape=$utils.$escape,title=$data.title,cellphone=$data.cellphone,$out='';$out+='<style> .form-group{position: relative;} </style> <div class="passwordBox animated fadeInDown"> <div class="row"> <div class="col-md-12"> <div class="ibox-content"> <h2 class="font-bold">';
$out+=$escape(title);
$out+='</h2>    <div class="row"> <div class="col-lg-12"> <form class="m-t forgetStep2OBox"> <div class="form-group"> <label class="label">注册手机号： <span class="cellPhone form-control-static">';
$out+=$escape(cellphone);
$out+='</span></label> </div> <div class="form-group"> <input class="form-control" type="text" placeholder="请输入密码" id="password" name="password" autocomplete="off" onfocus="this.type=\'password\'"> </div> <a type="submit" class="btn btn-primary block full-width m-b" href="javascript:void(0)" data-action="completeChange">完成</a> </form> </div> </div> </div> </div> </div> <hr>         </div>';
return new String($out);
});/*v:1*/
template('m_login/m_login',function($data,$filename
/**/) {
'use strict';var $utils=this,$helpers=$utils.$helpers,$escape=$utils.$escape,rootPath=$data.rootPath,$out='';$out+='<style> div.ibox-content,div.login-form-qrcode-wrapper{float: left;} div.ibox-content{ width: 60%;border-radius: 4px;} div.login-form-qrcode-wrapper{ width: auto; background-color: transparent;} </style> <div class="ibox-content "> <form class="m-t" id="loginForm"> <div class="form-group"> <input type="text" tabindex="1" id="cellphone" name="cellphone" placeholder="请输入手机号码" class="form-control margin-bottom-20 rounded" maxlength="11"> </div> <div class="form-group"> <input type="text" tabindex="2" id="password" name="password" placeholder="请输入登录密码" class="form-control margin-bottom-20 rounded" autocomplete="off" onfocus="this.type=\'password\'"> </div> <a class="btn btn-primary block full-width m-b" id="btnLogin" tabindex="3" type="submit">登录</a> <a href="';
$out+=$escape(rootPath);
$out+='/iWork/sys/forgetLoginPwd"> <small>忘记密码?</small> </a>    <!--<a class="btn btn-sm btn-white btn-block" href="';
$out+=$escape(rootPath);
$out+='/iWork/sys/register">立即注册</a>--> </form>  </div> ';
return new String($out);
});/*v:1*/
template('m_login/m_popover_login',function($data,$filename
/**/) {
'use strict';var $utils=this,$helpers=$utils.$helpers,$escape=$utils.$escape,_url=$helpers._url,$out='';$out+='<form id="loginForm" style="width: 240px;"> <div class="form-group"> <input type="text" tabindex="1" id="cellphone" name="cellphone" placeholder="请输入手机号码" class="form-control margin-bottom-20 rounded" maxlength="11"> </div> <div class="form-group"> <input type="text" tabindex="2" id="password" name="password" placeholder="请输入登录密码" class="form-control margin-bottom-20 rounded" autocomplete="off" onfocus="this.type=\'password\'"> </div> <div class="form-group" style="margin-bottom: 0;overflow: hidden;"> <a class="btn-u btn-u-dark-blue block full-width m-b rounded text-center m-popover-submit" id="btnLogin" tabindex="3">登录</a> <a data-url="';
$out+=$escape(_url('/iWork/sys/forgetLoginPwd'));
$out+='" href="javascript:void(0)" id="btnForgetPwd" class="pull-right"> <small>忘记密码？</small> </a> </div> </form>';
return new String($out);
});/*v:1*/
template('m_login/m_register',function($data,$filename
/**/) {
'use strict';var $utils=this,$helpers=$utils.$helpers,$escape=$utils.$escape,rootPath=$data.rootPath,cdnUrl=$data.cdnUrl,$out='';$out+='<style> .form-group{position: relative;} </style> <div class="middle-box text-center loginscreen animated fadeInDown"> <div> <div class="text-align-center" style=" margin-bottom: 36px;"> <object data="';
$out+=$escape(rootPath);
$out+='/assets/img/logo_blue.png"></object> </div>  <form class="m-t registerOBox" role="form" action="login.html"> <div class="form-group text-left"> <input class="form-control" type="text" placeholder="手机号" name="cellphone" id="cellphone" maxlength="11"> </div> <div class="form-group text-left"> <div class="input-group"> <input placeholder="验证码" class="input form-control" type="text" id="verifcationCode" name="verifcationCode" placeholder="验证码"> <span class="input-group-btn"> <a type="button" class="btn btn-u" id="getCode" data-action="getCode" style="width:96px;">获取验证码</a> </span> </div> </div> <div class="form-group text-left"> <input class="form-control" type="text" placeholder="姓名" id="userName" name="userName"> </div> <div class="form-group text-left"> <input class="form-control" type="text" placeholder="密码，至少包含6位字符" id="password" name="password" autocomplete="off" onfocus="this.type=\'password\'" maxlength="32"> </div> <div class="form-group text-left"> <input type="checkbox" id="serviceTerm" name="serviceTerm"/><span style="display: inline-block;margin-left: 5px;">已阅读并同意 <a href="';
$out+=$escape(cdnUrl);
$out+='/download/SeriveTerm.pdf" target="_blank">《卯丁用户服务协议》</a></span> </div> <a type="submit" class="btn btn-primary block full-width m-b" href="javascript:void(0)" data-action="submitRegister">注册</a> <p class="text-muted text-center"> <small>已有卯丁账号？</small> <a href="';
$out+=$escape(rootPath);
$out+='/iWork/sys/login">立即登录</a> </p> </form> </div> </div>';
return new String($out);
});/*v:1*/
template('m_message/m_message','<div class="ibox"> <div class="ibox-title secondary-menu-outbox"> <div class="row"> <div class="col-md-12" id="secondary-menu"> <div class="pull-left m-r-xl"> <h3 class="dp-inline-block" >消息中心</h3> </div> <a type="button" class="btn btn-w-m btn-link btn-u-sm m-t-sm pull-right " data-action="refreshMsg"> <i class="fa fa-refresh"></i> 刷新数据 </a> </div> </div> </div> <div class="ibox-content no-padding"> <div class="row"> <div class="col-md-12" id="content-box"> <div class="messageList m-l m-r" style="min-height: 690px"> </div> <div class="row margin-bottom-30"> <div class="col-md-12 text-center m-t-sm"> <div class="m-page" style="display: none;"></div> <a class="btnPageNext btn btn-default btn-xs" href="javascript:void(0)" style="display: none;">加载更多</a> </div> </div> </div> </div> </div> </div>');/*v:1*/
template('m_message/m_message_empty',function($data,$filename
/**/) {
'use strict';var $utils=this,$helpers=$utils.$helpers,$escape=$utils.$escape,rootPath=$data.rootPath,$out='';$out+='<div class="headline"> <h3>今天</h3> </div> <div class="margin-bottom-30 text-center" style="margin-top: 150px"> <div class="text-center"> <img src="';
$out+=$escape(rootPath);
$out+='/assets/img/default/without_message.png"> </div> <span style="color:#4765a0;">暂无消息</span> </div>';
return new String($out);
});/*v:1*/
template('m_message/m_message_group',function($data,$filename
/**/) {
'use strict';var $utils=this,$helpers=$utils.$helpers,$escape=$utils.$escape,_dateSpecShortFormat=$helpers._dateSpecShortFormat,createDate=$data.createDate,$out='';$out+='<!--<div class="headline"> <h3>';
$out+=$escape(_dateSpecShortFormat(createDate));
$out+='</h3> </div>--> <div class=""> <div class="feed-activity-list m-message-group" data-createDate="';
$out+=$escape(_dateSpecShortFormat(createDate));
$out+='"> </div> </div>';
return new String($out);
});/*v:1*/
template('m_message/m_message_group_old',function($data,$filename
/**/) {
'use strict';var $utils=this,$helpers=$utils.$helpers,$escape=$utils.$escape,_dateSpecShortFormat=$helpers._dateSpecShortFormat,createDate=$data.createDate,$out='';$out+='<div class="headline"> <h3>';
$out+=$escape(_dateSpecShortFormat(createDate));
$out+='</h3> </div> <div class="margin-bottom-30"> <ul class="todo-list m-t small-list m-message-group" data-createDate="';
$out+=$escape(_dateSpecShortFormat(createDate));
$out+='"> </ul> </div>';
return new String($out);
});/*v:1*/
template('m_message/m_message_single',function($data,$filename
/**/) {
'use strict';var $utils=this,$helpers=$utils.$helpers,$escape=$utils.$escape,messageType=$data.messageType,companyId=$data.companyId,status=$data.status,projectId=$data.projectId,targetId=$data.targetId,projectName=$data.projectName,expNo=$data.expNo,headImg=$data.headImg,_url=$helpers._url,sendUserName=$data.sendUserName,companyName=$data.companyName,$string=$utils.$string,messageContent=$data.messageContent,_momentFormat=$helpers._momentFormat,sendDate=$data.sendDate,$out='';$out+='<div class="row"> <div class="col-24-md-24 col-xl-12 notice-list-content m-t"> <div class="feed-element" data-messageType="';
$out+=$escape(messageType);
$out+='" data-companyId="';
$out+=$escape(companyId);
$out+='" data-status="';
$out+=$escape(status);
$out+='" data-projectId="';
$out+=$escape(projectId);
$out+='" data-targetId="';
$out+=$escape(targetId);
$out+='" data-project-name="';
$out+=$escape(projectName);
$out+='" data-expNo="';
$out+=$escape(expNo);
$out+='" > <div class="media-body "> <div class="col-24-md-1" > ';
if(headImg!=null && headImg!=''){
$out+=' <img alt="image" class="img-circle pull-left m-xs" src="';
$out+=$escape(headImg);
$out+='"> ';
}else{
$out+=' <img alt="image" class="img-circle pull-left m-xs" src="';
$out+=$escape(_url('/assets/img/default/default_headPic.png'));
$out+='"> ';
}
$out+=' </div> <div class="col-24-md-4" > <span class="dp-block l-h-20">';
$out+=$escape(sendUserName);
$out+='</span> <span class="dp-block span-company">';
$out+=$escape(companyName);
$out+='</span> </div> <div class="col-24-md-17 msg-content-box"> <div class="msg-content">';
$out+=$string(messageContent);
$out+='</div> </div> <div class="col-24-md-2 text-right m-t" > ';
$out+=$escape(_momentFormat(sendDate,'YYYY/MM/DD'));
$out+=' </div> </div> </div> </div> </div>';
return new String($out);
});/*v:1*/
template('m_message/m_message_single_old',function($data,$filename
/**/) {
'use strict';var $utils=this,$helpers=$utils.$helpers,$escape=$utils.$escape,_shortTime=$helpers._shortTime,createDate=$data.createDate,messageType=$data.messageType,companyId=$data.companyId,projectId=$data.projectId,targetId=$data.targetId,expNo=$data.expNo,messageContent=$data.messageContent,$out='';$out+='<li> <span class="m-l-xsd fc-v2-green fw-600">';
$out+=$escape(_shortTime(createDate));
$out+='</span>&nbsp;&nbsp;&nbsp;<span class="m-l-xsd"><a href="javascript:void(0)" data-messageType="';
$out+=$escape(messageType);
$out+='" data-companyId="';
$out+=$escape(companyId);
$out+='" data-projectId="';
$out+=$escape(projectId);
$out+='" data-targetId="';
$out+=$escape(targetId);
$out+='" data-expNo="';
$out+=$escape(expNo);
$out+='" class="btn-handle-msg" style="cursor: default;">';
$out+=$escape(messageContent);
$out+='</a></span> </li>';
return new String($out);
});/*v:1*/
template('m_myTask/m_myTask','<div class="ibox m_myTask"> <div class="ibox-title secondary-menu-outbox"> <div class="row"> <div class="col-md-6" id="secondary-menu"> <div class="pull-left m-r-xl"> <h3 class="dp-inline-block" >我的任务</h3> </div> </div> <div class="col-md-6 text-right btn-pd"> <strong>按任务状态筛选：</strong> <select class="search-by-state" name="searchByState" > <option value="">全部</option> <option value="0" selected>未完成</option> <option value="1">已完成</option> </select> </div> </div> </div> <div class="ibox-content no-padding"> <div class="my-task-list"></div> <div id="pagination-container" class="m-pagination pull-right"></div> </div> </div> ');/*v:1*/
template('m_myTask/m_myTask_expDetail',function($data,$filename
/**/) {
'use strict';var $utils=this,$helpers=$utils.$helpers,$each=$utils.$each,myExpDetails=$data.myExpDetails,item=$data.item,j=$data.j,$escape=$utils.$escape,file=$data.file,fastdfsUrl=$data.fastdfsUrl,expNo=$data.expNo,each=$data.each,i=$data.i,$out='';$out+='<style> .float_Mask{background-color: white;padding: 21px 3px;position: absolute;top: 19px;left: 124px; } </style> <div class="ibox m-b-xs"> <div class="ibox-content MyExpDetailsCheckExpenseOBox no-pd-bottom" style="max-height:700px;overflow-y: auto"> <fieldset style="padding-top:5px;"> <div class="headline m-b-sm"> <h2>报销状态</h2> </div> <div class="row"> <div class="col-md-12"> <div class="panel-body"> <ul class="timeline-v2 timeline-me"> ';
$each(myExpDetails.auditList,function(item,j){
$out+=' <li style="height: 60px;"> <time class="cbp_tmtime" datetime=""> <span style="top:0;font-size: 14px; ';
$out+=$escape((j==myExpDetails.auditList.length-1)?'color: #FF5722;':'');
$out+='">';
$out+=$escape(item.userName);
$out+='</span> <span style="top:0;font-size: 13px;">';
$out+=$escape(item.expDate);
$out+='</span> </time> <i class="cbp_tmicon rounded-x hidden-xs" style="top: 5px; ';
$out+=$escape((j==myExpDetails.auditList.length-1)?'background: #FF5722;':'');
$out+='"></i> <div class="cbp_tmlabel"> <h2 style="font-size: 14px;padding:0; ';
$out+=$escape((j==myExpDetails.auditList.length-1)?'color:#FF5722;':'');
$out+='"> ';
$out+=$escape(item.approveStatusName=="待审核"?"待审批":item.approveStatusName);
$out+='</h2> ';
if(item.approveStatusName=='发起申请'){
$out+=' <p style="font-size: 13px;word-break: break-all;color:#999;line-height: 20px;"> 报销备注：';
$out+=$escape(item.remark);
$out+='</p> ';
}
$out+=' ';
if(item.approveStatusName=='退回'){
$out+=' <p style="font-size: 13px;word-break: break-all;color:#999;line-height: 20px;"> 退回原因：';
$out+=$escape(item.remark);
$out+='</p> ';
}
$out+=' </div> ';
if(item.approveStatusName.indexOf('完成')>-1){
$out+=' <span class="float_Mask"></span> ';
}
$out+=' </li> ';
});
$out+=' </ul> </div> </div> </div> ';
if(myExpDetails.expAttachEntityList&&myExpDetails.expAttachEntityList.length>0){
$out+=' <div class="headline m-b"> <h2>报销附件</h2> </div> <div class="row margin-bottom-30"> <div class="col-md-12 p-w-m"> ';
$each(myExpDetails.expAttachEntityList,function(file,j){
$out+=' <span class="label m-r-xs dp-inline-block" style="background: #ecf0f1;padding: 5px 10px;"> <a class="curp m-l-xs" href="';
$out+=$escape(fastdfsUrl);
$out+=$escape(file.fileGroup);
$out+='/';
$out+=$escape(file.filePath);
$out+='" target="_blank"> <i class="fa fa-file-image-o"></i>&nbsp;';
$out+=$escape(file.fileName);
$out+=' </a> </span> ';
});
$out+=' </div> </div> ';
}
$out+=' <div class="headline m-b-sm"> <h2>报销信息</h2> </div> <div class="row"> <div class="col-md-12"> <label>报销编号：</label> <b>';
$out+=$escape(expNo);
$out+='</b> </div> <div class="col-md-12"> <table class="table m-b-none"> <thead> <tr> <td class="no-pd-left">报销条目</td> <td>报销金额</td> <td>报销类别</td> <td>用途说明</td> <td class="no-pd-right">关联项目</td> </tr> </thead> <tbody> ';
$each(myExpDetails.detailList,function(each,i){
$out+=' <tr> <td class="no-pd-left">';
$out+=$escape(i+1);
$out+='</td> <td>';
$out+=$escape(each.expAmount);
$out+='</td> <td>';
$out+=$escape(each.expTypeName);
$out+='</td> <td style="word-break: break-all;">';
$out+=$escape(each.expUse);
$out+='</td> <td class="no-pd-right">';
$out+=$escape(each.projectName);
$out+='</td> </tr> ';
});
$out+=' <tr> <td colspan="5"> <div class="pull-right "> <h5>合计金额：<p class="color-red dp-inline-block">';
$out+=$escape(myExpDetails.totalExpAmount);
$out+=' </p>元 </h5> </div> </td> </tr> </tbody> </table> </div> </div> </fieldset> </div> <div class="ibox-footer text-right"> <a type="button" class="btn btn-sm btn-primary rounded" data-action="agreeAndDone">同意并完成</a> <a type="button" class="btn btn-sm btn-primary rounded" data-action="agreeAndToNext">同意并继续</a> <a type="button" class="btn btn-sm btn-default rounded" data-action="cancel">取消</a> </div> </div>';
return new String($out);
});/*v:1*/
template('m_myTask/m_myTask_incomeExpenditure',function($data,$filename
/**/) {
'use strict';var $utils=this,$helpers=$utils.$helpers,$escape=$utils.$escape,projectName=$data.projectName,$out='';$out+='<div class="ibox"> <div class="ibox-title secondary-menu-outbox"> <div class="row"> <div class="col-md-6">  <div class="no-margin p-h-sm breadcrumb-box" > <ol class="breadcrumb"> <li> 我的任务 </li> <li class=" fa fa-angle-right"> ';
$out+=$escape(projectName);
$out+=' </li> <li class="active fa fa-angle-right"> <strong>收支管理</strong> </li> </ol> </div> </div> <div class="col-md-6 text-right p-sm"> </div> <div class="clearfix"></div> </div> </div> <div class="ibox-content no-padding" id="incomeExpenditureBox"> </div> </div> ';
return new String($out);
});/*v:1*/
template('m_myTask/m_myTask_list',function($data,$filename
/**/) {
'use strict';var $utils=this,$helpers=$utils.$helpers,$each=$utils.$each,myDataList=$data.myDataList,m=$data.m,mi=$data.mi,$escape=$utils.$escape,pageIndex=$data.pageIndex,_timeDifference=$helpers._timeDifference,$string=$utils.$string,_momentFormat=$helpers._momentFormat,_url=$helpers._url,$out='';$out+='<table class="table table-hover table-bordered table-responsive"> <thead> <tr> <th width="5%">序号</th> <th width="20%">任务名称</th> <th width="20%">项目</th> <th width="12%">角色</th> <th width="28%">描述</th> <th width="15%">时间</th>  </tr> </thead> <tbody> ';
$each(myDataList,function(m,mi){
$out+=' <tr class="curp" id="';
$out+=$escape(m.id);
$out+='" i="';
$out+=$escape(mi);
$out+='" data-type="';
$out+=$escape(m.taskType);
$out+='" data-project-id="';
$out+=$escape(m.projectId);
$out+='" data-target-id="';
$out+=$escape(m.targetId);
$out+='"> <td class="v-middle"> ';
$out+=$escape(mi+1+pageIndex*10);
$out+=' </td> <td class="v-middle">';
$out+=$escape(m.taskName);
$out+='</td> <td class="v-middle"><span data-type="projectName">';
$out+=$escape(m.projectName);
$out+='</span></td> <td class="v-middle">';
$out+=$escape(m.role);
$out+='</td> <td class="v-middle"> <!--';
$out+=$escape(m.planStartTime);
$out+='-';
$out+=$escape(m.planEndTime);
$out+=' ';
if(m.planStartTime!=null && m.planStartTime!='' && m.planEndTime!=null && m.planEndTime!=''){
$out+=' | 共';
$out+=$escape(_timeDifference(m.planStartTime,m.planEndTime));
$out+='天 ';
}
$out+='--> ';
$out+=$string(m.description);
$out+=' </td> <td class="v-middle"> ';
$out+=$escape(_momentFormat(m.createDate,'YYYY/MM/DD'));
$out+=' </td> </tr> ';
});
$out+=' ';
if(myDataList==null || myDataList.length==0){
$out+=' <tr class="no-data"> <td colspan="6" align="center"> <div class="text-center"> <img src="';
$out+=$escape(_url('/assets/img/default/without_data.png'));
$out+='"> </div> <span style="color:#4765a0">您还没有相关任务</span> </td> </tr> ';
}
$out+=' </tbody> </table> ';
return new String($out);
});/*v:1*/
template('m_myTask/m_myTask_production',function($data,$filename
/**/) {
'use strict';var $utils=this,$helpers=$utils.$helpers,$escape=$utils.$escape,projectName=$data.projectName,enterType=$data.enterType,$out='';$out+='<div class="ibox"> <div class="ibox-title secondary-menu-outbox"> <div class="row"> <div class="col-md-6">  <div class="no-margin p-h-sm breadcrumb-box" > <ol class="breadcrumb"> <li> 我的任务 </li> <li class=" fa fa-angle-right"> ';
$out+=$escape(projectName);
$out+=' </li> <li class="active fa fa-angle-right"> <strong> ';
if(enterType == 'approved'){
$out+=' 审批 ';
}else if(enterType == 'designer'){
$out+=' 设、校、审 ';
}else{
$out+=' 生产安排 ';
}
$out+=' </strong> </li> </ol> </div> </div> <div class="col-md-6 text-right p-sm"> </div> <div class="clearfix"></div> </div> </div> <div class="ibox-content no-padding"> <div id="productionList" class="list-box"></div> </div> </div> ';
return new String($out);
});/*v:1*/
template('m_myTask/m_myTask_taskIssue',function($data,$filename
/**/) {
'use strict';var $utils=this,$helpers=$utils.$helpers,$escape=$utils.$escape,projectName=$data.projectName,$out='';$out+='<div class="ibox"> <div class="ibox-title secondary-menu-outbox"> <div class="row"> <div class="col-md-6">  <div class="no-margin p-h-sm breadcrumb-box" > <ol class="breadcrumb"> <li> 我的任务 </li> <li class=" fa fa-angle-right"> ';
$out+=$escape(projectName);
$out+=' </li> <li class="active fa fa-angle-right"> <strong>任务签发</strong> </li> </ol> </div> </div> <div class="col-md-6 text-right p-sm"> </div> <div class="clearfix"></div> </div> </div> <div class="ibox-content no-padding"> <div id="taskIssueList" class="list-box"></div> </div> </div> ';
return new String($out);
});/*v:1*/
template('m_notice/m_establishUediter','<div id="myEditor2" style="width:100%;resize:none;overflow-y:auto;height: 300px;"></div>');/*v:1*/
template('m_notice/m_notice','<div class="ibox m_notice"> <div class="ibox-title secondary-menu-outbox"> <div class="row"> <div class="col-md-12" id="secondary-menu"> <div class="pull-left m-r-xl"> <h3 class="dp-inline-block" >通知公告</h3> </div> <a type="button" class="btn btn-primary btn-submit btn-u-sm m-t-sm pull-right roleControl" roleCode="admin_notice" flag="2" data-action="sendNotice"> 发送公告 </a> <a type="button" class="btn btn-w-m btn-link btn-u-sm m-t-sm pull-right " data-action="refreshNotice"> <i class="fa fa-refresh"></i> 刷新数据 </a> </div> </div> </div> <div class="ibox-content no-padding"> <div class="row"> <div class="col-md-12" id="content-box"> <div class="noticeList m-l m-r" style="min-height: 690px"> </div> <div class="row margin-bottom-30"> <div class="col-md-12 text-center m-t-sm"> <div class="m-page" style="display: none;"></div> <a class="btnPageNext btn btn-default btn-xs" href="javascript:void(0)" style="display: none;">加载更多</a> </div> </div> </div> </div> </div> </div>');/*v:1*/
template('m_notice/m_notice_empty',function($data,$filename
/**/) {
'use strict';var $utils=this,$helpers=$utils.$helpers,$escape=$utils.$escape,_url=$helpers._url,$out='';$out+='<div class="margin-bottom-30 text-center" style="margin-top: 150px"> <div class="text-center"> <img src="';
$out+=$escape(_url('/assets/img/default/without_message.png'));
$out+='"> </div> <span style="color:#4765a0;">暂无公告</span> </div>';
return new String($out);
});/*v:1*/
template('m_notice/m_notice_group',function($data,$filename
/**/) {
'use strict';var $utils=this,$helpers=$utils.$helpers,$escape=$utils.$escape,_dateSpecShortFormat=$helpers._dateSpecShortFormat,noticePublishdate=$data.noticePublishdate,$out='';$out+='<div class="feed-activity-list m-message-group" data-createDate="';
$out+=$escape(_dateSpecShortFormat(noticePublishdate));
$out+='"> </div> ';
return new String($out);
});/*v:1*/
template('m_notice/m_notice_publish',function($data,$filename
/**/) {
'use strict';var $utils=this,$helpers=$utils.$helpers,$escape=$utils.$escape,noticeTitle=$data.noticeTitle,$out='';$out+='<div class="ibox publicNoticeListOBox"> <div class="ibox-title secondary-menu-outbox"> <div class="row"> <div class="col-md-6">  <div class="no-margin p-sm breadcrumb-box" > <ol class="breadcrumb m-l-md"> <li> 通知公告 </li> <li class="active fa fa-angle-right"> <strong>新增公告</strong> </li> </ol> </div> </div> </div> </div> <div class="ibox-content no-padding"> <div class="row"> <div class="col-md-12" id="content-box"> <div class="animated fadeInRight"> <div class="mail-box no-border"> <div class="mail-body no-border"> <form class="form-horizontal publishPublicNoticeOBox m-t-lg" method="get"> <div class="form-group"> <label class="col-md-1 control-label">标题:</label> <div class="col-md-8"> <input class="form-control" name="noticeTitle" maxlength="300" value="';
$out+=$escape(noticeTitle);
$out+='" type="text"> </div> </div> <div class="form-group"> <label class="col-md-1 control-label">发布范围:</label> <div class="col-md-8"> <input class="form-control curp fc-999" name="choseDepartment" readOnly value="点击设置" data-action="choseDepartment" type="text"> </div> </div> <div class="form-group"> <label class="col-md-1 control-label">发送内容:</label> <div class="col-md-8">     <div class="summernote"></div> </div> </div> <div class="form-group"> <label class="col-md-1 control-label m-t-sm">附件:</label> <div class="col-md-8"> <div class="row"> <div class="col-md-12 m-t-xs m-b-sm"> <span id="showFileLoading"> </span> </div> <div class="col-md-12 m-b-sm"> <span class="uploadmgrContainer"> </span> </div> </div> </div> </div> </form> </div> <div class="mail-body col-md-8 col-md-offset-1 text-right tooltip-demo"> <a class="btn btn-sm btn-primary" data-action="savePublish" >发布</a> <a class="btn btn-white btn-sm" data-action="announcement">返回</a> </div> <div class="clearfix"></div> </div> </div> </div> </div> </div> </div> ';
return new String($out);
});/*v:1*/
template('m_notice/m_notice_single',function($data,$filename
/**/) {
'use strict';var $utils=this,$helpers=$utils.$helpers,$escape=$utils.$escape,messageType=$data.messageType,companyId=$data.companyId,projectId=$data.projectId,targetId=$data.targetId,expNo=$data.expNo,id=$data.id,companyName=$data.companyName,noticeType=$data.noticeType,_url=$helpers._url,noticeTitle=$data.noticeTitle,noticePublisherName=$data.noticePublisherName,_momentFormat=$helpers._momentFormat,noticePublishdate=$data.noticePublishdate,$string=$utils.$string,noticeContent=$data.noticeContent,$out='';$out+='<div class="row curp"> <div class="col-24-md-24 col-xl-12 notice-list-content m-t"> <div class="feed-element" data-messageType="';
$out+=$escape(messageType);
$out+='" data-companyId="';
$out+=$escape(companyId);
$out+='" data-projectId="';
$out+=$escape(projectId);
$out+='" data-targetId="';
$out+=$escape(targetId);
$out+='" data-expNo="';
$out+=$escape(expNo);
$out+='" > <div class="media-body " data-action="toNoticeDetail" data-notice-id="';
$out+=$escape(id);
$out+='" data-company-name="';
$out+=$escape(companyName);
$out+='" > <div class="col-24-md-2 text-center"> <span class="notice-icon-bg ';
$out+=$escape(noticeType==1?'':'project-type');
$out+='"> ';
if(noticeType==1){
$out+=' <img alt="image" class="img-circle pull-left m-xs" src="';
$out+=$escape(_url('/assets/img/common/massNotice.png'));
$out+='"> ';
}else{
$out+=' <img alt="image" class="img-circle pull-left m-xs" src="';
$out+=$escape(_url('/assets/img/common/projectNotice.png'));
$out+='"> ';
}
$out+=' </span> </div> <div class="col-24-md-22 "> <h3 class="noticeTitle fc-333" data-string="';
$out+=$escape(noticeTitle);
$out+='" >';
$out+=$escape(noticeTitle);
$out+='</h3> <p class="fc-999">发送人： <span title="';
$out+=$escape(companyName);
$out+='">';
$out+=$escape(noticePublisherName);
$out+='</span> <span class="pull-right">';
$out+=$escape(_momentFormat(noticePublishdate,'YYYY/MM/DD'));
$out+='</span> </p> <div class="fc-666 notice-content-box"> ';
$out+=$string(noticeContent);
$out+=' </div> </div> </div> </div> </div> </div>';
return new String($out);
});/*v:1*/
template('m_notice/m_onlyGetTeamByTree','<form class="sky-form onlyGetTeamByTreeOBox rounded-4x margin-top-20"> <fieldset> <div class="col-md-12" style="height: 400px;overflow: auto;"> <div id="organization_treeH"> <ul class="sidebar-nav list-group sidebar-nav-v1"> </ul> </div> </div> </fieldset> </form>');/*v:1*/
template('m_notice/m_showNoticeDetail',function($data,$filename
/**/) {
'use strict';var $utils=this,$helpers=$utils.$helpers,$escape=$utils.$escape,notice=$data.notice,$each=$utils.$each,p=$data.p,$index=$data.$index,_fastdfsUrl=$helpers._fastdfsUrl,$out='';$out+='<div class="ibox publicNoticeListOBox"> <div class="ibox-title secondary-menu-outbox"> <div class="row"> <div class="col-md-6">  <div class="no-margin p-sm breadcrumb-box" > <ol class="breadcrumb m-l-md"> <li> 通知公告 </li> <li class="active fa fa-angle-right"> <strong>查看公告</strong> </li> </ol> </div> </div> <div class="col-md-6"> <a type="button" class="btn btn-primary btn-submit btn-u-sm m-sm pull-right roleControl" roleCode="admin_notice" flag="2" data-action="sendNotice">发送公告</a> </div> </div> </div> <div class="ibox-content no-padding"> <div class="row"> <div class="col-md-12 " id="content-box"> <div class="mail-box no-border m-r-xl m-l-xl m-t" style="min-height: 500px;"> <div class="p-m"> <p><h3 class="noticeTitle fc-333" data-string="';
$out+=$escape(notice.noticeTitle);
$out+='" >';
$out+=$escape(notice.noticeTitle);
$out+='</h3></p> <p class="fc-999"> <span class="pull-left">发送人：<span title="';
$out+=$escape(notice.companyName);
$out+='">';
$out+=$escape(notice.noticePublisherName);
$out+='</span></span> <span class="pull-right">发送日期：';
$out+=$escape(notice.noticePublishdate);
$out+='</span> </p> </div> <div> </div> <div class="mail-body border-no-t fc-666 "> </div> <div class="border-bottom"></div> <div class="m-t-md p-w-m"> ';
if(notice.attachList!=null && notice.attachList.length>0){
$out+=' <span class="fc-999">';
$out+=$escape(notice.attachList.length);
$out+='个附件：</span> ';
$each(notice.attachList,function(p,$index){
$out+=' <span class="bg-muted b-r-sm p-xxs m-xs"> <a class="fc-dark-blue m-r-sm " href="';
$out+=$escape(_fastdfsUrl(p.fileGroup+'/'+p.filePath));
$out+='" target="_blank">';
$out+=$escape(p.fileName);
$out+='</a> <a class="" data-action="fileDownload" data-id="';
$out+=$escape(p.id);
$out+='"><i class="fa fa-cloud-download"></i></a> </span> ';
});
$out+=' ';
}
$out+=' </div> <div class="clearfix"></div> </div> </div> </div> </div> </div> ';
return new String($out);
});/*v:1*/
template('m_org/m_addressBook',function($data,$filename
/**/) {
'use strict';var $utils=this,$helpers=$utils.$helpers,$escape=$utils.$escape,rootPath=$data.rootPath,$out='';$out+='<div class="ibox m-b-none m_addressBook"> <div class="ibox-title secondary-menu-outbox"> <div class="row"> <div class="col-md-6">  <div class="no-margin p-h-sm breadcrumb-box" > <ol class="breadcrumb"> <li> 通讯录 </li> <li class="active fa fa-angle-right"> <strong>通讯录</strong> </li> </ol> </div> </div> <div class="col-md-6 text-right p-xs treeSwitch"> <a href="javascript:void(0)" data-action="treeSwitch"> <img src="';
$out+=$escape(rootPath);
$out+='/assets/img/whole_org_framework.png" style="height: 23px;" data-toggle="tooltip" data-placement="top" title="查看完整组织架构" /> </a> </div> <div class="clearfix"></div> </div> </div> <div class="ibox-content no-padding no-border"> <div class="row"> <div class="col-24-sm-8 col-24-md-8 col-24-lg-6 " id="org-tree-box" style="height:500px;overflow: auto;border-right:solid 1px #d9d9d9;"> <div class="clearfix margin-bottom-10"></div> <div id="organization_treeH"> <ul class="sidebar-nav list-group sidebar-nav-v1"> </ul> </div> </div>  <div class="col-24-sm-16 col-24-md-16 col-24-lg-18 no-padding" id="orgUserListBox"> </div> </div> </div> </div> ';
return new String($out);
});/*v:1*/
template('m_org/m_bulkImport',function($data,$filename
/**/) {
'use strict';var $utils=this,$helpers=$utils.$helpers,$escape=$utils.$escape,companyName=$data.companyName,$out='';$out+='<div class="ibox white-bg m_bulkImport"> <div class="ibox-content"> <div class="row"> <div class="col-md-12 m-md"> <div class="call-action-v1 call-action-v1-boxed margin-bottom-40"> <div class="call-action-v1-box"> <div class="call-action-v1-in"> <h3 class="color-darker"><strong>组织名称：';
$out+=$escape(companyName);
$out+='</strong></h3> <h4 >通过批量导入的方式快速建立您的组织架构。</h4> <p>您需要先准备好指定格式的Excel文档. <a href="javascript:void(0);" data-action="downLoadTemplate">下载模版文件</a> </p> </div> <div class="call-action-v1-in inner-btn page-scroll"> <div id="filePicker" class="btn-u btn-primary no-padding rounded"> </div> <a class="btn-u btn-u-default rounded" href="javascript:void(0);" data-action="backToLast">返回</a> </div> <div class="progress progress-u progress-xs m-t-md m-r-md hide"> <div class="progress-bar progress-bar-u w-0" role="progressbar" name="div_progress" aria-valuenow="0" aria-valuemin="0" aria-valuemax="100"> </div> </div> </div> </div> </div> </div> <div class="row"> <div class="col-md-12" id="errorListBox"> </div> </div> </div> </div>';
return new String($out);
});/*v:1*/
template('m_org/m_bulkImportListTips',function($data,$filename
/**/) {
'use strict';var $utils=this,$helpers=$utils.$helpers,$each=$utils.$each,userErrorList=$data.userErrorList,u=$data.u,$index=$data.$index,$escape=$utils.$escape,$out='';$out+='<div class="call-action-v1 call-action-v1-boxed tag-box-v3 table"> <div class="alert alert-danger fade in margin-top-20"> <div class="call-action-v1 call-action-v1-boxed tag-box-v3 table"> <table class="table table-responsive"> <thead> <tr> <td>部门</td> <td>姓名</td> <td>手机号码</td> <td>邮箱</td> <td>入职时间</td> <td>联系电话</td> <td>提示</td> </tr> </thead> <tbody> ';
$each(userErrorList,function(u,$index){
$out+=' <tr> <td>';
$out+=$escape(u.departName);
$out+='</td> <td>';
$out+=$escape(u.userName);
$out+='</td> <td>';
$out+=$escape(u.cellphone);
$out+='</td> <td>';
$out+=$escape(u.email);
$out+='</td> <td>';
$out+=$escape(u.entryTime);
$out+='</td> <td>';
$out+=$escape(u.phone);
$out+='</td> <td>';
$out+=$escape(u.remark);
$out+='</td> </tr> ';
});
$out+=' <tr> <td colspan="7"> <b> 以上成员信息存在错误或者已经存在,请重新修改并上传。</b> </td> </tr> </tbody> </table> </div> </div> <div class="row dp-none"> <div class="col-md-12"> <h3 class="text-center"><i class="fa fa-check text-success"></i> 批量导入成功 </h3> </div> </div> </div>';
return new String($out);
});/*v:1*/
template('m_org/m_createOrg',function($data,$filename
/**/) {
'use strict';var $utils=this,$helpers=$utils.$helpers,$each=$utils.$each,serverTypeList=$data.serverTypeList,$value=$data.$value,$index=$data.$index,$escape=$utils.$escape,$out='';$out+='<style> .ui-popup.ui-popup-modal{z-index: 9999999!important;} #createOrgBox{ width: 620px; margin:0 auto; } </style> <div class="container-fluid"> <div class="row margin-top-30 animated fadeInRight "> <div id="createOrgBox"> <div class="ibox">  <div class="ibox-content"> <form class="createOrgBox"> <fieldset> <section> <div class="headline"> <h2>创建组织</h2> </div> </section> <section> <div class="row"> <div class="form-group col-md-12"> <label for="companyName">组织名称<span class="color-red">*</span></label> <input type="text" id="companyName" class="form-control" name="companyName"> </div>  <div class="form-group col-md-12" id="citysBox"> <label for="selectRegion">所在地区</label> <div class="input-group" id="selectRegion" name="selectRegion"> <div class="dp-inline-block"> <select class="prov form-control" name="province"></select> </div> <div class="dp-inline-block m-l-xs"> <select class="city form-control" name="city" disabled="disabled" style="display: none"></select> </div> <div class="dp-inline-block m-l-xs"> <select class="dist form-control" name="county" disabled="disabled" style="display: none"></select> </div> </div> </div> <div class="form-group col-md-12 serviceTypeEdit"> <label>服务类型</label> <div class="input-group dp-block"> ';
$each(serverTypeList,function($value,$index){
$out+=' <div class="serviceType col-24-md-8 col-24-lg-4 col-24-xs-24 no-pd-left"> <div class="i-checks checkbox-inline"> <input name="serverType" id="serverType-';
$out+=$escape($value.id);
$out+='" value="';
$out+=$escape($value.id);
$out+='" type="checkbox"> <span for="serverType-';
$out+=$escape($value.id);
$out+='">';
$out+=$escape($value.name);
$out+='</span> </div> </div> ';
});
$out+=' </div> </div> </div> </section> </fieldset> <div class="footTools"> <a type="button" class="btn-u pull-right getClickFun rounded" data-action="saveOrg" href="javascript:void(0)">立即创建</a> </div> </form> </div> <script type="text/javascript"> $(\'.i-checks\').iCheck({ checkboxClass: \'icheckbox_minimal-green\', radioClass: \'iradio_minimal-green\' }); </script> </div> </div> </div> </div> ';
return new String($out);
});/*v:1*/
template('m_org/m_editAlias',function($data,$filename
/**/) {
'use strict';var $utils=this,$helpers=$utils.$helpers,$escape=$utils.$escape,companyOriginalName=$data.companyOriginalName,companyAlias=$data.companyAlias,relationTypeId=$data.relationTypeId,$out='';$out+='<div class="of-hidden" style="padding:15px;"> <form class="editAliasForm" style="font-size: 12px;"> <!--<div class="form-group"> <label class="col-24-sm-5 control-label" for="companyOriginalName">原名：</label> <label name="companyOriginalName" id="companyOriginalName" class="col-sm-9 form-control no-pd-left f-s-14 fw-400 border-none" style="width:270px;">';
$out+=$escape(companyOriginalName);
$out+='</label> </div>--> <div class="row form-group"> <label class="col-md-3 text-right m-t-xs">组织名称： <span class="color-red">*</span></label> <div class="col-md-9"> <input type="text" class="form-control input-sm" name="companyName" value="';
$out+=$escape(companyOriginalName);
$out+='"> </div> </div> <!--<div class="row form-group"> <label class="col-md-3 text-right m-t-xs" for="companyAlias">别名：</label> <div class="col-md-9"> <input name="companyAlias" id="companyAlias" class="form-control input-sm" value="';
$out+=$escape(companyAlias);
$out+='" /> </div> </div>--> <div class="row"> <label class="col-md-3 text-right m-t-xs">类型标示： <span class="color-red">*</span></label> <div class="col-md-9 m-t-xs"> <div class="radio radio-inline m-t-none "> ';
if(relationTypeId==null || relationTypeId==1){
$out+=' <input id="t1" class="curp" value="1" name="roleType" type="radio" checked> ';
}else{
$out+=' <input id="t1" class="curp" value="1" name="roleType" type="radio"> ';
}
$out+=' <label class="r-blue-bg" for="t1"></label> </div> <div class="radio radio-inline curp"> ';
if(relationTypeId!=null && relationTypeId==2){
$out+=' <input id="t2" class="curp" value="2" name="roleType" type="radio" checked> ';
}else{
$out+=' <input id="t2" class="curp" value="2" name="roleType" type="radio"> ';
}
$out+=' <label class="r-green-bg" for="t2"></label> </div> <div class="radio radio-inline curp"> ';
if(relationTypeId!=null && relationTypeId==3){
$out+=' <input id="t3" class="curp" value="3" name="roleType" type="radio" checked> ';
}else{
$out+=' <input id="t3" class="curp" value="3" name="roleType" type="radio"> ';
}
$out+=' <label class="r-red-bg" for="t3"></label> </div> <span><a class="btn-link" data-action="roleRightsPreView">权限预览</a></span> </div> </div> </form> </div>';
return new String($out);
});/*v:1*/
template('m_org/m_editDepart',function($data,$filename
/**/) {
'use strict';var $utils=this,$helpers=$utils.$helpers,$escape=$utils.$escape,parentDepart=$data.parentDepart,departObj=$data.departObj,doType=$data.doType,isDailog=$data.isDailog,$out='';$out+='<form class="editDepartOBox sky-form rounded-4x noborder"> <div class="panel-body"> <div class="form-group"> <div class="col-lg-12 m-b-sm"> <span class="f-s-14 fw-600">上级部门：<i class="m-r-md"></i>';
$out+=$escape(parentDepart.departName);
$out+='</span> </div> </div> <div class="form-group"> <label class="col-lg-2 control-label">部门名称<span class="color-red">*</span></label> <div class="col-lg-10 no-pd-left"> <input type="text" class="form-control" name="departName" value="';
$out+=$escape(departObj.departName);
$out+='"/> </div> </div> </div> <div class="panel-footer white-bg"> ';
if(doType=='edit'){
$out+=' <div class="pull-left"> <button class="btn-u btn-u-red rounded" type="button" data-action="delDepart">删除部门</button> </div> ';
}
$out+=' <div class="pull-right"> ';
if(isDailog){
$out+=' <button type="button" class="btn-u btn-u-default rounded" onclick="S_dialog.close($(this))">取消</button> ';
}
$out+=' <button type="button" class="btn-u rounded" data-action="saveDepart">保存</button> </div> <div class="clearfix"></div> </div> </form>';
return new String($out);
});/*v:1*/
template('m_org/m_editPartner',function($data,$filename
/**/) {
'use strict';var $utils=this,$helpers=$utils.$helpers,$escape=$utils.$escape,companyObj=$data.companyObj,$each=$utils.$each,serverTypeList=$data.serverTypeList,st=$data.st,i=$data.i,$out='';$out+='<form class="sky-form rounded-bottom branchCompanyOBox"> <div class="panel-body"> <fieldset>  <div class="row"> <label class="col-md-3 text-right">类型标示： <span class="color-red">*</span></label> <div class="col-md-9"> <div class="radio radio-inline m-t-none "> <input id="t1" class="curp" value="1" name="roleType" type="radio" checked> <label class="r-blue-bg" for="t1"></label>  </div> <div class="radio radio-inline curp"> <input id="t2" class="curp" value="2" name="roleType" type="radio" > <label class="r-green-bg" for="t2"></label>  </div> <div class="radio radio-inline curp"> <input id="t3" class="curp" value="3" name="roleType" type="radio" > <label class="r-red-bg" for="t3"></label>  </div> <span><a class="btn-link" data-action="roleRightsPreView">权限预览</a></span> </div> </div> <div class="row form-group m-t-xs"> <label class="col-md-3 text-right">组织名称： <span class="color-red">*</span></label> <div class="col-md-9"> <input type="text" class="form-control" name="companyName" value="';
$out+=$escape(companyObj.companyName);
$out+='"> </div> </div> <!--<div class="row"> <div class="col-md-6 form-group" id="citysBox"> <label>所在地区<span class="color-red">*</span></label> <div> <label class="select dp-inline-block no-padding" style="width: 32.5%;"> <select class="prov form-control" name="province"></select> <i></i> </label> <label class="select dp-inline-block no-padding" style="width: 32.5%;"> <select class="city form-control" name="city" disabled="disabled" style="display: none;"></select> <i style="display: none;"></i> </label> <label class="select dp-inline-block no-padding" style="width: 32%;"> <select class="dist form-control" name="county" disabled="disabled" style="display: none;"></select> <i style="display: none;"></i> </label> </div> </div> </div> <div class="row serviceTypeEdit"> <div class="col-md-12 "> <label>服务类型<span class="color-red">*</span></label> <div class="row out-box"> <div class="col-md-12"> ';
$each(serverTypeList,function(st,i){
$out+=' <div class="serviceType checkbox checkbox-inline"> <input type="checkbox" id="serviceType';
$out+=$escape(i);
$out+='" name="serverType" value="';
$out+=$escape(st.id);
$out+='"> <label for="serviceType';
$out+=$escape(i);
$out+='"> ';
$out+=$escape(st.name);
$out+='</label> </div> ';
});
$out+=' </div> </div> </div> <span name="severType" style="padding-left: 15px;"></span> </div>--> ';
if(companyObj.editType==1){
$out+=' <div class="row form-group"> <label class="col-md-3 text-right">负责人手机号： <span class="color-red">*</span></label> <div class="col-md-9"> <input type="text" class="form-control" name="cellphone" maxlength="11"> </div> </div> <div class="row form-group"> <label class="col-md-3 text-right">负责人姓名： <span class="color-red">*</span></label> <div class="col-md-9"> <input type="text" class="form-control" name="userName"> </div> </div>  ';
}
$out+=' </fieldset> </div> </form> ';
return new String($out);
});/*v:1*/
template('m_org/m_editSubCompany',function($data,$filename
/**/) {
'use strict';var $utils=this,$helpers=$utils.$helpers,$escape=$utils.$escape,companyObj=$data.companyObj,$each=$utils.$each,serverTypeList=$data.serverTypeList,st=$data.st,i=$data.i,$out='';$out+='<form class="sky-form rounded-bottom branchCompanyOBox"> <div class="panel-body"> <fieldset>  <div class="row"> <label class="col-md-3 text-right">类型标示： <span class="color-red">*</span></label> <div class="col-md-9"> <div class="radio radio-inline m-t-none"> <input id="t1" class="curp" value="1" name="roleType" type="radio" checked> <label class="r-blue-bg" for="t1"></label>  </div> <div class="radio radio-inline curp"> <input id="t2" class="curp" value="2" name="roleType" type="radio" > <label class="r-green-bg" for="t2"></label>  </div> <div class="radio radio-inline curp"> <input id="t3" class="curp" value="3" name="roleType" type="radio" > <label class="r-red-bg" for="t3"></label>  </div> <span><a class="btn-link" data-action="roleRightsPreView">权限预览</a></span> </div> </div> <div class="row form-group m-t-xs"> <label class="col-md-3 text-right">组织名称： <span class="color-red">*</span></label> <div class="col-md-9"> <input type="text" class="form-control" name="companyName" value="';
$out+=$escape(companyObj.companyName);
$out+='"> </div> </div> <!--<div class="row"> <div class="col-md-6 form-group" id="citysBox"> <label>所在地区<span class="color-red">*</span></label> <div> <label class="select dp-inline-block no-padding" style="width: 32.5%;"> <select class="prov form-control" name="province"></select> <i></i> </label> <label class="select dp-inline-block no-padding" style="width: 32.5%;"> <select class="city form-control" name="city" disabled="disabled" style="display: none;"></select> <i style="display: none;"></i> </label> <label class="select dp-inline-block no-padding" style="width: 32%;"> <select class="dist form-control" name="county" disabled="disabled" style="display: none;"></select> <i style="display: none;"></i> </label> </div> </div> </div> <div class="row serviceTypeEdit"> <div class="col-md-12 "> <label>服务类型<span class="color-red">*</span></label> <div class="row out-box"> <div class="col-md-12"> ';
$each(serverTypeList,function(st,i){
$out+=' <div class="serviceType checkbox checkbox-inline"> <input type="checkbox" id="serviceType';
$out+=$escape(i);
$out+='" name="serverType" value="';
$out+=$escape(st.id);
$out+='"> <label for="serviceType';
$out+=$escape(i);
$out+='"> ';
$out+=$escape(st.name);
$out+='</label> </div> ';
});
$out+=' </div> </div> </div> <span name="severType" style="padding-left: 15px;"></span> </div>--> ';
if(companyObj.editType==1){
$out+=' <div class="row form-group"> <label class="col-md-3 text-right">负责人手机号： <span class="color-red">*</span></label> <div class="col-md-9"> <input type="text" class="form-control" name="cellphone" maxlength="11"> </div> </div> <div class="row form-group"> <label class="col-md-3 text-right">负责人姓名： <span class="color-red">*</span></label> <div class="col-md-9"> <input type="text" class="form-control" name="userName"> </div> </div> ';
}
$out+=' </fieldset> </div> </form> ';
return new String($out);
});/*v:1*/
template('m_org/m_editUser',function($data,$filename
/**/) {
'use strict';var $utils=this,$helpers=$utils.$helpers,$escape=$utils.$escape,memberObj=$data.memberObj,$each=$utils.$each,org=$data.org,$index=$data.$index,orgList=$data.orgList,d=$data.d,$out='';$out+='<form class="sky-form editUserOBox rounded-bottom"> <div class="ibox" style="max-height: 700px;overflow: auto;"> <div class="ibox-content border-none"> <h4>基本信息</h4> <fieldset> <section> <div class="row"> <div class="col-24-md-11 form-group"> <label>姓名<span class="color-red">*</span></label> <input type="text" class="form-control" id="userName" name="userName" value="';
$out+=$escape(memberObj.userName);
$out+='"> </div> <div class="col-24-md-11 form-group "> <label>手机号码<span class="color-red">*</span></label> ';
if(memberObj.cellphone!='' && memberObj.cellphone!=null){
$out+=' <input type="text" class="form-control" id="cellphone" disabled="disabled" style="cursor: not-allowed;" name="cellphone" value="';
$out+=$escape(memberObj.cellphone);
$out+='" maxlength="11"> ';
}
$out+=' ';
if(memberObj.cellphone=='' || memberObj.cellphone==null){
$out+=' <input type="text" class="form-control" id="cellphone" name="cellphone" value="';
$out+=$escape(memberObj.cellphone);
$out+='" maxlength="11"> ';
}
$out+=' </div> </div> <div class="row"> <div class="col-24-md-11 form-group"> <label>入职时间</label> <div class="input-group"> <input type="text" class="form-control" id="entryTime" name="entryTime" onfocus="WdatePicker();" readonly value="';
$out+=$escape(memberObj.entryTime);
$out+='"> <span class="input-group-addon"><i class="icon-append fa fa-calendar"></i></span> </div> </div> <div class="col-24-md-11 form-group "> <label>办公电话</label> <input type="text" class="form-control" id="phone" name="phone" value="';
$out+=$escape(memberObj.phone);
$out+='"> </div> </div> <div class="row"> <div class="col-24-md-11 form-group"> <label>邮箱</label> <input type="text" class="form-control" id="email" name="email" value="';
$out+=$escape(memberObj.email);
$out+='"> </div> </div> </section> </fieldset>   <fieldset> <section> <table class="table table-responsive" > <thead> ';
if(memberObj.departList && memberObj.departList.length>0){
$out+=' <tr> <th width="45%" style="padding-left:0;">所属部门</th> <th width="47%" style="padding-left:20px;">职位</th> <th width="8%"></th> </tr> ';
}
$out+=' </thead> ';
$each(memberObj.departList,function(org,$index){
$out+=' <tbody class="departListTbody"> <tr class="departList"> <td class="no-pd-left"> <select class="form-control" name="departIdSel" data-depart-id="';
$out+=$escape(org.id);
$out+='"> <option value="">请选择</option> ';
$each(orgList,function(d,$index){
$out+=' ';
if(org.departId==d.id){
$out+=' <option value="';
$out+=$escape(d.id);
$out+='" selected> ';
$out+=$escape(d.departName);
$out+='</option> ';
}
$out+=' ';
if(org.departId!=d.id){
$out+=' <option value="';
$out+=$escape(d.id);
$out+='"> ';
$out+=$escape(d.departName);
$out+='</option> ';
}
$out+=' ';
});
$out+=' </select> </td> <td class="p-l-md"> <input type="text" class="form-control" name="serverStation" placeholder="职位" value="';
$out+=$escape(org.serverStation);
$out+='"/> </td> <td class="delDepartServerStationTd"> <a class="btn btn-danger rounded" data-action="delDepartServerStation"> <i class="fa fa-close"></i> </a> </td> </tr> </tbody> ';
});
$out+=' <tbody class="addDepartListTbody"> <tr> <td colspan="5" class="text-center no-pd-right no-pd-left" style="border-top: none;"> <div class="call-action-v1 rounded call-action-v1-boxed tag-box-v4 curp"> <div class="call-action-v1-box margin-bottom-10 margin-top-10"> <div class="call-action-v1-in text-center"> <a href="javascript:void(0);" data-action="addDepartServerStation"> <i class="fa fa-plus fa-2x color-dark-blue"></i> </a> </div> </div> </div>    </td> </tr> </tbody> </table> </section> </fieldset>  </div> </div> </form>';
return new String($out);
});/*v:1*/
template('m_org/m_enterpriseCertification',function($data,$filename
/**/) {
'use strict';var $utils=this,$helpers=$utils.$helpers,authentication=$data.authentication,$escape=$utils.$escape,_url=$helpers._url,$out='';$out+='<div class="ibox m_enterpriseCertification"> <div class="ibox-content border-no-t"> ';
if(authentication && authentication.authenticationStatus==1){
$out+=' <div class="alert alert-warning alert-dismissable"> <button aria-hidden="true" data-dismiss="alert" class="close" type="button">×</button> <div class="pull-left tip-icon"><i class="fa fa-check-circle-o text-warning"></i></div> <div class="col-md-11"> <p>认证资料提交成功，请耐心等待3个工作日</p> <p>认证过程中，修改资料重新提交将会进行重新审核，如审核过程中有任何问题，请拨打免费客服热线 400-900-6299。</p> </div> <div class="clearfix"></div> </div> ';
}
$out+=' ';
if(authentication && authentication.authenticationStatus==3){
$out+=' <div class="alert alert-warning alert-dismissable"> <button aria-hidden="true" data-dismiss="alert" class="close" type="button">×</button> <div class="pull-left tip-icon"><i class="fa fa-times-circle-o text-danger"></i></div> <div class="col-md-11"> <p>认证失败，请重新提交认证资料</p> <p>失败原因：';
$out+=$escape(authentication.rejectReason);
$out+='</p> <p>如有问题，请联系审核人员或者拨打免费客服热线 400-900-6299。</p> </div> <div class="clearfix"></div> </div> ';
}
$out+=' <form class="form-horizontal"> <div id="vertical-timeline" class="vertical-container light-timeline no-margins"> <div class="vertical-timeline-block"> <div class="vertical-timeline-icon navy-bg p-xxs">1</div> <div class="vertical-timeline-content p-h-xs"> <h4>填写企业认证信息</h4> <div class="form-group"> <label class="col-sm-2 control-label">证件类型：</label> <div class="col-sm-10"> <div class="radio "> ';
if(authentication && authentication.businessLicenseType==1){
$out+=' <input id="t1" value="1" name="businessLicenseType" type="radio" checked> ';
}else{
$out+=' <input id="t1" value="1" name="businessLicenseType" type="radio"> ';
}
$out+=' <label for="t1"> 多证合一营业执照（原“注册号”字样，调整为18位的“统一社会信用代码”）</label> </div> <div class="radio "> ';
if(authentication && (authentication.businessLicenseType==0 || authentication.businessLicenseType==null)){
$out+=' <input id="t0" value="0" name="businessLicenseType" type="radio" checked> ';
}else{
$out+=' <input id="t0" value="0" name="businessLicenseType" type="radio"> ';
}
$out+=' <label for="t0"> 普通营业执照（仍然标识为15位的“注册号”）</label> </div> </div> </div> <div class="form-group"> <label class="col-sm-2 control-label">营业执照：</label> <div class="col-sm-10"> <div class="pull-left" style="width:120px;"> ';
if(authentication && authentication.businessLicensePhoto!=null){
$out+=' <img class="curp" src="';
$out+=$escape(authentication.businessLicensePhoto);
$out+='" id="businessLicensePhoto" data-action="preview" style="max-width: 100px;max-height: 100px;"/> ';
}else{
$out+=' ';
if(authentication && authentication.businessLicenseType==1){
$out+=' <img class="curp" src="';
$out+=$escape(_url('/assets/img/org/businessLicenseTemp2.jpg'));
$out+='" id="businessLicensePhoto" style="max-width: 100px;max-height: 100px;" data-action="preview"/> ';
}else{
$out+=' <img class="curp" src="';
$out+=$escape(_url('/assets/img/org/businessLicenseTemp1.jpg'));
$out+='" id="businessLicensePhoto" style="max-width: 100px;max-height: 100px;" data-action="preview"/> ';
}
$out+=' ';
}
$out+=' <a class="block" href="javascript:void(0);" data-action="viewBusinessLicensePhotoTemp">点击查看模板</a> </div> <div class="pull-left"> <p class="m-b-xs">上传：营业执照图片；</p> <p class="m-b-xs">照片所有信息需清晰可见，内容真实有效，不得做任何修改。</p> <p class="m-b-xs">照片支持.jpg、.jpeg、.bmp、.gif、.png格式，大小不超过8M。</p> <p><a class="btn btn-primary btn-sm file-upload pull-left" id="businessLicensePhotoUpload">选择文件</a></p> <p><label id="businessLicensePhoto-error" class="error" ></label></p> </div> </div> </div> <div class="form-group"> ';
if(authentication && authentication.businessLicenseType==1){
$out+=' <label class="col-sm-2 control-label number-label-0 hide">注册号：</label> <label class="col-sm-2 control-label number-label-1 ">统一社会信用代码：</label> ';
}else{
$out+=' <label class="col-sm-2 control-label number-label-0">注册号：</label> <label class="col-sm-2 control-label number-label-1 hide">统一社会信用代码：</label> ';
}
$out+=' <div class="col-sm-4"> ';
if(authentication && authentication.businessLicenseType==1){
$out+=' <input class="form-control" name="businessLicenseNumber" type="text" value="';
$out+=$escape(authentication.businessLicenseNumber);
$out+='" placeholder="请输入18位统一社会信用代码">  ';
}else{
$out+=' <input class="form-control" name="businessLicenseNumber" type="text" value="';
$out+=$escape(authentication.businessLicenseNumber);
$out+='" placeholder="请输入15位工商注册号"> ';
}
$out+=' </div> </div> <div class="form-group"> <label class="col-sm-2 control-label">企业名称：</label> <div class="col-sm-4"> <input class="form-control" name="orgName" type="text" value="';
$out+=$escape(authentication.orgName);
$out+='" placeholder="请填写营业执照上的名称">  </div> </div> <div class="form-group"> <label class="col-sm-2 control-label">法人：</label> <div class="col-sm-4"> <input class="form-control" name="legalRepresentative" type="text" value="';
$out+=$escape(authentication.legalRepresentative);
$out+='" placeholder="请输入法人姓名"> </div> </div> </div> </div> <div class="vertical-timeline-block"> <div class="vertical-timeline-icon navy-bg p-xxs">2</div> <div class="vertical-timeline-content p-h-xs"> <h4>法人身份证信息</h4> <div class="form-group"> <label class="col-sm-2 control-label"></label> <div class="col-sm-10"> <div class="pull-left" style="width:175px;"> <p>正面：</p> ';
if(authentication && authentication.legalRepresentativePhoto!=null){
$out+=' <img class="curp" src="';
$out+=$escape(authentication.legalRepresentativePhoto);
$out+='" id="legalRepresentativePhoto" data-action="preview" style="max-width: 155px;max-height: 155px;"/> ';
}else{
$out+=' <img class="curp" src="';
$out+=$escape(_url('/assets/img/org/IDCardTemp.jpg'));
$out+='" id="legalRepresentativePhoto" data-action="preview" style="max-width: 155px;max-height: 155px;"/> ';
}
$out+=' </div> <div class="pull-left m-t-25"> <p class="m-b-xs">上传：身份证照片；</p> <p class="m-b-xs">请本人手持身份证，照片所有信息需清晰可见，内容真实有效，不得做任何修改。</p> <p class="m-b-xs">正面头像清晰，背面国徽，签发机关清晰可见。</p> <p><a class="btn btn-primary btn-sm file-upload pull-left" id="legalRepresentativePhotoUpload">选择文件</a></p> <p><label id="legalRepresentativePhoto-error" class="error" ></label></p> </div> </div> </div> </div> </div> <div class="vertical-timeline-block"> <div class="vertical-timeline-icon navy-bg p-xxs">3</div> <div class="vertical-timeline-content p-h-xs"> <h4>经办人身份证信息</h4> <div class="form-group"> <label class="col-sm-2 control-label"></label> <div class="col-sm-10"> <div class="pull-left" style="width:175px;"> <p>正面：</p> ';
if(authentication && authentication.operatorPhoto){
$out+=' <img class="curp" src="';
$out+=$escape(authentication.operatorPhoto);
$out+='" id="operatorPhoto" data-action="preview" style="max-width: 155px;max-height: 155px;"/> ';
}else{
$out+=' <img class="curp" src="';
$out+=$escape(_url('/assets/img/org/IDCardTemp.jpg'));
$out+='" id="operatorPhoto" data-action="preview" style="max-width: 155px;max-height: 155px;"/> ';
}
$out+=' </div> <div class="pull-left m-t-25"> <p class="m-b-xs">上传：身份证照片；</p> <p class="m-b-xs">请本人手持身份，照片所有信息需清晰可见，内容真实有效，不得做任何修改。</p> <p class="m-b-xs">正面头像清晰，背面国徽，签发机关清晰可见。</p> <p><a class="btn btn-primary btn-sm file-upload pull-left" id="operatorPhotoUpload">选择文件</a></p> <p><label id="operatorPhoto-error" class="error" ></label></p> </div> </div> </div> <div class="form-group"> <label class="col-sm-2 control-label">经办人：</label> <div class="col-sm-4"> <input class="form-control" name="operatorName" type="text" value="';
$out+=$escape(authentication.operatorName);
$out+='"> </div> </div> </div> </div> <div class="vertical-timeline-block"> <div class="vertical-timeline-icon navy-bg p-xxs">4</div> <div class="vertical-timeline-content p-h-xs"> <h4>认证授权书</h4> <div class="form-group"> <label class="col-sm-2 control-label"></label> <div class="col-sm-10"> <div class="pull-left" style="width:175px;"> ';
if(authentication && authentication.sealPhoto){
$out+=' <img class="curp" src="';
$out+=$escape(authentication.sealPhoto);
$out+='" id="sealPhoto" data-action="preview" style="max-width: 155px;max-height: 155px;"/> ';
}else{
$out+=' <img class="curp" src="';
$out+=$escape(_url('/assets/img/org/powerOfAttorney.jpg'));
$out+='" id="sealPhoto" data-action="preview" style="max-width: 155px;max-height: 155px;"/> ';
}
$out+=' </div> <div class="pull-left"> <p class="m-b-xs">请下载《认证授权书》<a href="javascript:void(0)" data-action="sealPhotoDownLoad">点击下载</a></p> <p class="m-b-xs">按要求填写，并手写仅用于卯丁认证字样，并加盖企业公章。</p> <p class="m-b-xs">照片所有信息需清晰可见，内容真实有效。</p> <p class="m-b-xs">照片支持.jpg、.jpeg、.bmp、.gif、.png格式，大小不超过8M。</p> <p><a class="btn btn-primary btn-sm file-upload pull-left" id="sealPhotoUpload">选择文件</a></p> <p><label id="sealPhoto-error" class="error" ></label></p> </div> </div> </div> </div> </div> <div class="vertical-timeline-block"> <div class="vertical-timeline-icon navy-bg p-xxs">5</div> <div class="vertical-timeline-content p-h-xs"> <h4>提交审核信息</h4> <div class="form-group"> <label class="col-sm-2 control-label"></label> <div class="col-sm-10"> <div class="check-div"> <div class="i-checks " > <input type="checkbox" id="ck1" name="convention" /> <label for="ck1" class="fw-normal">已阅读并同意<a href="javascript:void(0)" data-action="maodingConvention">《卯丁公约》</a></label> </div> </div> <div class="check-div"> <div class="i-checks " > <input type="checkbox" id="ck2" name="specification" /> <label for="ck2" class="fw-normal">已阅读并同意<a href="javascript:void(0)" data-action="maodingCertificationSpecification">《卯丁认证规范》</a></label> </div> </div> </div> </div> <div class="form-group"> <label class="col-sm-2 control-label"></label> <div class="col-sm-10"> <a class="btn btn-primary pull-left" data-action="submitReview">提交审核</a> </div> </div> <div class="clearfix"></div> </div> </div> </div> </form> </div> </div> <script> $(\'.i-checks\').iCheck({ checkboxClass: \'icheckbox_minimal-green\', radioClass: \'iradio_minimal-green\' }); </script>';
return new String($out);
});/*v:1*/
template('m_org/m_enterpriseCertification_old',function($data,$filename
/**/) {
'use strict';var $utils=this,$helpers=$utils.$helpers,authentication=$data.authentication,$escape=$utils.$escape,_url=$helpers._url,$out='';$out+='<div class="ibox m_enterpriseCertification"> <div class="ibox-content border-no-t"> ';
if(authentication && authentication.authenticationStatus==1){
$out+=' <div class="alert alert-warning alert-dismissable"> <button aria-hidden="true" data-dismiss="alert" class="close" type="button">×</button> <div class="pull-left tip-icon"><i class="fa fa-check-circle-o text-warning"></i></div> <div class="col-md-11"> <p>认证资料提交成功，请耐心等待3个工作日</p> <p>认证过程中，修改资料重新提交将会进行重新审核，如审核过程中有任何问题，请拨代4000000。</p> </div> <div class="clearfix"></div> </div> ';
}
$out+=' ';
if(authentication && authentication.authenticationStatus==3){
$out+=' <div class="alert alert-warning alert-dismissable"> <button aria-hidden="true" data-dismiss="alert" class="close" type="button">×</button> <div class="pull-left tip-icon"><i class="fa fa-times-circle-o text-danger"></i></div> <div class="col-md-11"> <p>认证失败，请重新提交认证资料</p> <p>失败原因：1</p> <p>如有问题，请联系审核人员或者拨打客服电话400-400-400。</p> </div> <div class="clearfix"></div> </div> ';
}
$out+=' <form class="form-horizontal"> <h4>填写企业认证信息</h4> <div class="form-group"> <label class="col-sm-2 control-label">证件类型：</label> <div class="col-sm-10"> <div class="radio "> ';
if(authentication && authentication.businessLicenseType==1){
$out+=' <input id="t1" value="1" name="businessLicenseType" type="radio" checked> ';
}else{
$out+=' <input id="t1" value="1" name="businessLicenseType" type="radio"> ';
}
$out+=' <label for="t1"> 多证合一营业执照（原“注册号”字样，调整为18位的“统一社会信用代码”）</label> </div> <div class="radio "> ';
if(authentication && (authentication.businessLicenseType==0 || authentication.businessLicenseType==null)){
$out+=' <input id="t0" value="0" name="businessLicenseType" type="radio" checked> ';
}else{
$out+=' <input id="t0" value="0" name="businessLicenseType" type="radio"> ';
}
$out+=' <label for="t0"> 普通营业执照（仍然标识为15位的“注册号”）</label> </div> </div> </div> <div class="form-group"> <label class="col-sm-2 control-label">营业执照：</label> <div class="col-sm-10"> <div class="pull-left" style="width:120px;"> ';
if(authentication && authentication.businessLicensePhoto!=null){
$out+=' <img class="curp" src="';
$out+=$escape(authentication.businessLicensePhoto);
$out+='" id="businessLicensePhoto" data-action="preview" style="max-width: 100px;max-height: 100px;"/> ';
}else{
$out+=' ';
if(authentication && authentication.businessLicenseType==1){
$out+=' <img class="curp" src="';
$out+=$escape(_url('/assets/img/org/businessLicenseTemp2.jpg'));
$out+='" id="businessLicensePhoto" style="max-width: 100px;max-height: 100px;" data-action="preview"/> ';
}else{
$out+=' <img class="curp" src="';
$out+=$escape(_url('/assets/img/org/businessLicenseTemp1.jpg'));
$out+='" id="businessLicensePhoto" style="max-width: 100px;max-height: 100px;" data-action="preview"/> ';
}
$out+=' ';
}
$out+=' <a class="block" href="javascript:void(0);" data-action="viewBusinessLicensePhotoTemp">点击查看模板</a> </div> <div class="pull-left"> <p class="m-b-xs">上传：营业执照图片；</p> <p class="m-b-xs">照片所有信息需清晰可见，内容真实有效，不得做任何修改。</p> <p class="m-b-xs">照片支持.jpg、.jpeg、.bmp、.gif、.png格式，大小不超过8M。</p> <p><a class="btn btn-primary btn-sm file-upload" id="businessLicensePhotoUpload">选择文件</a></p> <p><label id="businessLicensePhoto-error" class="error" ></label></p> </div> </div> </div> <div class="form-group"> ';
if(authentication && authentication.businessLicenseType==1){
$out+=' <label class="col-sm-2 control-label number-label-0 hide">注册号：</label> <label class="col-sm-2 control-label number-label-1 ">统一社会信用代码：</label> ';
}else{
$out+=' <label class="col-sm-2 control-label number-label-0">注册号：</label> <label class="col-sm-2 control-label number-label-1 hide">统一社会信用代码：</label> ';
}
$out+=' <div class="col-sm-3"> <input class="form-control" name="businessLicenseNumber" type="text" value="';
$out+=$escape(authentication.businessLicenseNumber);
$out+='"> ';
if(authentication && authentication.businessLicenseType==1){
$out+=' <span class="help-block m-b-none number-label-0 text-muted hide">请输入15位工商注册号</span> <span class="help-block m-b-none number-label-1 text-muted ">请输入18位统一社会信用代码</span> ';
}else{
$out+=' <span class="help-block m-b-none number-label-0 text-muted">请输入15位工商注册号</span> <span class="help-block m-b-none number-label-1 text-muted hide">请输入18位统一社会信用代码</span> ';
}
$out+=' </div> </div> <div class="form-group"> <label class="col-sm-2 control-label">企业名称：</label> <div class="col-sm-3"> <input class="form-control" name="orgName" type="text" value="';
$out+=$escape(authentication.orgName);
$out+='"> <span class="help-block text-muted m-b-none">请填写营业执照上的名称</span> </div> </div> <div class="form-group"> <label class="col-sm-2 control-label">法人：</label> <div class="col-sm-3"> <input class="form-control" name="legalRepresentative" type="text" value="';
$out+=$escape(authentication.legalRepresentative);
$out+='"> </div> </div> <h4 class="m-t-md">法人身份证信息</h4> <div class="form-group"> <label class="col-sm-2 control-label"></label> <div class="col-sm-10"> <div class="pull-left" style="width:175px;"> <p>正面：</p> ';
if(authentication && authentication.legalRepresentativePhoto!=null){
$out+=' <img class="curp" src="';
$out+=$escape(authentication.legalRepresentativePhoto);
$out+='" id="legalRepresentativePhoto" data-action="preview" style="max-width: 155px;max-height: 155px;"/> ';
}else{
$out+=' <img class="curp" src="';
$out+=$escape(_url('/assets/img/org/IDCardTemp.jpg'));
$out+='" id="legalRepresentativePhoto" data-action="preview" style="max-width: 155px;max-height: 155px;"/> ';
}
$out+=' </div> <div class="pull-left m-t-25"> <p class="m-b-xs">上传：身份证照片；</p> <p class="m-b-xs">请本人手持身份，照片所有信息需清晰可见，内容真实有效，不得做任何修改。</p> <p class="m-b-xs">正面头像清晰，背面国微，签发机关清晰可见。</p> <p><a class="btn btn-primary btn-sm file-upload" id="legalRepresentativePhotoUpload">选择文件</a></p> <p><label id="legalRepresentativePhoto-error" class="error" ></label></p> </div> </div> </div> <div class="form-group"> <label class="col-sm-2 control-label">经办人：</label> <div class="col-sm-3"> <input class="form-control" name="operatorName" type="text" value="';
$out+=$escape(authentication.operatorName);
$out+='"> </div> </div> <h4 class="m-t-md">经办人身份证信息</h4> <div class="form-group"> <label class="col-sm-2 control-label"></label> <div class="col-sm-10"> <div class="pull-left" style="width:175px;"> <p>正面：</p> ';
if(authentication && authentication.operatorPhoto){
$out+=' <img class="curp" src="';
$out+=$escape(authentication.operatorPhoto);
$out+='" id="operatorPhoto" data-action="preview" style="max-width: 155px;max-height: 155px;"/> ';
}else{
$out+=' <img class="curp" src="';
$out+=$escape(_url('/assets/img/org/IDCardTemp.jpg'));
$out+='" id="operatorPhoto" data-action="preview" style="max-width: 155px;max-height: 155px;"/> ';
}
$out+=' </div> <div class="pull-left m-t-25"> <p class="m-b-xs">上传：身份证照片；</p> <p class="m-b-xs">请本人手持身份，照片所有信息需清晰可见，内容真实有效，不得做任何修改。</p> <p class="m-b-xs">正面头像清晰，背面国微，签发机关清晰可见。</p> <p><a class="btn btn-primary btn-sm file-upload" id="operatorPhotoUpload">选择文件</a></p> <p><label id="operatorPhoto-error" class="error" ></label></p> </div> </div> </div> <h4 class="m-t-md">认证授权书</h4> <div class="form-group"> <label class="col-sm-2 control-label"></label> <div class="col-sm-10"> <div class="pull-left" style="width:175px;"> ';
if(authentication && authentication.sealPhoto){
$out+=' <img class="curp" src="';
$out+=$escape(authentication.sealPhoto);
$out+='" id="sealPhoto" data-action="preview" style="max-width: 155px;max-height: 155px;"/> ';
}else{
$out+=' <img class="curp" src="';
$out+=$escape(_url('/assets/img/org/powerOfAttorney.jpg'));
$out+='" id="sealPhoto" data-action="preview" style="max-width: 155px;max-height: 155px;"/> ';
}
$out+=' </div> <div class="pull-left"> <p class="m-b-xs">请下载《认证授权书》<a href="javascript:void(0)" data-action="sealPhotoDownLoad">点击下载</a></p> <p class="m-b-xs">按要求填写，并手写仅用于卯丁认证字样，并加盖企业公章。</p> <p class="m-b-xs">照片所有信息需清晰可见，内容真实有效。</p> <p class="m-b-xs">照片支持.jpg、.jpeg、.bmp、.gif、.png格式，大小不超过8M。</p> <p><a class="btn btn-primary btn-sm file-upload" id="sealPhotoUpload">选择文件</a></p> <p><label id="sealPhoto-error" class="error" ></label></p> </div> </div> </div> <div class="form-group"> <label class="col-sm-2 control-label">证件类型：</label> <div class="col-sm-10"> <div class="check-div"> <div class="i-checks " > <input type="checkbox" id="ck1" name="convention" /> <label for="ck1" class="fw-normal">已阅读并同意<a href="javascript:void(0)" data-action="maodingConvention">《卯丁公约》</a></label> </div> </div> <div class="check-div"> <div class="i-checks " > <input type="checkbox" id="ck2" name="specification" /> <label for="ck2" class="fw-normal">已阅读并同意<a href="javascript:void(0)" data-action="maodingCertificationSpecification">《卯丁认证规范》</a></label> </div> </div> </div> </div> <div class="form-group"> <label class="col-sm-2 control-label"></label> <div class="col-sm-10"> <a class="btn btn-primary" data-action="submitReview">提交审核</a> </div> </div> <div class="clearfix"></div> </form> </div> </div> <script> $(\'.i-checks\').iCheck({ checkboxClass: \'icheckbox_minimal-green\', radioClass: \'iradio_minimal-green\' }); </script>';
return new String($out);
});/*v:1*/
template('m_org/m_firstCreateOrg',function($data,$filename
/**/) {
'use strict';var $utils=this,$helpers=$utils.$helpers,$each=$utils.$each,serverTypeList=$data.serverTypeList,$value=$data.$value,$index=$data.$index,$escape=$utils.$escape,$out='';$out+='<div class="ibox"> <div class="ibox-title"> <span class="f-s-20 l-h-20 fw-400">创建组织</span> </div> <div class="ibox-content"> <form class="createOrgBox"> <fieldset> <section> <div class="row"> <div class="form-group col-md-12"> <label for="companyName">组织名称<span class="color-red">*</span></label> <input type="text" id="companyName" class="form-control" name="companyName"> <span class="help-block m-b-none">创建一个组织，邀请成员加入，通过项目一起高效的协作</span> </div> <div class=" col-md-12"> <div class="ibox float-e-margins"> <div class="ibox-content no-border no-padding dp-none"> <div class="row"> <div class="form-group col-md-12" id="citysBox"> <label for="selectRegion">所在地区</label> <div class="input-group" id="selectRegion" name="selectRegion"> <div class="dp-inline-block"> <select class="prov form-control" name="province"></select> </div> <div class="dp-inline-block m-l-xs"> <select class="city form-control" style="display: none;" name="city" disabled="disabled"></select> </div> <div class="dp-inline-block m-l-xs"> <select class="dist form-control" style="display: none;" name="county" disabled="disabled"></select> </div> </div> </div> <div class="form-group col-md-12 serviceTypeEdit"> <label>服务类型</label> <div class="input-group col-md-12 dp-block"> ';
$each(serverTypeList,function($value,$index){
$out+=' <div class="serviceType col-24-md-8 col-24-lg-4 col-24-xs-24 no-pd-left"> <div class="i-checks checkbox-inline"> <input name="serverType" id="serverType-';
$out+=$escape($value.id);
$out+='" value="';
$out+=$escape($value.id);
$out+='" type="checkbox"> <span for="serverType-';
$out+=$escape($value.id);
$out+='">';
$out+=$escape($value.name);
$out+='</span> </div> </div> ';
});
$out+=' </div> </div> </div> </div> <div class="ibox-title p-xxs border-top-bottom" style="min-height:0;"> <div class="ibox-tools text-align-center"> <a class="collapse-link"> <i class="fa fa-chevron-down"></i><span class="text">更多</span> </a> </div> </div> </div> </div> </div> </section> </fieldset> <div class="footTools"> <a type="button" class="btn btn-primary btn-sm pull-right" data-action="saveOrg" href="javascript:void(0)">立即创建</a> </div> </form> </div> <script type="text/javascript"> $(\'.i-checks\').iCheck({ checkboxClass: \'icheckbox_minimal-green\', radioClass: \'iradio_minimal-green\' }); </script> </div>';
return new String($out);
});/*v:1*/
template('m_org/m_firstCreateOrg_pre','<div class="ibox"> <div class="ibox-title"> <span class="f-s-20 fw-400 l-h-20">欢迎使用卯丁</span> </div> <div class="ibox-content"> <p class="f-s-16 l-h-16"> <span class="dp-inline-block" style="width: 16px;"><i class="fc-dark-blue fa fa-info-circle"></i></span> 温馨提示</p> <p class="f-s-14 m-t-sm l-h-28">初次使用卯丁系统且无组织邀请的用户，可进行以下两个操作：</p> <ul style="padding: 0 20px 15px;"> <li> <p class="f-s-14 l-h-14">若你是组织管理者，可进行创建组织</p> </li> <li> <p class="f-s-14 l-h-14">若你是组织普通成员，可等待你组织的邀请，将你加入到组织中</p> </li> </ul> <div class="footTools"> <a type="button" class="btn btn-primary btn-sm pull-right" data-action="startCreateOrg" href="javascript:void(0)">开始创建</a> <a type="button" class="btn btn-default btn-sm pull-right disabled m-r-sm" href="javascript:void(0)">等待邀请</a> </div> </div> </div>');/*v:1*/
template('m_org/m_inviteCorp',function($data,$filename
/**/) {
'use strict';var $utils=this,$helpers=$utils.$helpers,$escape=$utils.$escape,inviteType=$data.inviteType,$out='';$out+='<div class="container-fluid inviteCorpBox"> <div class="row"> <div class="col-md-12" style="padding: 25px 15px 15px 15px"> <div class="form-group"> <!--请输入';
$out+=$escape(inviteType===1?'分支机构':'事业合伙人');
$out+='的手机号：--> 请输入被邀请组织负责人的手机号： </div> <div class="inviteCorpPart form-group input-group"> <input name="bPartnerPhone" class="form-control"> <span class="input-group-btn"> <a class="btn btn-primary pull-right" data-action="sendMessage">发送邀请</a>  </span> </div>  </div> </div> </div>';
return new String($out);
});/*v:1*/
template('m_org/m_inviteCorp_part','<div class="inviteCorpPart form-group input-group"> <input class="form-control"> <span class="input-group-btn"> <a class="btn btn-primary" data-action="addCorp"><i class="fa fa-plus"></i></a> <a class="btn btn-danger" data-action="removeCorp" style="display: none;"><i class="fa fa-close"></i></a> </span> </div>');/*v:1*/
template('m_org/m_inviteUser',function($data,$filename
/**/) {
'use strict';var $utils=this,$helpers=$utils.$helpers,$escape=$utils.$escape,inivteUserUrl=$data.inivteUserUrl,$out='';$out+='<div class="container-fluid invitePersonelOBox"> <div class=" panel-invite"> <div class="panel-body no-pd" id="qqShareDiv"> <div class="bdsharebuttonbox hide" data-tag="share_1"> <a id="share" target="_blank"><i class="fa fa-qq"></i></a> </div> </div> <div class="col-md-12 p-h-xs"> <div class="form-group"> <div class="input-group" style="width: 100%;"> 请复制以下链接发送给你想邀请的人员 </div> </div> <div class="form-group"> <div class="input-group full-width"> <input class="form-control left" id="url" style="width: 78%;height: 31px;" value="';
$out+=$escape(inivteUserUrl);
$out+='"> <button type="button" class="btn btn-primary" left data-action="copyUrl" style="margin: -1px 0 0 8px;">复制链接</button> </div> </div> </div> </div> </div>';
return new String($out);
});/*v:1*/
template('m_org/m_organizational',function($data,$filename
/**/) {
'use strict';var $utils=this,$helpers=$utils.$helpers,$escape=$utils.$escape,rootPath=$data.rootPath,toAuditEmpNum=$data.toAuditEmpNum,roleCodes=$data.roleCodes,$out='';$out+='<div class="ibox m_organizational">  <div class="ibox-content no-padding"> <div class="col-24-md-24"> <div class="row org-btn-box"> <div class="treeSwitch" style=""> <a class="m-t-sm" href="javascript:void(0)" data-action="treeSwitch"> <img src="';
$out+=$escape(rootPath);
$out+='/assets/img/whole_org_framework.png" style="height: 23px;" data-toggle="tooltip" data-placement="top" title="查看完整组织架构" /> </a> </div> <div class="col-24-md-23 col-24-sm-23 col-24-xs-23 headContent"> <a href="javascript:void(0)" class=" roleControl" roleCode="hr_org_set" flag="2" data-action="addDepart"> <i class="iconfont rounded icon-2fengongsi m-r-xs"></i>添加部门 </a> <span class="divice roleControl" roleCode="hr_org_set" flag="2" >|</span>  <a href="javascript:void(0)" class="roleControl no-pd-right" roleCode="hr_org_set" flag="2" data-action="addUser">添加人员</a> <a type="button" class="dropdown-toggle roleControl" roleCode="hr_org_set" flag="2" data-toggle="dropdown" aria-haspopup="false" aria-expanded="false" data-action="drop_down"><i class="fa fa-caret-down "></i></a> <ul class="dropdown-menu dropdown-menu-left dropdown-menu-v1"> <li> <a href="javascript:void(0)" class="roleControl dp-block" roleCode="hr_org_set" flag="2" data-action="inviteUser">邀请加入</a> </li> </ul> <a href="javascript:void(0)" class="roleControl" roleCode="hr_org_set" flag="2" data-action="bulkImport">批量导入成员</a> <a href="javascript:void(0)" class="count-info roleControl" roleCode="hr_org_set" flag="2" data-action="toAuditUser"> 待审核人员 ';
if(toAuditEmpNum>0){
$out+=' <span id="toAuditEmpNumTip" class="badge badge-danger"> ';
$out+=$escape(toAuditEmpNum);
$out+=' </span> ';
}
$out+=' </a> ';
if(roleCodes.indexOf('hr_org_set')>-1){
$out+=' <span class="divice">|</span> ';
}
$out+=' <a href="javascript:void(0)" class="roleControl" roleCode="org_partner" flag="2" data-action="addSubCompany"><i class="iconfont rounded icon-2fengongsi1 m-r-xs"></i>创建分支机构</a> <a href="javascript:void(0)" class="roleControl" roleCode="org_partner" flag="2" data-action="addPartner"><i class="iconfont rounded icon-2fengongsi1 m-r-xs"></i>创建事业合伙人</a>  </div> </div> </div> <div class="col-24-sm-8 col-24-md-8 col-24-lg-6" id="org-tree-box" style="height: 500px;overflow: auto;border-right:solid 1px #d9d9d9;"> <div class="clearfix margin-bottom-10"></div> <div id="organization_treeH"> <ul class="sidebar-nav list-group sidebar-nav-v1"> </ul> </div> </div>  <div class="col-24-sm-16 col-24-md-16 col-24-lg-18 no-padding" id="orgUserListBox"> </div> <div class="clearfix"></div> </div> </div>';
return new String($out);
});/*v:1*/
template('m_org/m_orgByTree',function($data,$filename
/**/) {
'use strict';var $utils=this,$helpers=$utils.$helpers,$each=$utils.$each,selectedUserList=$data.selectedUserList,u=$data.u,$index=$data.$index,$escape=$utils.$escape,isASingleSelectUser=$data.isASingleSelectUser,$out='';$out+='<style> #userlist-pagination-container{position: absolute;right: 8px;bottom: -46px;height: auto;margin-top: 0} .orgUserTreeOBox .ibox-content{border-top: none;} .orgUserTreeOBox .ibox{margin-bottom: 0} </style> <form class="form-horizontal orgUserTreeOBox rounded-4x"> <div class="ibox"> <div class="ibox-content">  <div class="row"> <div class="col-md-5" style="height: 320px;overflow: auto;"> <div id="organization_treeH"> <ul class="sidebar-nav list-group sidebar-nav-v1"> </ul> </div> </div> <div class="col-md-7 " > <div data-list="userList" style="height: 270px;overflow: auto"></div> <div id="userlist-pagination-container" class="m-pagination pull-right m-pagination-cus"></div> </div> </div> <div class="row"> <div class="col-md-12"> <div class="panel panel-default m-b-none" style="min-height: 50px;"> <div class="panel-body chosedUserBox" style="height: 100%"> ';
$each(selectedUserList,function(u,$index){
$out+=' <span class=" m-r-xs" style="background-color: rgb(245, 245, 245);padding: 2px 0px;"> <span class="label label-light m-r-xs no-pd-right dp-inline-block" style="background: transparent"> ';
$out+=$escape(u.userName);
$out+=' ';
if(isASingleSelectUser!=2){
$out+=' <a class="curp" href="javascript:void(0)" data-id="';
$out+=$escape(u.id);
$out+='" data-action="delChosedUser"><i class="fa fa-times color-red"></i></a> ';
}
$out+=' </span> </span> ';
});
$out+=' </div> </div> </div> </div> </div> </div> </form>';
return new String($out);
});/*v:1*/
template('m_org/m_orgInfomation',function($data,$filename
/**/) {
'use strict';var $utils=this,$helpers=$utils.$helpers,type=$data.type,$out='';if(type == 1){
$out+=' <div class="ibox ibox-shadow ibox_min_height profile" id="mainContain"> <div class="ibox-content no-padding"> <div class="col-md-3 col-md-offset-9 col-xl-4 col-xl-offset-8 text-right m-b-xs m-t-xs p-w-md"> <a href="javascript:void(0)" id="dissolutionCompany" class="btn btn-default btn-sm hide" > 解散组织 </a> </div> <div class="row"> <div class="col-md-9 col-xl-8" id="infoMainOBox"> </div> <div class="col-md-3 col-xl-4 p-w-xl" id="teamPicShow"> </div> </div> <div class="clearfix"></div> </div> </div> ';
}else{
$out+=' <div class="ibox m-b-none profile" id="mainContain"> <div class="ibox-title secondary-menu-outbox"> <div class="row"> <div class="col-md-6">  <div class="no-margin p-h-sm breadcrumb-box" > <ol class="breadcrumb"> <li> 通讯录 </li> <li class="active fa fa-angle-right"> <strong>组织信息</strong> </li> </ol> </div> </div> <div class="clearfix"></div> </div> </div> <div class="ibox-content no-padding no-border"> <div class="row m-t-xl"> <div class="col-md-9 col-xl-8 media-p-l-50" id="infoMainOBox"> </div> <div class="col-md-3 col-xl-4 p-w-xl" id="teamPicShow"> </div> </div> </div> </div> ';
}
$out+=' ';
return new String($out);
});/*v:1*/
template('m_org/m_orgUserList',function($data,$filename
/**/) {
'use strict';var $utils=this,$helpers=$utils.$helpers,isClick=$data.isClick,orgUserList=$data.orgUserList,$escape=$utils.$escape,$each=$utils.$each,u=$data.u,$index=$data.$index,d=$data.d,$out='';$out+='<table class="table table-responsive table-striped table-bordered orgUserOBox"> <thead> <tr> <th width="13%">姓名</th>  <th width="15%">手机号码</th> <th width="20%">办公电话</th> <th width="20%">邮箱</th> ';
if(isClick){
$out+=' <th width="10%"></th> <th width="7%"></th> ';
}
$out+=' </tr> </thead> ';
if(orgUserList==null || orgUserList.length==0){
$out+=' <tbody> <tr> <td colspan="';
$out+=$escape(isClick==true?6:4);
$out+='" align="center">暂无数据</td> </tr> </tbody> ';
}
$out+=' <tbody> ';
$each(orgUserList,function(u,$index){
$out+=' <tr class="userListTr curp" data-id="';
$out+=$escape(u.userId);
$out+='"> <td class="word-break td-first"> <i class="fa fa-plus-square"></i>&nbsp;';
$out+=$escape(u.userName);
$out+=' </td> <!--<td class="word-break">';
$out+=$escape(u.orgServerStation);
$out+='</td>--> <td class="word-break">';
$out+=$escape(u.cellphone);
$out+='</td> <td class="word-break">';
$out+=$escape(u.phone);
$out+='</td> <td class="word-break">';
$out+=$escape(u.email);
$out+='</td> ';
if(isClick){
$out+=' <td> <div class="btn-group btnReturnFalse"> <a type="button" class="btn btn-default btn-xs dropdown-toggle btnReturnFalse roleControl" roleCode="hr_org_set" flag="2" data-toggle="dropdown" aria-expanded="true"> 操作 <i class="fa fa-angle-down btnReturnFalse"></i> </a> <ul class="dropdown-menu dropdown-menu-v1" role="menu"> <li> <a href="javascript:void(0)" data-i="';
$out+=$escape($index);
$out+='" data-action="editOrgUser">编辑</a> </li> ';
if(u.adminFlag==null||u.adminFlag==''){
$out+=' <li> <a href="javascript:void(0)" data-id="';
$out+=$escape(u.id);
$out+='" data-action="delOrgUser">删除</a> </li> ';
}
$out+=' </ul> </div> </td> <td class="lastTd"> ';
if($index>0){
$out+=' <a class="btnReturnFalse curp roleControl" roleCode="hr_org_set" flag="2" title="向上排序" style="text-decoration: none" data-i="';
$out+=$escape($index);
$out+='" data-action="upSorting"> <i class="iconfont icon-xiangshang"></i> </a> ';
}
$out+=' ';
if($index < orgUserList.length-1){
$out+=' <a class="btnReturnFalse curp roleControl" roleCode="hr_org_set" flag="2" title="向下排序" style="text-decoration: none" data-i="';
$out+=$escape($index);
$out+='" data-action="downSorting"> <i class="iconfont icon-xiangxia"></i> </a> ';
}
$out+=' </td> ';
}
$out+=' </tr> <tr class="userInfoTr" style="display: none;"> <td colspan="7" class="no-padding"> <div> <table class="table table-hover m-b-none "> <thead> <tr> <th>所属部门</th> <th>职位</th> </tr> </thead> <tbody> ';
$each(u.departList,function(d,$index){
$out+=' <tr> <td class="word-break">';
$out+=$escape(d.departName);
$out+='</td> <td class="word-break">';
$out+=$escape(d.serverStation);
$out+='</td> </tr> ';
});
$out+=' </tbody> </table> </div> </td> </tr> ';
});
$out+=' </tbody> </table> <div id="pagination-container" class="m-pagination pull-right"></div>';
return new String($out);
});/*v:1*/
template('m_org/m_org_chose_byTree',function($data,$filename
/**/) {
'use strict';var $utils=this,$helpers=$utils.$helpers,renderType=$data.renderType,$escape=$utils.$escape,buttonStyle=$data.buttonStyle,spanStyle=$data.spanStyle,companyList=$data.companyList,$out='';$out+='<style> .m_org_chose_byTree #orgTreeH{ display: block; position: absolute; top: 0px; border: 1px solid #e7eaec; padding: 10px; border-radius: 4px; height: 300px; overflow: auto; z-index: 9; background-color: #fff; } </style> ';
if(renderType==1){
$out+=' <div id="orgTreeH" > <ul class="sidebar-nav list-group sidebar-nav-v1"> </ul> </div> ';
}else{
$out+=' <div class="btn-group m_org_chose_byTree"> <button type="button" class="btn btn-default btn-sm dropdown-toggle" data-action="selectOrg" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false" data-stopPropagation="true" style="';
$out+=$escape(buttonStyle==null?'':buttonStyle);
$out+='"> <span class="company-name" style="';
$out+=$escape(spanStyle==null?'':spanStyle);
$out+='">';
$out+=$escape(companyList.text);
$out+='</span> <span class="caret"></span> </button> <ul class="dropdown-menu"> <li> <div id="orgTreeH" > <ul class="sidebar-nav list-group sidebar-nav-v1"> </ul> </div> </li> </ul> </div> ';
}
$out+=' ';
return new String($out);
});/*v:1*/
template('m_org/m_org_menu',function($data,$filename
/**/) {
'use strict';var $utils=this,$helpers=$utils.$helpers,roleCodes=$data.roleCodes,adminFlag=$data.adminFlag,$out='';$out+='<div class="ibox"> <div class="ibox-title secondary-menu-outbox"> <div class="row"> <div class="col-md-12" id="secondary-menu"> <div class="pull-left m-r-xl"> <h3 class="" >后台管理</h3> </div> <div class="pull-right m-r-xl"> <ul class="secondary-menu-ul"> <li class="active roleControl" id="orgInfo" roleCode="com_enterprise_edit" flag="2"> <a href="#/backstageMgt/orgInfo">组织信息</a> </li> <li id="organizational" class="roleControl" roleCode="hr_org_set,hr_employee,org_partner" flag="2"> <a href="#/backstageMgt/organizational">组织架构</a> </li> ';
if((roleCodes!=null &&  roleCodes.indexOf('sys_role_permission')>-1  ) || adminFlag=='1'){
$out+=' <li id="permissionSettings"> <a href="#/backstageMgt/permissionSettings">权限配置</a> </li> ';
}
$out+='  <li id="approvalMgt" class="" > <a href="#/backstageMgt/approvalMgt">审批管理</a> </li> <li id="enterpriseCertification" class="roleControl" roleCode="sys_role_auth" flag="2"> <a href="#/backstageMgt/enterpriseCertification">企业认证</a> </li> <li id="historicalDataImport" class="roleControl" roleCode="org_data_import,data_import" flag="2"> <a href="#/backstageMgt/historicalDataImport">历史数据导入 </a> </li> </ul> </div> </div> </div> </div> <div class="ibox-content no-padding"> <div class="row"> <div class="col-md-12" id="content-box"> </div> </div> </div> </div>';
return new String($out);
});/*v:1*/
template('m_org/m_selectedOrgTree','<div class="chose-user-tree hide" id="organizationTree" > <ul class="sidebar-nav list-group sidebar-nav-v1"> </ul> </div>');/*v:1*/
template('m_org/m_toAuditOrgList',function($data,$filename
/**/) {
'use strict';var $utils=this,$helpers=$utils.$helpers,$each=$utils.$each,toAuditCompanyList=$data.toAuditCompanyList,o=$data.o,$index=$data.$index,$escape=$utils.$escape,currentCompanyId=$data.currentCompanyId,$out='';$out+='<table class="table table-responsive toAuditOrgListBox"> <thead> <tr> <th width="20%">序号</th> <th width="40%">组织名称</th> <th width="20%">邀请时间</th> <th width="20%" >操作</th> </tr> </thead> <tbody> ';
$each(toAuditCompanyList,function(o,$index){
$out+=' <tr> <td>';
$out+=$escape($index+1);
$out+='</td> <td> <span>';
$out+=$escape(currentCompanyId==o.orgId?o.pCompanyName:o.companyName);
$out+='</span> </td> <td> <span>';
$out+=$escape(o.createDate);
$out+='</span> </td> <td> <a href="" class="btn-u btn-u btn-u-xs rounded" data-i="';
$out+=$escape($index);
$out+='" data-action="orgRelationApproval0">同意</a> <a href="" class="btn-u btn-u-default btn-u-xs rounded" data-i="';
$out+=$escape($index);
$out+='" data-action="orgRelationApproval1">拒绝</a> </td> </tr> ';
});
$out+=' ';
if(toAuditCompanyList==null || toAuditCompanyList.length==0){
$out+=' <tr> <td colspan="4" align="center">暂无数据</td> </tr> ';
}
$out+=' </tbody> </table>';
return new String($out);
});/*v:1*/
template('m_org/m_toAuditOrgTab','<div class="sky-form rounded-bottom toAuditOrgTabBox p-m"> <fieldset> <div class="tabs-container"> <ul class="nav nav-tabs"> <li class="active" > <a data-toggle="tab" href="#branch" aria-expanded="true" data-action="getCompanyToAudit2" style="padding: 5px 15px;">分支机构</a> </li> <li class="" > <a data-toggle="tab" href="#businessPartner" aria-expanded="false" data-action="getCompanyToAudit3" style="padding: 5px 15px;">事业合伙人</a> </li> </ul> <div class="tab-content"> <div id="branch" class="tab-pane fade active in"> <section> 1 </section> </div> <div id="businessPartner" class="tab-pane fade"> <section> 2 </section> </div> </div> </div> </fieldset> </div>');/*v:1*/
template('m_org/m_toAuditOrgUserList',function($data,$filename
/**/) {
'use strict';var $utils=this,$helpers=$utils.$helpers,$each=$utils.$each,userAuditList=$data.userAuditList,u=$data.u,$index=$data.$index,$escape=$utils.$escape,$out='';$out+='<table class="table table-responsive toAuditOrgUserListBox"> <thead> <tr> <th>序号</th> <th>姓名</th> <th>手机号码</th> <th>操作</th> </tr> </thead> <tbody> ';
$each(userAuditList,function(u,$index){
$out+=' <tr> <td>';
$out+=$escape($index+1);
$out+='</td> <td>';
$out+=$escape(u.userName);
$out+='</td> <td>';
$out+=$escape(u.cellphone);
$out+='</td> <td> <a href="javascript:void(0)" class="btn-u btn-u btn-u-xs rounded" data-i="';
$out+=$escape($index);
$out+='" data-action="agreedToJoin">同意</a> <a href="javascript:void(0)" class="btn-u btn-u-red btn-u-xs rounded" data-i="';
$out+=$escape($index);
$out+='" data-action="refusedToJoin">拒绝</a> </td> </tr> ';
});
$out+=' ';
if(!userAuditList||!userAuditList.length){
$out+=' <tr> <td colspan="4" align="center">暂无数据</td> </tr> ';
}
$out+=' </tbody> </table> ';
return new String($out);
});/*v:1*/
template('m_org/m_userList',function($data,$filename
/**/) {
'use strict';var $utils=this,$helpers=$utils.$helpers,$each=$utils.$each,orgUserList=$data.orgUserList,$value=$data.$value,$index=$data.$index,$escape=$utils.$escape,$out='';$out+='<div class="userListBox"> <table class="table table-striped table-hover table-responsive m-b-none" > <thead> <tr> <th>姓名</th> <th>手机号</th> <th></th> </tr> </thead> <tbody> ';
$each(orgUserList,function($value,$index){
$out+=' <tr> <td>';
$out+=$escape($value.userName);
$out+='</td> <td>';
$out+=$escape($value.cellphone);
$out+='</td> <td> <a href="javascript:void(0)" data-action="choseUser" data-companyUserId="';
$out+=$escape($value.id);
$out+='" data-userId="';
$out+=$escape($value.userId);
$out+='" class="btn-u btn-u-primany btn-u-xs rounded">选择</a> </td> </tr> ';
});
$out+=' ';
if(orgUserList==null || orgUserList.length==0){
$out+=' <tr> <td colspan="3" align="center">暂无数据</td> </tr> ';
}
$out+=' </tbody> <tfoot><tr><td colspan="3" id="userList"></td></tr></tfoot> </table> </div>';
return new String($out);
});/*v:1*/
template('m_payments/m_payments_detail_menu','<div class="ibox"> <div class="ibox-title secondary-menu-outbox"> <div class="row"> <div class="col-md-6">  <div class="no-margin p-h-sm breadcrumb-box" > <ol class="breadcrumb"> <li> 财务管理 </li> <li class="active fa fa-angle-right"> <strong>收支明细</strong> </li> </ol> </div> </div> <div class="col-md-6 text-right p-w-sm"> <ul class="secondary-menu-ul pull-right"> <li class="active" id="ledger" class="roleControl" ><a>台账</a></li> <li id="receivable" class="roleControl" ><a>应收</a></li> <li id="payable" class="roleControl" ><a>应付</a></li> </ul> </div> <div class="clearfix"></div> </div> </div> <div class="ibox-content no-padding" id="content-box"> </div> </div>');/*v:1*/
template('m_payments/m_payments_ledger','<div class="m_payments_ledger"> <form role="form" class="form-inline m-md"> <div class="form-group z-index-1"> <label class="">当前组织：</label> <div class="btn-group" id="selectOrg"> </div> </div> <div class="time-combination form-group"> </div> <button class="btn btn-white btn-sm" data-action="refreshBtn">刷新数据</button> </form> <div class="data-list-box"> <div class="row"> <div class="col-md-12 data-list-container p-w-lg"></div> <div class="col-md-12 p-w-m"> <div id="data-pagination-container" class="m-pagination pull-right "></div> </div> </div> </div> </div>');/*v:1*/
template('m_payments/m_payments_ledger_list',function($data,$filename
/**/) {
'use strict';var $utils=this,$helpers=$utils.$helpers,_isBlank=$helpers._isBlank,summary=$data.summary,$escape=$utils.$escape,_expNumberFilter=$helpers._expNumberFilter,$each=$utils.$each,dataList=$data.dataList,d=$data.d,$index=$data.$index,_momentFormat=$helpers._momentFormat,_expPositiveNumberFilter=$helpers._expPositiveNumberFilter,_url=$helpers._url,$out='';$out+='<div class="m-b-sm"> <span>当前余额：</span> <span> ';
if(_isBlank(summary.sumBalance)){
$out+=' <span class="fc-v1-green">0</span> ';
}else if( (summary.sumBalance+'').indexOf('-')>-1){
$out+=' <span class="fc-v1-red">';
$out+=$escape(_expNumberFilter(summary.sumBalance));
$out+='</span> ';
}else{
$out+=' <span class="fc-v1-green">';
$out+=$escape(_expNumberFilter(summary.sumBalance));
$out+='</span> ';
}
$out+=' 元 &nbsp;&nbsp; </span> </div> <table class="table table-bordered table-responsive"> <thead> <tr> <th width="12%">日期</th> <th width="13%"> <span class="th-span-pr">金额（元）</span> <a class="icon-filter pull-right" id="filterProfitType"><i class="icon iconfont icon-shaixuan"></i></a> </th> <th width="12%"> 收支分类 <a class="icon-filter pull-right" id="filterFeeType"><i class="icon iconfont icon-shaixuan"></i></a> </th> <th width="12%"> 收支分类子项 <a class="icon-filter pull-right" id="filterSubFeeType"><i class="icon iconfont icon-shaixuan"></i></a> </th> <th width="16%">备注</th> <th width="13%"> 收款组织 <a class="icon-filter pull-right" id="filterToCompany"><i class="icon iconfont icon-shaixuan"></i></a> </th> <th width="13%"> 付款组织 <a class="icon-filter pull-right" id="filterFromCompany"><i class="icon iconfont icon-shaixuan"></i></a> </th> <th width="14%"> 关联项目 <a class="icon-filter pull-right" id="filterProjectName"><i class="icon iconfont icon-shaixuan"></i></a> </th> </tr> </thead> <tbody> ';
$each(dataList,function(d,$index){
$out+=' <tr> <td>';
$out+=$escape(_momentFormat(d.profitDate,'YYYY/MM/DD'));
$out+='</td> <td class="text-right"> ';
if((d.profitFee+'').indexOf('-')>-1 ){
$out+=' <span class="fc-v1-red td-span-pr">';
$out+=$escape(_expPositiveNumberFilter(d.profitFee));
$out+='</span> ';
}else{
$out+=' <span class="fc-v1-green td-span-pr">';
$out+=$escape(_expNumberFilter(d.profitFee));
$out+='</span> ';
}
$out+=' </td> <td>';
$out+=$escape(d.feeTypeParentName);
$out+='</td> <td>';
$out+=$escape(d.feeTypeName);
$out+='</td> <td>';
$out+=$escape(d.feeName);
$out+='</td> <td> ';
if(d.toCompanyName!=null && d.toCompanyName!=''){
$out+=' ';
$out+=$escape(d.toCompanyName);
$out+=' ';
}else{
$out+=' -- ';
}
$out+=' </td> <td> ';
if(d.fromCompanyName!=null && d.fromCompanyName!=''){
$out+=' ';
$out+=$escape(d.fromCompanyName);
$out+=' ';
}else{
$out+=' -- ';
}
$out+=' </td> <td>';
$out+=$escape(d.projectName);
$out+='</td> </tr> ';
});
$out+=' ';
if(!(dataList && dataList.length>0)){
$out+=' <tr> <td colspan="6" class="text-center v-middle"> <div class="m-b-xl m-t-md"> <img src="';
$out+=$escape(_url('/assets/img/default/without_data.png'));
$out+='"> <span class="fc-dark-blue dp-block">没有相关数据</span> </div> </td> </tr> ';
}
$out+=' </tbody> </table> <div class="pt-absolute "> <span>合计金额：</span> <span> ';
if(_isBlank(summary.amount)){
$out+=' <span class="fc-v1-green">0</span> ';
}else if( (summary.amount+'').indexOf('-')>-1){
$out+=' <span class="fc-v1-red">';
$out+=$escape(_expNumberFilter(summary.amount));
$out+='</span> ';
}else{
$out+=' <span class="fc-v1-green">';
$out+=$escape(_expNumberFilter(summary.amount));
$out+='</span> ';
}
$out+=' 元 &nbsp;&nbsp; </span> <span>收入：</span> <span> ';
if(_isBlank(summary.gain)){
$out+=' <span class="fc-v1-green">0</span> ';
}else if( (summary.gain+'').indexOf('-')>-1){
$out+=' <span class="fc-v1-red">';
$out+=$escape(_expNumberFilter(summary.gain));
$out+='</span> ';
}else{
$out+=' <span class="fc-v1-green">';
$out+=$escape(_expNumberFilter(summary.gain));
$out+='</span> ';
}
$out+=' 元 &nbsp;&nbsp; </span> <span>支出：</span> <span> ';
if(_isBlank(summary.pay)){
$out+=' <span class="fc-v1-green">0</span> ';
}else if( (summary.pay+'').indexOf('-')>-1){
$out+=' <span class="fc-v1-red">';
$out+=$escape(_expPositiveNumberFilter(summary.pay));
$out+='</span> ';
}else{
$out+=' <span class="fc-v1-green">';
$out+=$escape(_expNumberFilter(summary.pay));
$out+='</span> ';
}
$out+=' 元 &nbsp;&nbsp; </span> </div>';
return new String($out);
});/*v:1*/
template('m_payments/m_payments_list_detail',function($data,$filename
/**/) {
'use strict';var $utils=this,$helpers=$utils.$helpers,$escape=$utils.$escape,detailData=$data.detailData,_momentFormat=$helpers._momentFormat,_expNumberFilter=$helpers._expNumberFilter,type=$data.type,$each=$utils.$each,d=$data.d,$index=$data.$index,_url=$helpers._url,$out='';$out+='<div class="m-t-md"> <div class="form-group col-md-12"> <label class="col-sm-2 control-label">节点信息：</label> <div class="col-sm-10">';
$out+=$escape(detailData.feeName);
$out+='</div> </div> <div class="form-group col-md-12"> <label class="col-sm-2 control-label">关联项目：</label> <div class="col-sm-10">';
$out+=$escape(detailData.projectName);
$out+='</div> </div> <div class="form-group col-md-12"> <label class="col-sm-2 control-label">收支类型：</label> <div class="col-sm-10">';
$out+=$escape(detailData.feeTypeName);
$out+='</div> </div> <div class="form-group col-md-12"> <label class="col-sm-2 control-label">发起时间：</label> <div class="col-sm-10">';
$out+=$escape(_momentFormat(detailData.createDate,'YYYY/MM/DD'));
$out+='</div> </div> <div class="form-group col-md-12"> <label class="col-sm-2 control-label">节点金额：</label> <div class="col-sm-10">';
$out+=$escape(_expNumberFilter(detailData.nodeFee));
$out+='元</div> </div> <div class="form-group col-md-12"> <label class="col-sm-2 control-label">发起金额：</label> <div class="col-sm-10">';
$out+=$escape(_expNumberFilter(detailData.launchFee));
$out+='元</div> </div> <div class="form-group col-md-12"> <label class="col-sm-2 control-label"> ';
if(type==2){
$out+=' 付款金额： ';
}else{
$out+=' 到账金额： ';
}
$out+=' </label> <div class="col-sm-10">';
$out+=$escape(_expNumberFilter(detailData.accountFee));
$out+='元</div> </div> <div class="form-group col-md-12"> <label class="col-sm-2 control-label"> ';
if(type==2){
$out+=' 应付金额： ';
}else{
$out+=' 应收金额： ';
}
$out+=' </label> <div class="col-sm-10">';
$out+=$escape(_expNumberFilter(detailData.receivableFee));
$out+='元</div> </div> <div class="col-md-12 p-w-lg"> <label class="control-label"> ';
if(type==2){
$out+=' 付款明细： ';
}else{
$out+=' 到账明细： ';
}
$out+=' </label> <div style="max-height: 200px;overflow: auto;"> <table class="table table-bordered table-responsive"> <thead> <tr> <th> ';
if(type==2){
$out+=' 付款日期 ';
}else{
$out+=' 到账日期 ';
}
$out+=' </th> <th> ';
if(type==2){
$out+=' 付账金额（元） ';
}else{
$out+=' 到账金额（元） ';
}
$out+=' </th> <th>收支类型</th> </tr> </thead> <tbody> ';
$each(detailData.paymentDetailDTOList,function(d,$index){
$out+=' <tr data-action="viewDetail" data-id="';
$out+=$escape(d.id);
$out+='"> <td>';
$out+=$escape(_momentFormat(d.createDate,'YYYY/MM/DD'));
$out+='</td> <td>';
$out+=$escape(_expNumberFilter(d.accountFee));
$out+=' </td> <td>';
$out+=$escape(d.feeTypeName);
$out+='</td> </tr> ';
});
$out+=' ';
if(!(detailData.paymentDetailDTOList && detailData.paymentDetailDTOList.length>0)){
$out+=' <tr> <td colspan="3" class="text-center v-middle"> <div class=""> <img src="';
$out+=$escape(_url('/assets/img/default/without_data.png'));
$out+='" height="100"> <span class="fc-dark-blue dp-block">没有相关数据</span> </div> </td> </tr> ';
}
$out+=' </tbody> </table> </div> </div> </div>';
return new String($out);
});/*v:1*/
template('m_payments/m_payments_payable','<div> <form role="form" class="form-inline m-md"> <div class="form-group z-index-1"> <label class="">当前组织：</label> <div class="btn-group" id="selectOrg"> </div> </div> <div class="form-group"> <label class="m-t-xs">时间：</label> <div class="btn-group pull-right"> <a class="btn btn-default btn-sm m-r-none" href="javascript:void(0)" data-action="setTime" data-days="30">一个月</a> <a class="btn btn-default btn-sm m-r-none" href="javascript:void(0)" data-action="setTime" data-days="90">一季度</a> <a class="btn btn-default btn-sm m-r-none" href="javascript:void(0)" data-action="setTime" data-days="180">半年</a> <a class="btn btn-default btn-sm m-r-none" href="javascript:void(0)" data-action="setTime" data-days="360">一年</a> </div> </div> <div class="form-group"> <div class="input-group dp-inline-block"> <input type="text" class="form-control input-sm " id="ipt_startTime" name="startTime" placeholder="开始日期" readonly="" value="" style="width: 110px;" > <span class="input-group-addon no-padding"> <i class="icon-sm icon-append fa fa-calendar"></i> </span> </div> <div class="input-group dp-inline-block"> <input type="text" class="form-control input-sm" id="ipt_endTime" name="endTime" placeholder="结束日期" readonly="" value="" style="width: 110px;" > <span class="input-group-addon no-padding"> <i class="icon-sm icon-append fa fa-calendar"></i> </span> </div> </div> <button class="btn btn-white btn-sm" data-action="refreshBtn">刷新数据</button> </form> <div class="data-list-box"> <div class="row"> <input type="hidden" name="feeType" value=""/> <input type="hidden" name="associatedOrg" value=""/> <input type="hidden" name="projectName" value=""/> <div class="col-md-12 data-list-container p-w-lg"></div> <div class="col-md-12 p-w-m"> <div id="data-pagination-container" class="m-pagination pull-right "></div> </div> </div> </div> </div>');/*v:1*/
template('m_payments/m_payments_payable_list',function($data,$filename
/**/) {
'use strict';var $utils=this,$helpers=$utils.$helpers,$each=$utils.$each,dataList=$data.dataList,d=$data.d,$index=$data.$index,$escape=$utils.$escape,_momentFormat=$helpers._momentFormat,_expNumberFilter=$helpers._expNumberFilter,_url=$helpers._url,_isBlank=$helpers._isBlank,paymentSum=$data.paymentSum,$out='';$out+='<table class="table table-bordered table-responsive"> <thead> <tr> <th width="15%">日期</th> <th width="15%"><span class="th-span-pr">应付（元）</span></th> <th width="15%"> 收支分类子项 <a class="icon-filter pull-right" id="filterFeeType" style="display: none;"><i class="icon iconfont icon-shaixuan"></i></a> </th> <th width="25%">备注</th> <th width="15%"> 关联组织 <a class="icon-filter pull-right" id="filterAssociatedOrg" style="display: none;"><i class="icon iconfont icon-shaixuan"></i></a> </th> <th width="15%"> 关联项目 <a class="icon-filter pull-right" id="filterProjectName" style="display: none;"><i class="icon iconfont icon-shaixuan"></i></a> </th> </tr> </thead> <tbody> ';
$each(dataList,function(d,$index){
$out+=' <tr > <td>';
$out+=$escape(_momentFormat(d.createDate,'YYYY/MM/DD'));
$out+='</td> <td class="text-right"> <a class="td-span-pr" href="javascript:void(0);" data-action="viewDetail" data-id="';
$out+=$escape(d.id);
$out+='">';
$out+=$escape(_expNumberFilter(d.profitFee));
$out+='</a> </td> <td>';
$out+=$escape(d.feeTypeName);
$out+='</td> <td>';
$out+=$escape(d.feeName);
$out+='</td> <td> ';
if(d.fromCompanyName!=null && d.fromCompanyName!=''){
$out+=' ';
$out+=$escape(d.fromCompanyName);
$out+=' ';
}else if(d.toCompanyName!=null && d.toCompanyName!=''){
$out+=' ';
$out+=$escape(d.toCompanyName);
$out+=' ';
}else{
$out+=' -- ';
}
$out+=' </td> <td> <a href="javascript:void(0);" data-action="goExpensesPage" data-project-id="';
$out+=$escape(d.projectId);
$out+='" data-type="';
$out+=$escape(d.feeType);
$out+='">';
$out+=$escape(d.projectName);
$out+='</a> </td> </tr> ';
});
$out+=' ';
if(!(dataList && dataList.length>0)){
$out+=' <tr> <td colspan="6" class="text-center v-middle"> <div class="m-b-xl m-t-md"> <img src="';
$out+=$escape(_url('/assets/img/default/without_data.png'));
$out+='"> <span class="fc-dark-blue dp-block">没有相关数据</span> </div> </td> </tr> ';
}
$out+=' </tbody> </table> <div class="pt-absolute"> <span>总应付金额：</span> <span> ';
if(_isBlank(paymentSum)){
$out+=' <span class="fc-v1-green">0</span> ';
}else{
$out+=' <span class="fc-v1-red">';
$out+=$escape(_expNumberFilter(paymentSum));
$out+='</span> ';
}
$out+=' 元 </span> </div>';
return new String($out);
});/*v:1*/
template('m_payments/m_payments_profitStatement',function($data,$filename
/**/) {
'use strict';var $utils=this,$helpers=$utils.$helpers,$escape=$utils.$escape,currentYear=$data.currentYear,$out='';$out+='<div class="ibox m_payments_profitStatement"> <div class="ibox-title secondary-menu-outbox"> <div class="row"> <div class="col-md-6">  <div class="no-margin p-h-sm breadcrumb-box" > <ol class="breadcrumb"> <li> 财务管理 </li> <li class="active fa fa-angle-right"> <strong>利润报表</strong> </li> </ol> </div> </div> <div class="col-md-6 text-right p-w-sm"> </div> <div class="clearfix"></div> </div> </div> <div class="ibox-content no-padding"> <form role="form" class="form-inline m-md"> <div class="form-group z-index-1"> <label>当前组织：</label> <div class="btn-group" id="selectOrg"> </div> </div> <div class="form-group"> <label class="m-t-xs">时间：</label> <div class="btn-group pull-right"> <a class="btn btn-default btn-sm m-r-none" href="javascript:void(0)" data-action="setTime" data-type="0">今年</a> <a class="btn btn-default btn-sm m-r-none" href="javascript:void(0)" data-action="setTime" data-type="-1">去年</a> </div> </div> <div class="form-group"> <div class="input-group dp-inline-block"> <input type="text" class="form-control input-sm " id="ipt_date" name="date" placeholder="年份" readonly="" value="';
$out+=$escape(currentYear);
$out+='年" style="width: 110px;"> <span class="input-group-addon no-padding"> <i class="icon-sm icon-append fa fa-calendar"></i> </span> </div> </div> <button class="btn btn-white btn-sm" data-action="refreshBtn">刷新数据</button> </form> <div class="p-w-m" id="profitBox"> </div> </div> </div>';
return new String($out);
});/*v:1*/
template('m_payments/m_payments_profitStatement_list',function($data,$filename
/**/) {
'use strict';var $utils=this,$helpers=$utils.$helpers,$each=$utils.$each,profitData=$data.profitData,p=$data.p,i=$data.i,$escape=$utils.$escape,_expNumberFilter=$helpers._expNumberFilter,s=$data.s,si=$data.si,$out='';$out+='<table class="table table-bordered table-responsive"> <thead> <tr> <th colspan="2">月份</th> <th class="text-right">1月</th> <th class="text-right">2月</th> <th class="text-right">3月</th> <th class="text-right">4月</th> <th class="text-right">5月</th> <th class="text-right">6月</th> <th class="text-right">7月</th> <th class="text-right">8月</th> <th class="text-right">9月</th> <th class="text-right">10月</th> <th class="text-right">11月</th> <th class="text-right">12月</th> <th class="text-right">合计（元）</th> </tr> </thead> <tbody> ';
$each(profitData,function(p,i){
$out+=' <tr data-type="';
$out+=$escape(p.arrowsFlag==1?'':p.code);
$out+='" style="';
$out+=$escape(p.flag==1?'':'display: none;');
$out+='"> <td width="11.5%" class="';
$out+=$escape(p.flag==1?'bg-title':'');
$out+=' v-middle" rowspan="';
$out+=$escape(p.list.length);
$out+='" > ';
if(p.arrowsFlag==1){
$out+=' <a href="javascript:void(0);" class="icon-angle" data-action="expand" data-type="';
$out+=$escape(p.code);
$out+='"><i class="fa fa-angle-right"></i></a> ';
}
$out+=' <span class="';
$out+=$escape(p.arrowsFlag==1?'':'m-l');
$out+='">';
$out+=$escape(p.key);
$out+='</span> </td> ';
if(p.list.length>0){
$out+=' <td width="10.5%" class="';
$out+=$escape(p.flag==1?'bg-value':'');
$out+='">';
$out+=$escape(p.list[0].expTypeName);
$out+='：</td> <td width="6%" class="';
$out+=$escape(p.flag==1?'bg-value':'');
$out+=' text-right">';
$out+=$escape(_expNumberFilter(p.list[0].januaryData));
$out+='</td> <td width="6%" class="';
$out+=$escape(p.flag==1?'bg-value':'');
$out+=' text-right">';
$out+=$escape(_expNumberFilter(p.list[0].februaryData));
$out+='</td> <td width="6%" class="';
$out+=$escape(p.flag==1?'bg-value':'');
$out+=' text-right">';
$out+=$escape(_expNumberFilter(p.list[0].marchData));
$out+='</td> <td width="6%" class="';
$out+=$escape(p.flag==1?'bg-value':'');
$out+=' text-right">';
$out+=$escape(_expNumberFilter(p.list[0].aprilData));
$out+='</td> <td width="6%" class="';
$out+=$escape(p.flag==1?'bg-value':'');
$out+=' text-right">';
$out+=$escape(_expNumberFilter(p.list[0].mayData));
$out+='</td> <td width="6%" class="';
$out+=$escape(p.flag==1?'bg-value':'');
$out+=' text-right">';
$out+=$escape(_expNumberFilter(p.list[0].juneData));
$out+='</td> <td width="6%" class="';
$out+=$escape(p.flag==1?'bg-value':'');
$out+=' text-right">';
$out+=$escape(_expNumberFilter(p.list[0].julyData));
$out+='</td> <td width="6%" class="';
$out+=$escape(p.flag==1?'bg-value':'');
$out+=' text-right">';
$out+=$escape(_expNumberFilter(p.list[0].augustData));
$out+='</td> <td width="6%" class="';
$out+=$escape(p.flag==1?'bg-value':'');
$out+=' text-right">';
$out+=$escape(_expNumberFilter(p.list[0].septemberData));
$out+='</td> <td width="6%" class="';
$out+=$escape(p.flag==1?'bg-value':'');
$out+=' text-right">';
$out+=$escape(_expNumberFilter(p.list[0].octoberData));
$out+='</td> <td width="6%" class="';
$out+=$escape(p.flag==1?'bg-value':'');
$out+=' text-right">';
$out+=$escape(_expNumberFilter(p.list[0].novemberData));
$out+='</td> <td width="6%" class="';
$out+=$escape(p.flag==1?'bg-value':'');
$out+=' text-right">';
$out+=$escape(_expNumberFilter(p.list[0].decemberData));
$out+='</td> <td width="6%" class="';
$out+=$escape(p.flag==1?'bg-value':'');
$out+=' text-right">';
$out+=$escape(_expNumberFilter(p.list[0].totalData));
$out+='</td> ';
}
$out+=' </tr> ';
if( p.list.length>1){
$out+=' ';
$each(p.list,function(s,si){
$out+=' ';
if(si>0){
$out+=' <tr data-type="';
$out+=$escape(p.code);
$out+='" style="';
$out+=$escape(p.flag==1?'':'display: none;');
$out+='"> <td width="10.5%" class="';
$out+=$escape(p.flag==1?'bg-value':'');
$out+='">';
$out+=$escape(s.expTypeName);
$out+='：</td> <td width="6%" class="';
$out+=$escape(p.flag==1?'bg-value':'');
$out+=' text-right">';
$out+=$escape(_expNumberFilter(s.januaryData));
$out+='</td> <td width="6%" class="';
$out+=$escape(p.flag==1?'bg-value':'');
$out+=' text-right">';
$out+=$escape(_expNumberFilter(s.februaryData));
$out+='</td> <td width="6%" class="';
$out+=$escape(p.flag==1?'bg-value':'');
$out+=' text-right">';
$out+=$escape(_expNumberFilter(s.marchData));
$out+='</td> <td width="6%" class="';
$out+=$escape(p.flag==1?'bg-value':'');
$out+=' text-right">';
$out+=$escape(_expNumberFilter(s.aprilData));
$out+='</td> <td width="6%" class="';
$out+=$escape(p.flag==1?'bg-value':'');
$out+=' text-right">';
$out+=$escape(_expNumberFilter(s.mayData));
$out+='</td> <td width="6%" class="';
$out+=$escape(p.flag==1?'bg-value':'');
$out+=' text-right">';
$out+=$escape(_expNumberFilter(s.juneData));
$out+='</td> <td width="6%" class="';
$out+=$escape(p.flag==1?'bg-value':'');
$out+=' text-right">';
$out+=$escape(_expNumberFilter(s.julyData));
$out+='</td> <td width="6%" class="';
$out+=$escape(p.flag==1?'bg-value':'');
$out+=' text-right">';
$out+=$escape(_expNumberFilter(s.augustData));
$out+='</td> <td width="6%" class="';
$out+=$escape(p.flag==1?'bg-value':'');
$out+=' text-right">';
$out+=$escape(_expNumberFilter(s.septemberData));
$out+='</td> <td width="6%" class="';
$out+=$escape(p.flag==1?'bg-value':'');
$out+=' text-right">';
$out+=$escape(_expNumberFilter(s.octoberData));
$out+='</td> <td width="6%" class="';
$out+=$escape(p.flag==1?'bg-value':'');
$out+=' text-right">';
$out+=$escape(_expNumberFilter(s.novemberData));
$out+='</td> <td width="6%" class="';
$out+=$escape(p.flag==1?'bg-value':'');
$out+=' text-right">';
$out+=$escape(_expNumberFilter(s.decemberData));
$out+='</td> <td width="6%" class="';
$out+=$escape(p.flag==1?'bg-value':'');
$out+=' text-right">';
$out+=$escape(_expNumberFilter(s.totalData));
$out+='</td> </tr> ';
}
$out+=' ';
});
$out+=' ';
}
$out+=' ';
});
$out+=' </tbody> </table>';
return new String($out);
});/*v:1*/
template('m_payments/m_payments_projectCost','<div class="ibox"> <div class="ibox-title secondary-menu-outbox"> <div class="row"> <div class="col-md-6">  <div class="no-margin p-h-sm breadcrumb-box" > <ol class="breadcrumb"> <li> 财务管理 </li> <li class="active fa fa-angle-right"> <strong>项目收支</strong> </li> </ol> </div> </div> <div class="col-md-6 text-right p-w-sm"> </div> <div class="clearfix"></div> </div> </div> <div class="ibox-content no-padding" style=""> <form role="form" class="form-inline m-md"> <div class="m_cost_details"> <form class="form-inline m-md"> <div class="form-group z-index-1"> <label class="">当前组织：</label> <div class="btn-group" id="selectOrg"> </div> </div> <div class="time-combination form-group"> </div> <button class="btn btn-white btn-sm" data-action="refreshBtn">刷新数据</button> </form> </div> </form> <div class="data-list-box"> <div class="row"> <div class="col-md-12 data-list-container p-w-lg"></div> <div class="col-md-12 p-w-m"> <div id="data-pagination-container" class="m-pagination pull-right "></div> </div> </div> </div> </div> </div> ');/*v:1*/
template('m_payments/m_payments_projectCost_list',function($data,$filename
/**/) {
'use strict';var $utils=this,$helpers=$utils.$helpers,dataList=$data.dataList,$each=$utils.$each,d=$data.d,i=$data.i,$escape=$utils.$escape,_expNumberFilter=$helpers._expNumberFilter,_url=$helpers._url,$out='';$out+='<table class="table table-bordered table-responsive"> <thead> <tr> <th width="15%">项目名称</th> <th> <span class="th-span-pr">立项组织/立项人</span> </th> <th> 合同回款 </th> <th> 到账金额 </th> <th> 技术审查费/收 </th> <th>到账金额</th> <th>合作设计费/收</th> <th>到账金额</th> <th>累计到账</th> <th>合作设计费/付</th> <th>付款金额</th> <th>报销</th> <th>费用</th> <th> 累计付款 <a class="icon-filter pull-right" id="filterFromCompany" style="display: none;"><i class="icon iconfont icon-shaixuan"></i></a> </th> </tr> </thead> <tbody> ';
if(dataList!=null && dataList.length>0){
$out+=' ';
$each(dataList,function(d,i){
$out+=' <tr> <td> ';
$out+=$escape(d.projectName);
$out+=' </td> <td> ';
$out+=$escape(d.projectCreator);
$out+=' </td> <td> ';
$out+=$escape(_expNumberFilter(d.contract));
$out+=' </td> <td> ';
$out+=$escape(_expNumberFilter(d.contractReal));
$out+=' </td> <td> ';
$out+=$escape(_expNumberFilter(d.technical));
$out+=' </td> <td> ';
$out+=$escape(_expNumberFilter(d.technicalReal));
$out+=' </td> <td> ';
$out+=$escape(_expNumberFilter(d.cooperateGain));
$out+=' </td> <td> ';
$out+=$escape(_expNumberFilter(d.cooperateGainReal));
$out+=' </td> <td> ';
$out+=$escape(_expNumberFilter(d.gainRealSummary));
$out+=' </td> <td> ';
$out+=$escape(_expNumberFilter(d.cooperatePay));
$out+=' </td> <td> ';
$out+=$escape(_expNumberFilter(d.cooperatePayReal));
$out+=' </td> <td> ';
$out+=$escape(_expNumberFilter(d.payExpense));
$out+=' </td> <td> ';
$out+=$escape(_expNumberFilter(d.payOther));
$out+=' </td> <td> ';
$out+=$escape(_expNumberFilter(d.payRealSummary));
$out+=' </td> </tr> ';
});
$out+=' ';
}else{
$out+=' <tr> <td colspan="14" class="text-center v-middle"> <div class="m-b-xl m-t-md"> <img src="';
$out+=$escape(_url('/assets/img/default/without_data.png'));
$out+='"> <span class="fc-dark-blue dp-block">没有相关数据</span> </div> </td> </tr> ';
}
$out+=' </tbody> </table> ';
return new String($out);
});/*v:1*/
template('m_payments/m_payments_receivable','<div> <form role="form" class="form-inline m-md"> <div class="form-group z-index-1"> <label class="">当前组织：</label> <div class="btn-group" id="selectOrg"> </div> </div> <div class="form-group"> <label class="m-t-xs">时间：</label> <div class="btn-group pull-right"> <a class="btn btn-default btn-sm m-r-none" href="javascript:void(0)" data-action="setTime" data-days="30">一个月</a> <a class="btn btn-default btn-sm m-r-none" href="javascript:void(0)" data-action="setTime" data-days="90">一季度</a> <a class="btn btn-default btn-sm m-r-none" href="javascript:void(0)" data-action="setTime" data-days="180">半年</a> <a class="btn btn-default btn-sm m-r-none" href="javascript:void(0)" data-action="setTime" data-days="360">一年</a> </div> </div> <div class="form-group"> <div class="input-group dp-inline-block"> <input type="text" class="form-control input-sm " id="ipt_startTime" name="startTime" placeholder="开始日期" readonly="" value="" style="width: 110px;"> <span class="input-group-addon no-padding"> <i class="icon-sm icon-append fa fa-calendar"></i> </span> </div> <div class="input-group dp-inline-block"> <input type="text" class="form-control input-sm" id="ipt_endTime" name="endTime" placeholder="结束日期" readonly="" value="" style="width: 110px;"> <span class="input-group-addon no-padding"> <i class="icon-sm icon-append fa fa-calendar"></i> </span> </div> </div> <button class="btn btn-white btn-sm" data-action="refreshBtn">刷新数据</button> </form> <div class="data-list-box"> <div class="row"> <input type="hidden" name="feeType" value=""/> <input type="hidden" name="associatedOrg" value=""/> <input type="hidden" name="projectName" value=""/> <div class="col-md-12 data-list-container p-w-lg"></div> <div class="col-md-12 p-w-m"> <div id="data-pagination-container" class="m-pagination pull-right "></div> </div> </div> </div> </div>');/*v:1*/
template('m_payments/m_payments_receivable_list',function($data,$filename
/**/) {
'use strict';var $utils=this,$helpers=$utils.$helpers,$each=$utils.$each,dataList=$data.dataList,d=$data.d,$index=$data.$index,$escape=$utils.$escape,_momentFormat=$helpers._momentFormat,_expNumberFilter=$helpers._expNumberFilter,_url=$helpers._url,_isBlank=$helpers._isBlank,receivaleSum=$data.receivaleSum,$out='';$out+='<table class="table table-bordered table-responsive"> <thead> <tr> <th width="15%">日期</th> <th width="15%"><span class="th-span-pr">应收（元）</span></th> <th width="15%"> 收支分类子项 <a class="icon-filter pull-right" id="filterFeeType" style="display: none;"><i class="icon iconfont icon-shaixuan"></i></a> </th> <th width="25%">备注</th> <th width="15%"> 关联组织 <a class="icon-filter pull-right" id="filterAssociatedOrg" style="display: none;"><i class="icon iconfont icon-shaixuan"></i></a> </th> <th width="15%"> 关联项目 <a class="icon-filter pull-right" id="filterProjectName" style="display: none;"><i class="icon iconfont icon-shaixuan"></i></a> </th> </tr> </thead> <tbody> ';
$each(dataList,function(d,$index){
$out+=' <tr > <td>';
$out+=$escape(_momentFormat(d.createDate,'YYYY/MM/DD'));
$out+='</td> <td class="text-right"> <a class="td-span-pr" href="javascript:void(0);" data-action="viewDetail" data-id="';
$out+=$escape(d.id);
$out+='">';
$out+=$escape(_expNumberFilter(d.profitFee));
$out+='</a> </td> <td>';
$out+=$escape(d.feeTypeName);
$out+='</td> <td>';
$out+=$escape(d.feeName);
$out+='</td> <td> ';
if(d.fromCompanyName!=null && d.fromCompanyName!=''){
$out+=' ';
$out+=$escape(d.fromCompanyName);
$out+=' ';
}else if(d.toCompanyName!=null && d.toCompanyName!=''){
$out+=' ';
$out+=$escape(d.toCompanyName);
$out+=' ';
}else{
$out+=' -- ';
}
$out+=' </td> <td> <a href="javascript:void(0);" data-action="goExpensesPage" data-project-id="';
$out+=$escape(d.projectId);
$out+='" data-type="';
$out+=$escape(d.feeType);
$out+='">';
$out+=$escape(d.projectName);
$out+='</a> </td> </tr> ';
});
$out+=' ';
if(!(dataList && dataList.length>0)){
$out+=' <tr> <td colspan="6" class="text-center v-middle"> <div class="m-b-xl m-t-md"> <img src="';
$out+=$escape(_url('/assets/img/default/without_data.png'));
$out+='"> <span class="fc-dark-blue dp-block">没有相关数据</span> </div> </td> </tr> ';
}
$out+=' </tbody> </table> <div class="pt-absolute "> <span>总应收金额：</span> <span> ';
if(_isBlank(receivaleSum)){
$out+=' <span class="fc-v1-green">0</span> ';
}else if( (receivaleSum+'').indexOf('-')>-1){
$out+=' <span class="fc-v1-red">';
$out+=$escape(_expNumberFilter(receivaleSum));
$out+='</span> ';
}else{
$out+=' <span class="fc-v1-green">';
$out+=$escape(_expNumberFilter(receivaleSum));
$out+='</span> ';
}
$out+=' 元 </span> </div>';
return new String($out);
});/*v:1*/
template('m_payments/m_payments_setFields',function($data,$filename
/**/) {
'use strict';var $utils=this,$helpers=$utils.$helpers,$each=$utils.$each,fieldsList=$data.fieldsList,f=$data.f,fi=$data.fi,$escape=$utils.$escape,c=$data.c,ci=$data.ci,cc=$data.cc,cci=$data.cci,$out='';$out+='<div class="ibox m_payments_setFields no-margin"> <div class="ibox-title" style="min-height: 30px;padding:7px 15px 2px;"> <h4>可选字段</h4> </div> <div class="ibox-content no-padding"> ';
$each(fieldsList,function(f,fi){
$out+=' <div class="panel panel-default"> <div class="panel-body"> <ul class="dd-list"> <li> ';
if(f.expTypeValue!=null && f.expTypeValue!=''){
$out+=' <label class="i-checks fw-normal no-margin col-md-6"> <input name="typeValueCk" type="checkbox" value="';
$out+=$escape(f.expTypeValue);
$out+='" data-key="';
$out+=$escape(f.expTypeKey);
$out+='" data-level="';
$out+=$escape(f.level);
$out+='"/> <span class="i-checks-span">';
$out+=$escape(f.expTypeValue);
$out+='</span> </label> ';
}
$out+=' ';
if(f.childList!=null && f.childList.length>0){
$out+=' <ul class="dd-list"> ';
$each(f.childList,function(c,ci){
$out+=' <li> ';
if(c.expTypeValue!=null && c.expTypeValue!=''){
$out+=' <label class="i-checks fw-normal no-margin col-md-6 "> <input name="typeValueCk" type="checkbox" value="';
$out+=$escape(c.expTypeValue);
$out+='" data-key="';
$out+=$escape(c.expTypeKey);
$out+='" data-level="';
$out+=$escape(c.level);
$out+='"/> <span class="i-checks-span">';
$out+=$escape(c.expTypeValue);
$out+='</span> </label> ';
}
$out+=' ';
if(c.childList!=null && c.childList.length>0){
$out+=' <ul class="dd-list"> ';
$each(c.childList,function(cc,cci){
$out+=' <li> ';
if(cc.expTypeValue!=null && cc.expTypeValue!=''){
$out+=' <label class="i-checks fw-normal no-margin col-md-6"> <input name="typeValueCk" type="checkbox" value="';
$out+=$escape(cc.expTypeValue);
$out+='" data-key="';
$out+=$escape(cc.expTypeKey);
$out+='" data-level="';
$out+=$escape(cc.level);
$out+='"/> <span class="i-checks-span">';
$out+=$escape(cc.expTypeValue);
$out+='</span> </label> ';
}
$out+=' </li> ';
});
$out+=' <div class="clearfix"></div> </ul> ';
}
$out+=' </li> ';
});
$out+=' <div class="clearfix"></div> </ul> ';
}
$out+=' </li> </ul> </div> </div> ';
});
$out+=' </div> </div> ';
return new String($out);
});/*v:1*/
template('m_payments/m_payments_statistics','<div class="ibox"> <div class="ibox-title secondary-menu-outbox"> <div class="row"> <div class="col-md-6">  <div class="no-margin p-h-sm breadcrumb-box" > <ol class="breadcrumb"> <li> 财务管理 </li> <li class="active fa fa-angle-right"> <strong>分类统计</strong> </li> </ol> </div> </div> <div class="col-md-6 text-right p-w-sm"> </div> <div class="clearfix"></div> </div> </div> <div class="ibox-content no-padding" style=""> <form role="form" class="form-inline m-md"> <div class="form-group z-index-1"> <label class="">当前组织：</label> <div class="btn-group" id="selectOrg"> </div> </div> <div class="form-group"> <label class="m-t-xs">时间单位：</label> <div class="btn-group pull-right"> <a class="btn btn-primary btn-sm m-r-none " href="javascript:void(0)" data-action="setTime" data-type="month">月</a> <a class="btn btn-default btn-sm m-r-none" href="javascript:void(0)" data-action="setTime" data-type="year">年</a> </div> </div> <div class="form-group time-box"> <div class="input-group dp-inline-block"> <input type="text" class="form-control input-sm " id="timeStart" name="timeStart" placeholder="开始月份" readonly style="width: 110px;" > <span class="input-group-addon no-padding"> <i class="icon-sm icon-append fa fa-calendar"></i> </span> </div> <div class="input-group dp-inline-block"> <input type="text" class="form-control input-sm " id="timeEnd" name="timeEnd" placeholder="结束月份" readonly style="width: 110px;" > <span class="input-group-addon no-padding"> <i class="icon-sm icon-append fa fa-calendar"></i> </span> </div> </div> <button class="btn btn-white btn-sm" data-action="refreshBtn">刷新数据</button> </form> <div class="ibox m-b-none"> <div class="ibox-title no-borders min-h-50">分类统计范围：</div> <div class="ibox-content no-borders of-hidden m-b-none" id="categoryTypeBox"> </div> </div> <div class="ibox"> <div class="ibox-title no-borders min-h-50 m-b-none p-w-m"> 单位： <a class="btn btn-link text-info" data-action="amountUnit" data-action-type="1">元</a>/ <a class="btn btn-link" data-action="amountUnit" data-action-type="2">万元</a> </div> <div class="ibox-content no-borders of-hidden" id="barChartBox"> </div> </div> </div> </div> <script> </script>');/*v:1*/
template('m_payments/m_payments_statistics_barChart','<style> canvas{ -moz-user-select: none; -webkit-user-select: none; -ms-user-select: none; } #chartjs-tooltip-barChart1,#chartjs-tooltip-barChart2 { opacity: 1; position: absolute; background: rgba(0, 0, 0, .7); color: white; border-radius: 3px; -webkit-transition: all .1s ease; transition: all .1s ease; pointer-events: none; -webkit-transform: translate(-50%, 0); transform: translate(-50%, 0); } .chartjs-tooltip-key { display: inline-block; width: 10px; height: 10px; margin-right: 10px; } </style> <div class="col-md-12 m-b-md"> <canvas id="barChart1" height="80"></canvas> </div> <div class="col-md-12 m-b-md"> <canvas id="barChart2" height="120"></canvas> </div>');/*v:1*/
template('m_payments/m_payments_statistics_categoryType',function($data,$filename
/**/) {
'use strict';var $utils=this,$helpers=$utils.$helpers,categoryTypeList=$data.categoryTypeList,$each=$utils.$each,c=$data.c,ci=$data.ci,$escape=$utils.$escape,t=$data.t,ti=$data.ti,$out='';$out+='<table class="table table-bordered table-responsive m-b-none"> ';
if(categoryTypeList!=null && categoryTypeList.length>0){
$out+=' ';
$each(categoryTypeList,function(c,ci){
$out+=' <tr class="';
$out+=$escape(ci==0?'gray-bg':'');
$out+='"> ';
$each(c,function(t,ti){
$out+=' <td colspan="';
$out+=$escape(t.level);
$out+='" class="text-center"> ';
if(t.expTypeValue!=null && t.expTypeValue!=''){
$out+=' <div class="check-box"> <label class="i-checks"> ';
if(t.selected==1){
$out+=' <input name="itemCk" type="checkbox" data-pid="';
$out+=$escape(t.pid);
$out+='" data-id="';
$out+=$escape(t.id);
$out+='" data-value="';
$out+=$escape(t.expTypeValue);
$out+='" checked/> ';
}else{
$out+=' <input name="itemCk" type="checkbox" data-pid="';
$out+=$escape(t.pid);
$out+='" data-id="';
$out+=$escape(t.id);
$out+='" data-value="';
$out+=$escape(t.expTypeValue);
$out+='"/> ';
}
$out+=' <span class="i-checks-span">';
$out+=$escape(t.expTypeValue);
$out+='</span> </label> </div> ';
}
$out+=' </td> ';
});
$out+=' </tr> ';
});
$out+=' ';
}
$out+=' </table>';
return new String($out);
});/*v:1*/
template('m_payments/m_payments_statistics_lineChart','<div class="col-md-12"> <div id="lineChart" class="c3" style="max-height: 320px; position: relative;"></div> </div>');/*v:1*/
template('m_payments/m_payments_statistics_pieChart','<div class="col-md-6"> <div id="totalRevenueChart"></div> </div> <div class="col-md-6"> <div id="totalExpenditureChart"></div> </div> ');/*v:1*/
template('m_personal/m_bindEmail','<form class="form-horizontal rounded-bottom bindEmailBox"> <div class="ibox"> <div class="ibox-content"> <div class="col-md-12 m-b-sm"> <label>邮箱地址</label> <div class="input-group"> <input type="text" class="form-control" name="bindEmailDtoEmail" maxlength="100"> <span class="input-group-btn"> <button class="btn-u rounded" type="button" data-action="sendValidationEemail">发送验证邮件</button> </span> </div> <div class="note">请输入您要绑定的邮箱地址。</div> </div> </div> </div> <div class="clearfix"></div> </form>');/*v:1*/
template('m_personal/m_bindPhone','<form class="form-horizontal rounded-bottom bindPhoneBox"> <div class="panel-body"> <div class="col-md-12 receiveCodeDiv"> <div class="form-group">  <div class="input-group"> <input placeholder="手机号" class="input form-control" type="text" id="cellphone" name="bindCellPhoneDtoCellphone" maxlength="11"> <span class="input-group-btn"> <a type="button" class="btn btn-u" data-action="receiveCode" style="width:96px;">获取验证码</a> </span> </div> </div> </div> <div class="col-md-12"> <div class="form-group">  <input class="form-control" type="text" placeholder="验证码" name="bindCellPhoneDtoCode"> </div> </div> <div class="note"><b>注：</b>更换绑定手机号，即为更改登录账号！</div> </div>      </form>');/*v:1*/
template('m_personal/m_safety',function($data,$filename
/**/) {
'use strict';var $utils=this,$helpers=$utils.$helpers,$escape=$utils.$escape,userDto=$data.userDto,$out='';$out+='<div class="ibox"> <div class="ibox-content"> <div class="row"> <!--<div class="col-md-12"> <div class="headline"><h4>绑定邮箱</h4></div> <div class="col-md-12"> <p> <span>当前绑定邮箱: <span data-show name="email">';
$out+=$escape(userDto.email);
$out+='</span></span> <a href="JavaScript:void(0);" class="" data-action="bindEmail">修改</a> </p> </div> </div>--> <div class="col-md-12"> <div class="headline"><h4>绑定手机</h4></div> <div class="col-md-12"> <p>当前绑定手机: <span data-show name="cellphone">';
$out+=$escape(userDto.cellphone);
$out+='</span> <a href="JavaScript:void(0);" data-action="bindPhone">修改</a> </p> </div> </div> <div class="col-md-12"> <div class="headline"><h4>修改密码</h4></div> <div class="col-md-12"> <p>修改当前用户的登录密码: <a href="JavaScript:void(0);" data-action="changePwd">修改</a> </p> </div> </div> </div> </div> </div> ';
return new String($out);
});/*v:1*/
template('m_personal/m_uptPassword','<form class="form-horizontal rounded-bottom changePassWordOBox"> <input type="password" style="display:none;"> <div class="panel-body"> <div class="col-md-12"> <div class="form-group"> <label class="col-sm-3 control-label">旧密码<span class="color-red">*</span></label> <div class="col-sm-9"> <input type="password" class="form-control changePwdDtoOldPwd" name="oldPassword" > </div> </div> <div class="form-group"> <label class="col-sm-3 control-label">新密码<span class="color-red">*</span></label> <div class="col-sm-9"> <input type="password" class="form-control changePwdDtoPwd" name="password" id="password"> </div> </div> <div class="form-group"> <label class="col-sm-3 control-label">确认新密码<span class="color-red">*</span></label> <div class="col-sm-9"> <input type="password" class="form-control changePwdDtoRePwd" name="rePassword"> </div> </div> </div> </div>     </form>');/*v:1*/
template('m_personal/m_userInfo',function($data,$filename
/**/) {
'use strict';var $utils=this,$helpers=$utils.$helpers,$escape=$utils.$escape,userDto=$data.userDto,$each=$utils.$each,p=$data.p,i=$data.i,d=$data.d,di=$data.di,r=$data.r,$index=$data.$index,m=$data.m,mi=$data.mi,$out='';$out+='<div class="ibox m_userInfo"> <div class="ibox-title ibox-title-shadow secondary-menu-outbox"> <div class="row"> <div class="col-md-12" id="secondary-menu"> <div class="pull-left m-r-xl"> <h3 class="dp-inline-block" >个人设置</h3> </div> </div> </div> </div> <div class="ibox-content ibox-content-shadow"> <div class="row"> <div class="col-md-12" id="content-box"> <div class=" user-info col-lg-12 no-padding"> <div class="ibox"> <div class="ibox-content content-basic-info"> <div class="row cube-portfolio editableInfo"> <div class="col-lg-1 cbp-l-grid-agency cbp-caption-active cbp-caption-zoom cbp-ready"> <div class="imgContent cbp-item-wrapper pt-relative pull-left pt-relative" style="width: 110px;height: 110px;overflow: hidden; left:-30px;top:-30px; border:5px solid rgb(255,255,255);box-shadow:0 0 2px #e5e6e7;"> <div class="cbp-caption"> <img alt="image" id="headImage" class=" pull-left" src="';
$out+=$escape(userDto.headImgUrl);
$out+='" style="width: 100%;height: 100%;min-height:100px;"> <!--<span class="btnFilePicker" style="display: none">';
$out+=$escape(userDto.headImg!=null && userDto.headImg!=''?'替换头像':'上传头像');
$out+='</span>--> <div class="cbp-caption-activeWrap dark-transparent-hover"> <div class="btnFilePicker cbp-l-caption-body" title="上传头像"><i class="fa fa-camera" style="color: rgba(255,255,255,0.9);"></i></div> </div> </div> </div> </div> <div class="col-lg-8 m-t-xs"> <h3 class="p-t-15 currentCompanyName f-s-20 fc-dark-blue"> <a href="javascript:void(0);" class="m-l-xs" data-action="text_userName"> ';
$out+=$escape(userDto.userName==null || userDto.userName==''?'未设置':userDto.userName);
$out+=' </a> </h3> <div class="editableInfo m-t-lg m-l-xs"> <div class="row"> <div class="col-md-12"> <p class="f-s-16"> <span class="title-span">绑定手机:</span> <span data-show name="cellphone">';
$out+=$escape(userDto.cellphone);
$out+='</span> <a href="JavaScript:void(0);" data-action="bindPhone">修改</a> </p> </div> <div class="col-md-12"> <p class="f-s-16"> <span class="title-span">用户密码:</span> <a href="JavaScript:void(0);" data-action="changePwd">修改</a> </p> </div> </div> </div> </div> </div> </div> <div class="ibox-content border-no-t"> <div class="row"> <div class="col-md-12"> <div class="" style="margin-bottom: 10px;"><h4 class="title-line">所在组织及权限</h4></div> <div class=""> ';
$each(userDto.orgpermissionList,function(p,i){
$out+=' <div class="clearfix"> <p> <h4 class="dp-inline-block col1" >';
$out+=$escape(p.companyName);
$out+='</h4> <span class="text-muted f-s-14"> ';
if(p.departList && p.departList.length>0){
$out+=' ( ';
$each(p.departList,function(d,di){
$out+=' ';
if(di==p.departList.length-1){
$out+=' ';
$out+=$escape(d.departName);
$out+=' ';
$out+=$escape(d.serverStation==null||d.serverStation==''?'':'- '+d.serverStation);
$out+=' ';
}else{
$out+=' ';
$out+=$escape(d.departName);
$out+=' ';
$out+=$escape(d.serverStation==null||d.serverStation==''?'':'- '+d.serverStation);
$out+=' &nbsp;|&nbsp; ';
}
$out+=' ';
});
$out+=' ) ';
}
$out+=' </span> </p> ';
if(p.roleList && p.roleList.length>0){
$out+=' <ul class="authority-list"> ';
$each(p.roleList,function(r,$index){
$out+=' <li class="m-b-xs"> <span class="font-bold f-s-14 role-name" >';
$out+=$escape(r.name);
$out+='：</span> <span class="text-muted f-s-14"> ';
if(r.permissionList && r.permissionList.length>0){
$out+=' ';
$each(r.permissionList,function(m,mi){
$out+=' ';
if(mi==r.permissionList.length-1){
$out+=' ';
$out+=$escape(m.name);
$out+=' ';
}else{
$out+=' ';
$out+=$escape(m.name);
$out+='、 ';
}
$out+=' ';
});
$out+=' ';
}
$out+=' </span> </li> ';
});
$out+=' </ul> ';
}
$out+=' </div> <div class="headline"></div> ';
});
$out+=' </div> </div> </div> </div> </div> </div> </div> </div> </div> </div> ';
return new String($out);
});/*v:1*/
template('m_personal/m_userInfo_edit',function($data,$filename
/**/) {
'use strict';var $utils=this,$helpers=$utils.$helpers,$escape=$utils.$escape,userDto=$data.userDto,$out='';$out+='<form class="userInfoForm form-horizontal border-none"> <div class="ibox"> <div class="ibox-content"> <div class="row"> <div class="col-md-12 margin-top-20"> <div class="row cube-portfolio margin-top-20"> <div class="col-sm-offset-1 col-md-offset-1 col-md-3 cbp-l-grid-agency cbp-caption-active cbp-caption-zoom cbp-ready"> <div class="thumbnails thumbnail-style cbp-item-wrapper text-align-center wid-200" style="box-sizing:border-box;padding:9px;border: solid 1px #eee;"> <div class="cbp-caption"> <img class="img-responsive" alt="Picture" src="';
$out+=$escape(userDto.headImgUrl);
$out+='" style="width: 180px;height: 180px;" > <div class="cbp-caption-activeWrap"> <div class="cbp-l-caption-alignCenter"> <div class="cbp-l-caption-body"> <ul class="link-captions no-bottom-space"> <li> <a href="javascript:void(0)" class="btn-u btn-u-primary rounded" id="comUpload" data-action="changeHeadPic" title="点击设置头像">';
$out+=$escape(userDto.headImg!=null && userDto.headImg!=''?'替换头像':'上传头像');
$out+='</a> </li> </ul> </div> </div> </div> </div> </div> </div> <div class="col-sm-offset-1 col-md-offset-1 col-md-5 col-lg-offset-0"> <div class="form-group"> <label class="col-sm-2 control-label">姓名<span class="color-red">*</span>：</label> <div class="col-sm-10"> <input type="text" class="form-control" name="userName" value="';
$out+=$escape(userDto.userName);
$out+='"> <input type="hidden" name="id" value="';
$out+=$escape(userDto.id);
$out+='"> </div> </div> <div class="form-group"> <label class="col-sm-2 control-label">性别：</label> <div class="col-sm-10"> <select class="form-control" name="sex"> <option value="男" ';
if(userDto.sex=='男'){
$out+='selected';
}
$out+='>男</option> <option value="女" ';
if(userDto.sex=='女'){
$out+='selected';
}
$out+='>女</option> </select> </div> </div> <div class="form-group"> <label class="col-sm-2 control-label">出生日期：</label> <div class="col-sm-10 "> <div class="input-group"> <input type="text" class="form-control" name="birthday" onFocus="WdatePicker()" value="';
$out+=$escape(userDto.birthday);
$out+='"> <span class="input-group-addon"><i class="icon-append fa fa-calendar"></i></span> </div> </div> </div> </div> <div class="col-sm-offset-1 col-md-offset-0 col-md-2 col-lg-offset-1"> <label class="input"> <a href="javascript:void(0)" data-action="cancelEditUserInfo" class="btn-u btn-u-dark-blue rounded">取消</a> <a href="javascript:void(0)" data-action="saveUserInfo" class="btn-u btn-u-dark-blue rounded">保存</a> </label> </div> </div> </div> </div> </div> </div> </form>';
return new String($out);
});/*v:1*/
template('m_personal/m_userInfo_edit2',function($data,$filename
/**/) {
'use strict';var $utils=this,$helpers=$utils.$helpers,$escape=$utils.$escape,userDto=$data.userDto,$out='';$out+='<form class="userInfoForm sky-form border-none"> <div class="col-md-12 userInfoOBox cube-portfolio"> <div class="col-md-3 margin-top-20 cbp-l-grid-agency cbp-caption-active cbp-caption-zoom cbp-ready" > <div class="note"> <b>注</b>：请点击头像进行上传操作！ </div> </div> <div class="col-md-9 margin-top-20"> <div class="col-md-12"> <div class="col-md-5 "> <label class="label">姓名<span class="color-red">*</span></label> <label class="input"> <input type="text" name="userName" value="';
$out+=$escape(userDto.userName);
$out+='"> <input type="hidden" name="id" value="';
$out+=$escape(userDto.id);
$out+='"> </label> </div> <div class="col-md-7 text-right"> <a href="javascript:void(0)" data-action="cancelEditUserInfo" class="btn-u btn-u-default rounded" >取消</a> <a href="javascript:void(0)" data-action="saveUserInfo" class="btn-u rounded" >保存</a> </div> </div> <div class="col-md-12"> <div class="col-md-5"> <label class="label">性别</label> <label class="select"> <select class="curp" name="sex"> <option value="男" ';
if(userDto.sex=='男'){
$out+='selected';
}
$out+='>男</option> <option value="女" ';
if(userDto.sex=='女'){
$out+='selected';
}
$out+='>女</option> </select> <i></i> <span class="whiteMask"></span> </label> </div> </div> <div class="col-md-12"> <div class="col-md-5"> <label class="label">出生日期</label> <label class="input"> <i class="icon-append fa fa-calendar"></i> <input type="text" name="birthday" onFocus="WdatePicker()" value="';
$out+=$escape(userDto.birthday);
$out+='"> </label> </div> </div> </div> </div> </form>';
return new String($out);
});/*v:1*/
template('m_personal/m_userInfo_major_edit',function($data,$filename
/**/) {
'use strict';var $utils=this,$helpers=$utils.$helpers,$each=$utils.$each,majorList=$data.majorList,m=$data.m,i=$data.i,majorId=$data.majorId,$escape=$utils.$escape,$out='';$out+='<form class="userInfo_profession_edit border-none"> <div> <div class="row"> ';
$each(majorList,function(m,i){
$out+=' <div class="col-sm-3"> <div class="radio radio-inline"> ';
if(majorId==m.id){
$out+=' <input id="t';
$out+=$escape(i);
$out+='" value="';
$out+=$escape(m.id);
$out+='" name="major" type="radio" checked> ';
}else{
$out+=' <input id="t';
$out+=$escape(i);
$out+='" value="';
$out+=$escape(m.id);
$out+='" name="major" type="radio" > ';
}
$out+=' <label for="t';
$out+=$escape(i);
$out+='"> ';
$out+=$escape(m.name);
$out+=' </label> </div> </div> ';
});
$out+=' <div class="col-md-12"> </div> <div class="clearfix"></div> </div> <div class="row"> <div class="col-md-12 "> <button type="button" class="btn btn-default btn-sm m-popover-close pull-right "> <i class="glyphicon glyphicon-remove"></i> </button> <button type="button" class="btn btn-primary btn-sm m-popover-submit pull-right m-r-xs"> <i class="fa fa-check"></i> </button> </div> </div> </div> </form>';
return new String($out);
});/*v:1*/
template('m_popConfirm/m_popConfirm','');/*v:1*/
template('m_process/m_process_finance_setting','<div class="m_finance_setting_process" > <div class="col-24-sm-8 col-24-md-8 col-24-lg-6 p-h-xs p-w-xs" id="left-box"> </div> <div class="col-24-sm-16 col-24-md-16 col-24-lg-18 p-h-xs" id="right-box"> </div> </div> ');/*v:1*/
template('m_process/m_process_finance_setting_add',function($data,$filename
/**/) {
'use strict';var $utils=this,$helpers=$utils.$helpers,$escape=$utils.$escape,typeName=$data.typeName,type=$data.type,processInfo=$data.processInfo,$out='';$out+='<div class="ibox"> <div class="ibox-content no-borders"> <form class="form-horizontal m_finance_setting_process_add"> <div class="form-group "> <label class="col-24-md-5 text-right m-t-sm">';
$out+=$escape(typeName);
$out+='类型：<span class="color-red">*</span>：</label> <div class="col-24-md-19"> <select class="form-control" name="receiptType" > <option value="">请选择</option> ';
if(type==0){
$out+='  <option value="2">合同回款</option> <option value="3">技术审查费</option> <option value="5">合作设计费</option> ';
}else{
$out+='  <option value="4">技术审查费</option> <option value="6">合作设计费</option> ';
}
$out+=' </select> </div> </div> <div class="form-group "> <label class="col-24-md-5 text-right m-t-sm">适用团队：<span class="color-red">*</span>：</label> <div class="col-24-md-19"> <div class="btn-group" id="applicableTeam"> </div> </div> </div> <div class="form-group "> <label class="col-24-md-5 text-right m-t-sm">关联团队：<span class="color-red">*</span>：</label> <div class="col-24-md-19"> <div class="btn-group" id="associatedTeam"> </div> </div> </div> <div class="form-group "> <label class="col-24-md-5 text-right m-t-sm">说明：</label> <div class="col-24-md-19"> <textarea class="form-control b-r-sm" name="description" placeholder="请输入内容">';
$out+=$escape(processInfo!=null?processInfo.description:'');
$out+='</textarea> </div> </div> </form> </div> </div> ';
return new String($out);
});/*v:1*/
template('m_process/m_process_finance_setting_content',function($data,$filename
/**/) {
'use strict';var $utils=this,$helpers=$utils.$helpers,receiveProcessList=$data.receiveProcessList,$each=$utils.$each,r=$data.r,i=$data.i,$escape=$utils.$escape,payProcessList=$data.payProcessList,$out='';$out+='<table class="table table-hover"> <thead> <tr> <th>流程名称</th> <th>说明</th> <th>适用团队</th> <th>关联团队</th> <th>修改人</th> <th>操作</th> </tr> </thead> <tbody> <tr> <td colspan="7"> 收款计划流程 <button class="btn btn-link" data-action="add" data-action-type="0" title="添加收款计划流程"><i class="fa fa-plus"></i></button> </td> </tr> ';
if(receiveProcessList!=null && receiveProcessList.length>0){
$out+=' ';
$each(receiveProcessList,function(r,i){
$out+=' <tr data-process-type="';
$out+=$escape(r.processType);
$out+='" data-i="';
$out+=$escape(i);
$out+='" data-id="';
$out+=$escape(r.id);
$out+='" data-process-id="';
$out+=$escape(r.processId);
$out+='"> <td> <label class="i-checks"> ';
if(r.status==1){
$out+=' <input class="ck" name="iCheck';
$out+=$escape(r.id);
$out+='" type="radio" checked /> ';
}else{
$out+=' <input class="ck" name="iCheck';
$out+=$escape(r.id);
$out+='" type="radio" /> ';
}
$out+=' ';
$out+=$escape(r.processName);
$out+=' </label> <a href="javascript:void(0);" data-action="itemEdit"><i class="icon iconfont icon-bianji"></i></a> </td> <td>';
$out+=$escape(r.description);
$out+='</td> <td>';
$out+=$escape(r.companyName);
$out+='</td> <td>';
$out+=$escape(r.relationCompanyName);
$out+='</td> <td>';
$out+=$escape(r.updateUserName);
$out+='</td> <td> ';
if(r.isTemplate!='1' ){
$out+=' <button class="btn btn-primary btn-xs " data-action="edit" data-action-type="0">编辑</button> <button class="btn btn-danger btn-xs " data-action="del" data-action-type="0">删除</button> ';
}
$out+=' </td> </tr> ';
});
$out+=' ';
}else{
$out+=' <tr class="no-data-tr"> <td colspan="6" class="text-center v-middle"> 暂无数据 </td> </tr> ';
}
$out+=' <tr> <td colspan="7"> 付款计划流程 <button class="btn btn-link" data-action="add" data-action-type="1" title="添加付款计划流程"><i class="fa fa-plus"></i></button> </td> </tr> ';
if(payProcessList!=null && payProcessList.length>0){
$out+=' ';
$each(payProcessList,function(r,i){
$out+=' <tr data-process-type="';
$out+=$escape(r.processType);
$out+='" data-i="';
$out+=$escape(i);
$out+='" data-id="';
$out+=$escape(r.id);
$out+='" data-process-id="';
$out+=$escape(r.processId);
$out+='"> <td> <label class="i-checks"> ';
if(r.status==1){
$out+=' <input class="ck" name="iCheck';
$out+=$escape(r.id);
$out+='" type="radio" checked /> ';
}else{
$out+=' <input class="ck" name="iCheck';
$out+=$escape(r.id);
$out+='" type="radio" /> ';
}
$out+=' ';
$out+=$escape(r.processName);
$out+=' </label> </td> <td>';
$out+=$escape(r.description);
$out+='</td> <td>';
$out+=$escape(r.companyName);
$out+='</td> <td>';
$out+=$escape(r.relationCompanyName);
$out+='</td> <td>';
$out+=$escape(r.updateUserName);
$out+='</td> <td> ';
if(r.isTemplate!='1' ){
$out+=' <button class="btn btn-primary btn-xs " data-action="edit" data-action-type="1">编辑</button> <button class="btn btn-danger btn-xs " data-action="del" data-action-type="1">删除</button> ';
}
$out+=' </td> </tr> ';
});
$out+=' ';
}else{
$out+=' <tr class="no-data-tr"> <td colspan="6" class="text-center v-middle"> 暂无数据 </td> </tr> ';
}
$out+=' </tbody> </table>';
return new String($out);
});/*v:1*/
template('m_process/m_process_finance_setting_contractPayment',function($data,$filename
/**/) {
'use strict';var $utils=this,$helpers=$utils.$helpers,listProcessNode=$data.listProcessNode,$each=$utils.$each,n=$data.n,i=$data.i,$escape=$utils.$escape,_url=$helpers._url,$out='';$out+='<div class="ibox"> <div class="ibox-title ibox-title-min"> <a href="javascript:void(0);" class="btn btn-link no-padding" data-action="back">返回项目收支流程</a> </div> <div class="ibox-content"> <table class="table table-hover"> <thead> <tr> <th>合同回款流程</th> <th>说明</th> <th>操作人</th> <th>关联内容</th> <th>应收状态</th> <th>到账状态</th> </tr> </thead> <tbody> ';
if(listProcessNode!=null && listProcessNode.length>0){
$out+=' ';
$each(listProcessNode,function(n,i){
$out+=' <tr data-id="';
$out+=$escape(n.id);
$out+='" data-process-id="';
$out+=$escape(n.processId);
$out+='"> <td> <a href="javascript:void(0);" class="btn btn-link no-padding ';
$out+=$escape(i==0?'active':'');
$out+='" data-action="viewTemplate" data-action-type="';
$out+=$escape(i);
$out+='">';
$out+=$escape(n.nodeName);
$out+='</a> </td> <td> ';
$out+=$escape(n.description);
$out+=' </td> <td>';
$out+=$escape(n.operatorName);
$out+='</td> <td class="check-box"> <label class="i-checks"> ';
if(n.invoiceStatus==1){
$out+=' <input class="ck" name="iCheck" type="checkbox" checked data-type="1"/> <span class="i-checks-span">开票信息</span> ';
}else if(n.invoiceStatus==0){
$out+=' <input class="ck" name="iCheck" type="checkbox" data-type="1"/> <span class="i-checks-span">开票信息</span> ';
}else{
$out+=' ';
}
$out+=' </label> </td> <td> <label class="i-checks"> ';
if(n.receiveOrPayAbleStatus==1){
$out+=' <input class="ck" name="iCheck" type="checkbox" checked data-type="2" /> ';
}else if(n.receiveOrPayAbleStatus==0){
$out+=' <input class="ck" name="iCheck" type="checkbox" data-type="2" /> ';
}else{
$out+=' ';
}
$out+=' </label> </td> <td> <label class="i-checks"> ';
if(n.receiveOrPayStatus==1){
$out+=' <input class="ck" name="iCheck" type="checkbox" checked data-type="4" /> ';
}else if(n.receiveOrPayStatus==0){
$out+=' <input class="ck" name="iCheck" type="checkbox" data-type="4" /> ';
}else{
$out+=' ';
}
$out+=' </label> </td> </tr> ';
});
$out+=' ';
}else{
$out+=' <tr class="no-data"> <td colspan="6" class="text-center v-middle"> <div class="m-b-xl m-t-md"> <img src="';
$out+=$escape(_url('/assets/img/default/without_data.png'));
$out+='"> <span class="fc-dark-blue dp-block">暂无相关数据</span> </div> </td> </tr> ';
}
$out+=' </tbody> </table> <div class="row"> <div class="col-md-6"> <div class="panel panel-default" id="template0"> <div class="panel-heading"> 填写收款计划录入内容 </div> <div class="panel-body"> <form class="form-horizontal"> <div class="form-group"> <label class="col-sm-2 control-label">收款类型：</label> <div class="col-sm-10"> <select class="form-control" > <option value="">请选择</option> <option value="0">合同回款</option> <option value="1">技术审查费</option> <option value="2">合作设计费</option> </select> </div> </div> <div class="form-group"> <label class="col-sm-2 control-label">收款类型：</label> <div class="col-sm-10"> <input type="text" class="form-control" placeholder="请输入收款金额"/> </div> </div> <div class="form-group"> <label class="col-sm-2 control-label">付款单位：</label> <div class="col-sm-10"> <select class="form-control" > <option value="">甲方单位</option> </select> </div> </div> </form> </div> </div> <div class="panel panel-default" id="template1" style="display: none;"> <div class="panel-heading"> 填写节点信息录入内容 </div> <div class="panel-body"> <form class="form-horizontal"> <div class="form-group"> <label class="col-sm-2 control-label">节点信息：</label> <div class="col-sm-10"> <input type="text" class="form-control" placeholder="项目签订后支付定金20%"></input> </div> </div> <div class="form-group"> <label class="col-sm-2 control-label">比例：</label> <div class="col-sm-10"> <input type="text" class="form-control" placeholder="20%"></input> </div> </div> <div class="form-group"> <label class="col-sm-2 control-label">金额（万元）：</label> <div class="col-sm-10"> <input type="text" class="form-control" placeholder="400万元"></input> </div> </div> </form> </div> </div> <div class="panel panel-default" id="template2" style="display: none;"> <div class="panel-heading"> 发起回款申请<a href="javascript:void(0)" class="btn btn-primary btn-sm pull-right">增加开票信息</a> </div> <div class="panel-body"> <form class="form-horizontal"> <div class="form-group"> <label class="col-sm-2 control-label">申请人：</label> <div class="col-sm-10"> <input type="text" class="form-control" placeholder="当前项目的经营负责人、经营助理"></input> </div> </div> <div class="form-group"> <label class="col-sm-2 control-label">金额（万元）：</label> <div class="col-sm-10"> <input type="text" class="form-control" placeholder="400万元"></input> </div> </div> <a class="close-link pull-right"> <i class="fa fa-times"></i> </a> <div class="clearfix"></div> <div class="hr-line-solid"></div> <div class="form-group"> <label class="col-sm-2 control-label">申请日期：</label> <div class="col-sm-10"> <input type="text" class="form-control" value="" placeholder="yyyy-MM-dd"></input> </div> </div> <div class="form-group"> <label class="col-sm-2 control-label">收票方名称：</label> <div class="col-sm-10"> <select class="form-control"> <option value="">请选择</option> </select> </div> </div> <div class="form-group"> <label class="col-sm-2 control-label">纳税识别号：</label> <div class="col-sm-10"> <input type="text" class="form-control" placeholder="9144444444444444444"></input> </div> </div> <div class="form-group"> <label class="col-sm-2 control-label">开票金额：</label> <div class="col-sm-10"> <input type="text" class="form-control" placeholder="请输入开票金额"></input> </div> </div> <div class="form-group"> <label class="col-sm-2 control-label">开票内容：</label> <div class="col-sm-10"> <input type="text" class="form-control" placeholder="请输入开票内容"></input> </div> </div> <div class="form-group"> <label class="col-sm-2 control-label">备注：</label> <div class="col-sm-10"> <input type="text" class="form-control" placeholder="请输入备注"></input> </div> </div> </form> </div> </div> <div class="panel panel-default" id="template3" style="display: none;"> <div class="panel-heading"> 填写到账金额及日期 </div> <div class="panel-body"> <form class="form-horizontal"> <div class="form-group"> <label class="col-sm-2 control-label">到账金额：</label> <div class="col-sm-10"> <input type="text" class="form-control" placeholder="100万元"></input> </div> </div> <div class="form-group"> <label class="col-sm-2 control-label">到账日期：</label> <div class="col-sm-10"> <input type="text" class="form-control" placeholder="yyyy-MM-dd"></input> </div> </div> </form> </div> </div> </div> </div> </div> </div> ';
return new String($out);
});/*v:1*/
template('m_process/m_process_finance_setting_technicalReviewFee',function($data,$filename
/**/) {
'use strict';var $utils=this,$helpers=$utils.$helpers,listProcessNode=$data.listProcessNode,$each=$utils.$each,n=$data.n,i=$data.i,$escape=$utils.$escape,_url=$helpers._url,$out='';$out+='<div class="ibox"> <div class="ibox-title ibox-title-min"> <a href="javascript:void(0);" class="btn btn-link no-padding" data-action="back">返回项目收支流程</a> </div> <div class="ibox-content"> <table class="table table-hover"> <thead> <tr> <th>技术审查费收款流程</th> <th>说明</th> <th>操作人</th> <th>关联内容</th> <th>同步信息</th> <th>应收状态</th> <th>到账状态</th> </tr> </thead> <tbody> ';
if(listProcessNode!=null && listProcessNode.length>0){
$out+=' ';
$each(listProcessNode,function(n,i){
$out+=' <tr data-id="';
$out+=$escape(n.id);
$out+='" data-process-id="';
$out+=$escape(n.processId);
$out+='"> <td> <a href="javascript:void(0);" class="btn btn-link no-padding ';
$out+=$escape(i==0?'active':'');
$out+='" data-action="viewTemplate" data-action-type="';
$out+=$escape(i);
$out+='">';
$out+=$escape(n.nodeName);
$out+='</a> </td> <td> ';
$out+=$escape(n.description);
$out+=' </td> <td>';
$out+=$escape(n.operatorName);
$out+='</td> <td class="check-box"> <label class="i-checks"> ';
if(n.invoiceStatus==1){
$out+=' <input class="ck" name="iCheck" type="checkbox" checked data-type="1"/> <span class="i-checks-span">开票信息</span> ';
}else if(n.invoiceStatus==0){
$out+=' <input class="ck" name="iCheck" type="checkbox" data-type="1"/> <span class="i-checks-span">开票信息</span> ';
}else{
$out+=' ';
}
$out+=' </label> </td> <td> <label class="i-checks"> ';
if(n.syncStatus==1){
$out+=' <input class="ck" name="iCheck" type="checkbox" checked data-type="6" /> ';
}else if(n.syncStatus==0){
$out+=' <input class="ck" name="iCheck" type="checkbox" data-type="6" /> ';
}else{
$out+=' ';
}
$out+=' </label> </td> <td> <label class="i-checks"> ';
if(n.receiveOrPayAbleStatus==1){
$out+=' <input class="ck" name="iCheck" type="checkbox" checked data-type="2" /> ';
}else if(n.receiveOrPayAbleStatus==0){
$out+=' <input class="ck" name="iCheck" type="checkbox" data-type="2" /> ';
}else{
$out+=' ';
}
$out+=' </label> </td> <td> <label class="i-checks"> ';
if(n.receiveOrPayStatus==1){
$out+=' <input class="ck" name="iCheck" type="checkbox" checked data-type="4" /> ';
}else if(n.receiveOrPayStatus==0){
$out+=' <input class="ck" name="iCheck" type="checkbox" data-type="4" /> ';
}else{
$out+=' ';
}
$out+=' </label> </td> </tr> ';
});
$out+=' ';
}else{
$out+=' <tr class="no-data"> <td colspan="7" class="text-center v-middle"> <div class="m-b-xl m-t-md"> <img src="';
$out+=$escape(_url('/assets/img/default/without_data.png'));
$out+='"> <span class="fc-dark-blue dp-block">暂无相关数据</span> </div> </td> </tr> ';
}
$out+=' <tr> <td colspan="7" class="text-muted"> 注释：如无需财务进行确认到账金额及日期确认时，请在 【发起收款申请】后勾选到款状态 </td> </tr> </tbody> </table> </div> </div> ';
return new String($out);
});/*v:1*/
template('m_production/m_choseUserBox','<div class="m_choseUserBox"> <div class="pt-relative bg-color-white"> <div class="col-sm-12"> <span>选择部门: </span> <button type="button" class="btn btn-primary btn-xs btn-filter" name="btn-filter"> <span class="btn-filter-name" id="orgName"></span> <span class="btn-filter-icon caret"></span> </button> </div> <div class="col-sm-12" style="height: 10px;"> <hr class="line-class"/> </div> <div class="space-15"></div> <div class="chose-user-tree hide" id="organizationTree" > <ul class="sidebar-nav list-group sidebar-nav-v1"> </ul> </div> </div> <div class="pt-relative"> <div class="col-sm-12"> <div id="userListBox" style="height: 385px;"> </div> <div id="userlist-pagination-container" class="m-pagination pull-right m-pagination-cus" style="height: 25px;"></div> </div> </div> </div>');/*v:1*/
template('m_production/m_choseUserList',function($data,$filename
/**/) {
'use strict';var $utils=this,$helpers=$utils.$helpers,$each=$utils.$each,orgUserList=$data.orgUserList,u=$data.u,$index=$data.$index,$escape=$utils.$escape,$out='';$out+='<table class="table table-striped table-hover table-responsive m-b-none" > <thead> <tr> <th>姓名</th> <th>手机号</th> <th></th> </tr> </thead> <tbody> ';
$each(orgUserList,function(u,$index){
$out+=' <tr> <td>';
$out+=$escape(u.userName);
$out+='</td> <td>';
$out+=$escape(u.cellphone);
$out+='</td> <td class="pt-relative "> <!--<a href="javascript:void(0)" data-action="choseUser" data-companyUserId="';
$out+=$escape(u.id);
$out+='" data-userId="';
$out+=$escape(u.userId);
$out+='" class="btn-u btn-u-primany btn-u-xs rounded">选择</a>--> <a type="button" class="btn btn-default btn-xs dropdown-toggle btnReturnFalse" data-toggle="dropdown" aria-expanded="true"> 添加到...<i class="fa fa-angle-down btnReturnFalse"></i> </a> <ul class="dropdown-menu dropdown-menu-v1" role="menu" style="left: -108px;"> <li> <a href="javascript:void(0)" data-id="';
$out+=$escape(u.id);
$out+='" data-user-id="';
$out+=$escape(u.userId);
$out+='" data-action="choseOrgUser" data-i="1">设计</a> </li> <li class="divider"></li> <li> <a href="javascript:void(0)" data-id="';
$out+=$escape(u.id);
$out+='" data-user-id="';
$out+=$escape(u.userId);
$out+='" data-action="choseOrgUser" data-i="2">校对</a> </li> <li class="divider"></li> <li> <a href="javascript:void(0)" data-id="';
$out+=$escape(u.id);
$out+='" data-user-id="';
$out+=$escape(u.userId);
$out+='" data-action="choseOrgUser" data-i="3">审核</a> </li> </ul> </td> </tr> ';
});
$out+=' ';
if(orgUserList==null || orgUserList.length==0){
$out+=' <tr> <td colspan="3" align="center">暂无数据</td> </tr> ';
}
$out+=' </tbody> <tfoot><tr><td colspan="3" id="userList"></td></tr></tfoot> </table> ';
return new String($out);
});/*v:1*/
template('m_production/m_confirmCompletion',function($data,$filename
/**/) {
'use strict';var $utils=this,$helpers=$utils.$helpers,$escape=$utils.$escape,currDate=$data.currDate,$out='';$out+='<form class="form-horizontal m_confirmCompletion m"> <div class="form-group "> <label class="col-md-3 control-label no-pd-left m-t-xs">完成时间：</label> <div class="col-md-8 no-pd-right"> <div class="input-group"> <input type="text" class="form-control input-sm " name="completeDate" onclick="WdatePicker()" value="';
$out+=$escape(currDate);
$out+='"> <span class="input-group-addon no-padding"> <i class="icon-sm icon-append fa fa-calendar"></i> </span> </div> </div> </div> <div class="form-group "> <label class="col-md-3 control-label no-pd-left m-t-xs">完成情况：</label> <div class="col-md-8 no-pd-right"> <textarea class="form-control" name="completion" style="height: 50px;width: 100%;"></textarea> </div> </div>  </form>';
return new String($out);
});/*v:1*/
template('m_production/m_deliveryHistory',function($data,$filename
/**/) {
'use strict';var $utils=this,$helpers=$utils.$helpers,listDeliver=$data.listDeliver,$each=$utils.$each,d=$data.d,i=$data.i,$escape=$utils.$escape,_momentFormat=$helpers._momentFormat,r=$data.r,ri=$data.ri,$out='';$out+='<table class="table table-bordered"> <thead> <tr> <th width="15%">交付名称</th> <th width="15%">说明</th> <th width="16%">时间</th> <th width="14%">负责人</th> <th width="10%">发起人</th> <th width="10%">发起时间</th> <th width="10%">状态</th> <th width="10%">操作</th> </tr> </thead> <tbody> ';
if(listDeliver!=null && listDeliver.length>0){
$out+=' ';
$each(listDeliver,function(d,i){
$out+=' <tr data-id="';
$out+=$escape(d.id);
$out+='" data-i="';
$out+=$escape(i);
$out+='"> <td> <a href="javascript:void(0)" class="editable editable-disabled" data-action="xeditable" data-action-type="text" data-field="taskName"> ';
$out+=$escape(d.name);
$out+=' </a> </td> <td> <a href="javascript:void(0)" class="editable editable-disabled" data-action="xeditable" data-action-type="textarea" data-field="remarks"> ';
$out+=$escape(d.description);
$out+=' </a> </td> <td> <a href="javascript:void(0)" class="editable editable-click editable-disabled" data-action="xeditable" data-action-type="time" data-value="';
$out+=$escape(d.endTime);
$out+='"> ';
$out+=$escape(_momentFormat(d.endTime,'YYYY/MM/DD'));
$out+=' </a> </td> <td> ';
if(d.responseList!=null && d.responseList.length>0){
$out+=' <a href="javascript:void(0)" class="editable editable-click editable-disabled" data-action="xeditable" data-action-type="selectUser"> ';
$each(d.responseList,function(r,ri){
$out+=' ';
if(ri==d.responseList.length-1){
$out+=' <span data-id="';
$out+=$escape(r.id);
$out+='">';
$out+=$escape(r.name);
$out+='</span> ';
}else{
$out+=' <span data-id="';
$out+=$escape(r.id);
$out+='">';
$out+=$escape(r.name);
$out+='</span>, ';
}
$out+=' ';
});
$out+=' </a> ';
}
$out+=' </td> <td> ';
$out+=$escape(d.createByName);
$out+=' </td> <td> ';
$out+=$escape(d.createDate);
$out+=' </td> <td> <a href="javascript:void(0)" class="editable editable-disabled" data-action="xeditable" data-action-type="select"> ';
if(d.isFinished==0){
$out+=' 未完成 ';
}else{
$out+=' 已完成 ';
}
$out+=' </a> </td> <td> <a href="javascript:void(0);" data-action="view" data-id="" ><i class="icon iconfont icon-chakan"></i></a> <a href="javascript:void(0);" data-action="edit" data-id="" ><i class="icon iconfont icon-bianji"></i></a> <a href="javascript:void(0);" data-action="delete" data-id="" ><i class="icon iconfont icon-lajitong text-danger"></i></a> </td> </tr> ';
});
$out+=' ';
}else{
$out+=' <tr> <td class="text-center" colspan="8"> 暂无数据 </td> </tr> ';
}
$out+=' </tbody> </table>';
return new String($out);
});/*v:1*/
template('m_production/m_initiateDelivery','<form class="form-horizontal m"> <div class="form-group"> <label class="col-sm-2 control-label">名称：</label> <div class="col-sm-10"> <input class="form-control" type="text" name="taskName"> </div> </div> <div class="form-group"> <label class="col-sm-2 control-label">说明：</label> <div class="col-sm-10"> <textarea class="form-control" name="remarks"></textarea> </div> </div> <div class="form-group"> <label class="col-sm-2 control-label">截止时间：</label> <div class="col-sm-10 "> <div class="input-group"> <input type="text" class="form-control input-sm" name="deadline" placeholder="请选择时间" readonly onFocus="WdatePicker()"> <span class="input-group-addon no-padding"> <i class="icon-sm icon-append fa fa-calendar" ></i> </span> </div> </div> </div> <div class="form-group"> <label class="col-sm-2 control-label">负责人：</label> <div class="col-sm-10 p-t-7"> <input type="text" class="form-control input-sm hide" name="personInCharge"> <a href="javascript:void(0);" data-action="addPersonInCharge"><i class="fa fa-plus-circle"></i></a> </div> </div> </form>');/*v:1*/
template('m_production/m_production',function($data,$filename
/**/) {
'use strict';var $utils=this,$helpers=$utils.$helpers,$escape=$utils.$escape,projectName=$data.projectName,orgList=$data.orgList,$each=$utils.$each,o=$data.o,$index=$data.$index,dataCompanyId=$data.dataCompanyId,currentManagerObj=$data.currentManagerObj,currentCompanyId=$data.currentCompanyId,currentCompanyUserId=$data.currentCompanyUserId,$out='';$out+='<div class="ibox"> <div class="ibox-title secondary-menu-outbox"> <div class="row"> <div class="col-md-4">  <div class="no-margin p-h-sm breadcrumb-box" > <ol class="breadcrumb"> <li> 我的项目 </li> <li class=" fa fa-angle-right"> ';
$out+=$escape(projectName);
$out+=' </li> <li class="active fa fa-angle-right"> <strong>生产安排</strong> </li> </ol> </div> </div> <div class="col-md-8 text-right" style="padding: 9px 15px;"> ';
if(orgList!=null && orgList.length>0){
$out+=' <strong>当前视图：</strong> <select name="viewByOrg" class="wid-200"> ';
$each(orgList,function(o,$index){
$out+=' ';
if(dataCompanyId == o.id){
$out+=' <option value="';
$out+=$escape(o.id);
$out+='" selected>';
$out+=$escape(o.companyName);
$out+='</option> ';
}else{
$out+=' <option value="';
$out+=$escape(o.id);
$out+='">';
$out+=$escape(o.companyName);
$out+='</option> ';
}
$out+=' ';
});
$out+=' </select> <span class="icon-separation-line"></span> ';
}
$out+=' <span class="">设计负责人：</span> <span class="m-r-sm"> ';
$out+=$escape(currentManagerObj.projectManager?currentManagerObj.projectManager.companyUserName:'');
$out+=' ';
if(currentManagerObj.projectManager.isUpdateOperator==1 && currentCompanyId==dataCompanyId){
$out+=' <a href="javascript:void(0)" data-action="changeOperatorPerson" data-i="0" data-id="';
$out+=$escape(currentManagerObj.projectManager.companyUserId);
$out+='" data-company-id="';
$out+=$escape(currentManagerObj.projectManager.companyId);
$out+='" data-user-name="';
$out+=$escape(currentManagerObj.projectManager.companyUserName);
$out+='" class="showTooltip" data-placement="top" data-toggle="tooltip" data-original-title="更换设计负责人"> <i class="fa fa-retweet"></i> </a> ';
}
$out+=' </span> <span>设计助理：</span> <span class="m-r-sm"> ';
$out+=$escape(currentManagerObj.assistant==null || currentManagerObj.assistant.companyUserName==null?'未设置':currentManagerObj.assistant.companyUserName);
$out+=' ';
if(currentManagerObj.projectManager.companyUserId==currentCompanyUserId && currentCompanyId==dataCompanyId){
$out+=' ';
if(currentManagerObj.assistant!=null){
$out+=' <a href="javascript:void(0)" data-action="changeManagerPerson" data-i="0" data-id="';
$out+=$escape(currentManagerObj.assistant.companyUserId);
$out+='" data-user-name="';
$out+=$escape(currentManagerObj.assistant.companyUserName);
$out+='" data-company-id="';
$out+=$escape(currentManagerObj.assistant.companyId);
$out+='" class="showTooltip" data-placement="top" data-toggle="tooltip" data-original-title="更换设计助理"> <i class="fa fa-retweet"></i> </a> ';
}else{
$out+=' <a href="javascript:void(0)" data-action="changeManagerPerson" data-i="0" data-id="" data-user-name="" data-company-id="" class="showTooltip" data-placement="top" data-toggle="tooltip" data-original-title="更换助理"> <i class="fa fa-retweet"></i> </a> ';
}
$out+=' ';
}
$out+=' </span> </div> <div class="clearfix"></div> </div> </div> <div class="ibox-content no-padding" id="tabContent"> </div> </div> ';
return new String($out);
});/*v:1*/
template('m_production/m_productionSchedule',function($data,$filename
/**/) {
'use strict';var $utils=this,$helpers=$utils.$helpers,taskScheduleChangesList=$data.taskScheduleChangesList,$escape=$utils.$escape,$each=$utils.$each,v=$data.v,$index=$data.$index,$out='';$out+='<form class="form-horizontal rounded-bottom taskProgressOBox noborder"> <div class="ibox"> <div class="ibox-content"> <div class="col-md-12"> <div class="col-md-2 text-right" style="line-height: 22px;"> <label> <b>任务计划进度:</b> </label> </div> ';
if(taskScheduleChangesList && taskScheduleChangesList.length>0){
$out+=' <div class="col-md-7" style="line-height: 22px;"> ';
$out+=$escape(taskScheduleChangesList[0].startTime);
$out+=' ';
if((taskScheduleChangesList[0].startTime!=null && taskScheduleChangesList[0].startTime!='')
                    || (taskScheduleChangesList[0].endTime!=null && taskScheduleChangesList[0].endTime!='')){
$out+=' <span>~</span> ';
}
$out+=' ';
$out+=$escape(taskScheduleChangesList[0].endTime);
$out+=' ';
if((taskScheduleChangesList[0].startTime!=null && taskScheduleChangesList[0].startTime!='')
                    && (taskScheduleChangesList[0].endTime!=null && taskScheduleChangesList[0].endTime!='')){
$out+=' ';
if(taskScheduleChangesList[0].allDay!=null){
$out+=' <span>&nbsp;( <span class="diffDaysTxt">';
$out+=$escape(taskScheduleChangesList[0].allDay-0);
$out+='</span>天 )</span> ';
}
$out+=' ';
}
$out+=' </div> <div class="col-md-3"> <a href="javascript:void(0)" data-action="addScheduleProgressChange" class="btn-u btn-u-xs rounded ';
$out+=$escape(taskScheduleChangesList && taskScheduleChangesList.length>1?'hide':'');
$out+='" data-id="';
$out+=$escape(taskScheduleChangesList[0].id);
$out+='" data-type="';
$out+=$escape(taskScheduleChangesList[0].type);
$out+='" data-list-type="1" data-start-time="';
$out+=$escape(taskScheduleChangesList[0].startTime);
$out+='" data-end-time="';
$out+=$escape(taskScheduleChangesList[0].endTime);
$out+='" > ';
$out+=$escape(taskScheduleChangesList[0].type==3?'修改':'变更');
$out+=' </a> <!--<a href="javascript:void(0)" data-action="delScheduleProgressChange" data-seq="0" data-id="';
$out+=$escape(taskScheduleChangesList[0].id);
$out+='" class="btn-u btn-u-xs btn-u-red rounded ';
if(taskScheduleChangesList && taskScheduleChangesList.length>1){
$out+='hide';
}
$out+='" >删除</a>--> </div> ';
}
$out+=' <div class="clearfix"></div> </div> ';
$each(taskScheduleChangesList,function(v,$index){
$out+=' ';
if($index>0){
$out+=' <div class="col-md-12"> <div class="col-md-2 text-right" style="line-height: 22px;"> <label> <b>第';
$out+=$escape($index);
$out+='次变更:</b> </label> </div> <div class="col-md-7" style="line-height: 22px;"> ';
$out+=$escape(v.startTime);
$out+=' ';
if((v.startTime!=null && v.startTime!='') || (v.endTime!=null && v.endTime!='')){
$out+=' <span>~</span> ';
}
$out+=' ';
$out+=$escape(v.endTime);
$out+=' ';
if((v.startTime!=null && v.startTime!='') && (v.endTime!=null && v.endTime!='')){
$out+=' ';
if(v.timeDiffStr!=null){
$out+=' <span>&nbsp;( <span class="diffDaysTxt">';
$out+=$escape(v.timeDiffStr-0);
$out+='</span>天 )</span> ';
}
$out+=' ';
}
$out+=' </div> <div class="col-md-3"> <a href="javascript:void(0)" data-action="addScheduleProgressChange" class="btn-u btn-u-xs rounded ';
$out+=$escape(taskScheduleChangesList && taskScheduleChangesList.length!=$index+1?'hide':'');
$out+='" data-id="';
$out+=$escape(v.id);
$out+='" data-type="';
$out+=$escape(v.type);
$out+='" data-start-time="';
$out+=$escape(v.startTime);
$out+='" data-end-time="';
$out+=$escape(v.endTime);
$out+='"> ';
$out+=$escape(v.type==3?'修改':'变更');
$out+=' </a> <!--<a href="javascript:void(0)" data-action="delScheduleProgressChange" data-id="';
$out+=$escape(v.id);
$out+='" class="btn-u btn-u-xs btn-u-red rounded ';
if(taskScheduleChangesList && taskScheduleChangesList.length!=$index+1){
$out+='hide';
}
$out+='">删除</a>--> </div> <div class="col-md-10 col-md-offset-2 "> <label class="" style="position: relative;line-height:18px;word-break: break-all;"> <b>变更原因：</b> <span class="memo-span">';
$out+=$escape(v.memo);
$out+='</span> </label> <div class="clearfix"></div> </div> <div class="clearfix"></div> </div> ';
}
$out+=' ';
});
$out+=' </div> </div> </form> ';
return new String($out);
});/*v:1*/
template('m_production/m_production_add',function($data,$filename
/**/) {
'use strict';var $utils=this,$helpers=$utils.$helpers,personInCharge=$data.personInCharge,personInChargeId=$data.personInChargeId,$escape=$utils.$escape,appointmentStartTime=$data.appointmentStartTime,appointmentEndTime=$data.appointmentEndTime,$out='';$out+='<style> .add-issue-box{width:410px; } .add-issue-box .form-group .form-control{width: 100%;} .add-issue-box .select2.select2-container{width: 293px !important;} .add-issue-box .select2.select2-container span.select2-selection{border-radius: 0;height: 34px;} .add-issue-box .select2-container--default .select2-selection--single .select2-selection__arrow b{border-width: 6px 3px 0px 3px;margin-left: -2px;margin-top: 1px;} </style> <form class="add-issue-form"> <div class="add-issue-box"> <div class="form-group m-b-xs clearfix"> <label class="col-sm-3 control-label no-pd-left m-t-xs" >设计任务<span class="color-red">*</span></label> <div class="col-sm-9 no-pd-right"> <input placeholder="设计任务" class="form-control" type="text" name="taskName" maxlength="100"> </div> </div> <div class="form-group operator-div m-b-xs clearfix"> <label class="col-sm-3 control-label no-pd-right no-pd-left m-t-xs">任务负责人<span class="color-red">*</span></label> <div class="col-sm-9 no-pd-right"> <select class="js-example-disabled-results form-control" name="designerId" style="width:278px;"> ';
if(personInCharge!=null && personInCharge!='' && personInChargeId!=null && personInChargeId!=''){
$out+=' <option value="';
$out+=$escape(personInChargeId);
$out+='">';
$out+=$escape(personInCharge);
$out+='</option> ';
}
$out+=' </select> </div> </div> <div class="form-group time-box m-b-xs clearfix"> <label class="col-sm-3 control-label no-pd-left no-pd-right m-t-xs">计划开始时间<span class="color-red">*</span></label> <div class="col-sm-9 no-pd-right"> <div class="input-group"> <input type="text" class="form-control timeInput startTime input-sm" id="ipt_startTime" name="startTime" data-appointmentStartTime = "';
$out+=$escape(appointmentStartTime);
$out+='" placeholder="开始日期" readonly onFocus="startTimeFun(this,m_inputProcessTime_onpicked)" value="';
$out+=$escape(appointmentStartTime);
$out+='"> <span class="input-group-addon no-padding"> <i class="icon-sm icon-append fa fa-calendar" style="height: 28px;line-height: 28px;"></i> </span> </div> </div> </div> <div class="form-group time-box m-b-xs clearfix"> <label class="col-sm-3 control-label no-pd-left no-pd-right m-t-xs">计划结束时间<span class="color-red">*</span></label> <div class="col-sm-9 no-pd-right"> <div class="input-group"> <input type="text" class="form-control timeInput endTime input-sm" id="ipt_endTime" name="endTime" data-appointmentEndTime = "';
$out+=$escape(appointmentEndTime);
$out+='" placeholder="结束日期" readonly onFocus="endTimeFun(this,m_inputProcessTime_onpicked)" value="';
$out+=$escape(appointmentEndTime);
$out+='"> <span class="input-group-addon no-padding"> <i class="icon-sm icon-append fa fa-calendar" style="height: 28px;line-height: 28px;"></i> </span> </div> </div> </div> <div class="form-group m-b-xs clearfix"> <label class="col-sm-3 control-label no-pd-left m-t-xs" >任务描述</label> <div class="col-sm-9 no-pd-right"> <textarea class="form-control" name="taskRemark" style="height: 80px;max-width: 100%;"></textarea> </div> </div> <div class="col-md-12 m-b-sm no-pd-right clearfix"> <button type="button" class="btn btn-default btn-sm m-popover-close pull-right "> <i class="glyphicon glyphicon-remove"></i> </button> <button type="button" class="btn btn-primary btn-sm m-popover-submit pull-right m-r-xs"> <i class="fa fa-check"></i> </button> </div> </div> </form> ';
return new String($out);
});/*v:1*/
template('m_production/m_production_edit','<form class="form"> <div style="width: 380px;"> <div class="form-group m-b-xs clearfix"> <label class="col-md-3 control-label no-pd-left m-t-xs">设计任务</label> <div class="col-md-9 no-pd-right"> <input type="text" class="form-control input-sm" name="taskName" > </div> </div> <div class="form-group m-b-xs clearfix"> <label class="col-md-3 control-label no-pd-left m-t-xs">任务描述</label> <div class="col-md-9 no-pd-right"> <textarea class="form-control" name="taskRemark" style="height: 80px;max-width: 100%;"></textarea> </div> </div> <div class="form-group m-b-n clearfix"> <div class="col-md-12 no-pd-right"> <button type="button" class="btn btn-default btn-sm m-popover-close pull-right m-b-sm"> <i class="glyphicon glyphicon-remove"></i> </button> <button type="button" class="btn btn-primary btn-sm m-popover-submit pull-right m-b-sm m-r-xs"> <i class="fa fa-check"></i> </button> </div> </div> </div> </form>');/*v:1*/
template('m_production/m_production_editRemark',function($data,$filename
/**/) {
'use strict';var $utils=this,$helpers=$utils.$helpers,$escape=$utils.$escape,remark=$data.remark,$out='';$out+='<form class="form"> <div class="view-remark-box" style="display: none;"> <div class="col-md-12 "> ';
$out+=$escape(remark);
$out+=' <a class="" href="javascript:void(0);" data-action="editRemark"> <i class="fa fa-pencil-square-o"></i> </a> </div> </div> <div class="edit-remark-box"> <div class="col-md-12 " style="border-bottom: solid 1px #ccc;margin-bottom: 10px;"> <textarea style="width: 100%;min-height: 110px;margin: 10px 0;">';
$out+=$escape(remark);
$out+='</textarea> </div> <div class="col-md-12"> <button type="button" class="btn btn-default btn-sm pull-right m-b-sm" data-action="cancel">取消</button> <button type="button" class="btn btn-primary btn-sm pull-right m-b-sm m-r-xs" data-action="submit">确认</button> </div> </div> </form>';
return new String($out);
});/*v:1*/
template('m_production/m_production_list',function($data,$filename
/**/) {
'use strict';var $utils=this,$helpers=$utils.$helpers,$each=$utils.$each,productionList=$data.productionList,t=$data.t,ti=$data.ti,$escape=$utils.$escape,currentCompanyUserId=$data.currentCompanyUserId,u=$data.u,$index=$data.$index,_isNullOrBlank=$helpers._isNullOrBlank,_momentFormat=$helpers._momentFormat,_timeDifference=$helpers._timeDifference,_url=$helpers._url,$out='';$out+='<form class="m_production_list task-list-box" style="overflow-x: auto;overflow-y:hidden; min-height: 280px;"> <table class="tree tree-box table table-bordered table-striped" style="min-width: 1500px;margin-bottom: 140px;"> <thead> <tr> <th width="4%" class="b-r-none"></th> <th width="18%" class="b-r-none b-l-none" style="padding-left: 38px;min-width: 400px;">设计任务</th> <th width="5%" class="b-r-none">任务描述</th> <th width="6%" class="b-r-none">任务负责人</th> <th width="9%" class="b-r-none">设计人员</th> <th width="8%" class="b-r-none">校对人员</th> <th width="8%" class="b-r-none">审核人员</th> <th width="14%" class="b-r-none" >计划进度</th> <th width="6%" class="b-r-none" >进度提示</th> <th width="7%" class="b-r-none" >完成时间</th> <th width="5%" class="b-r-none" >完成情况</th> <th width="5%" class="b-r-none">任务状态</th> <th width="5%" class="">优先级</th> </tr> </thead> ';
$each(productionList,function(t,ti){
$out+=' <tr class="tree-box-tr treegrid-';
$out+=$escape(t.id);
$out+=' ';
if(t.taskPid!=null && t.taskPid!=''){
$out+=' treegrid-parent-';
$out+=$escape(t.taskPid);
$out+=' ';
}
$out+=' ';
$out+=$escape(t.completeDate==null?'':'completeDate-tr');
$out+=' " data-i="';
$out+=$escape(ti);
$out+='" data-id="';
$out+=$escape(t.id);
$out+='" data-pid="';
$out+=$escape(t.taskPid);
$out+='" data-company-id="';
$out+=$escape(t.companyId);
$out+='" data-publish-id="';
$out+=$escape(t.publishId);
$out+='"> <td class="b-r-none v-middle"> <div class="list-action-box"> <div class="btn-group singleOperation" style="display: none;"> <button type="button" class="btn btn-default btn-xs dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="true"> <span class="ic-operation"></span> </button> <ul class="dropdown-menu"> ';
if(t.roleFlag!=null && t.roleFlag.flag1!=null && !(t.taskState=='3'||t.taskState=='4') && t.gradeStatus !=1  && t.isOperaterTask==0){
$out+=' <li><a href="javascript:void(0);" data-action="addSubTask">添加子任务</a></li> ';
}
$out+=' ';
if(t.roleFlag!=null && t.roleFlag.flag7!=null){
$out+=' <li><a href="javascript:void(0);" data-action="addSubTaskByDesigner">分解设计任务</a></li> ';
}
$out+='  ';
if(t.isOperaterTask==0 && t.completeDate ==null && t.personInChargeId == currentCompanyUserId){
$out+=' <li><a href="javascript:void(0);" data-action="completeTask" data-status="1" data-original-title="请点击确定完成任务">任务确认完成</a></li> ';
}
$out+='  ';
if(t.isOperaterTask==0 && t.completeDate !=null && t.personInChargeId == currentCompanyUserId){
$out+=' <li><a href="javascript:void(0);" data-action="completeTask" data-status="0" data-original-title="请点击确定激活任务">激活任务</a></li> ';
}
$out+='  ';
if(!t.first){
$out+=' <li><a href="javascript:void(0);" data-action="moveUp">向上移动</a></li> ';
}
$out+='  ';
if(!t.last){
$out+=' <li><a href="javascript:void(0);" data-action="moveDown">向下移动</a></li> ';
}
$out+=' ';
if(t.roleFlag!=null && t.roleFlag.flag6!=null){
$out+=' <li><a href="javascript:void(0);" data-action="delTask" data-canbedelete="">删除</a></li> ';
}
$out+=' </ul> </div> </div> </td> <td class="treeTd pt-relative popover-box no-pd-right b-r-none b-l-none v-middle" height="40" data-task-state="';
$out+=$escape(t.taskState=='3'||t.taskState=='4'?'1':'0');
$out+='"> ';
if(t.roleFlag!=null && t.roleFlag.flag5!=null ){
$out+=' <span class="show-span taskName pt-relative" data-string="';
$out+=$escape(t.taskName);
$out+='" > ';
$out+=$escape(t.taskName);
$out+=' </span> <span class="edit-span-box"> <a class="tree-td-a" href="javascript:void(0);" data-action="taskNameEdit" data-deal-type="edit" style="display: none;"> <i class="ic-edit"></i> </a> </span> ';
}else{
$out+=' <span class="taskName pt-relative" data-string="';
$out+=$escape(t.taskName);
$out+='"> ';
$out+=$escape(t.taskName);
$out+=' </span> ';
}
$out+=' </td> <td class="b-r-none v-middle"> ';
if(t.taskRemark==null || t.taskRemark==''){
$out+=' ';
if(t.roleFlag!=null && t.roleFlag.flag5!=null ){
$out+=' <span class="fc-ccc show-span">未设置</span> ';
}else{
$out+=' <span class="fc-ccc">--</span> ';
}
$out+=' ';
}else{
$out+=' <span class="edit-span-box wh-16" > <a data-action="viewTaskRemarkEdit" id="viewTaskRemarkEdit';
$out+=$escape(ti);
$out+='"> <i class="ic-describe"></i></a> </span> ';
}
$out+=' ';
if(t.roleFlag!=null && t.roleFlag.flag5!=null ){
$out+=' <span class="edit-span-box wh-16"> <a href="javascript:void(0);" data-action="taskRemarkEdit" id="taskRemarkEdit';
$out+=$escape(ti);
$out+='" data-deal-type="edit" style="display: none;"> <i class="ic-edit"></i> </a> </span> ';
}
$out+=' </td> <td class="no-pd v-middle b-r-none"> <p class="m-b-none"> ';
if(t.roleFlag!=null && t.roleFlag.flag2!=null){
$out+=' <span class="show-span person-in-charge ';
$out+=$escape(t.personInChargeId == currentCompanyUserId?'text-navy':'');
$out+='" data-id="';
$out+=$escape(t.personInChargeId);
$out+='" data-task-id="';
$out+=$escape(t.id);
$out+='" data-user-name="';
$out+=$escape(t.personInCharge);
$out+='" data-toggle="tooltip" data-original-title="';
$out+=$escape(t.designOrg);
$out+=$escape(t.departName==null?'':'('+t.departName+')');
$out+='"> ';
$out+=$escape(t.personInCharge==null?'未设置':t.personInCharge);
$out+=' </span> <span class="edit-span-box wh-16"> <a href="javascript:void(0);" data-action="setPersonInCharge" data-deal-type="edit" data-id="';
$out+=$escape(t.personInChargeId);
$out+='" data-task-id="';
$out+=$escape(t.id);
$out+='" data-user-name="';
$out+=$escape(t.personInCharge);
$out+='" style="display: none;"> <i class="ic-edit"></i> </a> </span> ';
}else{
$out+=' <span class="person-in-charge" data-toggle="tooltip" data-original-title="';
$out+=$escape(t.designOrg);
$out+=$escape(t.departName==null?'':'('+t.departName+')');
$out+='"> <!--';
if(t.completeDate!=null){
$out+=' <i class="fa fa-check fc-v1-green"></i> ';
}
$out+='--> <span class="';
$out+=$escape(t.personInChargeId == currentCompanyUserId?'text-navy':'');
$out+='">';
$out+=$escape(t.personInCharge);
$out+='</span> </span> ';
}
$out+=' </p> </td> <td class="b-r-none v-middle"> <span class="show-span"> ';
if(t.designUser && t.designUser.userList!=null && t.designUser.userList.length>0 ){
$out+=' <span class="';
$out+=$escape(t.projectDesignUser.companyUserId == currentCompanyUserId?'text-navy':'');
$out+='">';
$out+=$escape(t.projectDesignUser.userName);
$out+='</span> ';
$each(t.designUser.userList,function(u,$index){
$out+=' ';
if(u.id!=t.projectDesignUser.id){
$out+=' , <!--';
if(u.completeTime!=null){
$out+=' <span><i class="fa fa-check fc-v1-green"></i></span> ';
}
$out+='--> <span>';
$out+=$escape(u.userName);
$out+='</span> ';
}
$out+=' ';
});
$out+=' ';
}else{
$out+=' ';
if(t.roleFlag!=null && t.roleFlag.flag3!=null && !(t.taskState=='3'||t.taskState=='4') && t.saveExtent!=1 ){
$out+=' <span class="fc-ccc">未设置</span> ';
}else{
$out+=' <span class="fc-ccc">--</span> ';
}
$out+=' ';
}
$out+=' </span> <span class="edit-span-box wh-16"> ';
if(t.roleFlag!=null && t.roleFlag.flag3!=null && !(t.taskState=='3'||t.taskState=='4') && t.saveExtent!=1 ){
$out+=' <a href="javascript:void(0);" data-action="setTaskDesigner" data-deal-type="edit" style="display: none;"> <i class="ic-edit"></i> </a> ';
}
$out+=' </span> </td> <td class="b-r-none v-middle"> <span class="show-span"> ';
if(t.checkUser && t.checkUser.userList!=null && t.checkUser.userList.length>0){
$out+=' <span class="';
$out+=$escape(t.projectCheckUser.companyUserId == currentCompanyUserId?'text-navy':'');
$out+='">';
$out+=$escape(t.projectCheckUser.userName);
$out+='</span> ';
$each(t.checkUser.userList,function(u,$index){
$out+=' ';
if(u.id!=t.projectCheckUser.id){
$out+=' , <!--';
if(u.completeTime!=null){
$out+=' <span><i class="fa fa-check fc-v1-green"></i></span> ';
}
$out+='--> <span>';
$out+=$escape(u.userName);
$out+='</span> ';
}
$out+=' ';
});
$out+=' ';
}else{
$out+=' ';
if(t.roleFlag!=null && t.roleFlag.flag3!=null && !(t.taskState=='3'||t.taskState=='4') && t.saveExtent!=1 ){
$out+=' <span class="fc-ccc">未设置</span> ';
}else{
$out+=' <span class="fc-ccc">--</span> ';
}
$out+=' ';
}
$out+=' </span> <span class="edit-span-box wh-16"> ';
if(t.roleFlag!=null && t.roleFlag.flag3!=null && !(t.taskState=='3'||t.taskState=='4') && t.saveExtent!=1){
$out+=' <a href="javascript:void(0);" data-action="setTaskCheckUser" data-deal-type="edit" style="display: none;"> <i class="ic-edit"></i> </a> ';
}
$out+=' </span> </td> <td class="b-r-none v-middle"> <span class="show-span"> ';
if(t.examineUser && t.examineUser.userList!=null && t.examineUser.userList.length>0){
$out+=' <span class="';
$out+=$escape(t.projectExamineUser.companyUserId == currentCompanyUserId?'text-navy':'');
$out+='">';
$out+=$escape(t.projectExamineUser.userName);
$out+='</span> ';
$each(t.examineUser.userList,function(u,$index){
$out+=' ';
if(u.id!=t.projectExamineUser.id){
$out+=' , <!--';
if(u.completeTime!=null){
$out+=' <span><i class="fa fa-check fc-v1-green"></i></span> ';
}
$out+='--> <span>';
$out+=$escape(u.userName);
$out+='</span> ';
}
$out+=' ';
});
$out+=' ';
}else{
$out+=' ';
if(t.roleFlag!=null && t.roleFlag.flag3!=null && !(t.taskState=='3'||t.taskState=='4') && t.saveExtent!=1 ){
$out+=' <span class="fc-ccc">未设置</span> ';
}else{
$out+=' <span class="fc-ccc">--</span> ';
}
$out+=' ';
}
$out+=' </span> <span class="edit-span-box wh-16"> ';
if(t.roleFlag!=null && t.roleFlag.flag3!=null && !(t.taskState=='3'||t.taskState=='4') && t.saveExtent!=1){
$out+=' <a href="javascript:void(0);" data-action="setTaskExamineUser" data-deal-type="edit" style="display: none;"> <i class="ic-edit"></i> </a> ';
}
$out+=' </span> </td> <td class="b-r-none v-middle"> <span class="show-span" data-type="planTime" data-start-time="';
$out+=$escape(t.planStartTime);
$out+='" data-end-time="';
$out+=$escape(t.planEndTime);
$out+='"> ';
if((t.planStartTime==null || t.planStartTime=='') && (t.planEndTime==null || t.planEndTime=='')  && (t.roleFlag!=null && t.roleFlag.flag5!=null)){
$out+=' <span class="fc-ccc">未设置</span> ';
}else{
$out+=' ';
if(_isNullOrBlank(t.planStartTime) && _isNullOrBlank(t.planEndTime)){
$out+=' -- ';
}else if(!_isNullOrBlank(t.planStartTime) && !_isNullOrBlank(t.planEndTime)){
$out+=' ';
$out+=$escape(_momentFormat(t.planStartTime,'YYYY/MM/DD'));
$out+=' - ';
$out+=$escape(_momentFormat(t.planEndTime,'YYYY/MM/DD'));
$out+=' | 共 ';
$out+=$escape(_timeDifference(t.planStartTime,t.planEndTime));
$out+=' 天 ';
}else{
$out+=' ';
$out+=$escape(_momentFormat(t.planStartTime,'YYYY/MM/DD'));
$out+=' - ';
$out+=$escape(_momentFormat(t.planEndTime,'YYYY/MM/DD'));
$out+=' ';
}
$out+=' ';
if((t.changeTime==true)){
$out+=' <a href="javascript:void(0);" data-action="viewProgressChange" id="viewProgressChange1';
$out+=$escape(t.id);
$out+='"><i class="fa fa-info-circle"></i></a> ';
}
$out+=' ';
}
$out+=' </span> <span class="edit-span-box wh-16"> ';
if(t.roleFlag!=null && t.roleFlag.flag4!=null){
$out+=' <a href="javascript:void(0);" data-action="planningSchedule" data-deal-type="edit" style="display: none;"> <i class="ic-edit"></i> </a> ';
}
$out+=' </span> </td> <td class="b-r-none v-middle"> ';
if(t.taskState==2 || t.taskState==4){
$out+=' <span class="text-danger">';
$out+=$escape(t.statusText);
$out+='</span> ';
}else{
$out+=' <span class="text-warning">';
$out+=$escape(t.statusText);
$out+='</span> ';
}
$out+=' </td> <td class="b-r-none v-middle"> <span> ';
if(t.completeDate!=null &&  t.completeDate!=''){
$out+=' ';
$out+=$escape(_momentFormat(t.completeDate,'YYYY/MM/DD'));
$out+=' ';
}else{
$out+=' -- ';
}
$out+=' </span> </td> <td class="b-r-none v-middle"> <span> ';
if(t.completeDate!=null &&  t.completeDate!='' && t.completion!=null && t.completion!=''){
$out+=' <span class="edit-span-box wh-16" > <a data-action="viewTaskCompletion" id="viewTaskCompletion';
$out+=$escape(ti);
$out+='"> <i class="ic-describe"></i></a> </span> ';
}else{
$out+=' -- ';
}
$out+=' </span> </td> <td class="b-r-none v-middle "> <span> ';
if(t.stateHtml!=null && t.stateHtml!=''){
$out+=' ';
$out+=$escape(t.stateHtml);
$out+=' ';
}
$out+=' </span> </td> <td class="v-middle "> ';
if(t.roleFlag!=null && t.roleFlag.flag5!=null ){
$out+=' <span class="show-span pt-relative"> ';
if(t.priority==5){
$out+=' 紧急 ';
}else if(t.priority==4){
$out+=' 高 ';
}else if(t.priority==3){
$out+=' 中 ';
}else if(t.priority==2){
$out+=' 低 ';
}else if(t.priority==1){
$out+=' 无关紧要 ';
}else{
$out+=' ';
}
$out+=' </span> <span class="edit-span-box"> <a class="tree-td-a" href="javascript:void(0);" data-action="priorityEdit" data-deal-type="edit" data-priority="';
$out+=$escape(t.priority);
$out+='" style="display: none;"> <i class="ic-edit"></i> </a> </span> ';
}else{
$out+=' <span class="pt-relative"> ';
if(t.priority==5){
$out+=' 紧急 ';
}else if(t.priority==4){
$out+=' 高 ';
}else if(t.priority==3){
$out+=' 中 ';
}else if(t.priority==2){
$out+=' 低 ';
}else if(t.priority==1){
$out+=' 无关紧要 ';
}else{
$out+=' ';
}
$out+=' </span> ';
}
$out+=' </td> </tr> ';
});
$out+=' ';
if(!(productionList && productionList.length>0)){
$out+=' <tr class="no-data"> <td colspan="13" class="text-center v-middle"> <div class="m-b-xl m-t-md"> <img src="';
$out+=$escape(_url('/assets/img/default/without_data.png'));
$out+='"> <span class="fc-dark-blue dp-block">您还没有相关生产安排</span> </div> </td> </tr> ';
}
$out+=' </table> </form>';
return new String($out);
});/*v:1*/
template('m_production/m_production_list_add',function($data,$filename
/**/) {
'use strict';var $utils=this,$helpers=$utils.$helpers,taskType=$data.taskType,$escape=$utils.$escape,personInCharge=$data.personInCharge,personInChargeId=$data.personInChargeId,$out='';$out+='<tr class="row-edit edit-box"> <td class="b-r-none b-m-none"></td> <td class="td-class1" colspan="2"> <input placeholder="设计任务" class="form-control" type="text" name="taskName" style="width: 80%;display: inline-block;"> <span><span class="wordCount">0</span>/<span>50</span></span> </td> <!--<td class="b-r-none b-l-none v-middle"> ';
if(taskType==null || taskType!='5'){
$out+=' <input placeholder="任务描述" class="form-control" type="text" name="taskRemark" > ';
}
$out+=' </td>--> <td class="td-class1"> <span class="show-span"> <span class="fc-ccc">';
$out+=$escape(personInCharge);
$out+='</span> </span> ';
if(taskType==null || taskType!='5'){
$out+=' <a href="javascript:void(0);" data-action="setTaskLeader" data-user-name="';
$out+=$escape(personInCharge);
$out+='" data-id="';
$out+=$escape(personInChargeId);
$out+='"> <i class="fa fa-pencil-square-o"></i> </a> ';
}
$out+=' </td> <td class="td-class1"> <span class="show-span" data-toggle="tooltip" data-original-title=""> <span class="fc-ccc">--</span> </span>    </td> <td class="td-class1"> <span class="show-span" data-toggle="tooltip" data-original-title=""> <span class="fc-ccc">--</span> </span>    </td> <td class="td-class1"> <span class="show-span" data-toggle="tooltip" data-original-title=""> <span class="fc-ccc">--</span> </span>    </td> <td class="td-class1" colspan="5"> <div class="input-group dp-inline-block"> <input type="text" class="form-control timeInput input-sm " id="ipt_startTime" name="startTime" data-appointmentStartTime="" placeholder="开始日期" readonly onFocus="startTimeFun(this,m_inputProcessTime_onpicked)" value="" style="width: 110px;"> <span class="input-group-addon no-padding"> <i class="icon-sm icon-append fa fa-calendar"></i> </span> </div> <div class="input-group dp-inline-block"> <input type="text" class="form-control timeInput input-sm" id="ipt_endTime" name="endTime" data-appointmentEndTime="" placeholder="结束日期" readonly onFocus="endTimeFun(this,m_inputProcessTime_onpicked)" value="" style="width: 110px;"> <span class="input-group-addon no-padding"> <i class="icon-sm icon-append fa fa-calendar" ></i> </span> </div> </td> <td class="b-l-none b-m-none"> <button class="btn btn-primary btn-sm" data-action="submit">创建</button> <button class="btn btn-default btn-sm" data-action="cancel">取消</button> </td> </tr> ';
if(taskType==null || taskType!='5'){
$out+=' <tr class="row-edit edit-box"> <td class="b-r-none b-t-none"></td> <td class="b-r-none b-l-none b-t-none v-middle" colspan="11"> <input placeholder="任务描述" class="form-control" type="text" name="taskRemark" > </td> <td class="b-l-none b-t-none"></td> </tr> ';
}
return new String($out);
});/*v:1*/
template('m_production/m_production_list_old',function($data,$filename
/**/) {
'use strict';var $utils=this,$helpers=$utils.$helpers,$each=$utils.$each,productionList=$data.productionList,t=$data.t,ti=$data.ti,$escape=$utils.$escape,currentCompanyUserId=$data.currentCompanyUserId,u=$data.u,$index=$data.$index,_isNullOrBlank=$helpers._isNullOrBlank,_momentFormat=$helpers._momentFormat,_timeDifference=$helpers._timeDifference,_url=$helpers._url,$out='';$out+='<form class="m_production_list task-list-box" style="overflow-x: auto;overflow-y:hidden; min-height: 280px;"> <table class="tree tree-box table table-bordered table-striped" style="min-width: 1500px;margin-bottom: 140px;"> <thead> <tr> <th width="4%" class="b-r-none"></th> <th width="18%" class="b-r-none b-l-none" style="padding-left: 38px;min-width: 400px;">设计任务</th> <th width="5%" class="b-r-none">任务描述</th> <th width="6%" class="b-r-none">任务负责人</th> <th width="9%" class="b-r-none">设计人员</th> <th width="8%" class="b-r-none">校对人员</th> <th width="8%" class="b-r-none">审核人员</th> <th width="14%" class="b-r-none" >计划进度</th> <th width="6%" class="b-r-none" >进度提示</th> <th width="7%" class="b-r-none" >完成时间</th> <th width="5%" class="b-r-none" >完成情况</th> <th width="5%" class="b-r-none">任务状态</th> <th width="5%" class="">优先级</th> </tr> </thead> ';
$each(productionList,function(t,ti){
$out+=' <tr class="tree-box-tr treegrid-';
$out+=$escape(t.id);
$out+=' ';
if(t.taskPid!=null && t.taskPid!=''){
$out+=' treegrid-parent-';
$out+=$escape(t.taskPid);
$out+=' ';
}
$out+=' ';
$out+=$escape(t.completeDate==null?'':'completeDate-tr');
$out+=' " data-i="';
$out+=$escape(ti);
$out+='" data-id="';
$out+=$escape(t.id);
$out+='" data-pid="';
$out+=$escape(t.taskPid);
$out+='" data-company-id="';
$out+=$escape(t.companyId);
$out+='" data-publish-id="';
$out+=$escape(t.publishId);
$out+='"> <td class="b-r-none v-middle"> <div class="list-action-box"> <div class="btn-group singleOperation" style="display: none;"> <button type="button" class="btn btn-default btn-xs dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="true"> <span class="ic-operation"></span> </button> <ul class="dropdown-menu"> ';
if(t.roleFlag!=null && t.roleFlag.flag1!=null && !(t.taskState=='3'||t.taskState=='4') && t.gradeStatus !=1  && t.isOperaterTask==0){
$out+=' <li><a href="javascript:void(0);" data-action="addSubTask">添加子任务</a></li> ';
}
$out+=' ';
if(t.roleFlag!=null && t.roleFlag.flag7!=null){
$out+=' <li><a href="javascript:void(0);" data-action="addSubTaskByDesigner">分解设计任务</a></li> ';
}
$out+='  ';
if(t.isOperaterTask==0 && t.completeDate ==null && t.personInChargeId == currentCompanyUserId){
$out+=' <li><a href="javascript:void(0);" data-action="completeTask" data-status="1" data-original-title="请点击确定完成任务">任务确认完成</a></li> ';
}
$out+='  ';
if(t.isOperaterTask==0 && t.completeDate !=null && t.personInChargeId == currentCompanyUserId){
$out+=' <li><a href="javascript:void(0);" data-action="completeTask" data-status="0" data-original-title="请点击确定激活任务">激活任务</a></li> ';
}
$out+='  ';
if(!t.first){
$out+=' <li><a href="javascript:void(0);" data-action="moveUp">向上移动</a></li> ';
}
$out+='  ';
if(!t.last){
$out+=' <li><a href="javascript:void(0);" data-action="moveDown">向下移动</a></li> ';
}
$out+=' ';
if(t.roleFlag!=null && t.roleFlag.flag6!=null){
$out+=' <li><a href="javascript:void(0);" data-action="delTask" data-canbedelete="">删除</a></li> ';
}
$out+=' </ul> </div> </div> </td> <td class="treeTd pt-relative popover-box no-pd-right b-r-none b-l-none v-middle" height="40" data-task-state="';
$out+=$escape(t.taskState=='3'||t.taskState=='4'?'1':'0');
$out+='"> ';
if(t.roleFlag!=null && t.roleFlag.flag5!=null ){
$out+=' <span class="show-span taskName pt-relative" data-string="';
$out+=$escape(t.taskName);
$out+='" > ';
$out+=$escape(t.taskName);
$out+=' </span> <span class="edit-span-box"> <a class="tree-td-a" href="javascript:void(0);" data-action="taskNameEdit" data-deal-type="edit" style="display: none;"> <i class="ic-edit"></i> </a> </span> ';
}else{
$out+=' <span class="taskName pt-relative" data-string="';
$out+=$escape(t.taskName);
$out+='"> ';
$out+=$escape(t.taskName);
$out+=' </span> ';
}
$out+=' </td> <td class="b-r-none v-middle"> ';
if(t.taskRemark==null || t.taskRemark==''){
$out+=' ';
if(t.roleFlag!=null && t.roleFlag.flag5!=null ){
$out+=' <span class="fc-ccc show-span">未设置</span> ';
}else{
$out+=' <span class="fc-ccc">--</span> ';
}
$out+=' ';
}else{
$out+=' <span class="edit-span-box wh-16" > <a data-action="viewTaskRemarkEdit" id="viewTaskRemarkEdit';
$out+=$escape(ti);
$out+='"> <i class="ic-describe"></i></a> </span> ';
}
$out+=' ';
if(t.roleFlag!=null && t.roleFlag.flag5!=null ){
$out+=' <span class="edit-span-box wh-16"> <a href="javascript:void(0);" data-action="taskRemarkEdit" id="taskRemarkEdit';
$out+=$escape(ti);
$out+='" data-deal-type="edit" style="display: none;"> <i class="ic-edit"></i> </a> </span> ';
}
$out+=' </td> <td class="no-pd v-middle b-r-none"> <p class="m-b-none"> ';
if(t.roleFlag!=null && t.roleFlag.flag2!=null){
$out+=' <span class="show-span person-in-charge ';
$out+=$escape(t.personInChargeId == currentCompanyUserId?'text-navy':'');
$out+='" data-id="';
$out+=$escape(t.personInChargeId);
$out+='" data-task-id="';
$out+=$escape(t.id);
$out+='" data-user-name="';
$out+=$escape(t.personInCharge);
$out+='" data-toggle="tooltip" data-original-title="';
$out+=$escape(t.designOrg);
$out+=$escape(t.departName==null?'':'('+t.departName+')');
$out+='"> ';
$out+=$escape(t.personInCharge==null?'未设置':t.personInCharge);
$out+=' </span> <span class="edit-span-box wh-16"> <a href="javascript:void(0);" data-action="setPersonInCharge" data-deal-type="edit" data-id="';
$out+=$escape(t.personInChargeId);
$out+='" data-task-id="';
$out+=$escape(t.id);
$out+='" data-user-name="';
$out+=$escape(t.personInCharge);
$out+='" style="display: none;"> <i class="ic-edit"></i> </a> </span> ';
}else{
$out+=' <span class="person-in-charge" data-toggle="tooltip" data-original-title="';
$out+=$escape(t.designOrg);
$out+=$escape(t.departName==null?'':'('+t.departName+')');
$out+='"> <!--';
if(t.completeDate!=null){
$out+=' <i class="fa fa-check fc-v1-green"></i> ';
}
$out+='--> <span class="';
$out+=$escape(t.personInChargeId == currentCompanyUserId?'text-navy':'');
$out+='">';
$out+=$escape(t.personInCharge);
$out+='</span> </span> ';
}
$out+=' </p> </td> <td class="b-r-none v-middle"> <span class="show-span"> ';
if(t.designUser && t.designUser.userList!=null && t.designUser.userList.length>0 ){
$out+=' <span class="';
$out+=$escape(t.projectDesignUser.companyUserId == currentCompanyUserId?'text-navy':'');
$out+='">';
$out+=$escape(t.projectDesignUser.userName);
$out+='</span> ';
$each(t.designUser.userList,function(u,$index){
$out+=' ';
if(u.id!=t.projectDesignUser.id){
$out+=' , <!--';
if(u.completeTime!=null){
$out+=' <span><i class="fa fa-check fc-v1-green"></i></span> ';
}
$out+='--> <span>';
$out+=$escape(u.userName);
$out+='</span> ';
}
$out+=' ';
});
$out+=' ';
}else{
$out+=' ';
if(t.roleFlag!=null && t.roleFlag.flag3!=null && !(t.taskState=='3'||t.taskState=='4') && t.saveExtent!=1 ){
$out+=' <span class="fc-ccc">未设置</span> ';
}else{
$out+=' <span class="fc-ccc">--</span> ';
}
$out+=' ';
}
$out+=' </span> <span class="edit-span-box wh-16"> ';
if(t.roleFlag!=null && t.roleFlag.flag3!=null && !(t.taskState=='3'||t.taskState=='4') && t.saveExtent!=1 ){
$out+=' <a href="javascript:void(0);" data-action="setTaskDesigner" data-deal-type="edit" style="display: none;"> <i class="ic-edit"></i> </a> ';
}
$out+=' </span> </td> <td class="b-r-none v-middle"> <span class="show-span"> ';
if(t.checkUser && t.checkUser.userList!=null && t.checkUser.userList.length>0){
$out+=' <span class="';
$out+=$escape(t.projectCheckUser.companyUserId == currentCompanyUserId?'text-navy':'');
$out+='">';
$out+=$escape(t.projectCheckUser.userName);
$out+='</span> ';
$each(t.checkUser.userList,function(u,$index){
$out+=' ';
if(u.id!=t.projectCheckUser.id){
$out+=' , <!--';
if(u.completeTime!=null){
$out+=' <span><i class="fa fa-check fc-v1-green"></i></span> ';
}
$out+='--> <span>';
$out+=$escape(u.userName);
$out+='</span> ';
}
$out+=' ';
});
$out+=' ';
}else{
$out+=' ';
if(t.roleFlag!=null && t.roleFlag.flag3!=null && !(t.taskState=='3'||t.taskState=='4') && t.saveExtent!=1 ){
$out+=' <span class="fc-ccc">未设置</span> ';
}else{
$out+=' <span class="fc-ccc">--</span> ';
}
$out+=' ';
}
$out+=' </span> <span class="edit-span-box wh-16"> ';
if(t.roleFlag!=null && t.roleFlag.flag3!=null && !(t.taskState=='3'||t.taskState=='4') && t.saveExtent!=1){
$out+=' <a href="javascript:void(0);" data-action="setTaskCheckUser" data-deal-type="edit" style="display: none;"> <i class="ic-edit"></i> </a> ';
}
$out+=' </span> </td> <td class="b-r-none v-middle"> <span class="show-span"> ';
if(t.examineUser && t.examineUser.userList!=null && t.examineUser.userList.length>0){
$out+=' <span class="';
$out+=$escape(t.projectExamineUser.companyUserId == currentCompanyUserId?'text-navy':'');
$out+='">';
$out+=$escape(t.projectExamineUser.userName);
$out+='</span> ';
$each(t.examineUser.userList,function(u,$index){
$out+=' ';
if(u.id!=t.projectExamineUser.id){
$out+=' , <!--';
if(u.completeTime!=null){
$out+=' <span><i class="fa fa-check fc-v1-green"></i></span> ';
}
$out+='--> <span>';
$out+=$escape(u.userName);
$out+='</span> ';
}
$out+=' ';
});
$out+=' ';
}else{
$out+=' ';
if(t.roleFlag!=null && t.roleFlag.flag3!=null && !(t.taskState=='3'||t.taskState=='4') && t.saveExtent!=1 ){
$out+=' <span class="fc-ccc">未设置</span> ';
}else{
$out+=' <span class="fc-ccc">--</span> ';
}
$out+=' ';
}
$out+=' </span> <span class="edit-span-box wh-16"> ';
if(t.roleFlag!=null && t.roleFlag.flag3!=null && !(t.taskState=='3'||t.taskState=='4') && t.saveExtent!=1){
$out+=' <a href="javascript:void(0);" data-action="setTaskExamineUser" data-deal-type="edit" style="display: none;"> <i class="ic-edit"></i> </a> ';
}
$out+=' </span> </td> <td class="b-r-none v-middle"> <span class="show-span" data-type="planTime" data-start-time="';
$out+=$escape(t.planStartTime);
$out+='" data-end-time="';
$out+=$escape(t.planEndTime);
$out+='"> ';
if((t.planStartTime==null || t.planStartTime=='') && (t.planEndTime==null || t.planEndTime=='')  && (t.roleFlag!=null && t.roleFlag.flag5!=null)){
$out+=' <span class="fc-ccc">未设置</span> ';
}else{
$out+=' ';
if(_isNullOrBlank(t.planStartTime) && _isNullOrBlank(t.planEndTime)){
$out+=' -- ';
}else if(!_isNullOrBlank(t.planStartTime) && !_isNullOrBlank(t.planEndTime)){
$out+=' ';
$out+=$escape(_momentFormat(t.planStartTime,'YYYY/MM/DD'));
$out+=' - ';
$out+=$escape(_momentFormat(t.planEndTime,'YYYY/MM/DD'));
$out+=' | 共 ';
$out+=$escape(_timeDifference(t.planStartTime,t.planEndTime));
$out+=' 天 ';
}else{
$out+=' ';
$out+=$escape(_momentFormat(t.planStartTime,'YYYY/MM/DD'));
$out+=' - ';
$out+=$escape(_momentFormat(t.planEndTime,'YYYY/MM/DD'));
$out+=' ';
}
$out+=' ';
if((t.changeTime==true)){
$out+=' <a href="javascript:void(0);" data-action="viewProgressChange" id="viewProgressChange1';
$out+=$escape(t.id);
$out+='"><i class="fa fa-info-circle"></i></a> ';
}
$out+=' ';
}
$out+=' </span> <span class="edit-span-box wh-16"> ';
if(t.roleFlag!=null && t.roleFlag.flag4!=null){
$out+=' <a href="javascript:void(0);" data-action="planningSchedule" data-deal-type="edit" style="display: none;"> <i class="ic-edit"></i> </a> ';
}
$out+=' </span> </td> <td class="b-r-none v-middle"> ';
if(t.taskState==2 || t.taskState==4){
$out+=' <span class="text-danger">';
$out+=$escape(t.statusText);
$out+='</span> ';
}else{
$out+=' <span class="text-warning">';
$out+=$escape(t.statusText);
$out+='</span> ';
}
$out+=' </td> <td class="b-r-none v-middle"> <span> ';
if(t.completeDate!=null &&  t.completeDate!=''){
$out+=' ';
$out+=$escape(_momentFormat(t.completeDate,'YYYY/MM/DD'));
$out+=' ';
}else{
$out+=' -- ';
}
$out+=' </span> </td> <td class="b-r-none v-middle"> <span> ';
if(t.completeDate!=null &&  t.completeDate!='' && t.completion!=null && t.completion!=''){
$out+=' <span class="edit-span-box wh-16" > <a data-action="viewTaskCompletion" id="viewTaskCompletion';
$out+=$escape(ti);
$out+='"> <i class="ic-describe"></i></a> </span> ';
}else{
$out+=' -- ';
}
$out+=' </span> </td> <td class="b-r-none v-middle "> <span> ';
if(t.stateHtml!=null && t.stateHtml!=''){
$out+=' ';
$out+=$escape(t.stateHtml);
$out+=' ';
}
$out+=' </span> </td> <td class="v-middle "> ';
if(t.roleFlag!=null && t.roleFlag.flag5!=null ){
$out+=' <span class="show-span pt-relative"> ';
if(t.priority==5){
$out+=' 紧急 ';
}else if(t.priority==4){
$out+=' 高 ';
}else if(t.priority==3){
$out+=' 中 ';
}else if(t.priority==2){
$out+=' 低 ';
}else if(t.priority==1){
$out+=' 无关紧要 ';
}else{
$out+=' ';
}
$out+=' </span> <span class="edit-span-box"> <a class="tree-td-a" href="javascript:void(0);" data-action="priorityEdit" data-deal-type="edit" data-priority="';
$out+=$escape(t.priority);
$out+='" style="display: none;"> <i class="ic-edit"></i> </a> </span> ';
}else{
$out+=' <span class="pt-relative"> ';
if(t.priority==5){
$out+=' 紧急 ';
}else if(t.priority==4){
$out+=' 高 ';
}else if(t.priority==3){
$out+=' 中 ';
}else if(t.priority==2){
$out+=' 低 ';
}else if(t.priority==1){
$out+=' 无关紧要 ';
}else{
$out+=' ';
}
$out+=' </span> ';
}
$out+=' </td> </tr> ';
});
$out+=' ';
if(!(productionList && productionList.length>0)){
$out+=' <tr class="no-data"> <td colspan="13" class="text-center v-middle"> <div class="m-b-xl m-t-md"> <img src="';
$out+=$escape(_url('/assets/img/default/without_data.png'));
$out+='"> <span class="fc-dark-blue dp-block">您还没有相关生产安排</span> </div> </td> </tr> ';
}
$out+=' </table> </form>';
return new String($out);
});/*v:1*/
template('m_production/m_production_list_usertip',function($data,$filename
/**/) {
'use strict';var $utils=this,$helpers=$utils.$helpers,$each=$utils.$each,unSubmittedUserList=$data.unSubmittedUserList,u=$data.u,i=$data.i,$escape=$utils.$escape,submittedUserList=$data.submittedUserList,$out='';$out+='<div class="tip-box"> <div class="text-left"> 未提交： <span class="un-submitted"> ';
$each(unSubmittedUserList,function(u,i){
$out+=' <span class="span-name">';
$out+=$escape(u.userName);
$out+='</span> ';
if(i < unSubmittedUserList.length-1){
$out+=' <span class="span-comma">,</span> ';
}
$out+=' ';
});
$out+=' </span> </div> <div class="text-left"> 已提交： <span class="submitted"> ';
$each(submittedUserList,function(u,i){
$out+=' <span class="span-name">';
$out+=$escape(u.userName);
$out+='</span> ';
if(i < submittedUserList.length-1){
$out+=' <span class="span-comma">,</span> ';
}
$out+=' ';
});
$out+=' </span> </div> </div>';
return new String($out);
});/*v:1*/
template('m_production/m_production_org',function($data,$filename
/**/) {
'use strict';var $utils=this,$helpers=$utils.$helpers,isShowTips=$data.isShowTips,departBCompany=$data.departBCompany,isRoleCompany=$data.isRoleCompany,$escape=$utils.$escape,currentCompanyUserId=$data.currentCompanyUserId,productionOrgList=$data.productionOrgList,$each=$utils.$each,t=$data.t,$index=$data.$index,$out='';$out+='<style> table.partB{border-right:0px;margin-bottom: 0px;} table.partB,table.partB tbody,table.partB tbody tr,table.partB tbody tr td{border-bottom: 0px} </style> ';
if(isShowTips==1){
$out+=' <div class="alert alert-warning alert-dismissable"> <button aria-hidden="true" data-dismiss="alert" class="close" type="button">×</button> 如若要进行生产安排，请先指定设计负责人！ </div> ';
}
$out+=' ';
if(departBCompany !=null && isRoleCompany){
$out+=' <table class="table table-bordered tree-box partB" style="width: 12%;float: left;border-right:0px;"> <tr class="" > <td align="center" height="40" class="gray-bg font-bold" style="border-right:0px; ">乙方</td> </tr> </table> <table class="table table-bordered tree-box partB" style="width: 88%;float: left;"> <tbody> <tr class="" > <td width="32%" height="40" class="treeTd">&nbsp;';
$out+=$escape(departBCompany.companyName);
$out+='</td> <td width="14%" align="center" class="gray-bg font-bold">经营负责人</td> <td width="20%"> <div class="full-width l-h-20"> ';
if(departBCompany.isUpdateOperator==1){
$out+=' <a href="javascript:void(0)" data-action="changeOperatorPerson" data-i="0" data-id="';
$out+=$escape(departBCompany.operatorPersonId);
$out+='" data-user-name="';
$out+=$escape(departBCompany.operatorPersonName);
$out+='" data-company-id="';
$out+=$escape(departBCompany.id);
$out+='" class="pull-left">';
$out+=$escape(departBCompany.operatorPersonName);
$out+='</a> <a href="javascript:void(0)" data-action="changeOperatorPerson" data-i="0" data-id="';
$out+=$escape(departBCompany.operatorPersonId);
$out+='" data-user-name="';
$out+=$escape(departBCompany.operatorPersonName);
$out+='" data-company-id="';
$out+=$escape(departBCompany.id);
$out+='" class="pull-right showTooltip" data-placement="top" data-toggle="tooltip" data-original-title="';
$out+=$escape(departBCompany.operatorPersonId==currentCompanyUserId?'更换':'更换');
$out+='经营负责人"> <i class="fa fa-retweet"></i> </a> ';
}else{
$out+=' ';
$out+=$escape(departBCompany.operatorPersonName);
$out+=' ';
}
$out+=' </div> </td> <td width="14%" align="center" class="gray-bg font-bold">设计负责人</td> <td width="20%"> <div class="full-width l-h-20"> ';
if(departBCompany.isUpdateDesign==1){
$out+=' <a href="javascript:void(0)" data-action="changeManagerPerson" data-i="0" data-id="';
$out+=$escape(departBCompany.designPersonId);
$out+='" data-user-name="';
$out+=$escape(departBCompany.designPersonName);
$out+='" data-company-id="';
$out+=$escape(departBCompany.id);
$out+='" class="pull-left"> ';
$out+=$escape(departBCompany.designPersonName==null?'未设置':departBCompany.designPersonName);
$out+=' </a> ';
if(departBCompany.designPersonName!=null){
$out+=' <a href="javascript:void(0)" data-action="changeManagerPerson" data-i="0" data-id="';
$out+=$escape(departBCompany.designPersonId);
$out+='" data-user-name="';
$out+=$escape(departBCompany.designPersonName);
$out+='" data-company-id="';
$out+=$escape(departBCompany.id);
$out+='" class="pull-right showTooltip" data-placement="top" data-toggle="tooltip" data-original-title="更换设计负责人"> <i class="fa fa-retweet"></i> </a> ';
}
$out+=' ';
}else{
$out+=' ';
$out+=$escape(departBCompany.designPersonName);
$out+=' ';
}
$out+=' </div> </td> </tr> </tbody> </table> ';
}
$out+=' <table class="table table-bordered tree-box" style="width: 12%;float: left;border-right:0px;"> <tbody> <tr class="" > <td align="center" height="40" class="gray-bg font-bold" style="border-right:0px; ">立项组织</td> </tr> ';
if(productionOrgList.length>1){
$out+=' <tr class="" > <td align="center" height="';
$out+=$escape((productionOrgList.length-1)*40);
$out+='" class="gray-bg font-bold" style="vertical-align: middle;border-right:0px; ">设计组织</td> </tr> ';
}
$out+=' </tbody> </table> <table class="tree table no-treegrid-expander table-bordered tree-box" style="width: 88%;float: left;"> <tbody> ';
$each(productionOrgList,function(t,$index){
$out+=' ';
if(t!=null){
$out+=' <tr class="tree-box-tr treegrid-';
$out+=$escape(t.treeId);
$out+=' ';
if(t.pid!=null && t.pid!=''){
$out+='treegrid-parent-';
$out+=$escape(t.pid);
}
$out+='" data-i="';
$out+=$escape($index);
$out+='"> <td width="32%" height="40" class="treeTd"><span class="companyName" data-string="';
$out+=$escape(t.companyName);
$out+='">&nbsp;';
$out+=$escape(t.companyName);
$out+='</span></td> <td width="14%" align="center" class="gray-bg font-bold">经营负责人</td> <td width="20%"> <div class="full-width l-h-20"> ';
if(t.isUpdateOperator==1){
$out+=' <a href="javascript:void(0)" data-action="changeOperatorPerson" data-i="0" data-id="';
$out+=$escape(t.operatorPersonId);
$out+='" data-user-name="';
$out+=$escape(t.operatorPersonName);
$out+='" data-company-id="';
$out+=$escape(t.id);
$out+='" class="pull-left">';
$out+=$escape(t.operatorPersonName);
$out+='</a> <a href="javascript:void(0)" data-action="changeOperatorPerson" data-i="0" data-id="';
$out+=$escape(t.operatorPersonId);
$out+='" data-user-name="';
$out+=$escape(t.operatorPersonName);
$out+='" data-company-id="';
$out+=$escape(t.id);
$out+='" class="pull-right showTooltip" data-placement="top" data-toggle="tooltip" data-original-title="';
$out+=$escape(t.operatorPersonId==currentCompanyUserId?'更换':'更换');
$out+='经营负责人"> <i class="fa fa-retweet"></i> </a> ';
}else{
$out+=' ';
$out+=$escape(t.operatorPersonName);
$out+=' ';
}
$out+=' </div> </td> <td width="14%" align="center" class="gray-bg font-bold">设计负责人</td> <td width="20%"> <div class="full-width l-h-20"> ';
if(t.isUpdateDesign==1){
$out+=' <a href="javascript:void(0)" data-action="changeManagerPerson" data-i="0" data-id="';
$out+=$escape(t.designPersonId);
$out+='" data-user-name="';
$out+=$escape(t.designPersonName);
$out+='" data-company-id="';
$out+=$escape(t.id);
$out+='" class="pull-left">';
$out+=$escape(t.designPersonName==null?'未设置':t.designPersonName);
$out+='</a> ';
if(t.designPersonName!=null){
$out+=' <a href="javascript:void(0)" data-action="changeManagerPerson" data-i="0" data-id="';
$out+=$escape(t.designPersonId);
$out+='" data-user-name="';
$out+=$escape(t.designPersonName);
$out+='" data-company-id="';
$out+=$escape(t.id);
$out+='" class="pull-right showTooltip" data-placement="top" data-toggle="tooltip" data-original-title="更换设计负责人"> <i class="fa fa-retweet"></i> </a> ';
}
$out+=' ';
}else{
$out+=' ';
$out+=$escape(t.designPersonName);
$out+=' ';
}
$out+=' </div> </td> </tr> ';
}
$out+=' ';
});
$out+=' </tbody> </table> <div class="clearfix"></div> <hr/>';
return new String($out);
});/*v:1*/
template('m_production/m_production_overview','  <div id="productionList" class="list-box"></div>  ');/*v:1*/
template('m_production/m_production_overview_header',function($data,$filename
/**/) {
'use strict';var $utils=this,$helpers=$utils.$helpers,$escape=$utils.$escape,projectName=$data.projectName,projectCreateByName=$data.projectCreateByName,operatorPersonName=$data.operatorPersonName,designPersonName=$data.designPersonName,$out='';$out+='<div class="col-md-6 "> <h4>项目：';
$out+=$escape(projectName);
$out+='</h4> </div> <div class="col-md-6 text-right"> <h4> 立项人：<span class="text-info">';
$out+=$escape(projectCreateByName);
$out+='</span>&nbsp;&nbsp; 经营负责人：<span class="text-info">';
$out+=$escape(operatorPersonName==null?'未设置':operatorPersonName);
$out+='</span>&nbsp;&nbsp; 设计负责人：<span class="text-info">';
$out+=$escape(designPersonName==null?'未设置':designPersonName);
$out+='</span> </h4> </div>';
return new String($out);
});/*v:1*/
template('m_production/m_production_overview_list',function($data,$filename
/**/) {
'use strict';var $utils=this,$helpers=$utils.$helpers,$each=$utils.$each,productionList=$data.productionList,t=$data.t,ti=$data.ti,$escape=$utils.$escape,_url=$helpers._url,$out='';$out+='<form class="m_production_list"> <table class="tree table table-bordered table-striped table-condensed"> <thead> <tr> <th width="23%" class="b-r-none " style="padding-left: 45px;">设计任务</th> <th width="12%" class="b-r-none b-l-none">任务描述</th> <th width="9%" class="b-r-none b-l-none">任务负责人</th> <th width="9%" class="b-r-none b-l-none">设计</th> <th width="9%" class="b-r-none b-l-none">校对</th> <th width="9%" class="b-r-none b-l-none">审核</th> <th width="9%" class="b-r-none b-l-none">开始时间</th> <th width="9%" class="b-r-none b-l-none">结束时间</th> <th width="8%" class="b-l-none">任务状态</th> </tr> </thead> ';
$each(productionList,function(t,ti){
$out+=' <tr class="tree-box-tr treegrid-';
$out+=$escape(t.id);
$out+=' ';
if(t.taskPid!=null && t.taskPid!=''){
$out+=' treegrid-parent-';
$out+=$escape(t.taskPid);
$out+=' ';
}
$out+='" data-i="';
$out+=$escape(ti);
$out+='" data-id="';
$out+=$escape(t.id);
$out+='" data-pid="';
$out+=$escape(t.taskPid);
$out+='" data-company-id="';
$out+=$escape(t.companyId);
$out+='" data-publish-id="';
$out+=$escape(t.publishId);
$out+='"> <td class="treeTd pt-relative popover-box no-pd-right b-r-none b-l-none" height="40" data-task-state="';
$out+=$escape(t.taskState=='3'||t.taskState=='4'?'1':'0');
$out+='"> ';
if(t.taskState=='3'||t.taskState=='4'){
$out+=' <i class="fa fa-check fc-v1-green"></i> ';
}
$out+=' <span class="taskName pt-relative m-w-300" data-string="';
$out+=$escape(t.taskName);
$out+='"> ';
$out+=$escape(t.taskName);
$out+=' </span> </td> <td class="b-r-none b-l-none v-middle"> <span class="taskRemark pt-relative m-w-300" data-string="';
$out+=$escape(t.taskRemark);
$out+='"> ';
$out+=$escape(t.taskRemark==null || t.taskRemark==''?'--':t.taskRemark);
$out+=' </span> </td> <td class="no-pd v-middle b-r-none b-l-none"> <p class="m-xxs"> <span>';
$out+=$escape(t.companyName);
$out+=' :</span> <span class="person-in-charge" data-toggle="tooltip" data-original-title="';
$out+=$escape(t.designOrg);
$out+=$escape(t.departName==null?'':'('+t.departName+')');
$out+='"> ';
if(t.completeDate!=null){
$out+=' <i class="fa fa-check fc-v1-green"></i> ';
}
$out+=' ';
$out+=$escape(t.personInChargeName);
$out+=' </span> </p> </td> <td class="b-r-none b-l-none v-middle"> <span class="show-span"> ';
if(t.designUser && t.designUser.userList!=null && t.designUser.userList.length>0){
$out+=' ';
$out+=$escape(t.designUserName);
$out+=' <span class="fa fa-bookmark-o" tooltip-type="1" ata-toggle="tooltip" data-original-title=""></span> ';
}else{
$out+=' <span class="fc-ccc">--</span> ';
}
$out+=' </span> </td> <td class="b-r-none b-l-none v-middle"> <span class="show-span"> ';
if(t.checkUser && t.checkUser.userList!=null && t.checkUser.userList.length>0){
$out+=' ';
$out+=$escape(t.checkUserName);
$out+=' <span class="fa fa-bookmark-o" tooltip-type="2" ata-toggle="tooltip" data-original-title=""></span> ';
}else{
$out+=' <span class="fc-ccc">--</span> ';
}
$out+=' </span> </td> <td class="b-r-none b-l-none v-middle"> <span class="show-span"> ';
if(t.examineUser && t.examineUser.userList!=null && t.examineUser.userList.length>0){
$out+=' ';
$out+=$escape(t.examineUserName);
$out+=' <span class="fa fa-bookmark-o" tooltip-type="3" ata-toggle="tooltip" data-original-title=""></span> ';
}else{
$out+=' <span class="fc-ccc">--</span> ';
}
$out+=' </span> </td> <td class="b-r-none b-l-none v-middle"> <span class="show-span"> ';
if(t.planStartTime==null || t.planStartTime==''){
$out+=' <span class="fc-ccc">--</span> ';
}else{
$out+=' ';
$out+=$escape(t.planStartTime);
$out+=' <a href="javascript:void(0);" data-action="viewProgressChange" id="viewProgressChanges1';
$out+=$escape(t.id);
$out+='"><i class="fa fa-info-circle"></i></a> ';
}
$out+=' </span> </td> <td class="b-r-none b-l-none v-middle"> <span class="show-span"> ';
if(t.planEndTime==null || t.planEndTime==''){
$out+=' <span class="fc-ccc">--</span> ';
}else{
$out+=' ';
$out+=$escape(t.planEndTime);
$out+=' <a href="javascript:void(0);" data-action="viewProgressChange" id="viewProgressChanges2';
$out+=$escape(t.id);
$out+='"><i class="fa fa-info-circle"></i></a> ';
}
$out+=' </span> </td> <td class="v-middle b-l-none v-middle"> ';
if(t.stateHtml!=null && t.stateHtml!=''){
$out+=' ';
$out+=$escape(t.stateHtml);
$out+=' ';
}
$out+=' </td> </tr> ';
});
$out+=' ';
if(!(productionList && productionList.length>0)){
$out+=' <tr> <td colspan="9" class="text-center v-middle"> <div class="m-b-xl m-t-md"> <img src="';
$out+=$escape(_url('/assets/img/default/without_data.png'));
$out+='"> <span class="fc-dark-blue dp-block">您还没有相关生产安排</span> </div> </td> </tr> ';
}
$out+=' </table> </form>';
return new String($out);
});/*v:1*/
template('m_production/m_production_tab',function($data,$filename
/**/) {
'use strict';var $utils=this,$helpers=$utils.$helpers,tabList=$data.tabList,$each=$utils.$each,t=$data.t,i=$data.i,$escape=$utils.$escape,currTabI=$data.currTabI,$out='';$out+='<div class="tabs-container"> <ul class="nav nav-tabs"> ';
if(tabList!=null && tabList.length>0){
$out+=' ';
$each(tabList,function(t,i){
$out+=' <li class="';
$out+=$escape(i==currTabI?'active':'');
$out+='"> <a data-toggle="tab" href="#tab-';
$out+=$escape(i);
$out+='" data-action="getProductionById" data-i="';
$out+=$escape(i);
$out+='" data-id="';
$out+=$escape(t.id);
$out+='" aria-expanded="false">';
$out+=$escape(t.name);
$out+='</a> </li> ';
});
$out+=' ';
}
$out+=' </ul> <div class="tab-content"> ';
if(tabList!=null && tabList.length>0){
$out+=' ';
$each(tabList,function(t,i){
$out+=' <div id="tab-';
$out+=$escape(i);
$out+='" class="tab-pane ';
$out+=$escape(i==currTabI?'active':'');
$out+='"> <div class="panel-body"> <div id="taskIssueList';
$out+=$escape(i);
$out+='"> </div> <div id="productionList';
$out+=$escape(i);
$out+='" class="list-box"> </div> </div> </div> ';
});
$out+=' ';
}
$out+=' </div> </div>';
return new String($out);
});/*v:1*/
template('m_production/m_production_taskIssue',function($data,$filename
/**/) {
'use strict';var $utils=this,$helpers=$utils.$helpers,contentTaskList=$data.contentTaskList,$each=$utils.$each,t=$data.t,i=$data.i,$escape=$utils.$escape,_momentFormat=$helpers._momentFormat,$out='';if(contentTaskList!=null && contentTaskList.length>0){
$out+=' ';
$each(contentTaskList,function(t,i){
$out+=' <div class="panel panel-default"> <div class="panel-body"> <div class="row"> <div class="col-md-6"><h5>计划进度：';
$out+=$escape(_momentFormat(t.planStartTime,'YYYY/MM/DD'));
$out+=' - ';
$out+=$escape(_momentFormat(t.planEndTime,'YYYY/MM/DD'));
$out+='</h5></div> <div class="col-md-6 text-right"> ';
if(t.taskState==2 || t.taskState==4){
$out+=' <span class="text-danger">';
$out+=$escape(t.statusText);
$out+='</span> ';
}else{
$out+=' <span class="text-warning">';
$out+=$escape(t.statusText);
$out+='</span> ';
}
$out+=' </div> </div> <div class="row"> <div class="col-md-12"><h5>任务描述：</h5></div> <div class="col-md-8"> <P> ';
if(t.taskRemark==null || t.taskRemark==''){
$out+=' <span class="fc-ccc">--</span> ';
}else{
$out+=' ';
$out+=$escape(t.taskRemark);
$out+=' ';
}
$out+=' </P> </div> <div class="col-md-4 text-right"> 签发人：';
$out+=$escape(t.issueUserName);
$out+=' &nbsp;&nbsp; 签发时间：';
$out+=$escape(_momentFormat(t.issueTime,'YYYY/MM/DD'));
$out+=' </div> </div> <div class="row"> <div class="col-md-12 text-right"> <a class="btn btn-info btn-sm" data-action="deliveryHistory" data-task-id="';
$out+=$escape(t.id);
$out+='">交付历史</a> <a class="btn btn-default btn-sm" data-action="initiateDelivery" data-task-id="';
$out+=$escape(t.id);
$out+='">发起交付</a> </div> </div> </div> </div> ';
});
$out+=' ';
}
return new String($out);
});/*v:1*/
template('m_production/m_schedule_list',function($data,$filename
/**/) {
'use strict';var $utils=this,$helpers=$utils.$helpers,$each=$utils.$each,taskScheduleChangesList=$data.taskScheduleChangesList,t=$data.t,ti=$data.ti,$escape=$utils.$escape,$out='';$out+='<style> .m_schedule_list { height: 200px;overflow: auto; } .m_schedule_list .timeline-v2>li{ height: 42px; } .m_schedule_list .timeline-v2>li .cbp_tmlabel:after{ border-right-color:#fff } .m_schedule_list .timeline-v2>li .cbp_tmlabel{ background: #fff; color: #666; margin: 0 0 40px 45px; font-size: 13px; } .m_schedule_list .timeline-v2:before{ left: 40px; } .m_schedule_list .timeline-v2>li .cbp_tmicon{ left:40px; top:15px; } </style> <div class="m_schedule_list"> <ul class="timeline-v2 timeline-me"> ';
$each(taskScheduleChangesList,function(t,ti){
$out+=' <li > <time class="cbp_tmtime" datetime=""> </time> <i class="cbp_tmicon rounded-x hidden-xs" style=" "></i> <div class="cbp_tmlabel"> <p>';
$out+=$escape(t.historyText);
$out+='</p> </div> </li> ';
});
$out+=' </ul> </div>';
return new String($out);
});/*v:1*/
template('m_production/m_setDesigners',function($data,$filename
/**/) {
'use strict';var $utils=this,$helpers=$utils.$helpers,$each=$utils.$each,projectProcessNodes=$data.projectProcessNodes,p=$data.p,i=$data.i,$escape=$utils.$escape,t=$data.t,$index=$data.$index,$out='';$out+='<style> span.label.designerSpan{background-color: rgb(245, 245, 245);padding: 6px 9px;position: relative;} span.nameSpan{padding-right: 10px;} a[data-action="delDesigner"]{position: absolute;right: 3px;} a[data-action="addDesigners"]{padding-top: 2px;} </style> <div class="ibox m-b-xs"> <div class="ibox-content no-pd-bottom" > <div class="col-md-6"> ';
$each(projectProcessNodes,function(p,i){
$out+=' <div class="row m-b-sm designerRow" data-node-name="';
$out+=$escape(p.nodeName);
$out+='" data-node-id="" data-node-seq="';
$out+=$escape(i+1);
$out+='"> <div class="col-md-12"> <div class="col-md-2 no-pd-right"><span class="m-t-xs inline">';
$out+=$escape(p.nodeName);
$out+='：</span></div> <div class="col-md-10 user-list" style="padding-top: 4px;"> ';
$each(p.projectProcessNodeDTOList,function(t,$index){
$out+=' <span class="label label-default inline m-r-xs m-b-xs designerSpan" data-companyUserId="';
$out+=$escape(t.companyUserId);
$out+='" data-id="';
$out+=$escape(t.id);
$out+='"> <span class="nameSpan">';
$out+=$escape(t.userName);
$out+='</span> <a href="javascript:void(0)" data-action="delDesigner"><i class="glyphicon glyphicon-remove text-danger"></i></a> </span> ';
});
$out+='  </div> </div> </div> ';
});
$out+=' </div> <div class="col-md-6 gray-bg" id="choseUserBox"> </div> <div class="clearfix"></div> </div> </div> ';
return new String($out);
});/*v:1*/
template('m_project/m_addProjectDesignContent',function($data,$filename
/**/) {
'use strict';var $utils=this,$helpers=$utils.$helpers,$each=$utils.$each,designContentList=$data.designContentList,c=$data.c,$index=$data.$index,$escape=$utils.$escape,$out='';$out+='<style> .form-group.designContentBox label.checkbox input{position: absolute;} .form-group.designContentBox form{margin: 0;} .btn-u{background: #4765a0;font-size: 12px;padding: 2px 12px;line-height: 18px;} .btn-u.btn-u-red{background: #e74c3c;} </style> <div class="form-group designContentBox p-xs" style="width: 300px;"> ';
$each(designContentList,function(c,$index){
$out+=' <div class="designContentDiv" data-i="';
$out+=$escape($index);
$out+='"> <label class="checkbox dp-inline-block"> ';
if(c.isChecked==1){
$out+=' <input name="designContent" class="checkbox dinline" type="checkbox" checked value="';
$out+=$escape(c.id);
$out+='" content-name="';
$out+=$escape(c.name);
$out+='" design-content-id="';
$out+=$escape(c.designContentId);
$out+='" data-isHas="';
$out+=$escape(c.isHas);
$out+='"/> ';
}
$out+=' ';
if(c.isChecked!=1){
$out+=' <input name="designContent" class="checkbox dinline" type="checkbox" value="';
$out+=$escape(c.id);
$out+='" content-name="';
$out+=$escape(c.name);
$out+='" design-content-id="';
$out+=$escape(c.designContentId);
$out+='"/> ';
}
$out+=' <i></i> ';
$out+=$escape(c.name);
$out+=' <!--<span class="timeSpan">';
$out+=$escape(c.processTimeStr);
$out+='</span>--> <span class="timeBtn ';
if(c.isChecked!=1){
$out+='hide';
}
$out+='"> <a href="javascript:void(0)" type="button" data-action="setDesignContentTime"> ';
$out+=$escape(c.processTimeBtnStr==null?'设置进度':c.processTimeBtnStr);
$out+=' </a> </span> </label> </div> ';
});
$out+=' </div> ';
return new String($out);
});/*v:1*/
template('m_project/m_addProjectDesignRange',function($data,$filename
/**/) {
'use strict';var $utils=this,$helpers=$utils.$helpers,$each=$utils.$each,designRangeList=$data.designRangeList,d=$data.d,$index=$data.$index,$escape=$utils.$escape,otherRange=$data.otherRange,$out='';$out+='<style> .form-group.designRangeBox label.checkbox input{position: absolute;} .form-group.designRangeBox input[type="text"].form-control{ width: 100%;} .form-group.designRangeBox form{margin: 0;} </style> <div class="form-group designRangeBox p-n m-b-xs "> <form class="sky-form rounded-bottom" > <fieldset class="no-padding"> <div class="row"> ';
$each(designRangeList,function(d,$index){
$out+=' <div class="col-md-4"> <label class="i-checks fw-normal"> ';
if(d.isChecked==1){
$out+=' <input name="range" type="checkbox" checked value="';
$out+=$escape(d.name);
$out+='" data-id="';
$out+=$escape(d.id);
$out+='"/> ';
}
$out+=' ';
if(d.isChecked!=1){
$out+=' <input name="range" type="checkbox" value="';
$out+=$escape(d.name);
$out+='" data-id="';
$out+=$escape(d.id);
$out+='"/> ';
}
$out+=' ';
$out+=$escape(d.name);
$out+=' </label> </div> ';
});
$out+=' </div> <div class="row otherRangeRow"> ';
$each(otherRange,function(d,$index){
$out+=' <div class="col-md-4 liBox"> <div class="col-md-2 no-padding" > <label class=" i-checks fw-normal" title="';
$out+=$escape(d.designRange);
$out+='"> <input name="otherRange" class="checkbox" type="checkbox" checked/> </label> </div> <div class="col-md-10 no-pd-left no-pd-right"> <label class="input"> <input id="';
$out+=$escape(d.id);
$out+='" class="designRange form-control input-sm" type="text" name="designRange" placeholder="请输入名称" value="';
$out+=$escape(d.designRange);
$out+='"/> </label> </div> </div> ';
});
$out+=' <div class="col-md-4"> <label class="label hao curp no-bg" data-action="addOtherRange" style="padding: 3px 8px 3px 0"> <i class="fa fa-plus-square f-s-20" style="color: #1ab394"></i> <span class="color-dark-blue f-s-15">&nbsp;自定义</span> </label> </div> </div> <div class="row error-box"> <div class="col-md-12"></div> </div> <div class="row m-b-xs no-pd-right"> <div class="col-md-12"> <button type="button" class="btn btn-default btn-sm m-popover-close pull-right "> <i class="glyphicon glyphicon-remove"></i> </button> <button type="button" class="btn btn-primary btn-sm m-popover-submit pull-right m-r-xs"> <i class="fa fa-check"></i> </button> </div> </div> </fieldset> </form> </div> ';
return new String($out);
});/*v:1*/
template('m_project/m_addTimeChangeRecord',function($data,$filename
/**/) {
'use strict';var $utils=this,$helpers=$utils.$helpers,$escape=$utils.$escape,$index=$data.$index,startTime=$data.startTime,endTime=$data.endTime,timeDiffStr=$data.timeDiffStr,memo=$data.memo,$out='';$out+='<div class="col-md-12 detailListDiv time-row m-t-sm"> <div class="col-md-3 text-center"> <b>第';
$out+=$escape($index+1);
$out+='次变更:</b> </div> <div class="col-md-6 no-pd-left" > <span data-type="startTime">';
$out+=$escape(startTime);
$out+='</span> <span >~</span> <span data-type="endTime">';
$out+=$escape(endTime);
$out+='</span> ';
if(timeDiffStr!=''){
$out+=' <span>&nbsp;( <span class="diffDaysTxt">';
$out+=$escape(timeDiffStr);
$out+='</span>天 )</span> ';
}
$out+=' </div> <div class="col-md-3 text-right"> <a class="btn-u btn-u-xs rounded" href="javascript:void(0)" data-action="addTimeChangeRecord" >变更</a>  </div> <div class="col-md-9 col-md-offset-3 no-pd-left m-t-sm"> <b>变更原因：</b> ';
$out+=$escape(memo);
$out+=' <div class="clearfix"></div> </div> <div class="clearfix"></div> </div> <div class="clearfix"></div> ';
return new String($out);
});/*v:1*/
template('m_project/m_choseConstructCompany','<div class="choiseConstructOBox" >  <form class="sky-form rounded-bottom noborder"> <fieldset> <section> <div class="col-md-12"> <div class="section row headline" style="height: 40px;"> <div class="col-md-6"> <div class="row"> <div class="col-md-4"> <label class="radio"> <input name="choiseConstruct" checked type="radio" data-action="choiseCommonAConstruct"> <i class="rounded-x"></i>常用甲方 </label> </div> <div class="col-md-4"> <label class="radio"> <input name="choiseConstruct" type="radio" data-action="searchAConstruct"> <i class="rounded-x"></i>搜索甲方 </label> </div> </div> </div> <div class="col-md-6 searchBox hide" > <div class="row"> <div class="col-md-6 col-md-offset-4" style="padding:0 7px;"> <div class="input"> <label class="input"> <input type="text" id="partAWord" name="keyword" placeholder="请输入甲方名称" > </label> </div> </div> <div class="col-md-2" style="padding:0 7px;"> <button type="submit" class="btn-u rounded" data-action="toSearchAConstruct">确定</button> </div> </div> </div> </div> </div> <table class="table table-hover constructList"> <thead> <tr> <td>序号</td> <td>组织名称</td> </tr> </thead> <tbody> </tbody> </table> </section> </fieldset> </form>  </div> ');/*v:1*/
template('m_project/m_choseOrg','<div class="choseOrgBox" >  <form class="sky-form rounded-bottom noborder"> <fieldset> <section>  <div class="col-md-12"> <table class="table table-hover orgList"> <thead> <tr> <td>序号</td> <td>组织名称</td> </tr> </thead> <tbody> </tbody> </table> </div> </section> </fieldset> </form>  </div> ');/*v:1*/
template('m_project/m_customDataDictionary',function($data,$filename
/**/) {
'use strict';var $utils=this,$helpers=$utils.$helpers,$each=$utils.$each,dataDictionaryList=$data.dataDictionaryList,d=$data.d,$index=$data.$index,$escape=$utils.$escape,customDataList=$data.customDataList,$out='';$out+='<style> .form-group.data-dictionary label.checkbox input{position: absolute;} .form-group.data-dictionary input[type="text"].form-control{ width: 100%;} .form-group.data-dictionary form{margin: 0;} </style> <div class="form-group data-dictionary p-n m-b-xs "> <form class="sky-form rounded-bottom" > <fieldset class="no-padding"> <div class="row"> ';
$each(dataDictionaryList,function(d,$index){
$out+=' <div class="col-md-4"> <label class="i-checks fw-normal"> ';
if(d.selected==true){
$out+=' <input name="dataDictionary" type="checkbox" checked value="';
$out+=$escape(d.name);
$out+='" data-id="';
$out+=$escape(d.id);
$out+='"/> ';
}else{
$out+=' <input name="dataDictionary" type="checkbox" value="';
$out+=$escape(d.name);
$out+='" data-id="';
$out+=$escape(d.id);
$out+='"/> ';
}
$out+=' ';
$out+=$escape(d.name);
$out+=' </label> </div> ';
});
$out+=' </div> <div class="row custom-data-dictionary"> ';
$each(customDataList,function(d,$index){
$out+=' <div class="col-md-4 liBox"> <div class="col-md-2 no-padding" > <label class=" i-checks fw-normal" title="';
$out+=$escape(d.name);
$out+='"> <input name="customDataDictionary" class="checkbox" type="checkbox" checked data-id="';
$out+=$escape(d.id);
$out+='"/> </label> </div> <div class="col-md-10 no-pd-left no-pd-right"> <label class="input"> <input id="';
$out+=$escape(d.id);
$out+='" class="form-control input-sm" type="text" name="iptCustomDataDictionary" placeholder="请输入名称" value="';
$out+=$escape(d.name);
$out+='"/> </label> </div> </div> ';
});
$out+=' <div class="col-md-4"> <label class="label hao curp no-bg" data-action="addCustomDataDictionary" style="padding: 3px 8px 3px 0"> <i class="fa fa-plus-square f-s-20" style="color: #1ab394"></i> <span class="color-dark-blue f-s-15">&nbsp;自定义</span> </label> </div> </div> <div class="row error-box"> <div class="col-md-12"></div> </div> <div class="row m-b-xs no-pd-right"> <div class="col-md-12"> <button type="button" class="btn btn-default btn-sm m-popover-close pull-right "> <i class="glyphicon glyphicon-remove"></i> </button> <button type="button" class="btn btn-primary btn-sm m-popover-submit pull-right m-r-xs"> <i class="fa fa-check"></i> </button> </div> </div> </fieldset> </form> </div> ';
return new String($out);
});/*v:1*/
template('m_project/m_defineEditableContent',function($data,$filename
/**/) {
'use strict';var $utils=this,$helpers=$utils.$helpers,title=$data.title,$escape=$utils.$escape,showAllButton=$data.showAllButton,showCloseButton=$data.showCloseButton,$out='';$out+=' <div class="popover editable-container editable-popup fade top in" role="tooltip"> <div class="arrow" style="left: 50%;"></div> ';
if(title && title!=''){
$out+=' <h3 class="popover-title">';
$out+=$escape(title);
$out+='</h3> ';
}
$out+=' <div class="popover-content"> <div> <div class="editableform-loading dp-none"></div> <form class="editableform"> <div class="control-group"> <div> <div class="editable-input"></div> <div class="editable-error-block help-block " style="display:none;"></div> ';
if(showAllButton){
$out+=' <div class="editable-buttons dp-block text-right overflow-hidden"> <button type="button" class="btn btn-default btn-sm editable-cancel m-n pull-right"> <i class="fa fa-remove"></i> </button> <button type="button" class="btn btn-primary btn-sm editable-submit m-r-xs pull-right" > <i class="fa fa-check"></i> </button> </div> ';
}
$out+=' ';
if(showCloseButton){
$out+=' <div class="editable-buttons text-right"> <button type="button" class="btn btn-default btn-sm editable-cancel"> <i class="glyphicon glyphicon-remove"></i> </button> </div> ';
}
$out+=' </div> </div> </form> </div> </div> </div>';
return new String($out);
});/*v:1*/
template('m_project/m_editCustomPropertyTemp',function($data,$filename
/**/) {
'use strict';var $utils=this,$helpers=$utils.$helpers,projectPropertyData=$data.projectPropertyData,$each=$utils.$each,p=$data.p,$index=$data.$index,$escape=$utils.$escape,u=$data.u,$out='';$out+='<div class="m_editCustomPropertyTemp"> <div class="col-md-6"> <div class="ibox"> <div class="ibox-title border-none p-h-sm min-h-50">数据模板</div> <div class="ibox-content border-darker-grey box-left"> <h4>模板标签库</h4> <div class="m-b-sm check-box"> <label class="i-checks fw-normal"> <input name="allProjectFieldCK" type="checkbox" value="0"/> <span class="i-checks-span">全选</span> </label> </div> <div class="row"> ';
if(projectPropertyData.basicPropertyList!=null && projectPropertyData.basicPropertyList.length>0){
$out+=' ';
$each(projectPropertyData.basicPropertyList,function(p,$index){
$out+=' <div class="col-md-6 no-pd-right check-box"> <label class="i-checks fw-normal"> <input name="projectFieldCk" type="checkbox" value="';
$out+=$escape(p.id);
$out+='" data-field-name="';
$out+=$escape(p.fieldName);
$out+='" data-unit-name="';
$out+=$escape(p.unitName);
$out+='"/> <span class="i-checks-span"> ';
$out+=$escape(p.fieldName);
$out+='&nbsp; ';
$out+=$escape(p.unitName!=null&& p.unitName!=''?'('+p.unitName+')':'');
$out+=' </span> </label> </div> ';
});
$out+=' ';
}
$out+=' <div class="clearfix"></div> </div> <h4>自定义库</h4> <div class="row"> <form class="addPropertyForm"> <div class="col-md-6"> <input class="form-control no-pd-right" type="text" name="fieldName"> </div> <div class="col-md-4 no-pd-right no-pd-left"> <!--<select class="form-control p-xxs" name="unitName"> <option value="">选择单位</option> ';
if(projectPropertyData.unitNameList!=null && projectPropertyData.unitNameList.length>0){
$out+=' ';
$each(projectPropertyData.unitNameList,function(u,$index){
$out+=' <option value="';
$out+=$escape(u);
$out+='">';
$out+=$escape(u);
$out+='</option> ';
});
$out+=' ';
}
$out+=' </select>--> <div class="input-group"> <input type="text" class="form-control" name="unitName" placeholder="请输入或选择" maxlength="8"> <div class="input-group-btn"> <button type="button" class="btn btn-default dropdown-toggle" data-toggle="dropdown"><span class="caret"></span></button> <ul class="dropdown-menu dropdown-menu-right" style="right: 0;left: inherit;max-height: 208px;overflow: auto;"> ';
if(projectPropertyData.unitNameList!=null && projectPropertyData.unitNameList.length>0){
$out+=' ';
$each(projectPropertyData.unitNameList,function(u,$index){
$out+=' ';
if(u!=null && u!=''){
$out+=' <li><a href="javascript:void(0);" style="padding:0px 20px;">';
$out+=$escape(u);
$out+='</a></li> ';
}
$out+=' ';
});
$out+=' ';
}
$out+=' </ul> </div> </div> </div> <div class="col-md-2"> <button type="button" class="btn btn-primary btn-sm" data-action="addPropertyBtn">添加</button> </div> <div class="col-md-12"></div> <div class="clearfix"></div> </form> </div> <div class="row m-t-sm" id="customPropertyBox"> </div> </div> </div> </div> <div class="col-md-6"> <div class="ibox"> <div class="ibox-title border-none p-h-sm min-h-50">已选择项 (拖拽进行调整顺序)</div> <div class="ibox-content border-darker-grey box-right"> <div class="row list-group" id="selectPropertyBox"> </div> </div> </div> </div> </div> ';
return new String($out);
});/*v:1*/
template('m_project/m_editCustomPropertyTempAdd',function($data,$filename
/**/) {
'use strict';var $utils=this,$helpers=$utils.$helpers,customPropertyList=$data.customPropertyList,$each=$utils.$each,s=$data.s,si=$data.si,$escape=$utils.$escape,$out='';if(customPropertyList!=null && customPropertyList.length>0 ){
$out+=' ';
$each(customPropertyList,function(s,si){
$out+=' <div class="col-md-6 no-pd-right m-b-xs check-box"> <label class="i-checks fw-normal"> <input name="cusProjectFieldCk" type="checkbox" value="';
$out+=$escape(s.id);
$out+='" data-field-name="';
$out+=$escape(s.fieldName);
$out+='" data-unit-name="';
$out+=$escape(s.unitName);
$out+='"/> <span class="i-checks-span"> <span class=" property-span m-r-xs bg-muted p-xxs f-s-12" > <span class="field-name" data-string="';
$out+=$escape(s.fieldName);
$out+=' ';
$out+=$escape(s.unitName!=null&& s.unitName!=''?'('+s.unitName+')':'');
$out+='"> ';
$out+=$escape(s.fieldName);
$out+='&nbsp; ';
$out+=$escape(s.unitName!=null&& s.unitName!=''?'('+s.unitName+')':'');
$out+=' </span> <a class="curp" href="javascript:void(0)" data-id="';
$out+=$escape(s.id);
$out+='" data-index=';
$out+=$escape(si);
$out+=' data-field-name="';
$out+=$escape(s.fieldName);
$out+='" data-unit-name="';
$out+=$escape(s.unitName);
$out+='" data-action="delCusProperty"> <i class="fa fa-times color-red"></i></a> </span> </span> </label> </div> ';
});
$out+=' ';
}
return new String($out);
});/*v:1*/
template('m_project/m_editCustomPropertyTempSelect',function($data,$filename
/**/) {
'use strict';var $utils=this,$helpers=$utils.$helpers,selectedPropertyList=$data.selectedPropertyList,$each=$utils.$each,s=$data.s,si=$data.si,$escape=$utils.$escape,$out='';if(selectedPropertyList!=null && selectedPropertyList.length>0 ){
$out+=' ';
$each(selectedPropertyList,function(s,si){
$out+=' <div class="col-md-6 no-pd-right m-b list-group-item" data-sortId="';
$out+=$escape(si);
$out+='"> <span class=" property-span m-r-xs bg-muted p-xxs f-s-12" > <span class="field-name" data-string="';
$out+=$escape(s.fieldName);
$out+=' ';
$out+=$escape(s.unitName!=null&& s.unitName!=''?'('+s.unitName+')':'');
$out+='"> ';
$out+=$escape(s.fieldName);
$out+='&nbsp; ';
$out+=$escape(s.unitName!=null&& s.unitName!=''?'('+s.unitName+')':'');
$out+=' </span> <a class="curp" href="javascript:void(0)" data-id="';
$out+=$escape(s.id);
$out+='" data-field-name="';
$out+=$escape(s.fieldName);
$out+='" data-unit-name="';
$out+=$escape(s.unitName);
$out+='" data-action="delSelectedProperty"> <i class="fa fa-times color-red"></i></a> </span> </div> ';
});
$out+=' ';
}
return new String($out);
});/*v:1*/
template('m_project/m_editDesignContent',function($data,$filename
/**/) {
'use strict';var $utils=this,$helpers=$utils.$helpers,$each=$utils.$each,designContentList=$data.designContentList,d=$data.d,$index=$data.$index,$escape=$utils.$escape,v=$data.v,$out='';$out+='<div class="designContentOBox" > <form class="sky-form rounded-bottom noborder p-m" > ';
$each(designContentList,function(d,$index){
$out+=' <div class=" designContentDiv" data-i="';
$out+=$escape($index);
$out+='"> <div class="col-md-12 liBox time-row"> <div class="col-md-3 no-padding m-t-sm text-center" title="';
$out+=$escape(d.contentName);
$out+='" style="overflow:hidden;text-overflow:ellipsis;"> ';
$out+=$escape(d.contentName);
$out+=' </div> <div class="col-md-7 no-padding m-t-sm">  ';
if(d.projectProcessTimeEntityList && d.projectProcessTimeEntityList.length>0){
$out+=' <span data-type="startTime">';
$out+=$escape(d.projectProcessTimeEntityList[0].startTime);
$out+='</span> <span>~</span> <span data-type="endTime">';
$out+=$escape(d.projectProcessTimeEntityList[0].endTime);
$out+='</span> ';
if(d.projectProcessTimeEntityList[0].timeDiffStr!=''){
$out+=' <span>&nbsp;( <span class="diffDaysTxt">';
$out+=$escape(d.projectProcessTimeEntityList[0].timeDiffStr);
$out+='</span>天 )</span> ';
}
$out+=' ';
}
$out+=' </div> <div class="col-md-2 text-right btnBox m-t-sm"> <a class="btn btn-primary btn-xs rounded ';
if(d.projectProcessTimeEntityList.length>1){
$out+='hide';
}
$out+='" href="javascript:void(0)" data-action="addTimeChangeRecord">变更</a> <!--<a class="btn btn-xs btn-danger rounded ';
if(d.projectProcessTimeEntityList.length>1){
$out+='hide';
}
$out+='" href="javascript:void(0)" data-action="delTimeChangeRecord">删除</a>--> </div> </div>  ';
$each(d.projectProcessTimeEntityList,function(v,$index){
$out+=' ';
if($index>0){
$out+=' <div class="col-md-12 detailListDiv time-row m-t-sm "> <div class="col-md-3 text-center"> <b>第';
$out+=$escape($index);
$out+='次变更:</b> </div> <div class="col-md-6 no-pd-left" style="background: transparent"> <span data-type="startTime">';
$out+=$escape(v.startTime);
$out+='</span> ';
if((v.startTime!=null && v.startTime!='') || (v.endTime!=null && v.endTime!='')){
$out+=' <span>~</span> ';
}
$out+=' <span data-type="endTime">';
$out+=$escape(v.endTime);
$out+='</span> ';
if((v.startTime!=null && v.startTime!='') && (v.endTime!=null && v.endTime!='')){
$out+=' <span>&nbsp;( <span class="diffDaysTxt">';
$out+=$escape(v.timeDiffStr);
$out+='</span>天 )</span> ';
}
$out+=' </div> <div class="col-md-3 text-right btnBox" style="padding-top: 3px;"> <a class="btn-u btn-u-xs rounded ';
if(!(d.projectProcessTimeEntityList.length==$index+1)){
$out+='hide';
}
$out+='" href="javascript:void(0)" data-action="addTimeChangeRecord">变更</a> <!--<a class="btn-u btn-u-xs btn-u-red rounded ';
if(!(d.projectProcessTimeEntityList.length==$index+1)){
$out+='hide';
}
$out+='" href="javascript:void(0)" data-action="delTimeChangeRecord">删除</a>--> </div> <div class="col-md-9 col-md-offset-3 no-pd-left m-t-sm"> <b>变更原因：</b> ';
$out+=$escape(v.memo);
$out+=' <div class="clearfix"></div> </div> <div class="clearfix"></div> </div> ';
}
$out+=' ';
});
$out+='  <div class="clearfix"></div> </div> ';
});
$out+=' </form> </div> <div class="clearfix"></div> ';
return new String($out);
});/*v:1*/
template('m_project/m_editDesignRange',function($data,$filename
/**/) {
'use strict';var $utils=this,$helpers=$utils.$helpers,$each=$utils.$each,designRangeList=$data.designRangeList,d=$data.d,$index=$data.$index,$escape=$utils.$escape,otherRange=$data.otherRange,$out='';$out+=' <div class="addRangeOBox"> <form class="sky-form rounded-bottom" > <fieldset> <div class="row"> ';
$each(designRangeList,function(d,$index){
$out+=' <div class="col-md-3"> <label class="checkbox" title="';
$out+=$escape(d.name);
$out+='"> ';
if(d.isChecked==1){
$out+=' <input name="range" class="checkbox" type="checkbox" checked value="';
$out+=$escape(d.name);
$out+='"/> ';
}
$out+=' ';
if(d.isChecked!=1){
$out+=' <input name="range" class="checkbox" type="checkbox" value="';
$out+=$escape(d.name);
$out+='"/> ';
}
$out+=' <i></i> ';
$out+=$escape(d.name);
$out+=' </label> </div> ';
});
$out+=' </div> <div class="row otherRangeRow"> ';
$each(otherRange,function(d,$index){
$out+=' <div class="col-md-3 liBox"> <div class="col-md-2 no-padding" > <label class="checkbox" title="';
$out+=$escape(d.designRange);
$out+='"> <input name="otherRange" class="checkbox" type="checkbox" checked/> <i></i> </label> </div> <div class="col-md-10 out-box no-pd-left no-pd-right"> <label class="input"> <input id="';
$out+=$escape(d.id);
$out+='" class="designRange form-control" type="text" name="designRange" placeholder="请输入名称" value="';
$out+=$escape(d.designRange);
$out+='"/> </label> </div> </div> ';
});
$out+=' <div class="col-md-3"> <label class="label hao curp" data-action="addOtherRange"> <i class="fa fa-plus-square f-s-20"></i> <span class="color-dark-blue f-s-15">&nbsp;自定义</span> </label> </div> </div> </fieldset> </form> </div> ';
return new String($out);
});/*v:1*/
template('m_project/m_entryAddress',function($data,$filename
/**/) {
'use strict';var $utils=this,$helpers=$utils.$helpers,$escape=$utils.$escape,$detailAddress=$data.$detailAddress,$out='';$out+='<div class="selectRegionOBox border-none no-pd-bottom" style="width: 370px;"> <fieldset> <section> <div class="form-group m-b-xs col-md-12 no-pd-right no-pd-left" style="margin: 0 0 5px 0"> <label for="selectRegion">所在地区</label> <div class="input-group cityBox" id="selectRegion" name="selectRegion"> <div class="dp-inline-block"> <select class="prov form-control" name="province"></select> </div> <div class="dp-inline-block m-l-xs"> <select class="city form-control" name="city" disabled="disabled" style="display: none;"></select> </div> <div class="dp-inline-block m-l-xs"> <select class="dist form-control" name="county" disabled="disabled" style="display: none;"></select> </div> </div> </div> <div class="form-group m-b-xs col-md-12 no-pd-right no-pd-left" style="margin: 0 0 5px 0"> <label for="detailAddress">详细地址：</label> <input type="text" class="form-control" style="width: 100%;" name="detailAddress" id="detailAddress" maxlength="255" value="';
$out+=$escape($detailAddress);
$out+='"> </div> </section> </fieldset> <div class="col-md-12 m-b-xs no-pd-right"> <button type="button" class="btn btn-default btn-sm m-popover-close pull-right "> <i class="glyphicon glyphicon-remove"></i> </button> <button type="button" class="btn btn-primary btn-sm m-popover-submit pull-right m-r-xs"> <i class="fa fa-check"></i> </button> <div class="clearfix"></div> </div> </div> ';
return new String($out);
});/*v:1*/
template('m_project/m_popover_partyA',function($data,$filename
/**/) {
'use strict';var $utils=this,$helpers=$utils.$helpers,$escape=$utils.$escape,enterpriseId=$data.enterpriseId,constructCompanyName=$data.constructCompanyName,$out='';$out+='<form class="form" style="font-size: 12px;"> <div class="form-group m-b-xs" style="padding: 15px 0 60px;"> <label class="col-24-sm-4 control-label text-right m-t-xs" for="constructCompanyName" >甲方</label>  <div class="col-24-sm-14" style="padding-right: 0;"> <input type="text" class="form-control constructCompanyName" name="constructCompanyName" id="constructCompanyName" placeholder="请输入甲方名称" autocomplete="off" data-id="';
$out+=$escape(enterpriseId);
$out+='" value="';
$out+=$escape(constructCompanyName);
$out+='"> <div class="partyA-select-box" style="position: absolute; top: 100%; left: 14px; z-index: 100; right: auto;background: #fff;border: solid 1px #ccc;border-radius: 5px;box-shadow: 1px 1px 6px 0 #9a9a9a;min-width: 80%; display: none;"> </div> </div> <div class="col-24-sm-6" style="padding: 0 10px 0;"> <button type="button" class="btn btn-default btn-sm m-popover-close m-n pull-right"> <i class="fa fa-remove"></i> </button> <button type="button" class="btn btn-primary btn-sm m-popover-submit m-r-xs pull-right" > <i class="fa fa-check"></i> </button> </div> </div> </form>';
return new String($out);
});/*v:1*/
template('m_project/m_popover_partyB','<style> .select2 span.select2-selection{height:34px;border-radius:0px;} </style> <form class="form" style="font-size: 12px;"> <div class="form-group m-b-xs"> <label class="col-24-sm-7 control-label m-t-sm no-pd-left" for="partB">乙方</label> <select name="partB" id="partB" class="col-24-sm-17 orm-control input-sm" style="width:230px;"></select> </div>   <div class="form-group clearfix"> <div class="col-md-12 no-pd-right"> <button type="button" class="btn btn-default btn-sm m-popover-close m-n pull-right"> <i class="fa fa-remove"></i> </button> <button type="button" class="btn btn-primary btn-sm m-popover-submit m-r-xs pull-right" > <i class="fa fa-check"></i> </button>      </div> </div> </form>');/*v:1*/
template('m_project/m_popover_projectType',function($data,$filename
/**/) {
'use strict';var $utils=this,$helpers=$utils.$helpers,$escape=$utils.$escape,projectType=$data.projectType,$each=$utils.$each,projectTypeList=$data.projectTypeList,p=$data.p,$index=$data.$index,$out='';$out+='<form class="form"> <div class="form-group m-b-none" > <div class="col-24-sm-14 no-pd"> <div class="input-group"> <input type="text" class="form-control" name="projectType" style="height: 30px;padding-right: 24px;" value="';
$out+=$escape(projectType);
$out+='"> <span class="editable-clear-x" style="right: 40px;display: none;"></span> <div class="input-group-btn"> <button type="button" class="btn btn-default dropdown-toggle" data-toggle="dropdown" style="height: 30px;padding: 3px 12px;"> <span class="caret"></span> </button> <ul class="dropdown-menu dropdown-menu-right" style="right: 0;left: inherit;"> ';
$each(projectTypeList,function(p,$index){
$out+=' <li><a href="javascript:void(0);">';
$out+=$escape(p.name);
$out+='</a></li> ';
});
$out+=' </ul> </div> </div> </div> <div class="col-24-sm-8 no-pd" > <button type="button" class="btn btn-primary btn-sm m-popover-submit m-l-xs" > <i class="fa fa-check"></i> </button> <button type="button" class="btn btn-default btn-sm m-popover-close m-n"> <i class="fa fa-remove"></i> </button> </div> <div class="clearfix"></div> </div> </form>';
return new String($out);
});/*v:1*/
template('m_project/m_projectBasicInfo',function($data,$filename
/**/) {
'use strict';var $utils=this,$helpers=$utils.$helpers,$escape=$utils.$escape,isView=$data.isView,project=$data.project,deleteFlag=$data.deleteFlag,editFlag=$data.editFlag,_isNullOrBlank=$helpers._isNullOrBlank,$each=$utils.$each,b=$data.b,bi=$data.bi,p=$data.p,pi=$data.pi,_subStr=$helpers._subStr,r=$data.r,j=$data.j,f=$data.f,fi=$data.fi,fastdfsUrl=$data.fastdfsUrl,currentCompanyId=$data.currentCompanyId,i=$data.i,c=$data.c,_momentFormat=$helpers._momentFormat,$out='';$out+='<div class="ibox m_projectBasicInfo ';
$out+=$escape(isView==true?'min-h':'');
$out+='"> <div class="ibox-title secondary-menu-outbox ';
$out+=$escape(isView==true?'hide':'');
$out+='"> <div class="row"> <div class="col-md-6">  <div class="no-margin p-h-sm breadcrumb-box" > <ol class="breadcrumb"> <li> 我的项目 </li> <li class=" fa fa-angle-right"> ';
$out+=$escape(project.projectName);
$out+=' </li> <li class="active fa fa-angle-right"> <strong>基本信息</strong> </li> </ol> </div> </div> <div class="col-md-6"> <div class="btn-group pull-right m-t-sm m-r-xs"> <!--';
if((project.attentionId==null || project.attentionId=='')){
$out+=' <a class="btn btn-sm btn-default btn-bitbucket attention shoucang m-r-none" title="关注该项目" data-id="';
$out+=$escape(project.id);
$out+='" data-attention-id="';
$out+=$escape(project.attentionId);
$out+='"><i class="fa fa-star"></i>&nbsp;<span class="text">关注</span></a> ';
}
$out+=' ';
if(project.attentionId!=null && project.attentionId!=''){
$out+=' <a class="btn btn-sm btn-default btn-bitbucket attention shoucangshixin m-r-none" title="取消关注该项目" data-id="';
$out+=$escape(project.id);
$out+='" data-attention-id="';
$out+=$escape(project.attentionId);
$out+='"><i class="fa fa-star fc-v1-yellow"></i>&nbsp;<span class="text">取消关注</span></a> ';
}
$out+='--> </div> </div> </div> </div> <div class="ibox-content no-pd-bottom no-borders"> <form class="sky-form no-margins"> <div class="row"> <div class="col-md-6"><h3>基本信息</h3></div> <div class="col-md-6"> ';
if(deleteFlag!=null && deleteFlag==1){
$out+=' <a class="btn btn-default btn-sm m-r-none pull-right ';
$out+=$escape(isView==true?'hide':'');
$out+='" data-toggle="tooltip" data-placement="top" data-action="deleteProject" data-id="';
$out+=$escape(project.id);
$out+='" title="删除该项目" style="color: red"><span>删除项目</span> </a> ';
}
$out+=' </div> </div> <table class="table table-bordered"> <tbody> <tr> <td width="12%"><b>项目名称</b></td> <td width="37%"> <span><a href="javascript:void(0);" data-action="text_projectName">';
$out+=$escape(project.projectName);
$out+='</a></span> </td> <td><b>项目状态</b></td> <td> <a href="javascript:void(0);" data-action="select_status" data-status="';
$out+=$escape(project.projectStatus.valueId);
$out+='"> ';
$out+=$escape(project.projectStatus.content);
$out+=' </a> </td> </tr> <tr> <td><b>项目编号</b></td> <td> <span><a href="javascript:void(0);" data-action="text_projectNo">';
$out+=$escape(project.projectNo);
$out+='</a> </span> </td> <td width="12%"><b>甲方</b></td> <td width="39%"> ';
if(editFlag){
$out+=' ';
if(_isNullOrBlank(project.partyACompany)){
$out+=' <a class="curp constructCompanyName" style="line-height: 30px;color:#ccc;" data-action="edit_constructCompanyName">未设置</a> ';
}else{
$out+=' <a class="curp constructCompanyName" data-action="edit_constructCompanyName"> ';
$out+=$escape(project.partyACompany.companyName);
$out+=' </a> ';
}
$out+=' ';
}else{
$out+=' <span> ';
if(!_isNullOrBlank(project.partyACompany)){
$out+=' ';
$out+=$escape(project.partyACompany.companyName);
$out+=' ';
}
$out+=' </span> ';
}
$out+=' </td> </tr> <tr> <td><b>合同签订</b></td> <td> ';
if(editFlag){
$out+=' ';
if(project.contractDate!=null && project.contractDate!=''){
$out+=' <span><a href="javascript:void(0);" data-action="edit_signDate" class="editable editable-click">';
$out+=$escape(project.contractDate);
$out+='</a></span> ';
}
$out+=' ';
if(project.contractDate==null || project.contractDate==''){
$out+=' <span><a href="javascript:void(0);" data-action="edit_signDate" class="editable editable-click" style="color:#ccc;font-style:normal;">未签订</a></span> ';
}
$out+=' ';
}
$out+=' ';
if(!editFlag){
$out+=' ';
if(project.contractDate!=null && project.contractDate!=''){
$out+=' <span>';
$out+=$escape(project.contractDate);
$out+='</span> ';
}
$out+=' ';
if(project.contractDate==null || project.contractDate==''){
$out+=' <span>未签订</span> ';
}
$out+=' ';
}
$out+=' </td> <td><b>乙方</b></td> <td> <span> <input type="hidden" name="companyBid" value="';
$out+=$escape(project.partyBCompany!=null?project.partyBCompany.id:'');
$out+='"/> ';
if(editFlag){
$out+=' ';
if(_isNullOrBlank(project.partyBCompany)){
$out+=' <a class="curp companyChoise" style="line-height: 30px;color:#ccc;" data-action="edit_companyBidName">请点击选择乙方</a> ';
}else{
$out+=' <a class="curp companyBidName" style="line-height: 30px;" data-action="edit_companyBidName" data-companyBid="';
$out+=$escape(project.partyBCompany.id);
$out+='" data-companyBidName="';
$out+=$escape(project.partyBCompany.companyName);
$out+='" data-partBManagerId="';
$out+=$escape(project.operatorOfPartyB==null?'':project.operatorOfPartyB.id);
$out+='" data-partBManagerName="';
$out+=$escape(project.operatorOfPartyB==null?'':project.operatorOfPartyB.companyUserName);
$out+='" data-partBDesignerId="" data-partBDesignerName=""> ';
$out+=$escape(project.partyBCompany.companyName);
$out+='&nbsp;&nbsp; </a> ';
}
$out+=' ';
}else{
$out+=' <span></span> ';
}
$out+=' ';
if(!editFlag && project.partyBCompany!=null){
$out+=' ';
$out+=$escape(project.partyBCompany.companyName);
$out+='&nbsp;&nbsp; ';
}
$out+=' </span> </td> </tr> <tr> <td><b>项目类型</b></td> <td> <a href="javascript:void(0);" data-action="edit_projectType" class="editable editable-click"> ';
$out+=$escape(project.projectType==null||project.projectType.content==null||project.projectType.content==''?'未设置':project.projectType.content);
$out+=' </a> </td> <td><b>立项组织</b></td> <td> ';
if(project.creatorCompany!=null){
$out+=' ';
$out+=$escape(project.creatorCompany.companyName);
$out+=' ';
}
$out+=' </td> </tr> <tr> <td><b>功能分类</b></td> <td> <a href="javascript:void(0);" class="editable editable-click" data-action="edit_builtType"> ';
if(project.buildTypeList!=null && project.buildTypeList.length>0){
$out+=' ';
$each(project.buildTypeList,function(b,bi){
$out+=' ';
if(bi == project.buildTypeList.length-1){
$out+=' ';
$out+=$escape(b.name);
$out+=' ';
}else{
$out+=' ';
$out+=$escape(b.name);
$out+=', ';
}
$out+=' ';
});
$out+=' ';
}else{
$out+=' 未设置 ';
}
$out+=' </a> </td> <td><b>项目地点</b></td> <td> <span> <a href="javascript:void(0);" class="editable editable-click" data-action="edit_address" id="address" data-original-title title> ';
if(project.projectLocation!=null){
$out+=' ';
if(project.projectLocation.province && project.projectLocation.province!=''){
$out+=' ';
$out+=$escape(project.projectLocation.province);
$out+='&nbsp;&nbsp; ';
}
$out+=' ';
if(project.projectLocation.city && project.projectLocation.city!=''){
$out+=' ';
$out+=$escape(project.projectLocation.city);
$out+='&nbsp;&nbsp; ';
}
$out+=' ';
if(project.projectLocation.county && project.projectLocation.county!=''){
$out+=' ';
$out+=$escape(project.projectLocation.county);
$out+='&nbsp;&nbsp; ';
}
$out+=' ';
if(project.projectLocation.detailAddress && project.projectLocation.detailAddress!=''){
$out+=' ';
$out+=$escape(project.projectLocation.detailAddress);
$out+=' ';
}
$out+=' ';
}
$out+=' </a> </span> </td> </tr> </tbody> </table> <div class="row"> <div class="col-md-6"> <h3 class="pull-left">专业信息</h3> ';
if(editFlag){
$out+=' <a class="pull-left m-t-xs m-l-sm" href="javascript:void(0);" data-action="customInfoTemp"> <i class="fa fa-pencil text-navy"></i> </a> ';
}
$out+=' </div> </div> <table class="table table-bordered"> ';
if(project.projectPropertyList!=null && project.projectPropertyList.length>0){
$out+=' ';
$each(project.projectPropertyList,function(p,pi){
$out+=' ';
if(pi%2==0){
$out+=' <tr> <td width="12%"><b>';
$out+=$escape(p.fieldName);
$out+='</b></td> <td width="37%"> ';
if(p.fieldName=='建筑层数' && p.unitName=='层'){
$out+=' <div> 地下： <span class="dp-inline-block" style="min-width: 10%;"> <a href="javascript:void(0);" data-field-id="';
$out+=$escape(p.id);
$out+='" data-field-unit="';
$out+=$escape(p.unitName);
$out+='" data-field-value="';
$out+=$escape(_subStr(p.fieldValue,';',0));
$out+='" data-action="text_propertyFieldDown';
$out+=$escape(pi);
$out+='">';
$out+=$escape(_subStr(p.fieldValue,';',0));
$out+='</a> </span> ';
if(_subStr(p.fieldValue,';',0)!=''){
$out+=' <span class="unit-span">&nbsp;层</span> ';
}
$out+=' ；地上： <span class="dp-inline-block" style="min-width: 10%;"> <a href="javascript:void(0);" data-field-id="';
$out+=$escape(p.id);
$out+='" data-field-unit="';
$out+=$escape(p.unitName);
$out+='" data-field-value="';
$out+=$escape(_subStr(p.fieldValue,';',1));
$out+='" data-action="text_propertyFieldUp';
$out+=$escape(pi);
$out+='">';
$out+=$escape(_subStr(p.fieldValue,';',1));
$out+='</a> </span> ';
if(_subStr(p.fieldValue,';',1)!=''){
$out+=' <span class="unit-span">&nbsp;层</span> ';
}
$out+=' </div> ';
}else{
$out+=' <span> ';
if(p.unitName!=null && p.unitName!=''){
$out+=' <a href="javascript:void(0);" data-field-id="';
$out+=$escape(p.id);
$out+='" data-field-unit="';
$out+=$escape(p.unitName);
$out+='" data-field-value="';
$out+=$escape(p.fieldValue);
$out+='" data-action="text_propertyField';
$out+=$escape(pi);
$out+='">';
$out+=$escape(p.fieldValue);
$out+='</a> <span class="unit-span">';
$out+=$escape(p.unitName);
$out+='</span> ';
}else{
$out+=' <a href="javascript:void(0);" data-field-id="';
$out+=$escape(p.id);
$out+='" data-field-unit="';
$out+=$escape(p.unitName);
$out+='" data-field-value="';
$out+=$escape(p.fieldValue);
$out+='" data-action="text_propertyField';
$out+=$escape(pi);
$out+='">';
$out+=$escape(p.fieldValue);
$out+='</a> ';
}
$out+=' </span> ';
}
$out+=' </td> ';
}else{
$out+=' <td width="12%"><b>';
$out+=$escape(p.fieldName);
$out+='</b></td> <td> ';
if(p.fieldName=='建筑层数' && p.unitName=='层'){
$out+=' <div> 地下： <span class="dp-inline-block" style="min-width: 10%;"> <a href="javascript:void(0);" data-field-id="';
$out+=$escape(p.id);
$out+='" data-field-unit="';
$out+=$escape(p.unitName);
$out+='" data-field-value="';
$out+=$escape(_subStr(p.fieldValue,';',0));
$out+='" data-action="text_propertyFieldDown';
$out+=$escape(pi);
$out+='">';
$out+=$escape(_subStr(p.fieldValue,';',0));
$out+='</a> </span> ';
if(_subStr(p.fieldValue,';',0)!=''){
$out+=' <span class="unit-span">&nbsp;层</span> ';
}
$out+=' ；地上： <span class="dp-inline-block" style="min-width: 10%;"> <a href="javascript:void(0);" data-field-id="';
$out+=$escape(p.id);
$out+='" data-field-unit="';
$out+=$escape(p.unitName);
$out+='" data-field-value="';
$out+=$escape(_subStr(p.fieldValue,';',1));
$out+='" data-action="text_propertyFieldUp';
$out+=$escape(pi);
$out+='">';
$out+=$escape(_subStr(p.fieldValue,';',1));
$out+='</a> </span> ';
if(_subStr(p.fieldValue,';',1)!=''){
$out+=' <span class="unit-span">&nbsp;层</span> ';
}
$out+=' </div> ';
}else{
$out+=' <span> ';
if(p.unitName!=null && p.unitName!=''){
$out+=' <a href="javascript:void(0);" data-field-id="';
$out+=$escape(p.id);
$out+='" data-field-unit="';
$out+=$escape(p.unitName);
$out+='" data-field-value="';
$out+=$escape(p.fieldValue);
$out+='" data-action="text_propertyField';
$out+=$escape(pi);
$out+='">';
$out+=$escape(p.fieldValue);
$out+='</a> <span class="unit-span">';
$out+=$escape(p.unitName);
$out+='</span> ';
}else{
$out+=' <a href="javascript:void(0);" data-field-id="';
$out+=$escape(p.id);
$out+='" data-field-unit="';
$out+=$escape(p.unitName);
$out+='" data-field-value="';
$out+=$escape(p.fieldValue);
$out+='" data-action="text_propertyField';
$out+=$escape(pi);
$out+='">';
$out+=$escape(p.fieldValue);
$out+='</a> ';
}
$out+=' </span> ';
}
$out+=' </td> </tr> ';
}
$out+=' ';
});
$out+=' ';
if((project.projectPropertyList.length+1)%2==0){
$out+=' <td width="12%"></td> <td></td> </tr> ';
}
$out+=' ';
}
$out+=' </table> <div class="row"> <div class="col-md-6"> <h3 class="pull-left">设计范围</h3> ';
if(editFlag){
$out+=' <a href="javascript:void(0)" class="designRangeEditBtn pull-left m-t-xs m-l-sm" data-action="edit_designRange"> <i class=" fa fa-pencil fc-dark-blue"></i> </a> ';
}
$out+=' </div> </div> <table class="table table-bordered"> <tbody> <tr> <td width="12%"><b>设计范围</b></td> <td colspan="3"> ';
if(project.projectRangeList && project.projectRangeList.length>0){
$out+=' ';
$each(project.projectRangeList,function(r,j){
$out+=' <div class=" adaptWidth2 c-tool-tip designRangeDiv m-xs dp-inline-block"> <div class="rounded-md text-center greyBg_item" title="';
$out+=$escape(r.designRange);
$out+='" tool-tip> <span>';
$out+=$escape(r.designRange);
$out+='</span> </div> </div> ';
});
$out+=' ';
}else if(!editFlag){
$out+=' <span></span> ';
}
$out+=' </td> </tr> </tbody> </table> <div class="row"> <div class="col-md-6"> <h3 class="pull-left">合同信息</h3> </div> </div> <table class="table table-bordered"> <tbody> <tr> <td><b>合同附件</b></td> <td colspan="3">   ';
if(editFlag){
$out+=' ';
if(project.contractList!=null && project.contractList.length>0){
$out+=' ';
$each(project.contractList,function(f,fi){
$out+=' <span class="file-span m-r-xs p-w-xs"> <a href="';
$out+=$escape(fastdfsUrl+f.filePath);
$out+='" target="_blank" class="designIcon fa theContractFile "> ';
$out+=$escape((f.fileName==null || f.fileName=='')?project.projectName+'合同附件.pdf':f.fileName);
$out+=' </a> <span class="file-del-span"> <a class="curp" href="javascript:void(0)" data-id="';
$out+=$escape(f.id);
$out+='" data-action="delFile" style="display: none;"> <i class="fa fa-times color-red"></i> </a> </span> </span> ';
});
$out+=' ';
}
$out+='  ';
}else if(!editFlag && project.creatorCompany.id == currentCompanyId && (project.contractList!=null && project.contractList.length>0)){
$out+=' ';
$each(project.contractList,function(f,fi){
$out+=' <a href="';
$out+=$escape(fastdfsUrl+f.filePath);
$out+='" target="_blank" class="designIcon fa theContractFile m-r-xs p-w-xs roleControl" roleCode="project_view_amount,sys_enterprise_logout,project_eidt" flag="1"> ';
$out+=$escape((f.fileName==null || f.fileName=='')?project.projectName+'合同附件.pdf':f.fileName);
$out+=' </a> ';
});
$out+='  ';
}else if(!editFlag && project.creatorCompany.id == currentCompanyId && (project.contractList==null || project.contractList.length==0)){
$out+=' <span class=" roleControl" roleCode="project_view_amount,sys_enterprise_logout" flag="6">暂无上传文件</span> ';
}else{
$out+=' *** ';
}
$out+='  ';
if(editFlag){
$out+=' <a href="javascript:void(0)" id="filePicker" name="recordAttach" class="upload-btn" title="请上传PDF文件"></a> ';
if(project.filePath==null || project.filePath==''){
$out+=' <note class="pt-relative" style="color: #777;bottom: 3px;" >请上传pdf文件！</note> ';
}
$out+=' ';
}
$out+=' </td> </tr> <tr style="height: 70px"> <td width="12%"><b>设计任务</b></td> <td colspan="3"> <div class="no-padding projectDesignContent"> <ul class="todo-list small-list bg-white" style="border:1px solid rgba(0,0,0,0)"> <li class="designContentLi" data-i="';
$out+=$escape(i);
$out+='" style="margin-bottom: -8px;padding-bottom: 0px;"> ';
if(project.projectDesignContentList && project.projectDesignContentList.length>0){
$out+=' ';
$each(project.projectDesignContentList,function(c,i){
$out+=' ';
if(editFlag){
$out+=' <span class="design_item designContentDiv" data-i="';
$out+=$escape(i);
$out+='" data-id="';
$out+=$escape(c.id);
$out+='"> <label class="i-checks dp-inline-block m-b-none"> <input name="designContent" class="checkbox dinline" type="checkbox" checked value="';
$out+=$escape(c.id);
$out+='" content-name="';
$out+=$escape(c.contentName);
$out+='" data-isHas="';
$out+=$escape(c.isHas);
$out+='"/> </label> <div class="pull-left"> <span class="content-name" data-toggle="tooltip" data-original-title="';
$out+=$escape(c.contentName);
$out+='"> ';
$out+=$escape(c.contentName);
$out+=' </span> ';
if(c.projectProcessTimeEntityList!=null && c.projectProcessTimeEntityList.length>0){
$out+=' <a href="javascript:void(0)" type="button" class="editable editable-click dp-block" data-action="edit_setDesignContentTime"> ';
$out+=$escape(_momentFormat(c.projectProcessTimeEntityList[c.projectProcessTimeEntityList.length-1].startTime,'YYYY/MM/DD'));
$out+=' - ';
$out+=$escape(_momentFormat(c.projectProcessTimeEntityList[c.projectProcessTimeEntityList.length-1].endTime,'YYYY/MM/DD'));
$out+=' </a> ';
}else{
$out+=' <a href="javascript:void(0)" type="button" class="editable editable-click editable-empty dp-block" data-action="edit_setDesignContentTime">未设置合同进度</a> ';
}
$out+=' </div> </span> ';
}else{
$out+=' <span class="design_item designContentDiv" data-i=""> <div class="pull-left"> <span class="content-name" data-toggle="tooltip" data-original-title="';
$out+=$escape(c.contentName);
$out+='"> ';
$out+=$escape(c.contentName);
$out+=' </span> ';
if(project.creatorCompany.id == currentCompanyId || (project.partyBCompany!=null && project.partyBCompany.id==currentCompanyId)){
$out+=' <span class="dp-block"> ';
if(c.projectProcessTimeEntityList.length>0 && c.projectProcessTimeEntityList[c.projectProcessTimeEntityList.length-1].startTime){
$out+=' ';
$out+=$escape(_momentFormat(c.projectProcessTimeEntityList[c.projectProcessTimeEntityList.length-1].startTime,'YYYY/MM/DD'));
$out+=' - ';
$out+=$escape(_momentFormat(c.projectProcessTimeEntityList[c.projectProcessTimeEntityList.length-1].endTime,'YYYY/MM/DD'));
$out+=' ';
}
$out+=' </span> ';
}
$out+=' </div> </span> ';
}
$out+=' ';
});
$out+=' ';
}
$out+=' ';
if(editFlag){
$out+=' <span class="design_item addDesignContentDiv v-middle text-center no-padding" > <a class="btn btn-outline btn-default" href="javascript:void(0)" data-action="addDesignContent" type="button"> <i class="fa fa-plus-square fc-v1-green"></i>&nbsp;添加设计任务 </a> </span> ';
}
$out+=' </li> </ul> </div> </td> </tr> </tbody> </table> </form> </div> </div> ';
return new String($out);
});/*v:1*/
template('m_project/m_projectDesignContent_add','<style> div.m-projectDesignContent_add #time-box .inputTimeOBox.p-m{padding: 0} </style> <div class="content-box m-projectDesignContent_add" style="width: 440px;min-width: 440px;"> <form class="form designContentNameOBox overflow-hidden"> <div class="form-group m-b-xs"> <label class="dp-block">设计任务</label> <input placeholder="设计任务" class="form-control" type="text" name="designContentName" maxlength="100"> </div> </form> <div class="form-group" style="margin: 0 -10px;"> <div id="time-box"> </div> </div> <div class="form-group m-b-xs no-pd-right col-md-12"> <button type="button" class="btn btn-default btn-sm m-popover-close pull-right"> <i class="glyphicon glyphicon-remove"></i> </button> <button type="button" class="btn btn-primary btn-sm m-popover-submit pull-right m-r-xs"> <i class="fa fa-check"></i> </button>     </div> <div class="clearfix"></div> </div> ');/*v:1*/
template('m_project/m_projectMenu',function($data,$filename
/**/) {
'use strict';var $utils=this,$helpers=$utils.$helpers,$escape=$utils.$escape,id=$data.id,projectName=$data.projectName,$out='';$out+='<ul class="nav nav-second-level collapse in project-second-menu"> <li> <a id="basicInfo" href="#/projectDetails/basicInfo?id=';
$out+=$escape(id);
$out+='&projectName=';
$out+=$escape(projectName);
$out+='"> <span class="nav-label ">基本信息</span> </a> </li> <li> <a id="taskIssue" href="#/projectDetails/taskIssue?id=';
$out+=$escape(id);
$out+='&projectName=';
$out+=$escape(projectName);
$out+='"> <span class="nav-label ">任务签发</span> </a> </li> <li> <a id="productionArrangement" href="#/projectDetails/productionArrangement?id=';
$out+=$escape(id);
$out+='&projectName=';
$out+=$escape(projectName);
$out+='"> <span class="nav-label ">生产安排</span> </a> </li> <li> <a id="cost" href="#/projectDetails/cost?id=';
$out+=$escape(id);
$out+='&projectName=';
$out+=$escape(projectName);
$out+='"> <span class="nav-label ">收支管理</span> </a> </li> <li> <a id="projectDocumentLib" href="#/projectDetails/projectDocumentLib?id=';
$out+=$escape(id);
$out+='&projectName=';
$out+=$escape(projectName);
$out+='" > <span class="nav-label ">项目文档</span> </a> </li> <li> <a id="projectMember" href="#/projectDetails/projectMember?id=';
$out+=$escape(id);
$out+='&projectName=';
$out+=$escape(projectName);
$out+='"> <span class="nav-label ">项目成员</span> </a> </li> <li> <a id="externalCooperation" href="#/projectDetails/externalCooperation?id=';
$out+=$escape(id);
$out+='&projectName=';
$out+=$escape(projectName);
$out+='"> <span class="nav-label ">外部合作</span> </a> </li> </ul>';
return new String($out);
});/*v:1*/
template('m_projectAdd/m_addProject_addRange','<div class="col-md-4 checkbox-inline otherRangeBox m-b-xs m-l-none no-pd"> <div class="input-group input-group-sm"> <div class="i-checks input-group-addon no-border no-padding"> <input name="designRange" data-action="otherRange" type="checkbox" checked/> </div> <input type="text" name="designRangeName" class="form-control input-sm" style="width: 130px;margin-left:4px;" placeholder="请输入名称" maxlength="50"/> </div> </div>');/*v:1*/
template('m_projectAdd/m_designContent_template',function($data,$filename
/**/) {
'use strict';var $utils=this,$helpers=$utils.$helpers,contentList=$data.contentList,$each=$utils.$each,c=$data.c,ci=$data.ci,$escape=$utils.$escape,$out='';if(contentList && contentList.length>0){
$out+=' ';
$each(contentList,function(c,ci){
$out+=' <span class="design_item designContentDiv" data-i=""> <label class="i-checks dp-inline-block" style="margin-bottom: 0;"> <input name="designContent" class="checkbox dinline" data-id="';
$out+=$escape(c.id);
$out+='" type="checkbox" value="" data-name="';
$out+=$escape(c.name);
$out+='"/> </label> <div class="pull-left"> <span> ';
$out+=$escape(c.name);
$out+=' </span> <a href="javascript:void(0)" class="editable editable-click editable-empty dp-block" data-action="edit_setDesignContentTime" data-startTime="" data-endTime="">设置合同进度 </a> </div> </span> ';
});
$out+=' ';
}
return new String($out);
});/*v:1*/
template('m_projectAdd/m_designContent_time','<span data-action="timeSet" class="m-l-xs"> <a href="javascript:void(0)" class="editable editable-click editable-empty" data-action="edit_setDesignContentTime" data-startTime="" data-endTime>设置合同进度</a> </span>');/*v:1*/
template('m_projectAdd/m_partyA','<div class="m_partyA"> <div class="col-md-12 border-bottom" style="padding: 5px 0;"> <button type="button" class="btn btn-w-m btn-link" data-action="searchPartyA"> <i class="fa fa-search"></i> 在工商注册名中搜索 </button> </div> <div class="col-md-12"> <div class="fc-ccc m-t-xs ">搜索结果</div> <div class="" id="partyAList" style="min-height: 10px;max-height: 200px;overflow: auto;"> </div> </div> </div>');/*v:1*/
template('m_projectAdd/m_partyA_list',function($data,$filename
/**/) {
'use strict';var $utils=this,$helpers=$utils.$helpers,partyAList=$data.partyAList,$each=$utils.$each,p=$data.p,pi=$data.pi,$escape=$utils.$escape,$out='';if(partyAList!=null && partyAList.length>0){
$out+=' <ul class="dropdown-menu" style="display: block;position: relative;border: 0;box-shadow: none;width: 100%;top: 0px;left:-20px;"> ';
$each(partyAList,function(p,pi){
$out+=' <li> <a href="javascript:void(0);" data-action="selectPartyA" data-id="';
$out+=$escape(p.companyid);
$out+='"> ';
$out+=$escape(p.corpname);
$out+=' </a> </li> ';
});
$out+=' </ul> ';
}else{
$out+=' <span class="fc-ccc m-t-xs ">未找到相关单位，试试输入更详细关键字查询</span> ';
}
return new String($out);
});/*v:1*/
template('m_projectAdd/m_projectAdd',function($data,$filename
/**/) {
'use strict';var $utils=this,$helpers=$utils.$helpers,$each=$utils.$each,projectTypeList=$data.projectTypeList,p=$data.p,$index=$data.$index,$escape=$utils.$escape,$detailAddress=$data.$detailAddress,contentList=$data.contentList,c=$data.c,ci=$data.ci,$out='';$out+='<div class="ibox m_projectAdd"> <div class="ibox-title ibox-title-shadow secondary-menu-outbox"> <div class="row"> <div class="col-md-12" id="secondary-menu"> <div class="pull-left m-r-xl"> <h3 class="" >项目立项</h3> </div> </div> </div> </div> <div class="ibox-content ibox-content-shadow addProjectOBox"> <form role="form " class="projectAddForm m-t-md"> <div class="row form-group"> <label class="col-24-md-3 text-right m-t-sm" for="detailAddress">项目类型<span class="color-red">*</span>：</label> <div class="col-24-md-8"> <div class="input-group project-type"> <input type="text" class="form-control" name="projectType" value=""> <div class="input-group-btn"> <button type="button" class="btn btn-default dropdown-toggle" data-toggle="dropdown" > <span class="caret"></span> </button> <ul class="dropdown-menu dropdown-menu-right" style="right: 0;left: inherit;"> ';
$each(projectTypeList,function(p,$index){
$out+=' <li><a href="javascript:void(0);">';
$out+=$escape(p.name);
$out+='</a></li> ';
});
$out+=' </ul> </div> </div> </div> </div> <div class="row form-group"> <label class="col-24-md-3 text-right m-t-sm">项目名称<span class="color-red">*</span>：</label> <div class="col-24-md-8"> <input type="text" class="form-control" name="projectName" id="projectName" maxlength="50" placeholder="请输入项目名称"> </div> </div> <div class="row form-group"> <label class="col-24-md-3 text-right m-t-sm">甲方<span class="color-red">*</span>：</label> <div class="col-24-md-8"> <input type="text" class="form-control constructCompanyName" name="constructCompanyName" id="constructCompanyName" placeholder="请输入甲方名称" autocomplete="off" data-id="">  <div class="partyA-select-box" style="position: absolute; top: 100%; left: 14px; z-index: 100; right: auto;background: #fff;border: solid 1px #ccc;border-radius: 5px;box-shadow: 1px 1px 6px 0 #9a9a9a;min-width: 80%; display: none;"> </div> </div> </div> <div class="row form-group"> <label class="col-24-md-3 text-right m-t-sm" for="selectRegion">项目所在地<span class="color-red">*</span>：</label></label> <div class="col-24-md-8"> <div class="input-group cityBox" id="selectRegion" name="selectRegion"> <div class="dp-inline-block"> <select class="prov form-control" name="province"></select> </div> <div class="dp-inline-block m-l-xs"> <select class="city form-control" name="city" disabled="disabled" style="display: none;"></select> </div> <div class="dp-inline-block m-l-xs"> <select class="dist form-control" name="county" disabled="disabled" style="display: none;"></select> </div> </div> </div> </div> <div class="row form-group"> <label class="col-24-md-3 text-right m-t-sm" for="detailAddress">详细地址：</label> <div class="col-24-md-8"> <input type="text" class="form-control" style="width: 100%;" name="detailAddress" id="detailAddress" maxlength="255" value="';
$out+=$escape($detailAddress?$detailAddress:'');
$out+='"> </div> </div> <!--<div class="row form-group designContentBox"> <label class="col-24-md-3 text-right m-t-sm">设计任务<span class="color-red">*</span>：</label> <div class="col-24-md-20"> <div class="input-group"> <ul class="todo-list small-list bg-white"> <li class="designContentLi" style="padding-top: 0px;"> ';
if(contentList && contentList.length>0){
$out+=' ';
$each(contentList,function(c,ci){
$out+=' <span class="design_item designContentDiv" data-i=""> <label class="i-checks dp-inline-block m-b-none"> <input name="designContent" class="checkbox dinline" type="checkbox" value="" data-name="';
$out+=$escape(c.name);
$out+='" data-id="';
$out+=$escape(c.id);
$out+='"/> </label> <div class="pull-left"> <span class="content-name" data-toggle="tooltip" data-original-title="';
$out+=$escape(c.name);
$out+='"> ';
$out+=$escape(c.name);
$out+=' </span> <a href="javascript:void(0)" class="editable editable-click editable-empty dp-block" data-action="edit_setDesignContentTime" data-startTime="" data-endTime="">设置合同进度 </a> </div> </span> ';
});
$out+=' ';
}
$out+=' </li> <li class="addDesignContentLi"> <span class="design_item addDesignContentDiv v-middle text-center no-padding"> <a class="btn btn-outline btn-default" href="javascript:void(0)" data-action="addDesignContent" type="button"> <i class="fa fa-plus-square " style="color: #1ab394"></i>&nbsp;添加设计任务 </a> </span> </li> </ul> </div> </div> </div>--> <div class="row"> <div class="col-md-11 col-md-offset-1 no-padding"> <a type="button" class="btn btn-primary btn-submit ">保存</a> <a type="button" class="btn btn-default btn-cancel m-l-xs">取消</a> </div> </div> </form> </div> </div>';
return new String($out);
});/*v:1*/
template('m_projectExternalCooperation/m_inviteCooperation',function($data,$filename
/**/) {
'use strict';var $utils=this,$helpers=$utils.$helpers,filePath=$data.filePath,$escape=$utils.$escape,_url=$helpers._url,companyName=$data.companyName,systemManager=$data.systemManager,cellphone=$data.cellphone,$out='';$out+='<div class="ibox"> <div class="ibox-title border-fff"> <span class="f-s-16 dp-inline-block l-h-16">外部合作邀请组织</span> </div> <div class="ibox-content text-center"> <div class="m-b-sm"> ';
if(filePath!='' && filePath!=null){
$out+=' <img alt="image" class="img-circle wth-100 h-100" src="';
$out+=$escape(filePath);
$out+='"> ';
}else{
$out+=' <img alt="image" class="img-circle wth-100 h-100" src="';
$out+=$escape(_url('/assets/img/default/org_default_headPic.png'));
$out+='"> ';
}
$out+=' </div> <p class="f-s-18">';
$out+=$escape(companyName);
$out+='</p> <p class="f-s-14 fc-aaa">企业负责人:';
$out+=$escape(systemManager);
$out+='</p> </div> <div class="ibox-content"> <div class="row"> <div class="col-sm-12"> <form role="form"> <div class="form-group"> <label class="f-s-14 fw-400">您的手机号：</label> <p class="f-s-14 fc-dark-blue fw--600">';
$out+=$escape(cellphone);
$out+='</p> </div> <div class="form-group"> <label class="f-s14 fw-400">输入完整手机号校验身份：</label> <input name="cellphone" id=\'cellphone\' placeholder="手机号" class="form-control"></div> <div class="form-group"> <a class="btn btn-primary btn-block btn-ok">确定</a> </div> </form> </div> </div> </div> </div>';
return new String($out);
});/*v:1*/
template('m_projectExternalCooperation/m_inviteCooperation_create_has',function($data,$filename
/**/) {
'use strict';var $utils=this,$helpers=$utils.$helpers,$escape=$utils.$escape,a_companyName=$data.a_companyName,$out='';$out+='<div class="ibox"> <div class="ibox-title border-fff"> <span class="f-s-16 l-h-16 dp-inline-block">创建新组织</span> </div> <div class="ibox-content"> <p class="f-s-14 l-h-14 p-h-xs">该组织创建后将会自动成为&nbsp;<span class="fc-v1-yellow">';
$out+=$escape(a_companyName);
$out+='</span>&nbsp;的外部合作组织</p> <div class="row"> <div class="col-sm-12"> <form class="create-form"> <div class="form-group"> <input name="companyName" placeholder="组织名称" class="form-control"> </div> <div class="form-group pt-fixed" style="bottom: 0;left: 20px;right: 20px;"> <a class="btn btn-primary btn-lg btn-block btn-ok" data-action="createOrgSubmit">立即创建</a> </div> </form> </div> </div> </div> </div>';
return new String($out);
});/*v:1*/
template('m_projectExternalCooperation/m_inviteCooperation_create_hasNo',function($data,$filename
/**/) {
'use strict';var $utils=this,$helpers=$utils.$helpers,$escape=$utils.$escape,a_companyName=$data.a_companyName,$out='';$out+='<div class="ibox"> <div class="ibox-title border-fff"> <span class="f-s-16 l-h-16 dp-inline-block">创建账号和组织</span> </div> <div class="ibox-content"> <p class="f-s-14 l-h-14 p-h-xs">该组织创建后将会自动成为&nbsp;<span class="fc-v1-yellow">';
$out+=$escape(a_companyName);
$out+='</span>&nbsp;的外部合作组织</p> <div class="row"> <div class="col-sm-12"> <form class="create-form" role="form"> <div class="form-group"> <label class="f-s-14 fw-400 dp-block">个人信息：</label> <input name="userName" placeholder="姓名" class="form-control m-b-xs"> <input name="adminPassword" placeholder="密码" type="password" class="form-control m-b-xs"> <br /> <label class="f-s-14 fw-400 dp-block">组织信息：</label> <input name="companyName" placeholder="组织名称" class="form-control m-b-xs"> </div> <div class="form-group pt-fixed" style="bottom: 0;left: 20px;right: 20px;"> <a class="btn btn-primary btn-lg btn-block btn-ok" data-action="createOrgAndAccountSubmit">立即创建</a> </div> </form> </div> </div> </div> </div>';
return new String($out);
});/*v:1*/
template('m_projectExternalCooperation/m_inviteCooperation_org',function($data,$filename
/**/) {
'use strict';var $utils=this,$helpers=$utils.$helpers,$escape=$utils.$escape,a_companyName=$data.a_companyName,projectName=$data.projectName,$each=$utils.$each,companyList=$data.companyList,c=$data.c,i=$data.i,_url=$helpers._url,$out='';$out+='<div class="ibox"> <div class="ibox-title border-fff"> <span class="f-s-16 l-h-16 dp-inline-block">组织选择</span> </div> <div class="ibox-content no-pd"> <ul class="todo-list small-list m-invite-group"> <li> <p class="f-s-14 l-h-14 m-t-sm"> 请选择&nbsp;<span class="fc-v1-yellow">已有的组织</span>&nbsp;或&nbsp; <span class="fc-v1-yellow">创建一个新组织</span>&nbsp;成为&nbsp; <span class="fc-v1-yellow">“';
$out+=$escape(a_companyName);
$out+='”</span>&nbsp;的 <span class="fc-v1-yellow">“';
$out+=$escape(projectName);
$out+='”</span>&nbsp;项目外部合作组织 </p> </li> ';
$each(companyList,function(c,i){
$out+=' ';
if(c.flag===1){
$out+=' <li class="unselectable" data-action="selectOrg" data-memo="';
$out+=$escape(c.memo);
$out+='"> <div class="ibox-content box-shadow border" style="padding: 10px 20px 5px;height:90px;"> <div class="dp-inline-block p-h-sm"> <p class="f-s-16 l-h-16 fc-aaa">';
$out+=$escape(c.companyName);
$out+='</p> <p class="f-s-12 l-h-12 fc-aaa">';
$out+=$escape(c.memo);
$out+='</p> </div> ';
if(c.filePath!=null && c.filePath!=''){
$out+=' <img alt="image" class="img-circle pull-right img-responsive hidden-xs" width="90" src="';
$out+=$escape(c.filePath);
$out+='"> ';
}else{
$out+=' <img alt="image" class="img-circle pull-right img-responsive hidden-xs" width="90" src="';
$out+=$escape(_url('/assets/img/default/org_default_headPic.png'));
$out+='"> ';
}
$out+=' </div> </li> ';
}else{
$out+=' <li class="selectable" data-action="selectOrgApply" data-company-id="';
$out+=$escape(c.id);
$out+='" data-company-name="';
$out+=$escape(c.companyName);
$out+='"> <div class="ibox-content box-shadow border" style="padding: 10px 20px 5px;height:90px;"> <div class="dp-inline-block p-h-sm"> <p class="f-s-16 l-h-16">';
$out+=$escape(c.companyName);
$out+='</p> <p class="f-s-12 l-h-12 fc-aaa">企业负责人:';
$out+=$escape(c.systemManager);
$out+='</p> </div> ';
if(c.filePath!=null && c.filePath!=''){
$out+=' <img alt="image" class="img-circle pull-right img-responsive hidden-xs" width="90" src="';
$out+=$escape(c.filePath);
$out+='"> ';
}else{
$out+=' <img alt="image" class="img-circle pull-right img-responsive hidden-xs" width="90" src="';
$out+=$escape(_url('/assets/img/default/org_default_headPic.png'));
$out+='"> ';
}
$out+=' </div> </li> ';
}
$out+=' ';
});
$out+=' <li class="selectable"> <a href="javascript:void(0)"> <div class="ibox-content box-shadow border" style="padding: 0;"> <p class="f-s-16 l-h-16"> <a href="javascript:void(0)" data-action="createOrg" style="padding: 20px 20px 15px;display: inline-block;width: 100%;">创建新组织</a> </p> </div> </a> </li> </ul> </div> </div>';
return new String($out);
});/*v:1*/
template('m_projectExternalCooperation/m_inviteCooperation_org_hasNo',function($data,$filename
/**/) {
'use strict';var $utils=this,$helpers=$utils.$helpers,$escape=$utils.$escape,_url=$helpers._url,$out='';$out+='<div class="ibox"> <div class="ibox-content text-center no-border no-pd-left no-pd-right"> <div class="m-b-md m-t-lg"> <img alt="image" class="img-circle wid-200" src="';
$out+=$escape(_url('/assets/img/default/defaultpage_pic_data.png'));
$out+='" > </div> <p class="f-s-18 m-t-md">你还没有组织，请先创建组织</p> <div class="form-group"> <a class="btn btn-primary btn-lg btn-ok" href="javascript:void(0)" data-action="createOrg">创建组织</a> </div> </div> </div>';
return new String($out);
});/*v:1*/
template('m_projectExternalCooperation/m_inviteCooperation_success',function($data,$filename
/**/) {
'use strict';var $utils=this,$helpers=$utils.$helpers,$escape=$utils.$escape,_url=$helpers._url,companyName=$data.companyName,a_companyName=$data.a_companyName,$out='';$out+='<div class="ibox"> <div class="ibox-content text-center no-border no-pd-right no-pd-left"> <div class="m-b-sm"> <img alt="image" class="img-circle wth-100" src="';
$out+=$escape(_url('/assets/img/default/invite_success.png'));
$out+='" > </div> <p class="f-s-18">恭喜！</p> <p class="f-s-14 fc-aaa">';
$out+=$escape(companyName);
$out+=' 已经成为 ';
$out+=$escape(a_companyName);
$out+=' 的外部合作组织</p> </div> </div>';
return new String($out);
});/*v:1*/
template('m_projectExternalCooperation/m_inviteExternalCooperation','<div class="container-fluid inviteCorpBox"> <div class="row"> <div class="col-md-12" style="padding: 25px 15px 15px 15px"> <div class="form-group"> 请输入被邀请组织负责人的手机号： </div> <div class="inviteCorpPart form-group input-group"> <input name="bPartnerPhone" class="form-control"> <span class="input-group-btn"> <a class="btn btn-primary pull-right" data-action="sendMessage">发送邀请</a> </span> </div> </div> </div> </div>');/*v:1*/
template('m_projectExternalCooperation/m_projectExternalCooperation',function($data,$filename
/**/) {
'use strict';var $utils=this,$helpers=$utils.$helpers,$escape=$utils.$escape,projectName=$data.projectName,isHasRoleOperate=$data.isHasRoleOperate,$each=$utils.$each,projectPartnerList=$data.projectPartnerList,p=$data.p,$index=$data.$index,_url=$helpers._url,$out='';$out+='<div class="ibox m_contractPayment"> <div class="ibox-title secondary-menu-outbox"> <div class="row"> <div class="col-md-6">  <div class="no-margin p-h-sm breadcrumb-box" > <ol class="breadcrumb"> <li> 我的项目 </li> <li class=" fa fa-angle-right"> ';
$out+=$escape(projectName);
$out+=' </li> <li class="active fa fa-angle-right"> <strong>外部合作</strong> </li> </ol> </div> </div> <div class="col-md-6 text-right "> ';
if(isHasRoleOperate==1){
$out+=' <a href="javascript:void(0)" class="btn btn-primary btn-xs pull-right m-t" data-action="inviteExternalCooperation" >邀请合作设计组织</a> ';
}
$out+=' </div> <div class="clearfix"></div> </div> </div> <div class="ibox-content no-padding"> <table class="table table-bordered"> <thead> <tr> <th class="text-align-center ">联系方式</th> <th class="text-align-center ">合作组织</th> <th class="text-align-center ">企业负责人</th> <th class="text-align-center ">合作内容</th> <th class="text-align-center ">经营负责人</th> <th class="text-align-center ">操作</th> </tr> </thead> <tbody class="border-no-t"> ';
$each(projectPartnerList,function(p,$index){
$out+=' <tr class="';
$out+=$escape(p.companyId!=null && p.companyId!=''?'':'gray-bg');
$out+='"> <td class="text-align-center">';
$out+=$escape(p.phone);
$out+='</td> <td class="text-align-center">';
$out+=$escape(p.companyName);
$out+='</td> <td class="text-align-center">';
$out+=$escape(p.companyManagerName);
$out+='</td> <td class="text-align-center">';
$out+=$escape(p.taskNameSplice);
$out+='</td> <td class="text-align-center">';
$out+=$escape(p.projectManagerName);
$out+='</td> <td class="text-align-center"> ';
if(p.companyId!=null && p.companyId!='' && isHasRoleOperate==1){
$out+=' <a href="javascript:void(0);" class="btn btn-primary btn-xs m-r-xs autoMargin" data-action="relieveRelationship" data-id="';
$out+=$escape(p.id);
$out+='">解除合作</a> ';
}
$out+=' ';
if(p.companyId==null || p.companyId==''){
$out+=' <span class="badge">未建立合作关系</span> ';
if(isHasRoleOperate==1){
$out+=' <a href="javascript:void(0);" class="btn btn-danger btn-xs pull-right m-r-xs autoMargin" data-action="resendSMS" data-id="';
$out+=$escape(p.id);
$out+='">重新推送短信</a> ';
}
$out+=' ';
}
$out+=' </td> </tr> ';
});
$out+=' ';
if(projectPartnerList==null || projectPartnerList.length==0){
$out+=' <tr class="no-data"> <td colspan="10" align="center"> <div class="text-center"> <img src="';
$out+=$escape(_url('/assets/img/default/without_exp.png'));
$out+='"> </div> <span style="color:#4765a0">暂无合作设计组织</span> </td> </tr> ';
}
$out+=' </tbody> </table> </div> </div> ';
return new String($out);
});/*v:1*/
template('m_projectList/m_projectList','<div class="m_projectList"> <form role="form" class="form-inline m-md"> <div class="row"> <div class="col-md-6"> <div class="input-group"> <input class="form-control" type="text" name="keyword" placeholder="请输入关键字" style="width: 250px;"> <span class="input-group-btn"> <button type="button" class="btn btn-primary" data-action="searchProject"> <i class="fa fa-search"></i> </button> </span> </div> </div> <div class="col-md-6 text-right"> <button type="button" class="btn btn-primary" data-action="selectColumn" id="selectColumn"> <span><i class="fa fa-list"></i> <span class="caret m-t-n-xs"></span></span> </button> </div> </div> </form> <div class="data-list-box"> <div class="row"> <div class="col-md-12 data-list-container p-w-lg"></div> <div class="col-md-12 p-w-m"> <div id="data-pagination-container" class="m-pagination pull-right "></div> </div> </div> </div> </div>');/*v:1*/
template('m_projectList/m_projectList_content',function($data,$filename
/**/) {
'use strict';var $utils=this,$helpers=$utils.$helpers,columnCodes=$data.columnCodes,projectList=$data.projectList,$each=$utils.$each,p=$data.p,i=$data.i,$escape=$utils.$escape,_momentFormat=$helpers._momentFormat,columnLen=$data.columnLen,$out='';$out+='<div class="project-list of-auto"> <table class="table table-bordered table-hover cell-border dataTable" > <thead> <th>项目编号</th> <th>项目名称</th> <th> 立项组织/立项人 <a class="icon-filter pull-right" id="filterCreateBy" style="display: none;"><i class="icon iconfont icon-shaixuan"></i></a> </th> ';
if(columnCodes.indexOf('projectCreateDate')>-1){
$out+=' <th class="sorting_desc" data-action="sort" data-sort-type="createDate"> 立项时间 <a class="icon-filter pull-right" id="filterCreateDate" style="display: none;"><i class="icon iconfont icon-shaixuan"></i></a> </th> ';
}
$out+=' ';
if(columnCodes.indexOf('signDate')>-1){
$out+=' <th class="sorting" data-action="sort" data-sort-type="signDate"> 合同签订 <a class="icon-filter pull-right" id="filterSignDate" style="display: none;"><i class="icon iconfont icon-shaixuan"></i></a> </th> ';
}
$out+=' ';
if(columnCodes.indexOf('status')>-1){
$out+=' <th> 项目状态 <a class="icon-filter pull-right" id="filterStatus" style="display: none;"><i class="icon iconfont icon-shaixuan"></i></a> </th> ';
}
$out+=' ';
if(columnCodes.indexOf('buildName')>-1){
$out+=' <th> 功能分类 <a class="icon-filter pull-right" id="filterBuildName" style="display: none;"><i class="icon iconfont icon-shaixuan"></i></a> </th> ';
}
$out+=' ';
if(columnCodes.indexOf('address')>-1){
$out+=' <th> 地点 <a class="icon-filter pull-right" id="filterAddress" style="display: none;"><i class="icon iconfont icon-shaixuan"></i></a> </th> ';
}
$out+=' ';
if(columnCodes.indexOf('partyA')>-1){
$out+=' <th> 甲方 <a class="icon-filter pull-right" id="filterPartyA" style="display: none;"><i class="icon iconfont icon-shaixuan"></i></a> </th> ';
}
$out+=' ';
if(columnCodes.indexOf('partyB')>-1){
$out+=' <th> 乙方 <a class="icon-filter pull-right" id="filterPartyB" style="display: none;"><i class="icon iconfont icon-shaixuan"></i></a> </th> ';
}
$out+=' ';
if(columnCodes.indexOf('designCompanyName')>-1){
$out+=' <th> 合作组织 <a class="icon-filter pull-right" id="filterDesignCompanyName" style="display: none;"><i class="icon iconfont icon-shaixuan"></i></a> </th> ';
}
$out+=' <!--';
if(columnCodes.indexOf('busPersonInCharge')>-1){
$out+=' <th> 经营负责人 <a class="icon-filter pull-right" id="filterBusPersonInCharge" style="display: none;"><i class="icon iconfont icon-shaixuan"></i></a> </th> ';
}
$out+=' ';
if(columnCodes.indexOf('busPersonInChargeAssistant')>-1){
$out+=' <th style="min-width: 130px;"> 经营助理 <a class="icon-filter pull-right" id="filterBusAss" style="display: none;"><i class="icon iconfont icon-shaixuan"></i></a> </th> ';
}
$out+=' ';
if(columnCodes.indexOf('designPersonInCharge')>-1){
$out+=' <th> 设计负责人 <a class="icon-filter pull-right" id="filterDesignPersonInCharge" style="display: none;"><i class="icon iconfont icon-shaixuan"></i></a> </th> ';
}
$out+=' ';
if(columnCodes.indexOf('designPersonInChargeAssistant')>-1){
$out+=' <th style="min-width: 130px;"> 设计助理 <a class="icon-filter pull-right" id="filterDesignAss" style="display: none;"><i class="icon iconfont icon-shaixuan"></i></a> </th> ';
}
$out+='--> </thead> <tbody> ';
if(projectList&&projectList.length>0){
$out+=' ';
$each(projectList,function(p,i){
$out+=' <tr> <td > ';
$out+=$escape(p.projectNo==null?'--':p.projectNo);
$out+=' </td> <td > <a href="javascript:void(0)" data-action="gotoProject" data-pId="';
$out+=$escape(p.id);
$out+='" data-pName="';
$out+=$escape(p.projectName);
$out+='" style="font-size: 14px;"> ';
$out+=$escape(p.projectName);
$out+=' </a> </td> <td > ';
$out+=$escape(p.companyName);
$out+='/';
$out+=$escape(p.createBy);
$out+=' </td> ';
if(columnCodes.indexOf('projectCreateDate')>-1){
$out+=' <td >';
$out+=$escape(_momentFormat(p.projectCreateDate,'YYYY/MM/DD'));
$out+='</td> ';
}
$out+=' ';
if(columnCodes.indexOf('signDate')>-1){
$out+=' <td >';
$out+=$escape(p.signDate==null?'--':_momentFormat(p.signDate,'YYYY/MM/DD'));
$out+='</td> ';
}
$out+=' ';
if(columnCodes.indexOf('status')>-1){
$out+=' <td > ';
if(p.status == 0){
$out+=' 进行中 ';
}else if(p.status == 2 ){
$out+=' 已完成-未结清 ';
}else if(p.status == 4 ){
$out+=' 已完成-已结清 ';
}else if(p.status == 1){
$out+=' 已暂停-未结清 ';
}else if(p.status == 5){
$out+=' 已暂停-已结清 ';
}else if(p.status == 3 ){
$out+=' 已终止-未结清 ';
}else if(p.status == 6 ){
$out+=' 已终止-已结清 ';
}else{
$out+=' -- ';
}
$out+=' </td> ';
}
$out+=' ';
if(columnCodes.indexOf('buildName')>-1){
$out+=' <td >';
$out+=$escape(p.buildName==null?'--':p.buildName);
$out+='</td> ';
}
$out+=' ';
if(columnCodes.indexOf('address')>-1){
$out+=' <td >';
$out+=$escape(p.address==null?'--':p.address);
$out+='</td> ';
}
$out+=' ';
if(columnCodes.indexOf('partyA')>-1){
$out+=' <td >';
$out+=$escape(p.partyA==null?'--':p.partyA);
$out+='</td> ';
}
$out+=' ';
if(columnCodes.indexOf('partyB')>-1){
$out+=' <td >';
$out+=$escape(p.partyB==null?'--':p.partyB);
$out+='</td> ';
}
$out+=' ';
if(columnCodes.indexOf('designCompanyName')>-1){
$out+=' <td >';
$out+=$escape(p.designCompanyName==null?'--':p.designCompanyName);
$out+='</td> ';
}
$out+=' <!--';
if(columnCodes.indexOf('busPersonInCharge')>-1){
$out+=' <td >';
$out+=$escape(p.busPersonInCharge==null?'&#45;&#45;':p.busPersonInCharge);
$out+='</td> ';
}
$out+=' ';
if(columnCodes.indexOf('busPersonInChargeAssistant')>-1){
$out+=' <td >';
$out+=$escape(p.busPersonInChargeAssistant==null?'&#45;&#45;':p.busPersonInChargeAssistant);
$out+='</td> ';
}
$out+=' ';
if(columnCodes.indexOf('designPersonInCharge')>-1){
$out+=' <td >';
$out+=$escape(p.designPersonInCharge==null?'&#45;&#45;':p.designPersonInCharge);
$out+='</td> ';
}
$out+=' ';
if(columnCodes.indexOf('designPersonInChargeAssistant')>-1){
$out+=' <td >';
$out+=$escape(p.designPersonInChargeAssistant==null?'&#45;&#45;':p.designPersonInChargeAssistant);
$out+='</td> ';
}
$out+='--> </tr> ';
});
$out+=' ';
}else{
$out+=' <tr> <td colspan="';
$out+=$escape(3+columnLen);
$out+='" align="center">暂无数据</td> </tr> ';
}
$out+=' </tbody> </table> </div> ';
return new String($out);
});/*v:1*/
template('m_projectList/m_projectList_empty','<div class="ibox ibox-shadow"> <div class="ibox-content" style="padding: 150px 20px 250px;"> <div class="projectList-content"> <div class="row"> <div class="col-lg-12"> <div class="text-center m-t-lg"> <h1> 你的组织还没建立任何项目 </h1> <p style="margin-top:16px;"> 点击 <button href="javascript:void(0)" class="btn btn-primary btn-xs m-b-xs" data-action="addProject">开始立项</button> 为你的组织建立第一个项目 </p> </div> </div> </div> </div> </div> </div>');/*v:1*/
template('m_projectList/m_projectList_filter_buildType',function($data,$filename
/**/) {
'use strict';var $utils=this,$helpers=$utils.$helpers,$each=$utils.$each,buildTypeArr=$data.buildTypeArr,d=$data.d,$index=$data.$index,currBuildType=$data.currBuildType,$escape=$utils.$escape,$out='';$out+='<div class="data-list-filter p-sm" > <div class="m-b-sm" style="border-bottom: solid 1px #f2f2f2;"> <label class="i-checks fw-normal"> <input name="allBuildType" type="checkbox" value="0"/> <span class="i-checks-span">全选</span> </label> </div> <div> ';
$each(buildTypeArr,function(d,$index){
$out+=' <div class="col-md-4 no-pd-right no-pd-left"> <label class="i-checks fw-normal"> ';
if(currBuildType.indexOf(d.name)>-1){
$out+=' <input name="buildType" type="checkbox" checked value="';
$out+=$escape(d.name);
$out+='"/> ';
}else{
$out+=' <input name="buildType" type="checkbox" value="';
$out+=$escape(d.name);
$out+='"/> ';
}
$out+=' <span class="i-checks-span">';
$out+=$escape(d.name);
$out+='</span> </label> </div> ';
});
$out+=' <div class="clearfix"></div> </div> <div class="m-t-xs"> <button type="button" class="btn btn-primary btn-xs rounded pull-right" data-action="confirm">确定</button> <button type="button" class="btn btn-default btn-xs rounded pull-right m-r-xs" data-action="cancel">取消</button> <div class="clearfix"></div> </div> </div> ';
return new String($out);
});/*v:1*/
template('m_projectList/m_projectList_filter_orgName',function($data,$filename
/**/) {
'use strict';var $utils=this,$helpers=$utils.$helpers,$each=$utils.$each,orgNameList=$data.orgNameList,d=$data.d,$index=$data.$index,$escape=$utils.$escape,currCheck=$data.currCheck,$out='';$out+='<div class="data-list-filter"> <ul class="dropdown-menu"> ';
$each(orgNameList,function(d,$index){
$out+=' <li> <a data-org-name="';
$out+=$escape(d.name);
$out+='"> <span class="check"> ';
if(d.name == currCheck){
$out+=' <i class="fa fa-check"></i> ';
}
$out+=' </span> ';
$out+=$escape(d.name);
$out+=' </a> </li> ';
});
$out+=' </ul> </div>';
return new String($out);
});/*v:1*/
template('m_projectList/m_projectList_filter_state',function($data,$filename
/**/) {
'use strict';var $utils=this,$helpers=$utils.$helpers,currStateCheck=$data.currStateCheck,$out='';$out+='<div class="data-list-filter"> <ul class="dropdown-menu"> <li> <a data-state-name="全部"> <span class="check"> ';
if("全部" == currStateCheck){
$out+=' <i class="fa fa-check"></i> ';
}
$out+=' </span> 全部 </a> </li> <li> <a data-state-name="进行中"> <span class="check"> ';
if("进行中" == currStateCheck){
$out+=' <i class="fa fa-check"></i> ';
}
$out+=' </span> 进行中 </a> </li> <li> <a data-state-name="已暂停"> <span class="check"> ';
if("已暂停" == currStateCheck){
$out+=' <i class="fa fa-check"></i> ';
}
$out+=' </span> 已暂停 </a> </li> <li> <a data-state-name="已完成"> <span class="check"> ';
if("已完成" == currStateCheck){
$out+=' <i class="fa fa-check"></i> ';
}
$out+=' </span> 已完成 </a> </li> <li> <a data-state-name="已终止"> <span class="check"> ';
if("已终止" == currStateCheck){
$out+=' <i class="fa fa-check"></i> ';
}
$out+=' </span> 已终止 </a> </li> </ul> </div>';
return new String($out);
});/*v:1*/
template('m_projectList/m_projectList_filter_time',function($data,$filename
/**/) {
'use strict';var $utils=this,$helpers=$utils.$helpers,$escape=$utils.$escape,currTimes=$data.currTimes,$out='';$out+='<div class="data-list-filter p-xs"> <div> <div class="form-group"> <div class="input-group"> <input type="text" class="form-control input-sm" id="ipt_startTime" name="startTime" placeholder="开始时间" readonly onFocus="WdatePicker({maxDate:\'#F{$dp.$D(\\\'ipt_endTime\\\')}\'})" value="';
$out+=$escape(currTimes.startTime);
$out+='"> <span class="input-group-addon no-padding"> <i class="icon-sm icon-append fa fa-calendar" style="height: 28px;line-height: 28px;"></i> </span> </div> </div> <div class="form-group m-t-xs"> <div class="input-group "> <input type="text" class="form-control input-sm" id="ipt_endTime" name="endTime" placeholder="结束时间" readonly onFocus="WdatePicker({minDate:\'#F{$dp.$D(\\\'ipt_startTime\\\')}\'})" value="';
$out+=$escape(currTimes.endTime);
$out+='"> <span class="input-group-addon no-padding"> <i class="icon-sm icon-append fa fa-calendar" style="height: 28px;line-height: 28px;"></i> </span> </div> </div> <div class="m-t-xs"> <button type="button" class="btn btn-primary btn-xs rounded pull-right" data-action="sureTimeFilter">确定</button> <button type="button" class="btn btn-default btn-xs rounded pull-right m-r-xs" data-action="clearTimeInput">清空</button> <div class="clearfix"></div> </div> </div> </div>';
return new String($out);
});/*v:1*/
template('m_projectList/m_projectList_headTools','<div class="col-sm-7 btn-box" style="padding-left: 0;margin-bottom: 20px;"> <button type="button" class="btn btn-primary" data-action="addProject">项目立项</button> <div class="btn-group margin-left-5" data-toggle="buttons"> <label class="btn btn-white active" data-action="allProject"><input type="radio" id="option1" name="allProject">所有项目</label> <label class="btn btn-white " data-action="myProject"><input type="radio" id="option2" name="myProject">我的项目</label> <label class="btn btn-white " data-action="concernedProject"><input type="radio" id="option3" name="concernedProject">我关注的项目</label> <a class="btn btn-white" title="刷新数据" data-action="refreshProjectList"><i class="fa fa-refresh"></i>刷新数据</a> </div> </div>');/*v:1*/
template('m_projectList/m_projectList_leftNav',function($data,$filename
/**/) {
'use strict';var $utils=this,$helpers=$utils.$helpers,projectTypes=$data.projectTypes,$each=$utils.$each,t=$data.t,i=$data.i,$escape=$utils.$escape,$out='';$out+='<ul> <li id="all_project" data-action="all_project">全部项目</li> <li data-action="my_project">我的项目</li> <li class="jstree-open" data-jstree=\'{"disabled":true}\'>按项目状态筛选 <ul>  <li data-action="filter_status" data-status="0">进行中</li> <li data-action="filter_status" data-status="2">已完成</li> </ul> </li> ';
if(projectTypes&&projectTypes.length>0){
$out+=' <li class="jstree-open" data-jstree=\'{"disabled":true}\'>按功能分类筛选 <ul> ';
$each(projectTypes,function(t,i){
$out+=' <li data-action="filter_projectType" data-type="';
$out+=$escape(t.id);
$out+='">';
$out+=$escape(t.name);
$out+='</li> ';
});
$out+=' </ul> </li> ';
}
$out+=' </ul> ';
return new String($out);
});/*v:1*/
template('m_projectList/m_projectList_menu','<div class="ibox"> <div class="ibox-title secondary-menu-outbox"> <div class="row"> <div class="col-md-6">  <div class="no-margin p-h-sm breadcrumb-box" > <ol class="breadcrumb"> <li> 我的项目 </li> <li class="active fa fa-angle-right"> <strong>我的项目</strong> </li> </ol> </div> </div> <div class="col-md-6 text-right p-w-sm"> <ul class="secondary-menu-ul pull-right" style="display: none;"> <li class="active" id="myProjectList" ><a>我的项目</a></li> <li id="projectOverview" ><a>项目总览</a></li> </ul> </div> <div class="clearfix"></div> </div> </div> <div class="ibox-content " id="content-box"> </div> </div>');/*v:1*/
template('m_projectList/m_projectList_old','<div class="m_projectList"> <form role="form" class="form-inline m-md"> <div class="input-group"> <input class="form-control" type="text" name="keyword" placeholder="请输入关键字" style="width: 250px;"> <span class="input-group-btn"> <button type="button" class="btn btn-primary" data-action="searchProject"> <i class="fa fa-search"></i> </button> </span> </div> <button type="button" class="btn btn-primary" data-action="selectColumn" id="selectColumn"> <span><i class="fa fa-list"></i> <span class="caret m-t-n-xs"></span></span> </button> </form> <div class="data-list-box"> <div class="row"> <div class="col-md-12 data-list-container p-w-lg"></div> <div class="col-md-12 p-w-m"> <div id="data-pagination-container" class="m-pagination pull-right "></div> </div> </div> </div> </div>');/*v:1*/
template('m_projectList/m_projectList_row',function($data,$filename
/**/) {
'use strict';var $utils=this,$helpers=$utils.$helpers,$escape=$utils.$escape,p=$data.p,_url=$helpers._url,_isNullOrBlank=$helpers._isNullOrBlank,$each=$utils.$each,c=$data.c,ci=$data.ci,$out='';$out+='<td class="text-center"> 111 </td> <td class="text-center" > <a href="javascript:void(0)" data-action="gotoProject" data-pId="';
$out+=$escape(p.id);
$out+='" data-pName="';
$out+=$escape(p.projectName);
$out+='" data-pUrl="';
$out+=$escape(_url('/iWork/project/projectInformation/'+p.id+'/1'));
$out+='" style="font-size: 17px;">';
$out+=$escape(p.projectName);
$out+=' </a> <!--<p class="pInfo"> 立项人：<span class="person">';
$out+=$escape(p.createBy);
$out+='</span>&nbsp;&nbsp; 经营负责人：<span class="person">';
$out+=$escape(p.busPersonInCharge);
$out+='</span>&nbsp;&nbsp; ';
if(!_isNullOrBlank(p.designPersonInCharge)){
$out+=' 设计负责人：<span class="person">';
$out+=$escape(p.designPersonInCharge);
$out+='</span> ';
}
$out+=' </p>--> </td> <td class="project-stage text-center no-padding"> <!--';
if(p.designContentList!=null && p.designContentList.length>0){
$out+=' ';
$out+=$escape(p.designContentList[0].contentName);
$out+=' ';
}
$out+='--> ';
if(p.designContentList!=null && p.designContentList.length>1){
$out+=' ';
$each(p.designContentList,function(c,ci){
$out+=' ';
if(ci == p.designContentList.length-1){
$out+=' <div class="div-td-last">';
$out+=$escape(c.contentName);
$out+='</div> ';
}else{
$out+=' <div class="div-td">';
$out+=$escape(c.contentName);
$out+='</div> ';
}
$out+=' ';
});
$out+=' ';
}
$out+=' </td> <td class="text-center no-padding"> <!--';
if(p.designContentList[0].planStartTime!=null && p.designContentList[0].planEndTime!=null){
$out+=' ';
$out+=$escape(p.designContentList[0].planStartTime);
$out+=' ~ ';
$out+=$escape(p.designContentList[0].planEndTime);
$out+=' ';
}
$out+='--> ';
if(p.designContentList!=null && p.designContentList.length>1){
$out+=' ';
$each(p.designContentList,function(c,ci){
$out+=' ';
if(ci == p.designContentList.length-1){
$out+=' <div class="div-td-last"> ';
if(c.planStartTime!=null && c.planEndTime!=null){
$out+=' ';
$out+=$escape(c.planStartTime);
$out+=' ~ ';
$out+=$escape(c.planEndTime);
$out+=' ';
}else{
$out+=' &nbsp; ';
}
$out+=' </div> ';
}else{
$out+=' <div class="div-td"> ';
if(c.planStartTime!=null && c.planEndTime!=null){
$out+=' ';
$out+=$escape(c.planStartTime);
$out+=' ~ ';
$out+=$escape(c.planEndTime);
$out+=' ';
}else{
$out+=' &nbsp; ';
}
$out+=' </div> ';
}
$out+=' ';
});
$out+=' ';
}
$out+=' </td>  ';
if((!_isNullOrBlank(p.designContentList[0].statusText)&&p.designContentList[0].statusText.indexOf('超时')>-1)){
$out+=' <td class="text-center no-padding"> <small class="label2 bg-v1-red">';
$out+=$escape(p.designContentList[0].statusText);
$out+=' </small> </td> ';
}else if((!_isNullOrBlank(p.designContentList[0].statusText)&&p.designContentList[0].statusText.indexOf('剩余')>-1)){
$out+=' <td class="text-center no-padding"> <small class="label2 bg-v1-yellow">';
$out+=$escape(p.designContentList[0].statusText);
$out+=' </small> </td> ';
}else if((!_isNullOrBlank(p.designContentList[0].statusText)&&p.designContentList[0].statusText.indexOf('进行中')>-1)){
$out+=' <td class="text-center no-padding"> <small class="label2 bg-v2-blue">';
$out+=$escape(p.designContentList[0].statusText);
$out+='</small> </td> ';
}else if((!_isNullOrBlank(p.designContentList[0].statusText)&&p.designContentList[0].statusText.indexOf('未开始')>-1)){
$out+=' <td class="text-center no-padding"> <small class="label2 bg-v1-grey">';
$out+=$escape(p.designContentList[0].statusText);
$out+='</small> </td> ';
}else if((!_isNullOrBlank(p.designContentList[0].statusText)&&p.designContentList[0].statusText.indexOf('未发布')>-1)){
$out+=' <td class="text-center no-padding"> <small class="label2 bg-v1-grey">';
$out+=$escape(p.designContentList[0].statusText);
$out+='</small> </td> ';
}else if((!_isNullOrBlank(p.designContentList[0].statusText)&&p.designContentList[0].statusText.indexOf('已完成')>-1)){
$out+=' <td class="text-center no-padding"> <small class="label2 bg-v1-green">';
$out+=$escape(p.designContentList[0].statusText);
$out+='</small> </td> ';
}else if(_isNullOrBlank(p.designContentList[0].statusText)){
$out+=' <td class="text-center no-padding"> <small class="label2 bg-v1-grey">未设置进度</small> </td> ';
}else{
$out+=' <td class="text-center"> ';
$out+=$escape(p.designContentList[0].statusText);
$out+=' </td> ';
}
$out+=' <td class="text-center">';
$out+=$escape(p.companyName);
$out+='</td> <td class="text-center">';
$out+=$escape(p.createDate);
$out+='</td> <td class="text-center">';
$out+=$escape(p.createBy);
$out+='</td> <td class="text-center">';
$out+=$escape(p.busPersonInCharge);
$out+='</td> <td class="text-center">';
$out+=$escape(p.designPersonInCharge);
$out+='</td>';
return new String($out);
});/*v:1*/
template('m_projectList/m_projectList_selectColumn',function($data,$filename
/**/) {
'use strict';var $utils=this,$helpers=$utils.$helpers,$each=$utils.$each,columnArr=$data.columnArr,d=$data.d,i=$data.i,$escape=$utils.$escape,columnCodes=$data.columnCodes,$out='';$out+='<div class="select-column"> <ul class="dropdown-menu" style="display: block;position: relative;width: 100%;margin: 0;"> ';
$each(columnArr,function(d,i){
$out+=' ';
if(i>2){
$out+=' <li> <a data-code="';
$out+=$escape(d.code);
$out+='" class="';
$out+=$escape(columnCodes.indexOf(d.code)>-1?'active':'');
$out+='"> ';
$out+=$escape(d.name);
$out+=' </a> </li> ';
}
$out+=' ';
});
$out+=' </ul> </div> ';
return new String($out);
});/*v:1*/
template('m_projectMember/m_projectMember',function($data,$filename
/**/) {
'use strict';var $utils=this,$helpers=$utils.$helpers,$escape=$utils.$escape,projectName=$data.projectName,$each=$utils.$each,parts=$data.parts,p=$data.p,$index=$data.$index,_url=$helpers._url,$out='';$out+='<div class="ibox"> <div class="ibox-title secondary-menu-outbox"> <div class="row"> <div class="col-md-6">  <div class="no-margin p-h-sm breadcrumb-box" > <ol class="breadcrumb"> <li> 我的项目 </li> <li class=" fa fa-angle-right"> ';
$out+=$escape(projectName);
$out+=' </li> <li class="active fa fa-angle-right"> <strong>项目成员</strong> </li> </ol> </div> </div> </div> </div> <div class="ibox-content no-padding"> <table class="table table-bordered"> <thead> <tr> <th class="border-no-l">姓名</th> <th >角色</th> <th >组织</th> <th >联系电话</th> <th >邮箱</th> </tr> </thead> <tbody class="border-no-t"> ';
$each(parts,function(p,$index){
$out+=' <tr class=""> <td class="border-no-l v-middle"> ';
if(p.headImg==null || p.headImg==''){
$out+=' <img alt="image" class="img-circle img-responsive dp-inline-block" src="';
$out+=$escape(_url('/assets/img/head_default.png'));
$out+='" width="30"/> ';
}else{
$out+=' <img alt="image" class="img-circle img-responsive dp-inline-block" src="';
$out+=$escape(p.headImg);
$out+='" width="30"/> ';
}
$out+=' &nbsp;';
$out+=$escape(p.companyUserName);
$out+=' </td> <td class="v-middle">';
$out+=$escape(p.nodeName);
$out+='</td> <td class="v-middle">';
$out+=$escape(p.companyName);
$out+='</td> <td class="v-middle">';
$out+=$escape(p.cellphone);
$out+='</td> <td class="v-middle">';
$out+=$escape(p.email);
$out+='</td> </tr> ';
});
$out+=' </tbody> </table> </div> </div> ';
return new String($out);
});/*v:1*/
template('m_projectMember/m_projectMember_old',function($data,$filename
/**/) {
'use strict';var $utils=this,$helpers=$utils.$helpers,$each=$utils.$each,parts=$data.parts,p=$data.p,i=$data.i,$escape=$utils.$escape,n=$data.n,j=$data.j,u=$data.u,k=$data.k,currentCompanyId=$data.currentCompanyId,currentCompanyUserId=$data.currentCompanyUserId,currentUserId=$data.currentUserId,isOrgManager=$data.isOrgManager,$out='';$out+='<div class="ibox ibox-shadow"> <div class="ibox-content"> ';
$each(parts,function(p,i){
$out+=' <div class="headline"> <h3>';
$out+=$escape(p.companyName);
$out+='</h3> </div> <div class="margin-bottom-30"> <ul class="todo-list m-t small-list"> ';
$each(p.nodeList,function(n,j){
$out+=' <li> <span class="m-l-xsd"><strong>';
$out+=$escape(n.nodeName);
$out+='：</strong>&nbsp;&nbsp;&nbsp; ';
$each(n.userList,function(u,k){
$out+=' ';
if((n.nodeName==='经营负责人')&& ( p.companyId == currentCompanyId &&
                            (p.operatorManagerId===currentCompanyUserId || (currentUserId==p.projectCreateBy && p.projectCompanyId==currentCompanyId) || isOrgManager==1))){
$out+=' <a href="javascript:void(0)" data-companyId="';
$out+=$escape(p.companyId);
$out+='" data-action="changeOperatorPerson" class="editable editable-click">';
$out+=$escape(u.userName);
$out+='</a>&nbsp;&nbsp; ';
}else if((n.nodeName==='设计负责人')&&p.operatorManagerId===currentCompanyUserId){
$out+=' <a href="javascript:void(0)" data-companyId="';
$out+=$escape(p.companyId);
$out+='" data-action="changeManagerPerson" data-id="';
$out+=$escape(u.companyUserId);
$out+='" class="editable editable-click">';
$out+=$escape(u.userName);
$out+='</a>&nbsp;&nbsp; ';
}else{
$out+=' ';
$out+=$escape(u.userName);
$out+='&nbsp;&nbsp; ';
}
$out+=' ';
});
$out+=' </span> </li> ';
});
$out+=' </ul> </div> ';
});
$out+=' </div> </div>';
return new String($out);
});/*v:1*/
template('m_role/m_changeManager',function($data,$filename
/**/) {
'use strict';var $utils=this,$helpers=$utils.$helpers,$escape=$utils.$escape,adminInfo=$data.adminInfo,type=$data.type,$out='';$out+='<div class="ibox"> <div class="ibox-content"> <form class="sky-form ensureChangeAdministraterOBox rounded-4x"> <input type="password" class="dp-none"> <div class="space-md-hor"> <!--<div class="col-md-12 no-pd-left"> <div class="form-group col-md-6 "style="margin-bottom: 0"> <label>新的管理员： <b>';
$out+=$escape(adminInfo.userName);
$out+='</b></label> </div> </div> <div class="form-group col-md-12"> <input type="password" class="form-control password" name="adminPassword" data-action="adminPassword" placeholder="请输入当前账户密码"> </div>--> ';
if(type==1){
$out+=' <span>移交系统管理员给<span class="text-navy font-bold">“';
$out+=$escape(adminInfo.userName);
$out+='”</span>后，你将不在拥有系统管理员权限，是否选择移交</span> ';
}else if(type==2){
$out+=' <span>指定<span class="text-navy font-bold">“';
$out+=$escape(adminInfo.userName);
$out+='”</span>为系统管理员后，系统管理员将拥有系统管理员所有权限，是否进行指定。</span> ';
}else if(type==3){
$out+=' <span>移交企业负责人给<span class="text-navy font-bold">“';
$out+=$escape(adminInfo.userName);
$out+='”</span>后，你将不在拥有企业负责人权限，是否选择移交</span> ';
}else if(type==4){
$out+=' <span>指定<span class="text-navy font-bold">“';
$out+=$escape(adminInfo.userName);
$out+='”</span>为企业负责人后，企业负责人将拥有企业负责人所有权限，是否进行指定。</span> ';
}
$out+=' <div class="clearfix"></div> </div> </form> </div> </div>';
return new String($out);
});/*v:1*/
template('m_role/m_changeManagerPWD','<form class="sky-form rounded-4x changeAdminPWDOBox dp-none border-none"> <fieldset> <div class="row"> <div class="col-md-12"> <div class="out-box"> <label class="label">旧密码<span class="color-red">*</span></label> <label class="input"> <input type="password" class="oldPassword" name="oldPassword"> </label> </div> <div class="out-box"> <label class="label">新密码<span class="color-red">*</span></label> <label class="input"> <input type="password" id="newPassword" name="newPassword"> </label> </div> <div class="out-box"> <label class="label">确认新密码<span class="color-red">*</span></label> <label class="input"> <input type="password" class="changeAdminRePwd" name="changeAdminRePwd"> </label> </div> </div> </div> </fieldset> </form>');/*v:1*/
template('m_role/m_roleAuthorization',function($data,$filename
/**/) {
'use strict';var $utils=this,$helpers=$utils.$helpers,$each=$utils.$each,rolePermissions=$data.rolePermissions,role=$data.role,i=$data.i,$escape=$utils.$escape,mem=$data.mem,a=$data.a,$out='';$out+='<form class="sky-form rounded-4x m-roleAuthorization rolePermissionsConfigOBox border-none"> <fieldset style="max-height: 600px;overflow: auto;"> <div class="ibox"> <div class="ibox-content"> <table class="table table-bordered"> <thead style="background: #f5f5f5;"> <tr> <th width="20%" class="text-center">权限组</th> <th width="50%" class="text-center">操作权限</th> <th width="30%" class="text-center"> <a href="javascript:void(0)" class="btn btn-link btn-xs" data-action="chooseAll">全选</a> <a href="javascript:void(0)" class="btn btn-link btn-xs" data-action="chooseNothing">全不选</a> <a href="javascript:void(0)" class="btn btn-link btn-xs" data-action="recoveryChoice">恢复原始</a> </th> </tr> </thead> ';
$each(rolePermissions,function(role,i){
$out+=' <tbody p-code="';
$out+=$escape(role.code);
$out+='"> <tr style="background-clip: padding-box;" role-code="';
$out+=$escape(role.code);
$out+='"> <td rowspan="';
$out+=$escape(role.permissionList.length);
$out+='" id="';
$out+=$escape(role.id);
$out+='" class="text-center vmiddle v_a_middle pTarget"> <span class="dp-block pt-relative"> ';
$out+=$escape(role.name);
$out+=' ';
if(role.code != 'SystemManager'){
$out+=' <span class="dp-inline-block"> <a href="javascript:void(0)" class="btn btn-link btn-xs" data-action="chooseAllRoleItem">全选</a> <a href="javascript:void(0)" class="btn btn-link btn-xs" data-action="delAllRoleItem">全不选</a> </span> ';
}
$out+=' </span> </td> <td class="vmiddle" p-code="';
$out+=$escape(role.permissionList[0].code);
$out+='" id="';
$out+=$escape(role.permissionList[0].id);
$out+='"> <span class="dp-block pt-relative"> ';
$out+=$escape(role.permissionList[0].name);
$out+=' </span> </td> ';
if(role.permissionList[0].code != 'sys_enterprise_logout'){
$out+=' <td data-action="chooseUserPermission" class="v-middle text-align-center"> <div class="i-checks checkbox-inline" style="min-height: 17px;"> <input type="checkbox" id="inlineCheckbox';
$out+=$escape(role.permissionList[0].id);
$out+='" name="userPermission" permission-id="';
$out+=$escape(role.permissionList[0].id);
$out+='" isCheck="';
$out+=$escape(role.permissionList[0].type);
$out+='"/> <label for="inlineCheckbox';
$out+=$escape(role.permissionList[0].id);
$out+='"></label> </div> </td> ';
}else{
$out+=' <td class="text-center"> ';
if(role.permissionList[0].type==1){
$out+=' <span class="fa fa-check p-r-5" permission-id="';
$out+=$escape(role.permissionList[0].id);
$out+='"></span> ';
}
$out+=' ';
if(role.permissionList[0].type!=1){
$out+=' <span class="glyphicon glyphicon-remove p-r-5"></span> ';
}
$out+=' </td> ';
}
$out+=' </tr> ';
$each(role.permissionList,function(mem,a){
$out+=' ';
if(a>0){
$out+=' <tr style="background-clip: padding-box;"> <td class="vmiddle" p-code="';
$out+=$escape(mem.code);
$out+='" id="';
$out+=$escape(mem.id);
$out+='"> <span class="dp-block pt-relative"> ';
$out+=$escape(mem.name);
$out+=' </span> </td> ';
if(mem.code != 'sys_enterprise_logout'){
$out+=' <td data-action="chooseUserPermission" class="v-middle text-align-center" isCheck="';
$out+=$escape(mem.type);
$out+='"> <div class="i-checks checkbox-inline" style="min-height: 17px;"> <input type="checkbox" id="inlineCheckbox';
$out+=$escape(mem.id);
$out+='" name="userPermission" permission-id="';
$out+=$escape(mem.id);
$out+='" isCheck="';
$out+=$escape(mem.type);
$out+='"/> <label for="inlineCheckbox';
$out+=$escape(mem.id);
$out+='"></label> </div> </td> ';
}else{
$out+=' <td class="text-center"> ';
if(mem.type==1){
$out+=' <span class="fa fa-check p-r-5" permission-id="';
$out+=$escape(mem.id);
$out+='"></span> ';
}
$out+=' ';
if(mem.type!=1){
$out+=' <span class="glyphicon glyphicon-remove p-r-5"></span> ';
}
$out+=' </td> ';
}
$out+=' </tr> ';
}
$out+=' ';
});
$out+=' </tbody> ';
});
$out+=' </table> </div> </div> </fieldset> </form> <script> $(\'.i-checks\').iCheck({ checkboxClass: \'icheckbox_minimal-green\', radioClass: \'iradio_minimal-green\' }); </script> ';
return new String($out);
});/*v:1*/
template('m_role/m_roleList',function($data,$filename
/**/) {
'use strict';var $utils=this,$helpers=$utils.$helpers,rolePermissions=$data.rolePermissions,currentCompanyUserId=$data.currentCompanyUserId,$escape=$utils.$escape,$each=$utils.$each,role=$data.role,i=$data.i,user=$data.user,j=$data.j,mem=$data.mem,a=$data.a,isDialogShow=$data.isDialogShow,b=$data.b,$out='';$out+=' <div class="no-margin p-sm breadcrumb-box" > <div class="col-md-6 text-left f-s-14 p-w-md"> <span>系统管理员：</span> ';
if(rolePermissions.systemManager!=null && rolePermissions.systemManager.id==currentCompanyUserId){
$out+=' <a id="sysManagerA" data-action="transferSysManager">';
$out+=$escape(rolePermissions.systemManager==null?'':rolePermissions.systemManager.userName);
$out+='</a> <a title="系统管理员" data-action="transferSysManager"><i class="fa fa-retweet"></i></a> ';
}else{
$out+=' ';
$out+=$escape(rolePermissions.systemManager==null?'':rolePermissions.systemManager.userName);
$out+=' ';
}
$out+=' </div> <div class="clearfix"></div> </div> <div class="ibox m-roleList"> <div class="ibox-content"> <table class="table table-bordered"> <thead style="background: #f5f5f5;"> <tr> <th width="15%" class="text-center">权限组</th> <th width="25%" class="text-center">操作权限</th> <th width="25%" class="text-center">权限描述</th> <th width="35%" class="text-center">人员</th> </tr> </thead> ';
$each(rolePermissions.roleList,function(role,i){
$out+=' <tbody p-code="';
$out+=$escape(role.code);
$out+='"> <tr style="background-clip: padding-box;" role-code="';
$out+=$escape(role.code);
$out+='"> <td rowspan="';
$out+=$escape(role.permissionList.length);
$out+='" id="';
$out+=$escape(role.id);
$out+='" class="text-center vmiddle v_a_middle pTarget"> <span class="dp-block pt-relative"> <span data-type="roleName">';
$out+=$escape(role.name);
$out+='</span> ';
if(role.code != 'SystemManager'){
$out+=' <a href="javascript:void(0);" class="btn-u btn-u-dark-blue btn-u-xs rounded add-button margin-left-5 hide pt-absolute" style="padding: 2px 6px;" data-action="addMemberBtn">添加人员</a> ';
}
$out+=' </span> </td> <td class="vmiddle" p-code="';
$out+=$escape(role.permissionList[0].code);
$out+='" id="';
$out+=$escape(role.permissionList[0].id);
$out+='"> <span class="dp-block pt-relative"> <span data-type="roleName">';
$out+=$escape(role.permissionList[0].name);
$out+='</span> ';
if(role.permissionList[0].code != 'sys_enterprise_logout'){
$out+=' <a href="javascript:void(0);" class="btn-u btn-u-dark-blue btn-u-xs rounded add-button hide " style="padding: 2px 6px;" data-action="addMemberBtn" >添加人员</a> ';
}
$out+=' </span> </td> <td class="vmiddle"> </td> <td p-code="';
$out+=$escape(role.permissionList[0].code);
$out+='" data-type="roleUsersTd"> ';
$each(role.permissionList[0].companyUserList,function(user,j){
$out+=' ';
if(role.permissionList[0].code != 'sys_enterprise_logout'){
$out+=' <span class="user-span pt-relative p-4"userId="';
$out+=$escape(user.userId);
$out+='" roleId="';
$out+=$escape(role.permissionList[0].id);
$out+='"> <span class="user-name curp btn-link" data-action="chooseRoleByDialog">';
$out+=$escape(user.userName);
$out+='</span> <span>';
$out+=$escape(j==role.permissionList[0].companyUserList.length-1?'&nbsp;&nbsp;':'&nbsp;');
$out+='</span> <span class="user-del hide pt-absolute" style="top: -2px;right: 2px;" data-action="deleteRoleUser"><i class="fa fa-times color-red curp "></i></span> </span> ';
}else{
$out+=' <span class="p-4" > <span class="user-name " p-code="';
$out+=$escape(role.permissionList[0].code);
$out+='" userId="';
$out+=$escape(user.userId);
$out+='" data-company-user-id="';
$out+=$escape(user.companyUserId);
$out+='">';
$out+=$escape(user.userName);
$out+='</span> <span>';
$out+=$escape(j==role.permissionList[0].companyUserList.length-1?'&nbsp;&nbsp;':'&nbsp;');
$out+='</span> </span> ';
}
$out+=' ';
});
$out+=' </td> </tr> ';
$each(role.permissionList,function(mem,a){
$out+=' ';
if(a>0){
$out+=' <tr style="background-clip: padding-box;"> <td class="vmiddle" p-code="';
$out+=$escape(mem.code);
$out+='" id="';
$out+=$escape(mem.id);
$out+='"> <span class="dp-block pt-relative"> <span data-type="roleName">';
$out+=$escape(mem.name);
$out+='</span> ';
if(mem.code != 'sys_enterprise_logout'){
$out+=' <a href="javascript:void(0);" class="btn-u btn-u-dark-blue btn-u-xs rounded add-button hide" style="padding: 2px 6px;" data-action="addMemberBtn" >添加人员</a> ';
}
$out+=' </span> </td> <td> </td> ';
if(isDialogShow==null||isDialogShow==1){
$out+=' <td p-code="';
$out+=$escape(mem.code);
$out+='" data-type="roleUsersTd"> ';
$each(mem.companyUserList,function(user,b){
$out+=' ';
if(mem.code != 'sys_enterprise_logout'){
$out+=' <span class="user-span p-4 pt-relative" userId="';
$out+=$escape(user.userId);
$out+='" roleId="';
$out+=$escape(mem.id);
$out+='"> <span class="user-name curp btn-link" data-action="chooseRoleByDialog">';
$out+=$escape(user.userName);
$out+='</span> <span>';
$out+=$escape(b==mem.companyUserList.length-1?'&nbsp;&nbsp;':'&nbsp;');
$out+='</span> <span class="user-del hide" style="position:absolute;top: -2px;right: 2px;" data-action="deleteRoleUser"> <i class="fa fa-times color-red curp "></i> </span> </span> ';
}else{
$out+=' <span class="p-4"> <span class="user-name" p-code="';
$out+=$escape(mem.code);
$out+='" userId="';
$out+=$escape(user.userId);
$out+='" data-company-user-id="';
$out+=$escape(user.companyUserId);
$out+='">';
$out+=$escape(user.userName);
$out+='</span> <span>';
$out+=$escape(b==mem.companyUserList.length-1?'&nbsp;&nbsp;':'&nbsp;');
$out+='</span> </span> ';
}
$out+=' ';
});
$out+=' </td> ';
}
$out+=' </tr> ';
}
$out+=' ';
});
$out+=' </tbody> ';
});
$out+=' </table> </div> </div> <script> $(\'.i-checks\').iCheck({ checkboxClass: \'icheckbox_minimal-green\', radioClass: \'iradio_minimal-green\' }); </script> ';
return new String($out);
});/*v:1*/
template('m_role/m_roleRightsPreview',function($data,$filename
/**/) {
'use strict';var $utils=this,$helpers=$utils.$helpers,$each=$utils.$each,rolePermissions=$data.rolePermissions,role=$data.role,i=$data.i,$escape=$utils.$escape,mem=$data.mem,a=$data.a,$out='';$out+='<div class="ibox m-b-none"> <div class="ibox-content m-b-none"> <table class="table table-bordered"> ';
$each(rolePermissions,function(role,i){
$out+=' <tbody p-code="';
$out+=$escape(role.code);
$out+='" class="border-none"> <tr role-code="';
$out+=$escape(role.code);
$out+='"> <td rowspan="';
$out+=$escape(role.permissionList.length);
$out+='" id="';
$out+=$escape(role.id);
$out+='" class="text-center vmiddle v_a_middle pTarget"> <span class="dp-block pt-relative"> ';
$out+=$escape(role.name);
$out+=' </span> </td> <td class="vmiddle" p-code="';
$out+=$escape(role.permissionList[0].code);
$out+='" id="';
$out+=$escape(role.permissionList[0].id);
$out+='"> <span class="dp-block pt-relative"> ';
$out+=$escape(role.permissionList[0].name);
$out+=' </span> </td> </tr> ';
$each(role.permissionList,function(mem,a){
$out+=' ';
if(a>0){
$out+=' <tr > <td class="vmiddle" p-code="';
$out+=$escape(mem.code);
$out+='" id="';
$out+=$escape(mem.id);
$out+='"> <span class="dp-block pt-relative"> ';
$out+=$escape(mem.name);
$out+=' </span> </td> </tr> ';
}
$out+=' ';
});
$out+=' </tbody> ';
});
$out+=' </table> </div> </div> ';
return new String($out);
});/*v:1*/
template('m_summary/m_leaveSummary',function($data,$filename
/**/) {
'use strict';var $utils=this,$helpers=$utils.$helpers,type=$data.type,$out='';$out+=' <div class="ibox ibox_min_height"> <div class="ibox-title secondary-menu-outbox"> <div class="row"> <div class="col-md-6">  <div class="no-margin p-h-sm breadcrumb-box" > <ol class="breadcrumb"> <li> 审批管理 </li> <li class="active fa fa-angle-right"> <strong> ';
if(type==4){
$out+=' 出差汇总 ';
}else{
$out+=' 请假汇总 ';
}
$out+=' </strong> </li> </ol> </div> </div> <div class="col-md-6 text-right p-w-sm"> </div> <div class="clearfix"></div> </div> </div> <div class="ibox-content no-padding"> <div class="" id="summary"> <input type="hidden" name="startDate" value=""/> <input type="hidden" name="endDate" value=""/> <input type="hidden" name="applyName" value=""/> <input type="hidden" name="leaveType" value=""/> <input type="hidden" name="auditPerson" value=""/>  <section class="mySummaryListBox"> <div class="row"> <div class="col-md-12" id="mySummaryListData"></div> <div class="col-md-12 padding-right-25"> <div id="mySummary-pagination-container" class="m-pagination pull-right"></div> </div> </div> </section>  </div> </div> </div> ';
return new String($out);
});/*v:1*/
template('m_summary/m_leaveSummary_detail',function($data,$filename
/**/) {
'use strict';var $utils=this,$helpers=$utils.$helpers,$each=$utils.$each,detailData=$data.detailData,item=$data.item,j=$data.j,$escape=$utils.$escape,file=$data.file,fastdfsUrl=$data.fastdfsUrl,typeStr=$data.typeStr,type=$data.type,p=$data.p,i=$data.i,_momentFormat=$helpers._momentFormat,$out='';$out+='<style> .float_Mask{background-color: white;padding: 21px 3px;position: absolute;top: 19px;left: 124px; } </style> <div class="ibox m-b-xs"> <div class="ibox-content MyExpDetailsCheckExpenseOBox no-pd-bottom" style="max-height:700px;overflow-y: auto"> <fieldset style="padding-top:5px;"> <div class="headline m-b-sm"> <h2>审批状态</h2> </div> <div class="row"> <div class="col-md-12"> <div class="panel-body"> <ul class="timeline-v2 timeline-me"> ';
$each(detailData.flow.expAuditEntities,function(item,j){
$out+=' <li style="height: 60px;"> <time class="cbp_tmtime" datetime=""> <span style="top:0;font-size: 14px; ';
$out+=$escape((j==detailData.flow.expAuditEntities.length-1)?'color: #FF5722;':'');
$out+='">';
$out+=$escape(item.userName);
$out+='</span> <span style="top:0;font-size: 13px;">';
$out+=$escape(item.expDate);
$out+='</span> </time> <i class="cbp_tmicon rounded-x hidden-xs" style="top: 5px; ';
$out+=$escape((j==detailData.flow.expAuditEntities.length-1)?'background: #FF5722;':'');
$out+='"></i> <div class="cbp_tmlabel"> <h2 style="font-size: 14px;padding:0; ';
$out+=$escape((j==detailData.flow.expAuditEntities.length-1)?'color:#FF5722;':'');
$out+='"> ';
$out+=$escape(item.approveStatusName=="待审核"?"待审批":item.approveStatusName);
$out+=' </h2> ';
if(item.approveStatusName=='退回'){
$out+=' <p style="font-size: 13px;word-break: break-all;color:#999;line-height: 20px;"> 退回原因：';
$out+=$escape(item.remark);
$out+=' </p> ';
}
$out+=' </div> ';
if(item.approveStatusName.indexOf('完成')>-1){
$out+=' <span class="float_Mask"></span> ';
}
$out+=' </li> ';
});
$out+=' </ul> </div> </div> </div> ';
if(detailData.data[0].projectSkyDriveEntity.length>0){
$out+=' <div class="headline m-b"> <h2>相关附件</h2> </div> <div class="row margin-bottom-30"> <div class="col-md-12 p-w-m"> ';
$each(detailData.data[0].projectSkyDriveEntity,function(file,j){
$out+=' <span class="label m-r-xs dp-inline-block" style="background: #ecf0f1;padding: 5px 10px;"> <a class="curp m-l-xs" href="';
$out+=$escape(fastdfsUrl);
$out+=$escape(file.fileGroup);
$out+='/';
$out+=$escape(file.filePath);
$out+='" target="_blank"> <i class="fa fa-file-image-o"></i>&nbsp;';
$out+=$escape(file.fileName);
$out+=' </a> </span> ';
});
$out+=' </div> </div> ';
}
$out+=' <div class="headline m-b-sm"> <h2>';
$out+=$escape(typeStr);
$out+='信息</h2> </div> <div class="row"> <div class="col-md-12"> <table class="table m-b-none"> <thead> <tr> <td class="no-pd-left"> ';
if(type==4){
$out+=' 出差地点 ';
}else{
$out+=' 请假类型 ';
}
$out+=' </td> <td>开始时间</td> <td>结束时间</td> <!--<td> ';
if(type==4){
$out+=' 出差天数（天） ';
}else{
$out+=' 请假时长（小时） ';
}
$out+=' </td>--> <td class="no-pd-right"> ';
$out+=$escape(typeStr);
$out+='事由 </td> ';
if(type==4){
$out+=' <td>关联项目</td> ';
}
$out+=' </tr> </thead> <tbody> ';
$each(detailData.data,function(p,i){
$out+=' <tr> <td class="no-pd-left"> ';
if(type==4){
$out+=' ';
$out+=$escape(p.address);
$out+=' ';
}else{
$out+=' ';
$out+=$escape(p.typeName);
$out+=' ';
}
$out+=' </td> <td> ';
if(type==4){
$out+=' ';
$out+=$escape(_momentFormat(p.startTime,'A'));
$out+=' ';
}else{
$out+=' ';
$out+=$escape(_momentFormat(p.startTime,'YYYY/MM/DD H:mm'));
$out+=' ';
}
$out+=' </td> <td> ';
if(type==4){
$out+=' ';
$out+=$escape(_momentFormat(p.endTime,'A'));
$out+=' ';
}else{
$out+=' ';
$out+=$escape(_momentFormat(p.endTime,'YYYY/MM/DD H:mm'));
$out+=' ';
}
$out+=' </td> <!--<td >';
$out+=$escape(p.leaveTime);
$out+=$escape(p.leaveTime!=null?'天':'');
$out+='</td>--> <td style="word-break: break-all;">';
$out+=$escape(p.comment);
$out+='</td> ';
if(type==4){
$out+=' <td class="no-pd-right" >';
$out+=$escape(p.projectName);
$out+='</td> ';
}
$out+=' </tr> ';
});
$out+=' </tbody> </table> </div> </div> </fieldset> </div> </div>';
return new String($out);
});/*v:1*/
template('m_summary/m_leaveSummary_list',function($data,$filename
/**/) {
'use strict';var $utils=this,$helpers=$utils.$helpers,type=$data.type,$each=$utils.$each,myDataList=$data.myDataList,p=$data.p,$index=$data.$index,$escape=$utils.$escape,pageIndex=$data.pageIndex,_momentFormat=$helpers._momentFormat,rootPath=$data.rootPath,$out='';$out+='<style> </style> <table class="table table-hover table-bordered table-responsive"> <thead> <tr> <th width="6%">序号</th> <th width="10%"> 申请时间 <a class="icon-filter pull-right" id="filterApplyDate" style="display: none;"><i class="icon iconfont icon-shaixuan"></i></a> </th> <th width="10%"> 申请人 <a class="icon-filter pull-right" id="filterApplyName" style="display: none;"><i class="icon iconfont icon-shaixuan"></i></a> </th> <th width="10%"> ';
if(type==4){
$out+=' 出差地点 ';
}else{
$out+=' 请假类型 <a class="icon-filter pull-right" id="filterLeaveType" style="display: none;"><i class="icon iconfont icon-shaixuan"></i></a> ';
}
$out+=' </th> <th width="18%"> ';
if(type==4){
$out+=' 出差事由 ';
}else{
$out+=' 请假事由 ';
}
$out+=' </th> <th width="13%">开始时间</th> <th width="13%">结束时间</th> <!--<th width="9%"> ';
if(type==4){
$out+=' 出差时长（天） ';
}else{
$out+=' 请假时长（天） ';
}
$out+=' </th>--> <th width="10%"> 审批人 <a class="icon-filter pull-right" id="filterAuditPerson" style="display: none;"><i class="icon iconfont icon-shaixuan"></i></a> </th> <th width="10%"> 审批时间 </th> </tr> </thead> <tbody> ';
$each(myDataList,function(p,$index){
$out+=' <tr class="curp" data-action="openShowExp" i="';
$out+=$escape($index);
$out+='" versionNum="';
$out+=$escape(p.versionNum);
$out+='"> <td>';
$out+=$escape($index+1+pageIndex*10);
$out+='</td> <td>';
$out+=$escape(p.applyDate);
$out+='</td> <td> ';
$out+=$escape(p.applyName);
$out+=' </td> <td> ';
if(type==4){
$out+=' ';
$out+=$escape(p.address);
$out+=' ';
}else{
$out+=' ';
$out+=$escape(p.typeName);
$out+=' ';
}
$out+=' </td> <td>';
$out+=$escape(p.comment);
$out+='</td> <td> ';
if(type==4){
$out+=' ';
$out+=$escape(_momentFormat(p.startTime,'A'));
$out+=' ';
}else{
$out+=' ';
$out+=$escape(_momentFormat(p.startTime,'YYYY/MM/DD H:mm'));
$out+=' ';
}
$out+=' </td> <td> ';
if(type==4){
$out+=' ';
$out+=$escape(_momentFormat(p.endTime,'A'));
$out+=' ';
}else{
$out+=' ';
$out+=$escape(_momentFormat(p.endTime,'YYYY/MM/DD H:mm'));
$out+=' ';
}
$out+=' </td> <!--<td>';
$out+=$escape(p.leaveTime);
$out+='天</td>--> <td>';
$out+=$escape(p.auditPerson);
$out+='</td> <td> ';
$out+=$escape(p.approveDate);
$out+=' </td> </tr> ';
});
$out+=' ';
if(myDataList==null || myDataList.length==0){
$out+=' <tr class="no-data"> <td colspan="9" align="center"> <div class="text-center"> <img src="';
$out+=$escape(rootPath);
$out+='/assets/img/default/without_exp.png"> </div> <span style="color:#4765a0">暂无内容</span> </td> </tr> ';
}
$out+=' </tbody> </table> ';
return new String($out);
});/*v:1*/
template('m_summary/m_summary_invoice','<div class="ibox"> <div class="ibox-title secondary-menu-outbox"> <div class="row"> <div class="col-md-6">  <div class="no-margin p-h-sm breadcrumb-box" > <ol class="breadcrumb"> <li> 财务管理 </li> <li class="active fa fa-angle-right"> <strong>发票汇总</strong> </li> </ol> </div> </div> <div class="col-md-6 text-right p-w-sm"> </div> <div class="clearfix"></div> </div> </div> <div class="ibox-content no-padding" style=""> <form role="form" class="form-inline m-md"> <div class="m_cost_details"> <form class="form-inline m-md"> </form> </div> </form> <div class="data-list-box"> <div class="row"> <div class="col-md-12 data-list-container p-w-lg"></div> <div class="col-md-12 p-w-m"> <div id="data-pagination-container" class="m-pagination pull-right "></div> </div> </div> </div> </div> </div> ');/*v:1*/
template('m_summary/m_summary_invoice_list',function($data,$filename
/**/) {
'use strict';var $utils=this,$helpers=$utils.$helpers,dataList=$data.dataList,$each=$utils.$each,d=$data.d,i=$data.i,$escape=$utils.$escape,_momentFormat=$helpers._momentFormat,_expNumberFilter=$helpers._expNumberFilter,_url=$helpers._url,$out='';$out+='<table class="table table-bordered table-responsive"> <thead> <tr> <th width="">日期</th> <th> 申请人 </th> <th> 金额（元） </th> <th> 收支分类子项 </th> <th> 备注 </th> <th>收票方名称</th> <th>关联项目</th> <th>发票类型</th> <th>发票号码</th> </tr> </thead> <tbody> ';
if(dataList!=null && dataList.length>0){
$out+=' ';
$each(dataList,function(d,i){
$out+=' <tr> <td>';
$out+=$escape(_momentFormat(d.applyDate,'YYYY/MM/DD'));
$out+='</td> <td>';
$out+=$escape(d.companyUserName);
$out+='</td> <td>';
$out+=$escape(_expNumberFilter(d.fee));
$out+='</td> <td>';
$out+=$escape(d.costTypeName);
$out+='</td> <td>';
$out+=$escape(d.feeDescription);
$out+='</td> <td>';
$out+=$escape(d.relationCompanyName);
$out+='</td> <td>';
$out+=$escape(d.projectName);
$out+='</td> <td>';
$out+=$escape(d.invoiceTypeName);
$out+='</td> <td>';
$out+=$escape(d.invoiceNo);
$out+='</td> </tr> ';
});
$out+=' ';
}else{
$out+=' <tr> <td colspan="9" class="text-center v-middle"> <div class="m-b-xl m-t-md"> <img src="';
$out+=$escape(_url('/assets/img/default/without_data.png'));
$out+='"> <span class="fc-dark-blue dp-block">没有相关数据</span> </div> </td> </tr> ';
}
$out+=' </tbody> </table> ';
return new String($out);
});/*v:1*/
template('m_summary/m_summary_workingHours','<div class="ibox m_payments_profitStatement"> <div class="ibox-title secondary-menu-outbox"> <div class="row"> <div class="col-md-6">  <div class="no-margin p-h-sm breadcrumb-box" > <ol class="breadcrumb"> <li> 审批管理 </li> <li class="active fa fa-angle-right"> <strong>工时汇总</strong> </li> </ol> </div> </div> <div class="col-md-6 text-right p-w-sm"> </div> <div class="clearfix"></div> </div> </div> <div class="ibox-content no-padding"> <div class="data-list-box"> <div class="row"> <div class="col-md-12 data-list-container"></div> <div class="col-md-12 p-w-m"> <div id="data-pagination-container" class="m-pagination pull-right "></div> </div> </div> </div> </div> </div>');/*v:1*/
template('m_summary/m_summary_workingHours_detail',function($data,$filename
/**/) {
'use strict';var $utils=this,$helpers=$utils.$helpers,$escape=$utils.$escape,projectName=$data.projectName,$out='';$out+='<div class="ibox m_payments_profitStatement"> <div class="ibox-title secondary-menu-outbox"> <div class="row"> <div class="col-md-6">  <div class="no-margin p-h-sm breadcrumb-box" > <ol class="breadcrumb"> <li> 审批 </li> <li class=" fa fa-angle-right"> 工时汇总 </li> <li class="active fa fa-angle-right"> <strong>';
$out+=$escape(projectName);
$out+='</strong> </li> </ol> </div> </div> <div class="col-md-6 text-right p-w-sm"> </div> <div class="clearfix"></div> </div> </div> <div class="ibox-content no-padding"> <div class="data-list-box"> <div class="row"> <div class="col-md-12 data-list-container"></div> <div class="col-md-12 p-w-m"> <div id="data-pagination-container" class="m-pagination pull-right "></div> </div> </div> </div> </div> </div> ';
return new String($out);
});/*v:1*/
template('m_summary/m_summary_workingHours_detail_list',function($data,$filename
/**/) {
'use strict';var $utils=this,$helpers=$utils.$helpers,$each=$utils.$each,dataList=$data.dataList,d=$data.d,$index=$data.$index,$escape=$utils.$escape,_url=$helpers._url,sum=$data.sum,$out='';$out+='<table class="table table-bordered table-responsive"> <thead> <tr> <th width="20%">姓名</th> <th width="30%">角色</th> <th width="15%">联系电话</th> <th width="20%">邮箱</th> <th width="15%">工时（小时）</th> </tr> </thead> <tbody> ';
$each(dataList,function(d,$index){
$out+=' <tr> <td> <img class="img-circle" src="';
$out+=$escape(d.headImg);
$out+='" width="30"/>&nbsp;&nbsp;';
$out+=$escape(d.companyUserName);
$out+=' </td> <td>';
$out+=$escape(d.nodeName==null||d.nodeName==''?'--':d.nodeName);
$out+='</td> <td>';
$out+=$escape(d.cellphone==null||d.cellphone==''?'--':d.cellphone);
$out+='</td> <td>';
$out+=$escape(d.email==null||d.email==''?'--':d.email);
$out+='</td> <td>';
$out+=$escape(d.hours==null?'--':d.hours);
$out+='</td> </tr> ';
});
$out+=' ';
if(!(dataList && dataList.length>0)){
$out+=' <tr> <td colspan="6" class="text-center v-middle"> <div class="m-b-xl m-t-md"> <img src="';
$out+=$escape(_url('/assets/img/default/without_data.png'));
$out+='"> <span class="fc-dark-blue dp-block">没有相关数据</span> </div> </td> </tr> ';
}
$out+=' </tbody> </table> <div class="pt-absolute "> <div class="m-l-xs"> ';
if(sum!=null){
$out+=' <span>总工时：';
$out+=$escape(sum);
$out+='小时</span> ';
}
$out+=' </div> </div>';
return new String($out);
});/*v:1*/
template('m_summary/m_summary_workingHours_list',function($data,$filename
/**/) {
'use strict';var $utils=this,$helpers=$utils.$helpers,$each=$utils.$each,dataList=$data.dataList,d=$data.d,$index=$data.$index,$escape=$utils.$escape,_url=$helpers._url,$out='';$out+='<table class="table table-bordered table-responsive"> <thead> <tr> <th width="20%">项目编号</th> <th width="30%">项目名称</th> <th width="25%">参与人数</th> <th width="25%">累计工时</th> </tr> </thead> <tbody> ';
$each(dataList,function(d,$index){
$out+=' <tr> <td>';
$out+=$escape(d.projectNo==null?'--':d.projectNo);
$out+='</td> <td> <a class="p-r" href="javascript:void(0);" data-action="viewDetail" data-id="';
$out+=$escape(d.id);
$out+='">';
$out+=$escape(d.projectName);
$out+='</a> </td> <td>';
$out+=$escape(d.num==null?'--':d.num);
$out+='</td> <td>';
$out+=$escape(d.hours==null?'--':d.hours);
$out+='</td> </tr> ';
});
$out+=' ';
if(!(dataList && dataList.length>0)){
$out+=' <tr> <td colspan="4" class="text-center v-middle"> <div class="m-b-xl m-t-md"> <img src="';
$out+=$escape(_url('/assets/img/default/without_data.png'));
$out+='"> <span class="fc-dark-blue dp-block">没有相关数据</span> </div> </td> </tr> ';
}
$out+=' </tbody> </table> ';
return new String($out);
});/*v:1*/
template('m_taskIssue/m_changeOperator',function($data,$filename
/**/) {
'use strict';var $utils=this,$helpers=$utils.$helpers,$each=$utils.$each,orgUserList=$data.orgUserList,p=$data.p,$index=$data.$index,$escape=$utils.$escape,selectedUserList=$data.selectedUserList,s=$data.s,$out='';$out+='<form class="form-horizontal rounded-bottom taskProgressOBox noborder" style="max-height: 200px;overflow: auto;"> <div class="ibox"> <div class="ibox-content"> <div class="userListBox"> <table class="table table-striped table-hover table-responsive m-b-none" > <thead> <tr> <th>姓名</th> <th>手机号</th> <th></th> </tr> </thead> <tbody> ';
$each(orgUserList,function(p,$index){
$out+=' <tr> <td>';
$out+=$escape(p.userName);
$out+='</td> <td>';
$out+=$escape(p.cellphone);
$out+='</td> <td> ';
if(selectedUserList!=null && selectedUserList.length>0){
$out+=' ';
$each(selectedUserList,function(s,$index){
$out+=' ';
if(s.id == p.id){
$out+=' <a href="javascript:void(0)" data-companyUserId="';
$out+=$escape(p.id);
$out+='" data-userId="';
$out+=$escape(p.userId);
$out+='" class="btn-u btn-u-default btn-u-xs rounded no-hover">选择</a> ';
}else{
$out+=' <a href="javascript:void(0)" data-action="choseUser" data-companyUserId="';
$out+=$escape(p.id);
$out+='" data-userId="';
$out+=$escape(p.userId);
$out+='" class="btn-u btn-u-primany btn-u-xs rounded">选择</a> ';
}
$out+=' ';
});
$out+=' ';
}
$out+=' </td> </tr> ';
});
$out+=' ';
if(orgUserList==null || orgUserList.length==0){
$out+=' <tr> <td colspan="3" align="center">暂无数据</td> </tr> ';
}
$out+=' </tbody> <tfoot><tr><td colspan="3" id="userList"></td></tr></tfoot> </table> </div> </div> </div> </form> ';
return new String($out);
});/*v:1*/
template('m_taskIssue/m_progressChange_list',function($data,$filename
/**/) {
'use strict';var $utils=this,$helpers=$utils.$helpers,taskScheduleChangesList=$data.taskScheduleChangesList,$escape=$utils.$escape,_momentFormat=$helpers._momentFormat,$each=$utils.$each,v=$data.v,$index=$data.$index,$out='';$out+='<form class="form-horizontal rounded-bottom taskProgressOBox noborder" style="max-height: 200px;overflow: auto;"> <div class="ibox"> <div class="ibox-content"> <div class="row"> <div class="col-md-3 no-pd-right"> <label style="text-align: right"> <b>计划进度:</b> </label> </div> ';
if(taskScheduleChangesList && taskScheduleChangesList.length>0){
$out+=' <div class="col-md-9"> ';
$out+=$escape(_momentFormat(taskScheduleChangesList[0].startTime,'YYYY/MM/DD'));
$out+=' ';
if((taskScheduleChangesList[0].startTime!=null && taskScheduleChangesList[0].startTime!='')
                    || (taskScheduleChangesList[0].endTime!=null && taskScheduleChangesList[0].endTime!='')){
$out+=' <span>~</span> ';
}
$out+=' ';
$out+=$escape(_momentFormat(taskScheduleChangesList[0].endTime,'YYYY/MM/DD'));
$out+=' ';
if((taskScheduleChangesList[0].startTime!=null && taskScheduleChangesList[0].startTime!='')
                    && (taskScheduleChangesList[0].endTime!=null && taskScheduleChangesList[0].endTime!='')){
$out+=' ';
if(taskScheduleChangesList[0].allDay!=null){
$out+=' <span>&nbsp;( <span class="diffDaysTxt">';
$out+=$escape(taskScheduleChangesList[0].allDay);
$out+='</span>天 )</span> ';
}
$out+=' ';
}
$out+=' </div> ';
}
$out+=' <div class="clearfix"></div> </div> ';
$each(taskScheduleChangesList,function(v,$index){
$out+=' ';
if($index>0 && $index==1){
$out+=' <div class="row"> <div class="col-md-3 no-pd-right"> <label class="" style="text-align: right"> <b>第';
$out+=$escape($index);
$out+='次变更:</b> </label> </div> <div class="col-md-9"> ';
$out+=$escape(_momentFormat(v.startTime,'YYYY/MM/DD'));
$out+=' ';
if((v.startTime!=null && v.startTime!='') || (v.endTime!=null && v.endTime!='')){
$out+=' <span>~</span> ';
}
$out+=' ';
$out+=$escape(_momentFormat(v.endTime,'YYYY/MM/DD'));
$out+=' ';
if((v.startTime!=null && v.startTime!='') && (v.endTime!=null && v.endTime!='')){
$out+=' ';
if(v.timeDiffStr!=null){
$out+=' <span>&nbsp;( <span class="diffDaysTxt">';
$out+=$escape(v.timeDiffStr);
$out+='</span>天 )</span> ';
}
$out+=' ';
}
$out+=' </div> </div> <div class="col-md-7 col-md-offset-3 "> <label class="" style="position: relative;top: -2px;word-break: break-all"> ';
if((v.startTime==null || v.startTime=='') || (v.endTime==null || v.endTime=='')){
$out+=' <b>变更原因：</b> <span class="memo-span">';
$out+=$escape(v.memo);
$out+='</span> ';
}else{
$out+=' <b>变更原因：</b> <span class="memo-span">';
$out+=$escape(v.memo);
$out+='</span> ';
}
$out+=' </label> <div class="clearfix"></div> </div> <div class="clearfix"></div> </div> ';
}
$out+=' ';
});
$out+=' <div class="clearfix"></div> </div> </div> </form> ';
return new String($out);
});/*v:1*/
template('m_taskIssue/m_scheduleChanges',function($data,$filename
/**/) {
'use strict';var $utils=this,$helpers=$utils.$helpers,taskScheduleChangesList=$data.taskScheduleChangesList,$escape=$utils.$escape,$each=$utils.$each,v=$data.v,$index=$data.$index,$out='';$out+='<form class="form-horizontal rounded-bottom taskProgressOBox noborder"> <div class="ibox"> <div class="ibox-content"> <div class="col-md-12"> <div class="col-md-2"> <label> <b>任务计划进度:</b> </label> </div> ';
if(taskScheduleChangesList && taskScheduleChangesList.length>0){
$out+=' <div class="col-md-6"> ';
$out+=$escape(taskScheduleChangesList[0].startTime);
$out+=' ';
if((taskScheduleChangesList[0].startTime!=null && taskScheduleChangesList[0].startTime!='')
                    || (taskScheduleChangesList[0].endTime!=null && taskScheduleChangesList[0].endTime!='')){
$out+=' <span>~</span> ';
}
$out+=' ';
$out+=$escape(taskScheduleChangesList[0].endTime);
$out+=' ';
if((taskScheduleChangesList[0].startTime!=null && taskScheduleChangesList[0].startTime!='')
                    && (taskScheduleChangesList[0].endTime!=null && taskScheduleChangesList[0].endTime!='')){
$out+=' ';
if(taskScheduleChangesList[0].allDay!=null){
$out+=' <span>&nbsp;( <span class="diffDaysTxt">';
$out+=$escape(taskScheduleChangesList[0].allDay);
$out+='</span>天 )</span> ';
}
$out+=' ';
}
$out+=' </div> <div class="col-md-4"> <a href="javascript:void(0)" data-action="addScheduleProgressChange" class="btn-u btn-u-xs rounded ';
if(taskScheduleChangesList && taskScheduleChangesList.length>1){
$out+='hide';
}
$out+='">变更</a> <!--<a href="javascript:void(0)" data-action="delScheduleProgressChange" data-seq="0" data-id="';
$out+=$escape(taskScheduleChangesList[0].id);
$out+='" class="btn-u btn-u-xs btn-u-red rounded ';
if(taskScheduleChangesList && taskScheduleChangesList.length>1){
$out+='hide';
}
$out+='" >删除</a>--> </div> ';
}
$out+=' <div class="clearfix"></div> </div> ';
$each(taskScheduleChangesList,function(v,$index){
$out+=' ';
if($index>0){
$out+=' <div class="col-md-12"> <div class="col-md-2"> <label class="" style="text-align: right"> <b>第';
$out+=$escape($index);
$out+='次变更:</b> </label> </div> <div class="col-md-6"> ';
$out+=$escape(v.startTime);
$out+=' ';
if((v.startTime!=null && v.startTime!='') || (v.endTime!=null && v.endTime!='')){
$out+=' <span>~</span> ';
}
$out+=' ';
$out+=$escape(v.endTime);
$out+=' ';
if((v.startTime!=null && v.startTime!='') && (v.endTime!=null && v.endTime!='')){
$out+=' ';
if(v.timeDiffStr!=null){
$out+=' <span>&nbsp;( <span class="diffDaysTxt">';
$out+=$escape(v.timeDiffStr);
$out+='</span>天 )</span> ';
}
$out+=' ';
}
$out+=' </div> <div class="col-md-4"> <a href="javascript:void(0)" data-action="addScheduleProgressChange" class="btn-u btn-u-xs rounded ';
if(taskScheduleChangesList && taskScheduleChangesList.length!=$index+1){
$out+='hide';
}
$out+='" >变更</a> <!-- <a href="javascript:void(0)" data-action="delScheduleProgressChange" data-id="';
$out+=$escape(v.id);
$out+='" class="btn-u btn-u-xs btn-u-red rounded ';
if(taskScheduleChangesList && taskScheduleChangesList.length!=$index+1){
$out+='hide';
}
$out+='">删除</a>--> </div> <div class="col-md-10 col-md-offset-2 "> <label class="" style="position: relative;top: -2px;word-break: break-all"> <b>变更原因：</b> ';
$out+=$escape(v.memo);
$out+=' </label> <div class="clearfix"></div> </div> <div class="clearfix"></div> </div> ';
}
$out+=' ';
});
$out+=' </div> </div> </form> ';
return new String($out);
});/*v:1*/
template('m_taskIssue/m_scheduleChanges_new',function($data,$filename
/**/) {
'use strict';var $utils=this,$helpers=$utils.$helpers,$escape=$utils.$escape,$labelText=$data.$labelText,taskScheduleChangesList=$data.taskScheduleChangesList,_momentFormat=$helpers._momentFormat,$each=$utils.$each,v=$data.v,$index=$data.$index,$out='';$out+='<form class="form-horizontal rounded-bottom taskProgressOBox noborder"> <div class="ibox"> <div class="ibox-content"> <div class="col-md-12"> <div class="col-md-2"> <label> <b>';
$out+=$escape($labelText);
$out+=':</b> </label> </div> ';
if(taskScheduleChangesList && taskScheduleChangesList.length>0){
$out+=' <div class="col-md-7"> ';
$out+=$escape(_momentFormat(taskScheduleChangesList[0].startTime,'YYYY/MM/DD'));
$out+=' ';
if((taskScheduleChangesList[0].startTime!=null && taskScheduleChangesList[0].startTime!='')
                    || (taskScheduleChangesList[0].endTime!=null && taskScheduleChangesList[0].endTime!='')){
$out+=' <span>~</span> ';
}
$out+=' ';
$out+=$escape(_momentFormat(taskScheduleChangesList[0].endTime,'YYYY/MM/DD'));
$out+=' ';
if((taskScheduleChangesList[0].startTime!=null && taskScheduleChangesList[0].startTime!='')
                    && (taskScheduleChangesList[0].endTime!=null && taskScheduleChangesList[0].endTime!='')){
$out+=' ';
if(taskScheduleChangesList[0].allDay!=null){
$out+=' <span>&nbsp;( <span class="diffDaysTxt">';
$out+=$escape(taskScheduleChangesList[0].allDay);
$out+='</span>天 )</span> ';
}
$out+=' ';
}
$out+=' </div> <div class="col-md-3"> <a href="javascript:void(0)" data-action="addScheduleProgressChange" class="btn-u btn-u-xs rounded ';
$out+=$escape(taskScheduleChangesList && taskScheduleChangesList.length>1?'hide':'');
$out+='" data-id="';
$out+=$escape(taskScheduleChangesList[0].id);
$out+='" data-type="';
$out+=$escape(taskScheduleChangesList[0].type);
$out+='" data-list-type="1" data-start-time="';
$out+=$escape(taskScheduleChangesList[0].startTime);
$out+='" data-end-time="';
$out+=$escape(taskScheduleChangesList[0].endTime);
$out+='"> ';
$out+=$escape(taskScheduleChangesList[0].type==3?'修改':'变更');
$out+=' </a> <!--<a href="javascript:void(0)" data-action="delScheduleProgressChange" data-seq="0" data-id="';
$out+=$escape(taskScheduleChangesList[0].id);
$out+='" class="btn-u btn-u-xs btn-u-red rounded ';
if(taskScheduleChangesList && taskScheduleChangesList.length>1){
$out+='hide';
}
$out+='" >删除</a>--> </div> ';
}
$out+=' <div class="clearfix"></div> </div> ';
$each(taskScheduleChangesList,function(v,$index){
$out+=' ';
if($index>0){
$out+=' <div class="col-md-12"> <div class="col-md-2"> <label class="" style="text-align: right"> <b>第';
$out+=$escape($index);
$out+='次变更:</b> </label> </div> <div class="col-md-7"> ';
$out+=$escape(_momentFormat(v.startTime,'YYYY/MM/DD'));
$out+=' ';
if((v.startTime!=null && v.startTime!='') || (v.endTime!=null && v.endTime!='')){
$out+=' <span>~</span> ';
}
$out+=' ';
$out+=$escape(_momentFormat(v.endTime,'YYYY/MM/DD'));
$out+=' ';
if((v.startTime!=null && v.startTime!='') && (v.endTime!=null && v.endTime!='')){
$out+=' ';
if(v.timeDiffStr!=null){
$out+=' <span>&nbsp;( <span class="diffDaysTxt">';
$out+=$escape(v.timeDiffStr);
$out+='</span>天 )</span> ';
}
$out+=' ';
}
$out+=' </div> <div class="col-md-3"> <a href="javascript:void(0)" data-action="addScheduleProgressChange" class="btn-u btn-u-xs rounded ';
$out+=$escape(taskScheduleChangesList && taskScheduleChangesList.length!=$index+1?'hide':'');
$out+='" data-id="';
$out+=$escape(v.id);
$out+='" data-type="';
$out+=$escape(v.type);
$out+='" data-start-time="';
$out+=$escape(v.startTime);
$out+='" data-end-time="';
$out+=$escape(v.endTime);
$out+='"> ';
$out+=$escape(v.type==3?'修改':'变更');
$out+=' </a> <!-- <a href="javascript:void(0)" data-action="delScheduleProgressChange" data-id="';
$out+=$escape(v.id);
$out+='" class="btn-u btn-u-xs btn-u-red rounded ';
if(taskScheduleChangesList && taskScheduleChangesList.length!=$index+1){
$out+='hide';
}
$out+='">删除</a>--> </div> <div class="col-md-10 col-md-offset-2 "> <label class="" style="position: relative;line-height:18px;word-break: break-all;"> <b>变更原因：</b> <span class="memo-span">';
$out+=$escape(v.memo);
$out+='</span> </label> <div class="clearfix"></div> </div> <div class="clearfix"></div> </div> ';
}
$out+=' ';
});
$out+=' </div> </div> </form> ';
return new String($out);
});/*v:1*/
template('m_taskIssue/m_taskIssue',function($data,$filename
/**/) {
'use strict';var $utils=this,$helpers=$utils.$helpers,$escape=$utils.$escape,projectName=$data.projectName,orgList=$data.orgList,$each=$utils.$each,o=$data.o,$index=$data.$index,dataCompanyId=$data.dataCompanyId,currentManagerObj=$data.currentManagerObj,currentCompanyId=$data.currentCompanyId,currentCompanyUserId=$data.currentCompanyUserId,$out='';$out+='<div class="ibox"> <div class="ibox-title secondary-menu-outbox"> <div class="row"> <div class="col-md-4">  <div class="no-margin p-h-sm breadcrumb-box" > <ol class="breadcrumb"> <li> 我的项目 </li> <li class=" fa fa-angle-right"> ';
$out+=$escape(projectName);
$out+=' </li> <li class="active fa fa-angle-right"> <strong>任务签发</strong> </li> </ol> </div> </div> <div class="col-md-8 text-right" style="padding: 9px 15px;"> ';
if(orgList!=null && orgList.length>0){
$out+=' <strong>当前视图：</strong> <select name="viewByOrg" class="wid-200"> ';
$each(orgList,function(o,$index){
$out+=' ';
if(dataCompanyId == o.id){
$out+=' <option value="';
$out+=$escape(o.id);
$out+='" selected>';
$out+=$escape(o.companyName);
$out+='</option> ';
}else{
$out+=' <option value="';
$out+=$escape(o.id);
$out+='">';
$out+=$escape(o.companyName);
$out+='</option> ';
}
$out+=' ';
});
$out+=' </select> <span class="icon-separation-line"></span> ';
}
$out+=' <span class="">经营负责人：</span> <span class="m-r-sm"> ';
$out+=$escape(currentManagerObj.projectManager.companyUserName);
$out+=' ';
if(currentManagerObj.projectManager.isUpdateOperator==1 && currentCompanyId==dataCompanyId){
$out+=' <a href="javascript:void(0)" data-action="changeOperatorPerson" data-i="0" data-id="';
$out+=$escape(currentManagerObj.projectManager.companyUserId);
$out+='" data-company-id="';
$out+=$escape(currentManagerObj.projectManager.companyId);
$out+='" data-user-name="';
$out+=$escape(currentManagerObj.projectManager.companyUserName);
$out+='" class="showTooltip" data-placement="top" data-toggle="tooltip" data-original-title="更换经营负责人"> <i class="fa fa-retweet"></i> </a> ';
}
$out+=' </span> <span>经营助理：</span> <span class=""> ';
$out+=$escape(currentManagerObj.assistant==null || currentManagerObj.assistant.companyUserName==null?'未设置':currentManagerObj.assistant.companyUserName);
$out+=' ';
if(currentManagerObj.projectManager.companyUserId==currentCompanyUserId && currentCompanyId==dataCompanyId){
$out+=' ';
if(currentManagerObj.assistant!=null){
$out+=' <a href="javascript:void(0)" data-action="changeManagerPerson" data-i="0" data-id="';
$out+=$escape(currentManagerObj.assistant.companyUserId);
$out+='" data-user-name="';
$out+=$escape(currentManagerObj.assistant.companyUserName);
$out+='" data-company-id="';
$out+=$escape(currentManagerObj.assistant.companyId);
$out+='" class="showTooltip" data-placement="top" data-toggle="tooltip" data-original-title="更换经营助理"> <i class="fa fa-retweet"></i> </a> ';
}else{
$out+=' <a href="javascript:void(0)" data-action="changeManagerPerson" data-i="0" data-id="" data-user-name="" data-company-id="" class="showTooltip" data-placement="top" data-toggle="tooltip" data-original-title="更换助理"> <i class="fa fa-retweet"></i> </a> ';
}
$out+=' ';
}
$out+=' </span> <span class="icon-separation-line"></span> <a href="javascript:void(0);" data-action="viewProjectInfo"> 项目基本信息&nbsp;<i class="icon iconfont icon-jibenxinxi"></i> </a> </div> <div class="clearfix"></div> </div> </div> <div class="ibox-content no-padding"> <div id="taskIssueList" class="list-box"></div> </div> </div> ';
return new String($out);
});/*v:1*/
template('m_taskIssue/m_taskIssueDesignContent_add','<div class="content-box overflow-hidden"> <form class="content-form"> <div class="col-md-12" style="padding: 20px 30px 0;"> <div class="form-group m-r-xs"> <label>设计任务</label> <input placeholder="设计任务" class="form-control" type="text" name="taskName" maxlength="100"> </div> </div> </form> <div id="time-box"> </div> </div> ');/*v:1*/
template('m_taskIssue/m_taskIssue_add',function($data,$filename
/**/) {
'use strict';var $utils=this,$helpers=$utils.$helpers,doType=$data.doType,$each=$utils.$each,allCompanyList=$data.allCompanyList,s=$data.s,$index=$data.$index,companyId=$data.companyId,$escape=$utils.$escape,orgList=$data.orgList,d=$data.d,currentCompanyId=$data.currentCompanyId,orgId=$data.orgId,appointmentStartTime=$data.appointmentStartTime,appointmentEndTime=$data.appointmentEndTime,$out='';$out+='<style> .add-issue-box{width:430px;} .add-issue-box .form-group .form-control{width: 100%;} .add-issue-box .select2.select2-container{width: 309px !important;} .add-issue-box .select2.select2-container span.select2-selection{border-radius: 0;height: 34px;} .add-issue-box .select2-container--default .select2-selection--single .select2-selection__arrow b{border-width: 6px 3px 0px 3px;margin-left: -2px;margin-top: 1px;} </style> <form class="add-issue-form"> <div class="add-issue-box "> ';
if(doType==null){
$out+=' <div class="form-group m-b-xs clearfix"> <label class="col-24-sm-6 control-label no-pd-left m-t-xs">设计任务<span class="color-red">*</span></label> <div class="col-24-sm-18 no-pd-right"> <input placeholder="设计任务" class="form-control" type="text" name="taskName" maxlength="100"> </div> </div> ';
}
$out+=' <div class="form-group m-b-xs clearfix"> <label class="col-24-sm-6 control-label no-pd-left m-t-xs">设计组织<span class="color-red">*</span></label> <div class="col-24-sm-18 no-pd-right"> <select class="form-control" name="designOrg"> ';
$each(allCompanyList,function(s,$index){
$out+=' ';
if(companyId == s.id){
$out+=' <option value="';
$out+=$escape(s.id);
$out+='" data-type="';
$out+=$escape(s.companyType);
$out+='" selected>';
$out+=$escape(s.companyName);
$out+='</option> ';
}else{
$out+=' <option value="';
$out+=$escape(s.id);
$out+='" data-type="';
$out+=$escape(s.companyType);
$out+='">';
$out+=$escape(s.companyName);
$out+='</option> ';
}
$out+=' ';
});
$out+=' </select> </div> </div> <div class="form-group depart-div m-b-xs clearfix"> <label class="col-24-sm-6 control-label no-pd-left m-t-xs">部门</label> <div class="col-24-sm-18 no-pd-right"> <select class="form-control" name="orgId"> <option value="">请选择</option> ';
$each(orgList,function(d,$index){
$out+=' ';
if(currentCompanyId!=d.id){
$out+=' ';
if(orgId==d.id){
$out+=' <option value="';
$out+=$escape(d.id);
$out+='" selected> ';
$out+=$escape(d.departName);
$out+='</option> ';
}else{
$out+=' <option value="';
$out+=$escape(d.id);
$out+='"> ';
$out+=$escape(d.departName);
$out+='</option> ';
}
$out+=' ';
}
$out+=' ';
});
$out+=' </select> </div> </div> <div class="form-group hide operator-div m-b-xs clearfix" style="display: none;"> <label class="col-24-sm-6 control-label no-pd-left no-pd-right m-t-xs">经营负责人</label> <div class="col-24-sm-18 no-pd-right"> <select class="js-example-disabled-results form-control" name="managerId" style="width:280px;"> </select> </div> <div class="clearfix"></div> </div>  <div class="form-group time-box m-b-xs clearfix">  <label class="col-24-sm-6 control-label no-pd-left no-pd-right m-t-xs">计划开始时间<span class="color-red">*</span></label> <div class="col-24-sm-18 no-pd-right"> <div class="input-group"> <input type="text" class="form-control timeInput startTime input-sm" id="ipt_startTime" name="startTime" data-appointmentStartTime = "';
$out+=$escape(appointmentStartTime);
$out+='" placeholder="开始日期" readonly onFocus="startTimeFun(this,m_inputProcessTime_onpicked)" value="';
$out+=$escape(appointmentStartTime);
$out+='"> <span class="input-group-addon no-padding"> <i class="icon-sm icon-append fa fa-calendar" style="height: 28px;line-height: 28px;"></i> </span> </div> </div> </div> <div class="form-group time-box m-b-xs clearfix">  <label class="col-24-sm-6 control-label no-pd-left no-pd-right m-t-xs">计划结束时间<span class="color-red">*</span></label> <div class="col-24-sm-18 no-pd-right"> <div class="input-group"> <input type="text" class="form-control timeInput endTime input-sm" id="ipt_endTime" name="endTime" data-appointmentEndTime = "';
$out+=$escape(appointmentEndTime);
$out+='" placeholder="结束日期" readonly onFocus="endTimeFun(this,m_inputProcessTime_onpicked)" value="';
$out+=$escape(appointmentEndTime);
$out+='"> <span class="input-group-addon no-padding"> <i class="icon-sm icon-append fa fa-calendar" style="height: 28px;line-height: 28px;"></i> </span> </div> </div> </div> <div class="col-md-12 m-b-xs no-pd-right"> <button type="button" class="btn btn-default btn-sm m-popover-close pull-right "> <i class="glyphicon glyphicon-remove"></i> </button> <button type="button" class="btn btn-primary btn-sm m-popover-submit pull-right m-r-xs"> <i class="fa fa-check"></i> </button> </div> </div> </form> ';
return new String($out);
});/*v:1*/
template('m_taskIssue/m_taskIssue_list',function($data,$filename
/**/) {
'use strict';var $utils=this,$helpers=$utils.$helpers,taskIssueList=$data.taskIssueList,isOrgManager=$data.isOrgManager,isAssistant=$data.isAssistant,currentCompanyId=$data.currentCompanyId,projectCompanyId=$data.projectCompanyId,$each=$utils.$each,t=$data.t,ti=$data.ti,$escape=$utils.$escape,_momentFormat=$helpers._momentFormat,_isNullOrBlank=$helpers._isNullOrBlank,_timeDifference=$helpers._timeDifference,_url=$helpers._url,$out='';$out+='<form class="m_taskIssue_list task-list-box"> <table class="tree table table-bordered table-striped tree-box"> <thead> <tr> <th width="3%" class="b-r-none"> ';
if(taskIssueList!=null && taskIssueList.length>0 && (isOrgManager==1 || isAssistant==1)){
$out+=' <div class="list-check-box"> <label class="i-checks fw-normal m-b-none"> <input name="taskAllCk" type="checkbox" /> <span class="i-checks-span"></span> </label> </div> ';
}
$out+=' </th> <th width="3%" class="b-r-none b-l-none"> <div class="list-action-box"> ';
if(isOrgManager==1 || isAssistant==1){
$out+=' <div class="btn-group batchOperation" id="batchAllOperation"> <button type="button" class="btn btn-default btn-xs dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false"> <span class="ic-operation-batch"></span> </button> <ul class="dropdown-menu"> <li> <a href="javascript:void(0);" data-action="batchPublishTask" class="">批量发布任务</a> </li> <li> <a href="javascript:void(0);" class="" data-action="batchDelTask" data-canbedelete="">批量删除</a> </li> </ul> </div> ';
}
$out+=' </div> </th> <th width="24%" class="b-r-none b-l-none v-middle" style="padding-left: 38px;"> <span>设计任务</span> ';
if(isOrgManager==1 && currentCompanyId == projectCompanyId){
$out+=' <button class="btn btn-link" data-action="addDesignTask" title="添加设计任务"><i class="fa fa-plus"></i></button> ';
}
$out+=' </th> <th width="5%" class="b-r-none">任务描述</th> <th width="15%" class="b-r-none v-middle">设计组织</th> <th width="20%" class="b-r-none v-middle">计划进度</th> <th width="10%" class="b-r-none v-middle">进度提示</th> <th width="10%" class="b-r-none v-middle">完成时间</th> <th width="10%" class="v-middle">任务状态</th> </tr> </thead> <tbody> ';
$each(taskIssueList,function(t,ti){
$out+=' <tr class="tree-box-tr treegrid-';
$out+=$escape(t.id);
$out+=' ';
if(t.taskPid!=null && t.taskPid!=''){
$out+='treegrid-parent-';
$out+=$escape(t.taskPid);
}
$out+=' ';
$out+=$escape(t.taskState=='3'||t.taskState=='4'?'completeDate-tr':'');
$out+='" data-i="';
$out+=$escape(ti);
$out+='" data-id="';
$out+=$escape(t.id);
$out+='" data-pid="';
$out+=$escape(t.taskPid);
$out+='" data-company-id="';
$out+=$escape(t.companyId);
$out+='" data-publish-id="';
$out+=$escape(t.publishId);
$out+='"> <td class="v-middle b-r-none l-h-14"> <div class="list-check-box"> <label class="i-checks fw-normal m-b-none"> <input name="taskCk" type="checkbox" /> <span class="i-checks-span"></span> </label> </div> </td> <td class="b-r-none b-l-none"> <div class="list-action-box"> <div class="btn-group singleOperation" style="display: none;"> <button type="button" class="btn btn-default btn-xs dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false"> <span class="ic-operation"></span> </button> <ul class="dropdown-menu"> ';
if(t.addChild && (isOrgManager==1 || isAssistant==1)){
$out+=' <li> <a href="javascript:void(0);" data-action="addSubTask">添加子任务</a> </li> ';
}
$out+=' ';
if(t.taskStatus==2 && (isOrgManager==1 || isAssistant==1)){
$out+=' <li> <a href="javascript:void(0);" data-action="publishTask">发布任务</a> </li> ';
}
$out+='  ';
if(!t.first && (isOrgManager==1 || isAssistant==1)){
$out+=' <li> <a href="javascript:void(0);" data-action="moveUp">向上移动</a> </li> ';
}
$out+='  ';
if(!t.last && (isOrgManager==1 || isAssistant==1)){
$out+=' <li> <a href="javascript:void(0);" data-action="moveDown">向下移动</a> </li> ';
}
$out+=' ';
if(t.canBeDelete && (isOrgManager==1 || isAssistant==1)){
$out+=' <li> <a href="javascript:void(0);" data-action="delTask" data-canbedelete="';
$out+=$escape(t.canBeDelete?'1':'0');
$out+='">删除</a> </li> ';
}
$out+=' </ul> </div> ';
if((isOrgManager==1 || isAssistant==1) && t.isHasChild==1){
$out+=' <div class="btn-group batchOperation" style="display: none;"> <button type="button" class="btn btn-default btn-xs dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false"> <span class="ic-operation-batch"></span> </button> <ul class="dropdown-menu"> <li> <a href="javascript:void(0);" data-action="batchPublishTask" >批量发布任务</a> </li> <li> <a href="javascript:void(0);" data-action="batchDelTask" data-canbedelete="';
$out+=$escape(t.canBeDelete?'1':'0');
$out+='">批量删除</a> </li> </ul> </div> ';
}
$out+=' </div> </td> <td class="treeTd pt-relative v-middle b-r-none b-l-none" height="40" > <!--';
if(t.taskState=='3'||t.taskState=='4'){
$out+='<span class="pull-left"><i class="fa fa-check fc-v1-green"></i></span>';
}
$out+='--> <span class="show-span taskName pt-relative" data-string="';
$out+=$escape(t.taskName);
$out+='">';
$out+=$escape(t.taskName);
$out+='</span> ';
if(t.issuePlanList!=null && t.issuePlanList.length>0 ){
$out+=' <a class="tree-td-a" href="javascript:void(0);" data-action="viewPlanTime" id="viewPlanTime';
$out+=$escape(t.id);
$out+='"> <i class="fa fa-star-half-empty"></i> </a> ';
}
$out+=' ';
if(t.canBeEdit && (isOrgManager==1 || isAssistant==1)){
$out+=' <a class="tree-td-a" href="javascript:void(0);" data-action="taskNameEdit" data-deal-type="edit" style="display: none;"> <i class="ic-edit"></i> </a> ';
}
$out+=' </td> <td class="b-r-none v-middle"> ';
if(t.taskRemark==null || t.taskRemark==''){
$out+=' ';
if(t.canBeEdit && (isOrgManager==1 || isAssistant==1)){
$out+=' <span class="fc-ccc show-span">未设置</span> ';
}else{
$out+=' <span class="fc-ccc">--</span> ';
}
$out+=' ';
}else{
$out+=' <span class="edit-span-box wh-16" > <a data-action="viewTaskRemarkEdit" id="viewTaskRemarkEdit';
$out+=$escape(ti);
$out+='"> <i class="ic-describe"></i></a> </span> ';
}
$out+=' ';
if(t.canBeEdit && (isOrgManager==1 || isAssistant==1)){
$out+=' <span class="edit-span-box wh-16"> <a href="javascript:void(0);" data-action="taskRemarkEdit" id="taskRemarkEdit';
$out+=$escape(ti);
$out+='" data-deal-type="edit" style="display: none;"> <i class="ic-edit"></i> </a> </span> ';
}
$out+=' </td> <td class="v-middle b-r-none "> <span class="show-span" data-company-id="';
$out+=$escape(t.companyId);
$out+='" data-depart-id="';
$out+=$escape(t.departId);
$out+='"> ';
if(t.departName!=null && t.departName!=''){
$out+=' ';
$out+=$escape(t.departName);
$out+=' <i class="iconfont rounded icon-2fengongsi m-r-xs" data-toggle="tooltip" data-original-title="';
$out+=$escape(t.companyName);
$out+='"></i> ';
}else{
$out+=' ';
$out+=$escape(t.companyName);
$out+=' ';
}
$out+=' </span> ';
if(t.issueLevel<2 && t.taskStatus == 2 && (isOrgManager==1 || isAssistant==1)){
$out+=' <a class="" href="javascript:void(0);" data-action="choseDesignOrg" data-deal-type="edit" style="display: none;"> <i class="ic-edit"></i> </a> ';
}
$out+=' </td> <td class="v-middle b-r-none "> <span class="show-span" data-type="planTime" data-start-time="';
$out+=$escape(t.planStartTime);
$out+='" data-end-time="';
$out+=$escape(t.planEndTime);
$out+='"> ';
if((t.planStartTime==null || t.planStartTime=='') && (t.planEndTime==null || t.planEndTime=='')){
$out+=' <span class="fc-ccc">未设置</span> ';
}else{
$out+=' ';
$out+=$escape(_momentFormat(t.planStartTime,'YYYY/MM/DD'));
$out+=' - ';
$out+=$escape(_momentFormat(t.planEndTime,'YYYY/MM/DD'));
$out+=' ';
if(_isNullOrBlank(t.planStartTime) || _isNullOrBlank(t.planEndTime)){
$out+=' | 共 - 天 ';
}else{
$out+=' | 共 ';
$out+=$escape(_timeDifference(t.planStartTime,t.planEndTime));
$out+=' 天 ';
}
$out+=' ';
if(t.changeTime && t.taskState!=7){
$out+=' <a href="javascript:void(0);" data-action="viewProgressChange" id="viewProgressByChange1';
$out+=$escape(t.id);
$out+='"><i class="fa fa-info-circle"></i></a> ';
}
$out+=' ';
}
$out+=' </span> ';
if((t.fromCompanyId==currentCompanyId || (t.fromCompanyId==null && t.companyId == currentCompanyId)) && (isOrgManager==1 || isAssistant==1)){
$out+=' <a href="javascript:void(0);" data-action="startTimeEdit" data-status="';
$out+=$escape(t.taskStatus);
$out+='" data-start-time="';
$out+=$escape(t.planStartTime);
$out+='" data-end-time="';
$out+=$escape(t.planEndTime);
$out+='" data-deal-type="edit" style="display: none;"> <i class="ic-edit"></i> </a> ';
}
$out+=' </td> <td> ';
if(t.taskState==2 || t.taskState==4){
$out+=' <span class="text-danger">';
$out+=$escape(t.statusText);
$out+='</span> ';
}else{
$out+=' <span class="text-warning">';
$out+=$escape(t.statusText);
$out+='</span> ';
}
$out+=' </td> <td class="v-middle b-l-none"> <span>';
$out+=$escape(_momentFormat(t.completeDate,'YYYY/MM/DD'));
$out+='</span> </td> <td class="v-middle b-l-none">  ';
if(t.taskState === 7){
$out+=' <span class="text-danger">';
$out+=$escape(t.stateHtml);
$out+='</span> ';
}else if(t.taskState ===3){
$out+=' <span class="text-success">';
$out+=$escape(t.stateHtml);
$out+='</span> ';
}else if(t.taskState ===2){
$out+=' <span class="text-danger">';
$out+=$escape(t.stateHtml);
$out+='</span> ';
}else{
$out+=' <span>';
$out+=$escape(t.stateHtml);
$out+='</span> ';
}
$out+=' <!--';
if(t.taskStatus==2 && (isOrgManager==1 || isAssistant==1)){
$out+=' <a href="javascript:void(0);" data-action="publishTask" class="icon-publish-task" style="display: none;"> <i class="fa fa-flag"></i> </a> ';
}
$out+='--> </td> </tr> ';
});
$out+=' ';
if(!(taskIssueList && taskIssueList.length>0)){
$out+=' <tr class="no-data-tr"> <td colspan="9" class="text-center v-middle"> <div class="m-b-xl m-t-md"> <img src="';
$out+=$escape(_url('/assets/img/default/without_data.png'));
$out+='"> <span class="fc-dark-blue dp-block">您还没有相关签发任务</span> </div> </td> </tr> ';
}
$out+=' </tbody> </table> </form>';
return new String($out);
});/*v:1*/
template('m_taskIssue/m_taskIssue_list_add',function($data,$filename
/**/) {
'use strict';var $utils=this,$helpers=$utils.$helpers,$escape=$utils.$escape,allCompanyList=$data.allCompanyList,$each=$utils.$each,s=$data.s,$index=$data.$index,currentCompanyId=$data.currentCompanyId,departList=$data.departList,d=$data.d,$out='';$out+='<tr class="row-edit edit-box"> <td class="b-r-none "></td> <td class="b-r-none b-l-none"></td> <td class="b-r-none b-l-none" colspan="2"> <input placeholder="设计任务" class="form-control" type="text" name="taskName" style="width: 80%;display: inline-block;"> <span><span class="wordCount">0</span>/<span>50</span></span> </td> <td class="b-r-none b-l-none"> <div class="btn-group org-select-box"> <button class="btn btn-default btn-sm dropdown-toggle" type="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false"> <span class="company-name" data-company-id="';
$out+=$escape(allCompanyList[0].id);
$out+='" data-depart-id=""> ';
$out+=$escape(allCompanyList==null || allCompanyList.length==0?'':allCompanyList[0].companyName);
$out+=' </span> <span class="caret"></span> </button> <ul class="dropdown-menu" style="max-height: 155px;overflow-y: auto;overflow-x: hidden;"> ';
$each(allCompanyList,function(s,$index){
$out+=' <li> <a class="';
$out+=$escape(currentCompanyId == s.id && departList!=null && departList.length>1?'p-r-lg':'');
$out+='" href="javascript:void(0);" data-action="choseOrg" data-type="';
$out+=$escape(s.companyType);
$out+='" data-chose-type="company" data-company-id="';
$out+=$escape(s.id);
$out+='">';
$out+=$escape(s.companyName);
$out+='</a> ';
if(currentCompanyId == s.id && departList!=null && departList.length>1){
$out+=' <a class="open-depart-btn" title="选择部门"> <i class="fa fa-angle-double-down"></i> </a> <ul class="dropdown-menu"> ';
$each(departList,function(d,$index){
$out+=' ';
if(currentCompanyId!=d.id){
$out+=' <li> <a href="javascript:void(0);" data-action="choseOrg" data-chose-type="depart" data-company-id="';
$out+=$escape(d.id);
$out+='">';
$out+=$escape(d.departName);
$out+='</a> </li> ';
}
$out+=' ';
});
$out+=' </ul> ';
}
$out+=' </li> ';
});
$out+=' </ul> </div> </td> <td class="b-r-none b-l-none" colspan="2"> <div class="input-group dp-inline-block"> <input type="text" class="form-control timeInput startTime input-sm" id="ipt_startTime" name="startTime" data-appointmentStartTime = "" placeholder="开始日期" readonly onFocus="startTimeFun(this,m_inputProcessTime_onpicked)" value="" style="width: 110px;"> <span class="input-group-addon no-padding"> <i class="icon-sm icon-append fa fa-calendar" style="height: 28px;line-height: 28px;"></i> </span> </div> <div class="input-group dp-inline-block"> <input type="text" class="form-control timeInput endTime input-sm" id="ipt_endTime" name="endTime" data-appointmentEndTime = "" placeholder="结束日期" readonly onFocus="endTimeFun(this,m_inputProcessTime_onpicked)" value="" style="width: 110px;"> <span class="input-group-addon no-padding"> <i class="icon-sm icon-append fa fa-calendar" style="height: 28px;line-height: 28px;"></i> </span> </div> </td> <td></td> <td class="b-l-none"> <button class="btn btn-primary btn-sm" data-action="submit">创建</button> <button class="btn btn-default btn-sm" data-action="cancel">取消</button> </td> </tr> <tr class="row-edit edit-box"> <td class="b-r-none b-t-none" colspan="2"></td> <td class="b-r-none b-l-none b-t-none v-middle" colspan="7"> <input placeholder="任务描述" class="form-control" type="text" name="taskRemark" > </td> <td class="b-l-none b-t-none"></td> </tr> ';
return new String($out);
});/*v:1*/
template('m_taskIssue/m_taskIssue_list_changeTime',function($data,$filename
/**/) {
'use strict';var $utils=this,$helpers=$utils.$helpers,$each=$utils.$each,issuePlanList=$data.issuePlanList,p=$data.p,i=$data.i,$escape=$utils.$escape,$out='';$out+='<div class="ibox"> <div class="ibox-content"> <div class="row"> ';
$each(issuePlanList,function(p,i){
$out+=' <div class="col-md-12"> <span>';
$out+=$escape(p.fromCompanyName);
$out+='</span> <span> > </span> <span>';
$out+=$escape(p.companyName);
$out+='</span> <span>';
$out+=$escape(p.planStartTime);
$out+=' ';
if(p.changeTime){
$out+=' <a href="javascript:void(0);" data-action="viewProgressChange" id="viewPlanTimeByTask1';
$out+=$escape(p.id);
$out+='" data-i="';
$out+=$escape(i);
$out+='" data-id="';
$out+=$escape(p.id);
$out+='" data-pid="';
$out+=$escape(p.taskPid);
$out+='" data-company-id="';
$out+=$escape(p.companyId);
$out+='" data-publish-id="';
$out+=$escape(p.publishId);
$out+='"><i class="fa fa-info-circle"></i></a> ';
}
$out+=' </span> <span>-</span> <span>';
$out+=$escape(p.planEndTime);
$out+=' ';
if(p.changeTime){
$out+=' <a href="javascript:void(0);" data-action="viewProgressChange" id="viewPlanTimeByTask2';
$out+=$escape(p.id);
$out+='" data-i="';
$out+=$escape(i);
$out+='" data-id="';
$out+=$escape(p.id);
$out+='" data-pid="';
$out+=$escape(p.taskPid);
$out+='" data-company-id="';
$out+=$escape(p.companyId);
$out+='" data-publish-id="';
$out+=$escape(p.publishId);
$out+='"><i class="fa fa-info-circle"></i></a> ';
}
$out+=' </span> <span> ';
if(p.taskState==1){
$out+=' 进行中 ';
}else if(p.taskState==2){
$out+=' 超时进行 ';
}else if(p.taskState==3){
$out+=' 已完成 ';
}else if(p.taskState==4){
$out+=' 超时完成 ';
}else if(p.taskState==5){
$out+=' 未开始 ';
}
$out+=' </span> </div> ';
});
$out+=' </div> </div> </div>';
return new String($out);
});/*v:1*/
template('m_taskIssue/m_taskIssue_list_editOrg',function($data,$filename
/**/) {
'use strict';var $utils=this,$helpers=$utils.$helpers,$escape=$utils.$escape,selectedCompanyId=$data.selectedCompanyId,selectedDepartId=$data.selectedDepartId,selectedCompanyText=$data.selectedCompanyText,$each=$utils.$each,allCompanyList=$data.allCompanyList,s=$data.s,$index=$data.$index,currentCompanyId=$data.currentCompanyId,departList=$data.departList,d=$data.d,$out='';$out+='<div class="btn-group edit-box reign-edit-box edit-org-box"> <button class="btn btn-default btn-sm dropdown-toggle" type="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false"> <span class="company-name" data-company-id="';
$out+=$escape(selectedCompanyId);
$out+='" data-depart-id="';
$out+=$escape(selectedDepartId==null?'':selectedDepartId);
$out+='"> ';
$out+=$escape(selectedCompanyText);
$out+=' </span> <span class="caret"></span> </button> <ul class="dropdown-menu" style="max-height: 155px;overflow-y: auto;overflow-x: hidden;"> ';
$each(allCompanyList,function(s,$index){
$out+=' <li> <a class="';
$out+=$escape(currentCompanyId == s.id && departList!=null && departList.length>1?'p-r-lg':'');
$out+='" href="javascript:void(0);" data-action="choseOrg" data-type="';
$out+=$escape(s.companyType);
$out+='" data-chose-type="company" data-company-id="';
$out+=$escape(s.id);
$out+='">';
$out+=$escape(s.companyName);
$out+='</a> ';
if(currentCompanyId == s.id && departList!=null && departList.length>1){
$out+=' <a class="open-depart-btn no-padding" title="选择部门"> <i class="fa fa-angle-double-down"></i> </a> <ul class="dropdown-menu"> ';
$each(departList,function(d,$index){
$out+=' ';
if(currentCompanyId!=d.id){
$out+=' <li> <a href="javascript:void(0);" data-action="choseOrg" data-chose-type="depart" data-company-id="';
$out+=$escape(d.id);
$out+='">';
$out+=$escape(d.departName);
$out+='</a> </li> ';
}
$out+=' ';
});
$out+=' </ul> ';
}
$out+=' </li> ';
});
$out+=' </ul> </div> ';
return new String($out);
});/*v:1*/
template('m_taskIssue/m_taskIssue_list_editTime',function($data,$filename
/**/) {
'use strict';var $utils=this,$helpers=$utils.$helpers,$escape=$utils.$escape,placeholder=$data.placeholder,textVal=$data.textVal,$out='';$out+='<div class="input-group edit-box reign-edit-box"> <input type="text" class="form-control input-sm timeInput" id="ipt_time" name="ipt_time" placeholder="';
$out+=$escape(placeholder);
$out+='" value="';
$out+=$escape(textVal);
$out+='" > <span class="input-group-addon no-padding"> <i class="icon-sm icon-append fa fa-calendar" style="height: 28px;line-height: 28px;"></i> </span> </div>';
return new String($out);
});/*v:1*/
template('m_taskIssue/m_taskIssue_list_old',function($data,$filename
/**/) {
'use strict';var $utils=this,$helpers=$utils.$helpers,taskIssueList=$data.taskIssueList,isOrgManager=$data.isOrgManager,isAssistant=$data.isAssistant,currentCompanyId=$data.currentCompanyId,projectCompanyId=$data.projectCompanyId,$each=$utils.$each,t=$data.t,ti=$data.ti,$escape=$utils.$escape,_momentFormat=$helpers._momentFormat,_isNullOrBlank=$helpers._isNullOrBlank,_timeDifference=$helpers._timeDifference,_url=$helpers._url,$out='';$out+='<form class="m_taskIssue_list task-list-box"> <table class="tree table table-bordered table-striped tree-box"> <thead> <tr> <th width="3%" class="b-r-none"> ';
if(taskIssueList!=null && taskIssueList.length>0 && (isOrgManager==1 || isAssistant==1)){
$out+=' <div class="list-check-box"> <label class="i-checks fw-normal m-b-none"> <input name="taskAllCk" type="checkbox" /> <span class="i-checks-span"></span> </label> </div> ';
}
$out+=' </th> <th width="3%" class="b-r-none b-l-none"> <div class="list-action-box"> ';
if(isOrgManager==1 || isAssistant==1){
$out+=' <div class="btn-group batchOperation" id="batchAllOperation"> <button type="button" class="btn btn-default btn-xs dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false"> <span class="ic-operation-batch"></span> </button> <ul class="dropdown-menu"> <li> <a href="javascript:void(0);" data-action="batchPublishTask" class="">批量发布任务</a> </li> <li> <a href="javascript:void(0);" class="" data-action="batchDelTask" data-canbedelete="">批量删除</a> </li> </ul> </div> ';
}
$out+=' </div> </th> <th width="24%" class="b-r-none b-l-none v-middle" style="padding-left: 38px;"> <span>设计任务</span> ';
if(isOrgManager==1 && currentCompanyId == projectCompanyId){
$out+=' <button class="btn btn-link" data-action="addDesignTask" title="添加设计任务"><i class="fa fa-plus"></i></button> ';
}
$out+=' </th> <th width="5%" class="b-r-none">任务描述</th> <th width="15%" class="b-r-none v-middle">设计组织</th> <th width="20%" class="b-r-none v-middle">计划进度</th> <th width="10%" class="b-r-none v-middle">进度提示</th> <th width="10%" class="b-r-none v-middle">完成时间</th> <th width="10%" class="v-middle">任务状态</th> </tr> </thead> <tbody> ';
$each(taskIssueList,function(t,ti){
$out+=' <tr class="tree-box-tr treegrid-';
$out+=$escape(t.id);
$out+=' ';
if(t.taskPid!=null && t.taskPid!=''){
$out+='treegrid-parent-';
$out+=$escape(t.taskPid);
}
$out+=' ';
$out+=$escape(t.taskState=='3'||t.taskState=='4'?'completeDate-tr':'');
$out+='" data-i="';
$out+=$escape(ti);
$out+='" data-id="';
$out+=$escape(t.id);
$out+='" data-pid="';
$out+=$escape(t.taskPid);
$out+='" data-company-id="';
$out+=$escape(t.companyId);
$out+='" data-publish-id="';
$out+=$escape(t.publishId);
$out+='"> <td class="v-middle b-r-none l-h-14"> <div class="list-check-box"> <label class="i-checks fw-normal m-b-none"> <input name="taskCk" type="checkbox" /> <span class="i-checks-span"></span> </label> </div> </td> <td class="b-r-none b-l-none"> <div class="list-action-box"> <div class="btn-group singleOperation" style="display: none;"> <button type="button" class="btn btn-default btn-xs dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false"> <span class="ic-operation"></span> </button> <ul class="dropdown-menu"> ';
if(t.addChild && (isOrgManager==1 || isAssistant==1)){
$out+=' <li> <a href="javascript:void(0);" data-action="addSubTask">添加子任务</a> </li> ';
}
$out+=' ';
if(t.taskStatus==2 && (isOrgManager==1 || isAssistant==1)){
$out+=' <li> <a href="javascript:void(0);" data-action="publishTask">发布任务</a> </li> ';
}
$out+='  ';
if(!t.first && (isOrgManager==1 || isAssistant==1)){
$out+=' <li> <a href="javascript:void(0);" data-action="moveUp">向上移动</a> </li> ';
}
$out+='  ';
if(!t.last && (isOrgManager==1 || isAssistant==1)){
$out+=' <li> <a href="javascript:void(0);" data-action="moveDown">向下移动</a> </li> ';
}
$out+=' ';
if(t.canBeDelete && (isOrgManager==1 || isAssistant==1)){
$out+=' <li> <a href="javascript:void(0);" data-action="delTask" data-canbedelete="';
$out+=$escape(t.canBeDelete?'1':'0');
$out+='">删除</a> </li> ';
}
$out+=' </ul> </div> ';
if((isOrgManager==1 || isAssistant==1) && t.isHasChild==1){
$out+=' <div class="btn-group batchOperation" style="display: none;"> <button type="button" class="btn btn-default btn-xs dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false"> <span class="ic-operation-batch"></span> </button> <ul class="dropdown-menu"> <li> <a href="javascript:void(0);" data-action="batchPublishTask" >批量发布任务</a> </li> <li> <a href="javascript:void(0);" data-action="batchDelTask" data-canbedelete="';
$out+=$escape(t.canBeDelete?'1':'0');
$out+='">批量删除</a> </li> </ul> </div> ';
}
$out+=' </div> </td> <td class="treeTd pt-relative v-middle b-r-none b-l-none" height="40" > <!--';
if(t.taskState=='3'||t.taskState=='4'){
$out+='<span class="pull-left"><i class="fa fa-check fc-v1-green"></i></span>';
}
$out+='--> <span class="show-span taskName pt-relative" data-string="';
$out+=$escape(t.taskName);
$out+='">';
$out+=$escape(t.taskName);
$out+='</span> ';
if(t.issuePlanList!=null && t.issuePlanList.length>0 ){
$out+=' <a class="tree-td-a" href="javascript:void(0);" data-action="viewPlanTime" id="viewPlanTime';
$out+=$escape(t.id);
$out+='"> <i class="fa fa-star-half-empty"></i> </a> ';
}
$out+=' ';
if(t.canBeEdit && (isOrgManager==1 || isAssistant==1)){
$out+=' <a class="tree-td-a" href="javascript:void(0);" data-action="taskNameEdit" data-deal-type="edit" style="display: none;"> <i class="ic-edit"></i> </a> ';
}
$out+=' </td> <td class="b-r-none v-middle"> ';
if(t.taskRemark==null || t.taskRemark==''){
$out+=' ';
if(t.canBeEdit && (isOrgManager==1 || isAssistant==1)){
$out+=' <span class="fc-ccc show-span">未设置</span> ';
}else{
$out+=' <span class="fc-ccc">--</span> ';
}
$out+=' ';
}else{
$out+=' <span class="edit-span-box wh-16" > <a data-action="viewTaskRemarkEdit" id="viewTaskRemarkEdit';
$out+=$escape(ti);
$out+='"> <i class="ic-describe"></i></a> </span> ';
}
$out+=' ';
if(t.canBeEdit && (isOrgManager==1 || isAssistant==1)){
$out+=' <span class="edit-span-box wh-16"> <a href="javascript:void(0);" data-action="taskRemarkEdit" id="taskRemarkEdit';
$out+=$escape(ti);
$out+='" data-deal-type="edit" style="display: none;"> <i class="ic-edit"></i> </a> </span> ';
}
$out+=' </td> <td class="v-middle b-r-none "> <span class="show-span" data-company-id="';
$out+=$escape(t.companyId);
$out+='" data-depart-id="';
$out+=$escape(t.departId);
$out+='"> ';
if(t.departName!=null && t.departName!=''){
$out+=' ';
$out+=$escape(t.departName);
$out+=' <i class="iconfont rounded icon-2fengongsi m-r-xs" data-toggle="tooltip" data-original-title="';
$out+=$escape(t.companyName);
$out+='"></i> ';
}else{
$out+=' ';
$out+=$escape(t.companyName);
$out+=' ';
}
$out+=' </span> ';
if(t.issueLevel<2 && t.taskStatus == 2 && (isOrgManager==1 || isAssistant==1)){
$out+=' <a class="" href="javascript:void(0);" data-action="choseDesignOrg" data-deal-type="edit" style="display: none;"> <i class="ic-edit"></i> </a> ';
}
$out+=' </td> <td class="v-middle b-r-none "> <span class="show-span" data-type="planTime" data-start-time="';
$out+=$escape(t.planStartTime);
$out+='" data-end-time="';
$out+=$escape(t.planEndTime);
$out+='"> ';
if((t.planStartTime==null || t.planStartTime=='') && (t.planEndTime==null || t.planEndTime=='')){
$out+=' <span class="fc-ccc">未设置</span> ';
}else{
$out+=' ';
$out+=$escape(_momentFormat(t.planStartTime,'YYYY/MM/DD'));
$out+=' - ';
$out+=$escape(_momentFormat(t.planEndTime,'YYYY/MM/DD'));
$out+=' ';
if(_isNullOrBlank(t.planStartTime) || _isNullOrBlank(t.planEndTime)){
$out+=' | 共 - 天 ';
}else{
$out+=' | 共 ';
$out+=$escape(_timeDifference(t.planStartTime,t.planEndTime));
$out+=' 天 ';
}
$out+=' ';
if(t.changeTime && t.taskState!=7){
$out+=' <a href="javascript:void(0);" data-action="viewProgressChange" id="viewProgressByChange1';
$out+=$escape(t.id);
$out+='"><i class="fa fa-info-circle"></i></a> ';
}
$out+=' ';
}
$out+=' </span> ';
if((t.fromCompanyId==currentCompanyId || (t.fromCompanyId==null && t.companyId == currentCompanyId)) && (isOrgManager==1 || isAssistant==1)){
$out+=' <a href="javascript:void(0);" data-action="startTimeEdit" data-status="';
$out+=$escape(t.taskStatus);
$out+='" data-start-time="';
$out+=$escape(t.planStartTime);
$out+='" data-end-time="';
$out+=$escape(t.planEndTime);
$out+='" data-deal-type="edit" style="display: none;"> <i class="ic-edit"></i> </a> ';
}
$out+=' </td> <td> ';
if(t.taskState==2 || t.taskState==4){
$out+=' <span class="text-danger">';
$out+=$escape(t.statusText);
$out+='</span> ';
}else{
$out+=' <span class="text-warning">';
$out+=$escape(t.statusText);
$out+='</span> ';
}
$out+=' </td> <td class="v-middle b-l-none"> <span>';
$out+=$escape(_momentFormat(t.completeDate,'YYYY/MM/DD'));
$out+='</span> </td> <td class="v-middle b-l-none">  ';
if(t.taskState === 7){
$out+=' <span class="text-danger">';
$out+=$escape(t.stateHtml);
$out+='</span> ';
}else if(t.taskState ===3){
$out+=' <span class="text-success">';
$out+=$escape(t.stateHtml);
$out+='</span> ';
}else if(t.taskState ===2){
$out+=' <span class="text-danger">';
$out+=$escape(t.stateHtml);
$out+='</span> ';
}else{
$out+=' <span>';
$out+=$escape(t.stateHtml);
$out+='</span> ';
}
$out+=' <!--';
if(t.taskStatus==2 && (isOrgManager==1 || isAssistant==1)){
$out+=' <a href="javascript:void(0);" data-action="publishTask" class="icon-publish-task" style="display: none;"> <i class="fa fa-flag"></i> </a> ';
}
$out+='--> </td> </tr> ';
});
$out+=' ';
if(!(taskIssueList && taskIssueList.length>0)){
$out+=' <tr class="no-data-tr"> <td colspan="9" class="text-center v-middle"> <div class="m-b-xl m-t-md"> <img src="';
$out+=$escape(_url('/assets/img/default/without_data.png'));
$out+='"> <span class="fc-dark-blue dp-block">您还没有相关签发任务</span> </div> </td> </tr> ';
}
$out+=' </tbody> </table> </form>';
return new String($out);
});/*v:1*/
template('m_taskIssue/m_taskIssue_org',function($data,$filename
/**/) {
'use strict';var $utils=this,$helpers=$utils.$helpers,isShowTips=$data.isShowTips,departBCompany=$data.departBCompany,isRoleCompany=$data.isRoleCompany,$escape=$utils.$escape,isView=$data.isView,currentCompanyUserId=$data.currentCompanyUserId,taskIssueOrgList=$data.taskIssueOrgList,$each=$utils.$each,t=$data.t,$index=$data.$index,$out='';$out+='<style> table.partB{border-right:0px;margin-bottom: 0px;} table.partB,table.partB tbody,table.partB tbody tr,table.partB tbody tr td{border-bottom: 0px} </style> ';
if(isShowTips==1){
$out+=' <div class="alert alert-warning alert-dismissable"> <button aria-hidden="true" data-dismiss="alert" class="close" type="button">×</button> 如若要进行生产安排，请先指定设计负责人！ </div> ';
}
$out+=' ';
if(departBCompany !=null && isRoleCompany){
$out+=' <table class="table table-bordered tree-box partB" style="width: 12%;float: left;border-right:0px;"> <tbody> <tr class="" > <td align="center" height="40" class="gray-bg font-bold" style="border-right:0px; ">乙方</td> </tr> </tbody> </table> <table class="table table-bordered tree-box partB" style="width: 88%;float: left;"> <tbody> <tr class="" > <td width="32%" height="40" class="treeTd"> <span class="companyName" data-string="';
$out+=$escape(departBCompany.companyName);
$out+='"> &nbsp;';
$out+=$escape(departBCompany.companyName);
$out+=' </span> </td> <td width="14%" align="center" class="gray-bg font-bold">经营负责人</td> <td width="20%"> <div class="full-width l-h-20"> ';
if(departBCompany.isUpdateOperator==1 && isView == false){
$out+=' <span data-action="changeOperatorPerson" data-i="0" data-id="';
$out+=$escape(departBCompany.operatorPersonId);
$out+='" data-company-id="';
$out+=$escape(departBCompany.id);
$out+='" class="pull-left">';
$out+=$escape(departBCompany.operatorPersonName);
$out+='</span> <!--<a href="javascript:void(0)" data-action="changeOperatorPerson" data-i="0" data-id="';
$out+=$escape(departBCompany.operatorPersonId);
$out+='" data-company-id="';
$out+=$escape(departBCompany.id);
$out+='" class="pull-right showTooltip" data-placement="top" data-toggle="tooltip" data-original-title="';
$out+=$escape(departBCompany.operatorPersonId==currentCompanyUserId?'更换':'更换');
$out+='经营负责人"> <i class="fa fa-retweet"></i> </a>--> ';
}else{
$out+=' ';
$out+=$escape(departBCompany.operatorPersonName);
$out+=' ';
}
$out+=' </div> </td> <td width="14%" align="center" class="gray-bg font-bold">设计负责人</td> <td width="20%"> <div class="full-width l-h-20"> ';
if(departBCompany.isUpdateDesign==1 && isView == false){
$out+=' <span data-action="changeManagerPerson" data-i="0" data-id="';
$out+=$escape(departBCompany.designPersonId);
$out+='" data-company-id="';
$out+=$escape(departBCompany.id);
$out+='" class="pull-left"> ';
$out+=$escape(departBCompany.designPersonName==null?'未设置':departBCompany.designPersonName);
$out+=' </span> <!--';
if(departBCompany.designPersonName!=null){
$out+=' <a href="javascript:void(0)" data-action="changeManagerPerson" data-i="0" data-id="';
$out+=$escape(departBCompany.designPersonId);
$out+='" data-company-id="';
$out+=$escape(departBCompany.id);
$out+='" class="pull-right showTooltip" data-placement="top" data-toggle="tooltip" data-original-title="更换设计负责人"> <i class="fa fa-retweet"></i> </a> ';
}
$out+='--> ';
}else{
$out+=' ';
$out+=$escape(departBCompany.designPersonName);
$out+=' ';
}
$out+=' </div> </td> </tr> </tbody> </table> ';
}
$out+=' <table class="table table-bordered tree-box" style="width: 12%;float: left;border-right:0px;"> <tbody> <tr class="" > <td align="center" height="40" class="gray-bg font-bold" style="border-right:0px; ">立项组织</td> </tr> ';
if(taskIssueOrgList.length>1){
$out+=' <tr class="" > <td align="center" height="';
$out+=$escape((taskIssueOrgList.length-1)*40);
$out+='" class="gray-bg font-bold" style="vertical-align: middle;border-right:0px; ">设计组织</td> </tr> ';
}
$out+=' </tbody> </table> <table class="tree table no-treegrid-expander table-bordered tree-box" style="width: 88%;float: left;"> <tbody> ';
$each(taskIssueOrgList,function(t,$index){
$out+=' ';
if(t!=null){
$out+=' <tr class="tree-box-tr treegrid-';
$out+=$escape(t.treeId);
$out+=' ';
if(t.pid!=null && t.pid!=''){
$out+='treegrid-parent-';
$out+=$escape(t.pid);
}
$out+='" data-i="';
$out+=$escape($index);
$out+='"> <td width="32%" height="40" class="treeTd"> <span class="companyName" data-string="';
$out+=$escape(t.companyName);
$out+='"> &nbsp;';
$out+=$escape(t.companyName);
$out+=' <!--';
if(t.type==0){
$out+=' <i class="icon iconfont icon-hehuoren color-dark-blue f-s-20" ></i> ';
}
$out+='--> </span> </td> <td width="14%" align="center" class="gray-bg font-bold">经营负责人</td> <td width="20%"> <div class="full-width l-h-20"> ';
if(t.isUpdateOperator==1 && isView == false){
$out+=' <span data-action="changeOperatorPerson" data-i="0" data-id="';
$out+=$escape(t.operatorPersonId);
$out+='" data-user-name="';
$out+=$escape(t.operatorPersonName);
$out+='" data-company-id="';
$out+=$escape(t.id);
$out+='" class="pull-left">';
$out+=$escape(t.operatorPersonName);
$out+='</span> <!--<a href="javascript:void(0)" data-action="changeOperatorPerson" data-i="0" data-id="';
$out+=$escape(t.operatorPersonId);
$out+='" data-user-name="';
$out+=$escape(t.operatorPersonName);
$out+='" data-company-id="';
$out+=$escape(t.id);
$out+='" class="pull-right showTooltip" data-placement="top" data-toggle="tooltip" data-original-title="';
$out+=$escape(t.operatorPersonId==currentCompanyUserId?'更换':'更换');
$out+='经营负责人"> <i class="fa fa-retweet"></i> </a>--> ';
}else{
$out+=' ';
$out+=$escape(t.operatorPersonName);
$out+=' ';
}
$out+=' </div> </td> <td width="14%" align="center" class="gray-bg font-bold">设计负责人</td> <td width="20%"> <div class="full-width l-h-20"> ';
if(t.isUpdateDesign==1 && isView == false){
$out+=' <span data-action="changeManagerPerson" data-i="0" data-id="';
$out+=$escape(t.designPersonId);
$out+='" data-user-name="';
$out+=$escape(t.designPersonName);
$out+='" data-company-id="';
$out+=$escape(t.id);
$out+='" class="pull-left"> ';
$out+=$escape(t.designPersonName==null?'未设置':t.designPersonName);
$out+=' </span> <!--';
if(t.designPersonName!=null){
$out+=' <a href="javascript:void(0)" data-action="changeManagerPerson" data-i="0" data-id="';
$out+=$escape(t.designPersonId);
$out+='" data-user-name="';
$out+=$escape(t.designPersonName);
$out+='" data-company-id="';
$out+=$escape(t.id);
$out+='" class="pull-right showTooltip" data-placement="top" data-toggle="tooltip" data-original-title="更换设计负责人"> <i class="fa fa-retweet"></i> </a> ';
}
$out+='--> ';
}else{
$out+=' ';
$out+=$escape(t.designPersonName);
$out+=' ';
}
$out+=' </div> </td> </tr> ';
}
$out+=' ';
});
$out+=' </tbody> </table> <div class="clearfix"></div>';
return new String($out);
});/*v:1*/
template('m_taskIssue/m_taskIssue_overview',' <div id="taskIssueOverviewList" > </div>  ');/*v:1*/
template('m_taskIssue/m_taskIssue_overview_header',function($data,$filename
/**/) {
'use strict';var $utils=this,$helpers=$utils.$helpers,$escape=$utils.$escape,projectName=$data.projectName,projectCreateByName=$data.projectCreateByName,operatorPersonName=$data.operatorPersonName,designPersonName=$data.designPersonName,$out='';$out+='<div class="col-md-6 "> <h4>项目：';
$out+=$escape(projectName);
$out+='</h4> </div> <div class="col-md-6 text-right"> <h4> 立项人：<span class="text-info">';
$out+=$escape(projectCreateByName);
$out+='</span>&nbsp;&nbsp; 经营负责人：<span class="text-info">';
$out+=$escape(operatorPersonName==null?'未设置':operatorPersonName);
$out+='</span>&nbsp;&nbsp; 设计负责人：<span class="text-info">';
$out+=$escape(designPersonName==null?'未设置':designPersonName);
$out+='</span> </h4> </div>';
return new String($out);
});/*v:1*/
template('m_taskIssue/m_taskIssue_overview_list',function($data,$filename
/**/) {
'use strict';var $utils=this,$helpers=$utils.$helpers,$each=$utils.$each,taskIssueList=$data.taskIssueList,t=$data.t,ti=$data.ti,$escape=$utils.$escape,_url=$helpers._url,$out='';$out+='<form style="padding-top: 1px;"> <table class="tree table table-bordered tree-box"> <thead> <tr> <th width="40%" class="b-r-none" style="padding-left: 38px;">设计任务</th> <th width="20%" class="b-r-none b-l-none">设计组织</th> <th width="14%" class="b-r-none b-l-none">开始时间</th> <th width="14%" class="b-r-none b-l-none">结束时间</th> <th width="12%" class="b-l-none">任务状态</th> </tr> </thead> <tbody> ';
$each(taskIssueList,function(t,ti){
$out+=' <tr class="tree-box-tr treegrid-';
$out+=$escape(t.taskId);
$out+=' ';
if(t.taskPid!=null && t.taskPid!=''){
$out+='treegrid-parent-';
$out+=$escape(t.taskPid);
}
$out+='" data-i="';
$out+=$escape(ti);
$out+='" data-id="';
$out+=$escape(t.taskId);
$out+='" data-pid="';
$out+=$escape(t.taskPid);
$out+='" data-company-id="';
$out+=$escape(t.companyId);
$out+='" data-publish-id="';
$out+=$escape(t.publishId);
$out+='"> <td class="treeTd pt-relative v-middle b-r-none" height="40" > ';
if(t.taskState=='3'||t.taskState=='4'){
$out+='<i class="fa fa-check fc-v1-green"></i>';
}
$out+=' <span class="show-span taskName pt-relative" data-string="';
$out+=$escape(t.taskName);
$out+='">';
$out+=$escape(t.taskName);
$out+='</span> ';
if(t.issuePlanList!=null && t.issuePlanList.length>0){
$out+=' <a class="tree-td-a" href="javascript:void(0);" data-action="viewPlanTime" id="viewPlanTime';
$out+=$escape(t.taskId);
$out+='"><i class="fa fa-star-half-empty"></i></a> ';
}
$out+=' </td> <td class="v-middle b-r-none b-l-none"> <sapn class="show-span" data-id="';
$out+=$escape(t.id);
$out+='" data-p-id="';
$out+=$escape(t.taskPid);
$out+='" data-depart-id="';
$out+=$escape(t.departId);
$out+='"> ';
if(t.departName!=null && t.departName!=''){
$out+=' ';
$out+=$escape(t.departName);
$out+=' <i class="iconfont rounded icon-2fengongsi m-r-xs" data-toggle="tooltip" data-original-title="';
$out+=$escape(t.companyName);
$out+='"></i> ';
}else{
$out+=' ';
$out+=$escape(t.companyName);
$out+=' ';
}
$out+=' </sapn> </td> <td class="v-middle b-r-none b-l-none"> <span class="show-span"> ';
if(t.planStartTime==null || t.planStartTime==''){
$out+=' <span class="fc-ccc">--</span> ';
}else{
$out+=' ';
$out+=$escape(t.planStartTime);
$out+=' ';
}
$out+=' </span> </td> <td class="v-middle b-r-none b-l-none"> <span class="show-span"> ';
if(t.planEndTime==null || t.planEndTime==''){
$out+=' <span class="fc-ccc">--</span> ';
}else{
$out+=' ';
$out+=$escape(t.planEndTime);
$out+=' ';
}
$out+=' </span> </td> <td class="v-middle b-l-none">  ';
if(t.taskState === 7){
$out+=' <span class="text-danger">';
$out+=$escape(t.stateHtml);
$out+='</span> ';
}else if(t.stateHtml ===3){
$out+=' <span class="text-success">';
$out+=$escape(t.stateHtml);
$out+='</span> ';
}else if(t.stateHtml ===2){
$out+=' <span class="text-danger">';
$out+=$escape(t.stateHtml);
$out+='</span> ';
}else{
$out+=' <span>';
$out+=$escape(t.stateHtml);
$out+='</span> ';
}
$out+=' </td> </tr> ';
});
$out+=' ';
if(!(taskIssueList && taskIssueList.length>0)){
$out+=' <tr> <td colspan="5" class="text-center v-middle"> <div class="m-b-xl m-t-md"> <img src="';
$out+=$escape(_url('/assets/img/default/without_data.png'));
$out+='"> <span class="fc-dark-blue dp-block">没有相关签发任务</span> </div> </td> </tr> ';
}
$out+=' </tbody> </table> </form>';
return new String($out);
});/*v:1*/
template('m_taskIssue/m_taskIssue_overview_list_relatedTime',function($data,$filename
/**/) {
'use strict';var $utils=this,$helpers=$utils.$helpers,$each=$utils.$each,issuePlanList=$data.issuePlanList,p=$data.p,i=$data.i,$escape=$utils.$escape,$out='';$out+='<div class="ibox"> <div class="ibox-content"> <div class="row"> ';
$each(issuePlanList,function(p,i){
$out+=' <div class="col-md-12"> <span>';
$out+=$escape(p.fromCompanyName);
$out+='</span> <span> > </span> <span>';
$out+=$escape(p.companyName);
$out+='</span> <span>';
$out+=$escape(p.planStartTime);
$out+='</span> <span>-</span> <span>';
$out+=$escape(p.planEndTime);
$out+='</span> <span> ';
if(p.taskState==1){
$out+=' 进行中 ';
}else if(p.taskState==2){
$out+=' 超时进行 ';
}else if(p.taskState==3){
$out+=' 正常完成 ';
}else if(p.taskState==4){
$out+=' 超时完成 ';
}else if(p.taskState==5){
$out+=' 未开始 ';
}
$out+=' </span> </div> ';
});
$out+=' </div> </div> </div>';
return new String($out);
});/*v:1*/
template('m_taskIssue/m_taskIssue_selection',function($data,$filename
/**/) {
'use strict';var $utils=this,$helpers=$utils.$helpers,$escape=$utils.$escape,companyUserName=$data.companyUserName,isFirstSetDesign=$data.isFirstSetDesign,allTaskList=$data.allTaskList,$each=$utils.$each,p=$data.p,i=$data.i,t=$data.t,ti=$data.ti,$out='';$out+='<form class="form-horizontal rounded-bottom taskProgressOBox noborder"> <div class="ibox"> <div class="ibox-content"> <ul class="todo-list small-list bg-white"> <li class="design_item"> <label>新的设计负责人：';
$out+=$escape(companyUserName);
$out+='</label> ';
if(!isFirstSetDesign){
$out+=' <p>因你在项目中有以下设计任务，请选择是否进行移交，你可以选择：</p> <p>1.移交，勾选移交任务并点击保存按钮；2.不移交，直接点击保存按钮。</p> ';
}
$out+=' </li> ';
if(allTaskList!=null && allTaskList.length>0){
$out+=' <li class="design_item"> <label class="i-checks dp-inline-block"> <input name="allChoseCk" class="checkbox" type="checkbox" value="" /> 全选 </label> </li> ';
}
$out+=' ';
$each(allTaskList,function(p,i){
$out+=' ';
$each(p.taskList,function(t,ti){
$out+=' <li class="design_item" data-i="';
$out+=$escape(ti);
$out+='"> <label class="i-checks dp-inline-block"> <input name="taskCk" class="checkbox" type="checkbox" value="';
$out+=$escape(t.id);
$out+='" /> ';
$out+=$escape(t.taskName);
$out+=' </label> </li> ';
});
$out+=' ';
});
$out+=' </ul> </div> </div> </form> ';
return new String($out);
});/*v:1*/
template('m_teamInfo/m_editServerType',function($data,$filename
/**/) {
'use strict';var $utils=this,$helpers=$utils.$helpers,$each=$utils.$each,serverTypeList=$data.serverTypeList,d=$data.d,$index=$data.$index,serverTypeIndex=$data.serverTypeIndex,$escape=$utils.$escape,$out='';$out+='<style> .form-group.serverTypeBox label.checkbox input{position: absolute;} .form-group.serverTypeBox input[type="text"].form-control{width: 100%;} .form-group.serverTypeBox form{margin: 0;} .form-group.serverTypeBox{margin: 0;} </style> <div class="form-group serverTypeBox p-n" style="width: 340px;"> <form class="sky-form rounded-bottom" > <fieldset class="no-padding"> <div class="row"> ';
$each(serverTypeList,function(d,$index){
$out+=' <div class="col-md-4"> <label class="i-checks fw-normal"> ';
if(serverTypeIndex!=null &&  serverTypeIndex.indexOf(d.id)>-1){
$out+=' <input name="serverType" type="checkbox" checked value="';
$out+=$escape(d.name);
$out+='" data-id="';
$out+=$escape(d.id);
$out+='"/> ';
}else{
$out+=' <input name="serverType" type="checkbox" value="';
$out+=$escape(d.name);
$out+='" data-id="';
$out+=$escape(d.id);
$out+='"/> ';
}
$out+=' ';
$out+=$escape(d.name);
$out+=' </label> </div> ';
});
$out+=' </div> </fieldset> </form> </div>';
return new String($out);
});/*v:1*/
template('m_teamInfo/m_teamDissolution',function($data,$filename
/**/) {
'use strict';var $utils=this,$helpers=$utils.$helpers,$escape=$utils.$escape,teamInfo=$data.teamInfo,$out='';$out+='<form class="sky-form rounded-bottom teamDissolutionOBox p-lg" style="border-bottom: none;"> <input type="password" class="dp-none"> <div class="space-md-hor content-xs"> <div class="col-md-12 margin-bottom-20"> <h5 >请校验以下信息，如确认无误请输入当前账户密码解散组织。</h5> <h3 class="text-center margin-top-20">';
$out+=$escape(teamInfo.companyName);
$out+='</h3> </div> <div class="form-group col-md-6"> <label>管理员姓名： <b>';
$out+=$escape(teamInfo.userName);
$out+='</b></label> </div> <div class="form-group col-md-6"> <label>手机号码： <b>';
$out+=$escape(teamInfo.cellphone);
$out+='</b></label> </div> <div class="form-group col-md-12"> <label>当前用户密码：</label> <input type="password" class="form-control password" name="password"> </div> <div class="clearfix"></div> </div> </form>';
return new String($out);
});/*v:1*/
template('m_teamInfo/m_teamInfoEdit',function($data,$filename
/**/) {
'use strict';var $utils=this,$helpers=$utils.$helpers,$escape=$utils.$escape,teamInfo=$data.teamInfo,$each=$utils.$each,serverTypeList=$data.serverTypeList,server=$data.server,a=$data.a,$out='';$out+='<form class="form-horizontal" style=""> <div class="form-group"> <label class="col-sm-2 control-label">组织名称<span class="color-red">*</span></label> <div class="col-sm-10"> <input class="form-control" id="companyName" name="companyName" value="';
$out+=$escape(teamInfo.companyName);
$out+='" type="text" placeholder="组织名称用于外部显示"> </div> </div> <div class="form-group"> <label class="col-sm-2 control-label">所在地区<span class="color-red">*</span></label> <div class="col-sm-10 choseProvinceCity" id="city_1"> <label class="select dp-inline-block no-padding" style="width: 32.5%;"> <select class="prov form-control" name="province"></select> <i></i> </label> <label class="select dp-inline-block no-padding" style="width: 32.5%;"> <select class="city form-control" name="city" disabled="disabled" style="display: none;"></select> <i style="display: none;"></i> </label> <label class="select dp-inline-block no-padding" style="width: 32.5%;"> <select class="dist form-control" name="county" disabled="disabled" style="display: none;"></select> <i style="display: none;"></i> </label> </div> </div> <div class="form-group"> <label class="col-sm-2 control-label">详细地址</label> <label class="col-sm-10"> <input class="form-control" id="companyAddress" name="companyAddress" value="';
$out+=$escape(teamInfo.companyAddress);
$out+='" maxlength="255"> </label> </div> <div class="form-group serviceTypeEdit"> <label class="col-sm-2 control-label">服务类型<span class="color-red">*</span></label> <div class="col-sm-10"> ';
$each(serverTypeList,function(server,a){
$out+=' <div class="col-md-4 serviceType" > <div class="checkbox checkbox-inline" > <input type="checkbox" id="serverType';
$out+=$escape(a);
$out+='" name="serverType" value="';
$out+=$escape(server.id);
$out+='"> <label for="serverType';
$out+=$escape(a);
$out+='"> ';
$out+=$escape(server.name);
$out+='</label> </div> </div> ';
});
$out+=' </div> <span name="severType"></span> </div> <div class="form-group"> <label class="col-sm-2 control-label">联系电话</label> <div class="col-sm-10 input-group"> <input class="form-control" id="companyPhone" name="companyPhone" value="';
$out+=$escape(teamInfo.companyPhone);
$out+='" maxlength="30"> <span class="input-group-addon"><i class="icon-append fa fa-phone"></i></span> </div> </div> <div class="form-group"> <label class="col-sm-2 control-label">传真号码</label> <div class="col-sm-10 input-group"> <input class="form-control" id="companyFax" name="companyFax" value="';
$out+=$escape(teamInfo.companyFax);
$out+='" maxlength="20" type="text"> <span class="input-group-addon"><i class="icon-append fa fa-phone"></i></span> </div> </div> <div class="form-group"> <label class="col-sm-2 control-label">电子邮箱</label> <div class="col-sm-10 input-group"> <input class="form-control" type="text" id="companyEmail" name="companyEmail" value="';
$out+=$escape(teamInfo.companyEmail);
$out+='" value="abc" maxlength="50"> <span class="input-group-addon"><i class="icon-append fa fa-envelope"></i></span> </div> </div> <div class="form-group" > <label class="col-sm-2 control-label">组织简介</label> <div class="col-sm-10"> <textarea class="form-control" rows="5" id="companyComment" name="companyComment" maxlength="255">';
$out+=$escape(teamInfo.companyComment);
$out+='</textarea> </div> </div> <footer>  <button type="button" class="pull-right btn-u btn-u-dark-blue rounded" data-action="saveTeamInfo">保存</button> </footer> </form>';
return new String($out);
});/*v:1*/
template('m_teamInfo/m_teamInfoShow',function($data,$filename
/**/) {
'use strict';var $utils=this,$helpers=$utils.$helpers,$escape=$utils.$escape,teamInfo=$data.teamInfo,$each=$utils.$each,server=$data.server,a=$data.a,$out='';$out+='<form class="form-horizontal m_teamInfoShow"> <div class="form-group"> <label class="col-24-md-5 col-24-lg-3 control-label">组织名称：</label> <div class="col-24-md-19 col-24-lg-21 form-control-static"> <a href="javascript:void(0)" data-action="text_companyName">';
$out+=$escape(teamInfo.companyName);
$out+='</a> </div> </div> <div class="form-group"> <label class="col-24-md-5 col-24-lg-3 control-label">公司地址：</label> <div class="col-24-md-19 col-24-lg-21 form-control-static" id="city_1"> <a href="javascript:void(0);" data-action="edit_address" id="address" class="editable editable-click"> ';
if(teamInfo.province && teamInfo.province!=''){
$out+=' ';
$out+=$escape(teamInfo.province);
$out+='&nbsp; ';
}
$out+=' ';
if(teamInfo.city && teamInfo.city!=''){
$out+=' ';
$out+=$escape(teamInfo.city);
$out+='&nbsp; ';
}
$out+=' ';
if(teamInfo.county && teamInfo.county!=''){
$out+=' ';
$out+=$escape(teamInfo.county);
$out+='&nbsp; ';
}
$out+=' ';
$out+=$escape(teamInfo.companyAddress);
$out+=' </a> </div> </div>   <!--<div class="col-24-md-19 col-24-lg-21 form-control-static">';
$out+=$escape(teamInfo.companyAddress);
$out+='</div>-->  <div class="form-group"> <label class="col-24-md-5 col-24-lg-3 control-label">服务类型：</label> <div class="col-24-md-19 col-24-lg-21 form-control-static"> <a href="javascript:void(0)" data-action="checklist_serverTypeList" class="editable editable-click"> ';
$each(teamInfo.serverTypeList,function(server,a){
$out+=' <span class="serverType m-r">';
$out+=$escape(server.name);
$out+='</span> ';
});
$out+=' </a> </div> </div> <div class="form-group"> <label class="col-24-md-5 col-24-lg-3 control-label">联系电话：</label> <div class="col-24-md-19 col-24-lg-21 form-control-static"> <a href="javascript:void(0)" data-action="text_companyPhone">';
$out+=$escape(teamInfo.companyPhone);
$out+='</a> </div> </div> <div class="form-group"> <label class="col-24-md-5 col-24-lg-3 control-label">传真号码：</label> <div class="col-24-md-19 col-24-lg-21 form-control-static"> <a href="javascript:void(0)" data-action="text_companyFax">';
$out+=$escape(teamInfo.companyFax);
$out+='</a> </div> </div> <div class="form-group"> <label class="col-24-md-5 col-24-lg-3 control-label">电子邮箱：</label> <div class="col-24-md-19 col-24-lg-21 form-control-static"> <a href="javascript:void(0)" data-action="text_companyEmail">';
$out+=$escape(teamInfo.companyEmail);
$out+='</a> </div> </div> <div class="form-group companyComment" > <label class="col-24-md-5 col-24-lg-3 control-label">组织简介：</label> <div class="col-24-md-19 col-24-lg-21 form-control-static" style="min-height: 44px;height: auto;"> <a href="javascript:void(0)" data-action="textarea_companyComment" data-mode="popup">';
$out+=$escape(teamInfo.companyComment);
$out+='</a> </div> <div class="clearfix"></div> </div> </form>';
return new String($out);
});/*v:1*/
template('m_teamInfo/m_teamPicUpload',function($data,$filename
/**/) {
'use strict';var $utils=this,$helpers=$utils.$helpers,$escape=$utils.$escape,filePath=$data.filePath,isEdit=$data.isEdit,$out='';$out+='<div class="row cube-portfolio pull-right"> <div class="col-md-12 cbp-l-grid-agency cbp-caption-active cbp-caption-zoom cbp-ready"> <div class="thumbnails thumbnail-style cbp-item-wrapper text-align-center" style="box-sizing:border-box;padding:9px;width: 240px;height: 240px; border: solid 1px #eee;"> <div class="cbp-caption text-align-center" style="min-height: 220px;"> <img src="';
$out+=$escape(filePath);
$out+='" class="img-logo" alt="组织logo" style="max-height: 240px;width: 220px;"> ';
if(isEdit){
$out+=' <div class="cbp-caption-activeWrap"> <div class="cbp-l-caption-alignCenter"> <div class="cbp-l-caption-body"> <ul class="link-captions no-bottom-space"> <li> <a href="javascript:void(0)" id="btnUploadImg" title="点击设置LOGO"></a> </li> </ul> </div> </div> </div> ';
}
$out+=' </div> </div> </div> </div> ';
if(isEdit){
$out+=' <div class="clearfix"></div> <div class="row caption pull-right" style="width: 240px;margin-top: 10px;"> <h3>组织LOGO</h3> <p>LOGO用于组织展示，最佳展示像素为200*200，建议上传png、jpg、bmp、jpeg格式的图像文件.</p> </div> ';
}
return new String($out);
});/*v:1*/
template('m_update_tips/m_update_tips',function($data,$filename
/**/) {
'use strict';var $utils=this,$helpers=$utils.$helpers,$escape=$utils.$escape,_url=$helpers._url,$out='';$out+='<div class="m-update-tips"> <div class="m-update-title"> <p>卯丁更新提示</p> </div> <div class="m-update-left"> <p class="f-s-16 l-h-16"> <span class="dp-inline-block" style="width: 28px;"><i class="fc-dark-blue fa fa-info-circle"></i></span> 卯丁权限设置</p> <p class="f-s-14 l-h-28 m-t-xl" style="text-indent: 28px;">由于卯丁版本升级，权限系统有部分调整，为了保证系统功能的正常使用，你需要进行相关设置。</p> <p class="f-s-14 l-h-16 m-t-xl" style="text-indent: 28px;">请根据以下提示进行相关操作：</p> <ul class="m-t-md" style="padding: 15px 20px;"> <li> <p class="f-s-14 l-h-14">企业负责人</p> <p class="f-s-13 l-h-14 fc-aaa">拥有组织中所有查看权限</p> </li> <li> <p style="font-size: 14px;line-height: 14px;">项目收支</p> <p class="f-s-13 l-h-14 fc-aaa">项目中，所有的财务回款操作</p> </li> <li> <p sclass="f-s-14 l-h-14">项目管理</p> <p class="f-s-13 l-h-14 fc-aaa">编辑项目基本信息</p> </li> </ul> </div> <div class="m-update-right"> <img src="';
$out+=$escape(_url('/assets/img/update/update1.png'));
$out+='" style="width: 510px;" /> </div> <div class="clear-both"></div> <div class="full-width" style="padding: 15px 20px;"> <a class="btn btn-primary pull-right" data-action="resetPermission">配置权限</a> </div> </div>';
return new String($out);
});/*v:1*/
template('m_update_tips/m_update_tips1',function($data,$filename
/**/) {
'use strict';var $utils=this,$helpers=$utils.$helpers,$escape=$utils.$escape,_url=$helpers._url,$out='';$out+='<div class="m-update-tips" style="padding: 20px 0 0 20px;"> <div class="m-update-title"> <p>欢迎使用卯丁</p> <p style="font-weight: normal;font-size: 16px;">我们带你快速熟悉卯丁</p> </div> <div class="m-update-left" style="width: 430px;padding: 0 0 0 20px;"> <img src="';
$out+=$escape(_url('/assets/img/update/createOrgTips.png'));
$out+='" style="width: 400px;" /> </div> <div class="m-update-right" style="padding: 0;width: 520px;"> <img src="';
$out+=$escape(_url('/assets/img/update/createOrg.png'));
$out+='" style="width: 520px;" /> </div> <div class="clear-both"></div> <div class="full-width" style="padding: 40px 28px;"> <a class="btn btn-default pull-left" data-action="jumpOutWizard">跳出向导</a> <a class="btn btn-primary pull-right" data-action="nextPage">下一步</a> </div> </div>';
return new String($out);
});/*v:1*/
template('m_update_tips/m_update_tips2',function($data,$filename
/**/) {
'use strict';var $utils=this,$helpers=$utils.$helpers,$escape=$utils.$escape,_url=$helpers._url,$out='';$out+='<div class="m-update-tips" style="padding: 20px 0 0 20px;"> <div class="m-update-title"> <p>欢迎使用卯丁</p> <p style="font-weight: normal;font-size: 16px;">我们带你快速熟悉卯丁</p> </div> <div class="m-update-left" style="width: 430px;padding: 0 0 0 20px;"> <img src="';
$out+=$escape(_url('/assets/img/update/importMemberTips.png'));
$out+='" style="width: 400px;" /> </div> <div class="m-update-right" style="padding: 0;width: 520px;"> <img src="';
$out+=$escape(_url('/assets/img/update/importMember.png'));
$out+='" style="width: 520px;" /> </div> <div class="clear-both"></div> <div class="full-width" style="padding: 20px 28px;"> <a class="btn btn-default pull-left" data-action="jumpOutWizard">跳出向导</a> <a class="btn btn-primary pull-right" data-action="nextPage">下一步</a> <a class="btn btn-default pull-right m-r-sm" data-action="prevPage">上一步</a> </div> </div>';
return new String($out);
});/*v:1*/
template('m_update_tips/m_update_tips3',function($data,$filename
/**/) {
'use strict';var $utils=this,$helpers=$utils.$helpers,$escape=$utils.$escape,_url=$helpers._url,$out='';$out+='<div class="m-update-tips" style="padding: 20px 0 0 20px;"> <div class="m-update-title"> <p>欢迎使用卯丁</p> <p style="font-weight: normal;font-size: 16px;">我们带你快速熟悉卯丁</p> </div> <div class="m-update-left" style="width: 430px;padding: 0 0 0 20px;"> <img src="';
$out+=$escape(_url('/assets/img/update/roleTips.png'));
$out+='" style="width: 400px;" /> </div> <div class="m-update-right" style="padding: 0;width: 520px;"> <img src="';
$out+=$escape(_url('/assets/img/update/role.png'));
$out+='" style="width: 520px;" /> </div> <div class="clear-both"></div> <div class="full-width" style="padding: 20px 28px;"> <a class="btn btn-default pull-left" data-action="jumpOutWizard">跳出向导</a> <a class="btn btn-primary pull-right" data-action="nextPage">下一步</a> <a class="btn btn-default pull-right m-r-sm" data-action="prevPage">上一步</a> </div> </div>';
return new String($out);
});/*v:1*/
template('m_update_tips/m_update_tips4',function($data,$filename
/**/) {
'use strict';var $utils=this,$helpers=$utils.$helpers,$escape=$utils.$escape,_url=$helpers._url,$out='';$out+='<div class="m-update-tips" style="padding: 20px 0 0 20px;"> <div class="m-update-title"> <p>欢迎使用卯丁</p> <p style="font-weight: normal;font-size: 16px;">我们带你快速熟悉卯丁</p> </div> <div class="m-update-left" style="width: 430px;padding: 0 0 0 20px;"> <img src="';
$out+=$escape(_url('/assets/img/update/addProjectTips.png'));
$out+='" style="width: 400px;" /> </div> <div class="m-update-right" style="padding: 0;width: 520px;"> <img src="';
$out+=$escape(_url('/assets/img/update/addProject.png'));
$out+='" style="width: 520px;" /> </div> <div class="clear-both"></div> <div class="full-width" style="padding: 40px 28px;"> <a class="btn btn-default pull-left" data-action="jumpOutWizard">跳出向导</a> <a class="btn btn-primary pull-right" data-action="complete">完成</a> <a class="btn btn-default pull-right m-r-sm" data-action="prevPage">上一步</a> </div> </div>';
return new String($out);
});/*v:1*/
template('m_update_tips/m_update_tips5',function($data,$filename
/**/) {
'use strict';var $utils=this,$helpers=$utils.$helpers,$escape=$utils.$escape,_url=$helpers._url,$out='';$out+='<div class="m-update-tips" style="padding: 20px 0 0 20px;"> <div class="m-update-title"> <p>欢迎使用卯丁</p> <p style="font-weight: normal;font-size: 16px;">我们带你快速熟悉卯丁</p> </div> <div class="m-update-left" style="width: 430px;padding: 15px 0 0 20px;"> <img src="';
$out+=$escape(_url('/assets/img/update/newRoleTips.png'));
$out+='" style="width: 365px;" /> </div> <div class="m-update-right" style="padding: 0;width: 520px;"> <img src="';
$out+=$escape(_url('/assets/img/update/newRole.png'));
$out+='" style="width: 520px;" /> </div> <div class="clear-both"></div> <div class="full-width" style="padding: 40px 28px;"> <a class="btn btn-primary pull-right" data-action="complete">完成</a> </div> </div>';
return new String($out);
});/*v:1*/
template('m_website/m_website_footer',function($data,$filename
/**/) {
'use strict';var $utils=this,$helpers=$utils.$helpers,$escape=$utils.$escape,_url=$helpers._url,$out='';$out+=' <div class="g-brd-y g-brd-gray-light-v4"> <div class="container g-pt-100 g-pb-70"> <div class="row justify-content-start"> <div class="col-md-3"> <h2 class="h4 mb-4">产品</h2> <div class="row"> <div class="col-6 g-mb-20">  <ul class="list-unstyled g-font-size-13 mb-0"> <li class="g-my-10"> <a class="u-link-v5 g-color-gray-dark-v4">专业版(敬请期待)</a></li> <li class="g-my-10"> <a class="u-link-v5 g-color-gray-dark-v4 g-color-primary--hover" href="';
$out+=$escape(_url('/home/products'));
$out+='">企业版</a></li> <li class="g-my-10"> <a class="u-link-v5 g-color-gray-dark-v4 g-color-primary--hover" href="';
$out+=$escape(_url('/home/pricing'));
$out+='">产品价格</a></li> </ul>  </div> </div> </div> <div class="col-sm-3 col-md-3"> <h2 class="h4 mb-4">服务</h2> <div class="row"> <div class="col-6 g-mb-20">  <ul class="list-unstyled g-font-size-13 mb-0"> <li class="g-mb-10"> <a class="u-link-v5 g-color-gray-dark-v4 g-color-primary--hover" href="';
$out+=$escape(_url('/home/faq'));
$out+='">帮助中心</a></li> <li class="g-mb-10"> <a class="u-link-v5 g-color-gray-dark-v4 g-color-primary--hover" href="';
$out+=$escape(_url('/home/deployment_guide'));
$out+='">部署指南</a> </li> </ul>  </div> </div> </div> <div class="col-sm-3 col-md-3"> <h2 class="h4 mb-4">保障</h2> <div class="row"> <div class="col-6 g-mb-20">  <ul class="list-unstyled g-font-size-13 mb-0"> <li class="g-mb-10"> <a class="u-link-v5 g-color-gray-dark-v4 g-color-primary--hover" href="';
$out+=$escape(_url('/home/terms'));
$out+='">服务协议</a> </li> <li class="g-my-10"> <a class="u-link-v5 g-color-gray-dark-v4 g-color-primary--hover" href="';
$out+=$escape(_url('/home/security'));
$out+='">安全保障</a></li>       </ul>  </div> </div> </div> <div class="col-sm-3 col-md-3 ml-auto"> <h2 class="h4 mb-4">联系我们</h2>  <ul class="list-unstyled g-color-gray-dark-v4 g-font-size-13"> <li class="media my-3"> <i class="d-flex mt-1 mr-3 icon-hotel-restaurant-235 u-line-icon-pro"></i> <div class="media-body"> 中国 广东 深圳<br>前海深港合作区前湾一路1号A栋201室 </div> </li> <li class="media my-3"> <i class="d-flex mt-1 mr-3 icon-communication-062 u-line-icon-pro"></i> <div class="media-body"> services@imaoding.com </div> </li> <li class="media my-3"> <i class="d-flex mt-1 mr-3 icon-communication-033 u-line-icon-pro"></i> <div class="media-body"> 400-900-6299 </div> </li> </ul>  </div> </div> </div> </div>   <div class="container g-pt-50 g-pb-30"> <div class="row justify-content-between align-items-center"> <div class="col-md-6 g-mb-20"> <p class="g-font-size-13 mb-0">2017 © www.imaoding.com. All Rights Reserved.</p> </div> <div class="col-md-6 text-md-right g-mb-20"> <p><a href="http://www.miitbeian.gov.cn" target="_blank">ICP备案号：粤ICP备16006511号-1</a></p> </div> </div> </div> ';
return new String($out);
});/*v:1*/
template('m_website/m_website_header',function($data,$filename
/**/) {
'use strict';var $utils=this,$helpers=$utils.$helpers,$escape=$utils.$escape,_url=$helpers._url,$out='';$out+='<style> .f-s-16{font-size: 16px;} </style> <div class="u-header__section u-header__section--light g-bg-white g-transition-0_3 g-py-10"> <nav class="js-mega-menu navbar navbar-toggleable-md"> <div class="container">  <button class="navbar-toggler navbar-toggler-right btn g-line-height-1 g-brd-none g-pa-0 g-pos-abs g-right-0" type="button" aria-label="Toggle navigation" aria-expanded="false" aria-controls="navBar" data-toggle="collapse" data-target="#navBar"> <span class="hamburger hamburger--slider"> <span class="hamburger-box"> <span class="hamburger-inner"></span> </span> </span> </button>   <a href="';
$out+=$escape(_url(''));
$out+='" class="navbar-brand"> <img src="';
$out+=$escape(_url('/assets/img/logo.png'));
$out+='" class="g-width-100" alt="卯丁"> </a>   <div class="collapse navbar-collapse align-items-center flex-sm-row g-pt-10 g-pt-5--lg g-mr-40--lg" id="navBar"> <ul class="navbar-nav text-uppercase g-font-weight-600 ml-auto">  <li class="hs-has-mega-menu nav-item g-mx-10--lg g-mx-20--lg" data-animation-in="fadeIn" data-animation-out="fadeOut" data-position="right"> <a id="mega-menu-label-3" class="nav-link g-px-0 f-s-16" href="javascript:void(0);" aria-haspopup="true" aria-expanded="false">登录</a>  <div class="g-width-400 hs-mega-menu u-shadow-v11 g-text-transform-none font-weight-normal g-brd-top g-brd-primary g-brd-top-2 g-mt-17 g-mt-7--lg--scrolling" aria-labelledby="mega-menu-label-3"> <div class="row justify-content-center"> <div class="col-sm-12 col-lg-12"> <div class="g-brd-around g-brd-gray-light-v4 rounded g-py-40 g-px-30" id="loginBox"> </div> </div> </div> </div>  </li> <li class="nav-item g-mx-10--lg g-mx-20--lg f-s-16"> <a class="nav-link" href="';
$out+=$escape(_url('/iWork/sys/register'));
$out+='">注册</a> </li> </ul>  </div>  </div> </nav> </div>';
return new String($out);
});/*v:1*/
template('m_website/m_website_login',function($data,$filename
/**/) {
'use strict';var $utils=this,$helpers=$utils.$helpers,$escape=$utils.$escape,_url=$helpers._url,$out='';$out+=' <form id="loginForm" class="g-py-15"> <div class="mb-4"> <label class="g-color-gray-dark-v2 g-font-weight-600 g-font-size-13">卯丁账号:</label> <input id="account" name="account" class="form-control g-color-black g-bg-white g-bg-white--focus g-brd-gray-light-v4 g-brd-primary--hover rounded g-py-15 g-px-15" type="account" placeholder="请输入您注册卯丁使用的手机号码"> </div> <div class="g-mb-35"> <div class="row justify-content-between"> <div class="col align-self-center"> <label class="g-color-gray-dark-v2 g-font-weight-600 g-font-size-13">密码:</label> </div> <div class="col align-self-center text-right"> <a tabindex="-1" class="d-inline-block g-font-size-12 mb-2" href="';
$out+=$escape(_url('/iWork/sys/forgetLoginPwd'));
$out+='">忘记密码?</a> </div> </div> <input id="password" name="password" class="form-control g-color-black g-bg-white g-bg-white--focus g-brd-gray-light-v4 g-brd-primary--hover rounded g-py-15 g-px-15 mb-3" type="password" placeholder="请输入您的卯丁账号密码"> <div class="row justify-content-between"> <div class="col-8 align-self-center"> <label class="form-check-inline u-check g-color-gray-dark-v5 g-font-size-13 g-pl-25 mb-0"> <input class="hidden-xs-up g-pos-abs g-top-0 g-left-0" type="checkbox"> <div class="u-check-icon-checkbox-v6 g-absolute-centered--y g-left-0"> <i class="fa" data-check-icon="&#xf00c"></i> </div> 下次自动登录 </label> </div> <div class="col-4 align-self-center text-right"> <a href="javascript:void(0);" id="btnLogin" class="btn btn-md u-btn-primary rounded g-py-13 g-px-25">登录</a> </div> </div> </div> </form>  <footer class="text-center"> <p class="g-color-gray-dark-v5 g-font-size-13 mb-0">还没有卯丁账号? <a class="g-font-weight-600" href="';
$out+=$escape(_url('/iWork/sys/register'));
$out+='">注册</a></p> </footer>';
return new String($out);
});/*v:1*/
template('m_website/m_website_products',function($data,$filename
/**/) {
'use strict';var $utils=this,$helpers=$utils.$helpers,$escape=$utils.$escape,_url=$helpers._url,$out='';$out+='<div class="g-mb-60"> <h2 class="g-color-black g-font-weight-600 text-center g-mb-30">组织管理</h2> <p><span class="d-inline-block float-left g-width-60 g-height-60 g-color-black g-font-weight-600 g-font-size-30 text-center g-pa-7 mr-2">卯</span>丁支持快速创建多元化的 企业组织构架，支持跨组织项目合作设计。</p> </div> <div class="row"> <div class="col-md-12 g-mb-30"> <h3 class="h4 g-color-black g-font-weight-600"><span class="g-font-size-25">01.</span> 组织信息 </h3> <p>卯丁中的组织信息包括组织logo ，组织名称，服务类型、联系电话、传真号码、电子邮箱以及组织简介等.</p> </div> <div class="col-md-12 g-mb-60"> <img class="img-fluid" src="';
$out+=$escape(_url('/assets/img/website/img-temp/770x502/1-1.png'));
$out+='" alt="Image Description"> </div> </div> <div class="row"> <div class="col-md-12 flex-md-unordered g-mb-30"> <h3 class="h4 g-color-black g-font-weight-600"><span class="g-font-size-25">02.</span> 组织架构 </h3> <p>卯丁支持各种组织形态，无论是单一组织，拥有分支机构的大中型组织，以及拥有事业合伙人的平台型组织，都可以在系统中快速建立.</p> </div> <div class="col-md-12 g-mb-60"> <img class="img-fluid" src="';
$out+=$escape(_url('/assets/img/website/img-temp/770x502/1-2.png'));
$out+='" alt="Image Description"> </div> </div> <div class="row"> <div class="col-md-12 g-mb-30"> <h2 class="h4 g-color-black g-font-weight-600"><span class="g-font-size-25">03.</span> 权限设置</h2> <p>卯丁的权限体系，除了满足组织内部相关事务的权限设置需求外，还针对诸如独立核算，事业合伙人等不同形态的组织关系设置了权限控制，让管理过程中的数据、操作等控制轻松自如.</p> </div> <div class="col-md-12 g-mb-60"> <img class="img-fluid" src="';
$out+=$escape(_url('/assets/img/website/img-temp/770x502/1-3.png'));
$out+='" alt="Image Description"> </div> </div>';
return new String($out);
});/*v:1*/
template('m_website/m_website_products2',function($data,$filename
/**/) {
'use strict';var $utils=this,$helpers=$utils.$helpers,$escape=$utils.$escape,_url=$helpers._url,$out='';$out+='<div class="g-mb-60"> <h2 class="g-color-black g-font-weight-600 text-center g-mb-30">项目管理</h2> <p><span class="d-inline-block float-left g-width-60 g-height-60 g-color-black g-font-weight-600 g-font-size-30 text-center g-pa-7 mr-2">卯</span>丁为设计企业量身定做的项目管理 功能，全程任务驱动体系，实时采集设计数据，管理与生产无缝对接。</p> </div> <div class="row"> <div class="col-md-12 g-mb-30"> <h3 class="h4 g-color-black g-font-weight-600"><span class="g-font-size-25">01.</span> 项目立项 </h3> <p>卯丁中的项目立项分成了两个部分，一个是只需要录入项目立项必要信息的简单立项，一个是完成简单立项后，根据项目运行情况，对于项目详细信息补充完善的项目基本信息编辑。</p> <p>在项目基本信息中，您可以对项目的专业信息进行自定义，满足不同项目类型的需求。</p> </div> <div class="col-md-12 g-mb-60"> <img class="img-fluid" src="';
$out+=$escape(_url('/assets/img/website/img-temp/770x502/2-1.png'));
$out+='" alt="Image Description"> </div> </div> <div class="row"> <div class="col-md-12 g-mb-30"> <h3 class="h4 g-color-black g-font-weight-600"><span class="g-font-size-25">02.</span> 任务签发 </h3> <p>任务签发作为项目生产的起点，由经营人员设置项目对应合同的内容目标，并结合实际情况，决定完成生产的组织或部门.</p> <p>任务签发的内容，将作为生产安排的起点，交由设计部门进行实际生产安排，经营人员可以很方便的查看到对应的经营任务的相关状态。</p> </div> <div class="col-md-12 g-mb-60"> <img class="img-fluid" src="';
$out+=$escape(_url('/assets/img/website/img-temp/770x502/2-2.png'));
$out+='" alt="Image Description"> </div> </div> <div class="row"> <div class="col-md-12 g-mb-30"> <h2 class="h4 g-color-black g-font-weight-600"><span class="g-font-size-25">03.</span> 生产安排</h2> <p>通过生产安排，您可以制定具体的生产计划，包括人员安排，进度计划等.</p> <p>在生产安排中，所有参与人员都将收到所负责的任务，并根据实际情况逐级反馈任务进度。</p> </div> <div class="col-md-12 g-mb-60"> <img class="img-fluid" src="';
$out+=$escape(_url('/assets/img/website/img-temp/770x502/2-3.png'));
$out+='" alt="Image Description"> </div> </div> <div class="row"> <div class="col-md-12 g-mb-30"> <h3 class="h4 g-color-black g-font-weight-600"><span class="g-font-size-25">04.</span> 协同设计 </h3> <p>卯丁的协同平台将作为设计人员使用卯丁的主要入口，通过虚拟盘的方式，无缝集成于windows系统中，设计人员就像操作本地磁盘一样，将设计文件有序的存放于系统中，系统自动的根据生产安排情况建立文件夹结构，并赋予不同的操作权限。</p> <p>设计人员通过协同平台，将生产中的状态反馈到卯丁的管理体系当中，让管理人员可以轻松掌握设计状态。</p> </div> <div class="col-md-12 g-mb-60"> <img class="img-fluid" src="';
$out+=$escape(_url('/assets/img/website/img-temp/770x502/img1.png'));
$out+='" alt="Image Description"> </div> </div> ';
return new String($out);
});/*v:1*/
template('m_website/m_website_products3',function($data,$filename
/**/) {
'use strict';var $utils=this,$helpers=$utils.$helpers,$escape=$utils.$escape,_url=$helpers._url,$out='';$out+='<div class="g-mb-60"> <h2 class="g-color-black g-font-weight-600 text-center g-mb-30">财务管理</h2> <p><span class="d-inline-block float-left g-width-60 g-height-60 g-color-black g-font-weight-600 g-font-size-30 text-center g-pa-7 mr-2">卯</span>丁全程记录、自动采集企业各项收支，成本、费用、利润一目了然。</p> </div> <div class="row"> <div class="col-md-12 g-mb-30"> <h3 class="h4 g-color-black g-font-weight-600"><span class="g-font-size-25">01.</span> 收支明细 </h3> <p>卯丁中的财务收支总览，可以按照时间跨度方便的查看组织的收支明细，关联组织、关联项目等信息，让您可以轻松明确收支的具体内容，灵活的筛选功能，可以帮助您快速查找到所需的数据.</p> </div> <div class="col-md-12 g-mb-60"> <img class="img-fluid" src="';
$out+=$escape(_url('/assets/img/website/img-temp/770x502/3-1.png'));
$out+='" alt="Image Description"> </div> </div> <div class="row"> <div class="col-md-12 g-mb-30"> <h3 class="h4 g-color-black g-font-weight-600"><span class="g-font-size-25">02.</span> 分类统计 </h3> <p>在分类统计功能中，你可以按照时间跨度，查看到收入和支出的汇总情况，不同类别的占比情况以及时间变化曲线.</p> </div> <div class="col-md-12 g-mb-60"> <img class="img-fluid" src="';
$out+=$escape(_url('/assets/img/website/img-temp/770x502/3-2.png'));
$out+='" alt="Image Description"> </div> </div> <div class="row"> <div class="col-md-12 g-mb-30"> <h2 class="h4 g-color-black g-font-weight-600"><span class="g-font-size-25">03.</span> 利润报表</h2> <p>利润报表功能，按照财务需要，分主营业务收入、主营业务税金及附加、主营业务成本（直接项目成本、直接人工成本）、主营业务利润、管理费用、财务费用、利润总额、所得税费用、净利润，让您对企业的经营状况一目了然.</p> </div> <div class="col-md-12 g-mb-60"> <img class="img-fluid" src="';
$out+=$escape(_url('/assets/img/website/img-temp/770x502/3-3.png'));
$out+='" alt="Image Description"> </div> </div> <div class="row"> <div class="col-md-12 g-mb-30"> <h3 class="h4 g-color-black g-font-weight-600"><span class="g-font-size-25">04.</span> 费用录入 </h3> <p>在费用录入中，您可以根据实际情况，将企业的运营成本，如工资、房租、水电等分项录入.</p> </div> <div class="col-md-12 g-mb-60"> <img class="img-fluid" src="';
$out+=$escape(_url('/assets/img/website/img-temp/770x502/3-4.png'));
$out+='" alt="Image Description"> </div> </div>';
return new String($out);
});/*v:1*/
template('m_website/m_website_products4',function($data,$filename
/**/) {
'use strict';var $utils=this,$helpers=$utils.$helpers,$escape=$utils.$escape,_url=$helpers._url,$out='';$out+='<div class="g-mb-60"> <h2 class="g-color-black g-font-weight-600 text-center g-mb-30">移动办公</h2> <p><span class="d-inline-block float-left g-width-60 g-height-60 g-color-black g-font-weight-600 g-font-size-30 text-center g-pa-7 mr-2">卯</span>丁移动端拥有轻量级OA系统， 项目成员可通过项目讨论区方便的交流协作，轻量任务更加适合临时性，低复杂度的任务安排和响应。</p> </div> <div class="row"> <div class="col-md-12 g-mb-30"> <h3 class="h4 g-color-black g-font-weight-600"><span class="g-font-size-25">01.</span> 项目讨论区 </h3> <p>每个项目对应单独的项目讨论区，项目成员可进入对应的讨论区进行发布话题和互相评论。以话题 形式有效地记录项目相关重要信息。</p> </div> <div class="col-md-12 g-mb-60"> <img class="img-fluid" src="';
$out+=$escape(_url('/assets/img/website/img-temp/770x502/4-1.png'));
$out+='" alt="Image Description"> </div> </div> <div class="row"> <div class="col-md-12 g-mb-30"> <h3 class="h4 g-color-black g-font-weight-600"><span class="g-font-size-25">02.</span> 日程安排 </h3> <p>日历模式，记录日常安排，设置日程提醒， 快速创建会议，即时邀请参会人，参会人可确认是否参加会议，让每一位参会者及时了解会议情况并提醒参加。</p> </div> <div class="col-md-12 g-mb-60"> <img class="img-fluid" src="';
$out+=$escape(_url('/assets/img/website/img-temp/770x502/4-2.png'));
$out+='" alt="Image Description"> </div> </div> <div class="row"> <div class="col-md-12 g-mb-30"> <h2 class="h4 g-color-black g-font-weight-600"><span class="g-font-size-25">03.</span> 审批</h2> <p>审批功能目前包括费用报销和请假出差。</p> <p>费用报销：</p> <ul class="list-unstyled"> <li>1、支持自定义报销费用类别，统一规范组织内部报销费用类型</li> <li>2、快速上报报销明细，无纸化审批流程，领导随时随地审批，财务轻松便捷处理。</li> <li>3、全面打通报销流程一站式闭环管理，让公司费用报销有据可依，合理可控</li> </ul> <p>请假出差</p> <ul class="list-unstyled"> <li>1、摒弃传统纸质申请，随时随地都能申请审批</li> <li>2、无纸化多维度汇总，行政人员轻松查阅</li> </ul> </div> <div class="col-md-12 g-mb-60"> <img class="img-fluid" src="';
$out+=$escape(_url('/assets/img/website/img-temp/770x502/4-3.png'));
$out+='" alt="Image Description"> </div> </div> <div class="row"> <div class="col-md-12 g-mb-30"> <h3 class="h4 g-color-black g-font-weight-600"><span class="g-font-size-25">04.</span> 工时 </h3> <p>项目成员可根据参与项目情况，定时填写工时，最终计入项目人工成本。</p> <ul class="list-unstyled"> <li>1、项目成员填写工时</li> <li>2、实际工时数据有效支持项目成本控制</li> </ul> </div> <div class="col-md-12 g-mb-60"> <img class="img-fluid" src="';
$out+=$escape(_url('/assets/img/website/img-temp/770x502/4-4.png'));
$out+='" alt="Image Description"> </div> </div> <div class="row"> <div class="col-md-12 g-mb-30"> <h2 class="h4 g-color-black g-font-weight-600"><span class="g-font-size-25">05.</span> 轻量任务</h2> <p>轻量任务是对项目管理的有效补充，它主要针对于行政类、临时类任务，采取点对点的方式，帮助您通过移动端轻松下达任务，并了解任务状态.</p> </div> <div class="col-md-12 g-mb-60"> <img class="img-fluid" src="';
$out+=$escape(_url('/assets/img/website/img-temp/770x502/4-5.png'));
$out+='" alt="Image Description"> </div> </div>';
return new String($out);
});/*v:1*/
template('m_xeditable/m_xeditable_time',function($data,$filename
/**/) {
'use strict';var $utils=this,$helpers=$utils.$helpers,$escape=$utils.$escape,text=$data.text,$out='';$out+='<form> <div class="input-group"> <input type="text" class="form-control input-sm" name="time" placeholder="请选择时间" readonly onclick="WdatePicker()" value="';
$out+=$escape(text);
$out+='"> <span class="input-group-addon no-padding"> <i class="icon-sm icon-append fa fa-calendar" ></i> </span> </div> </form> ';
return new String($out);
});

}()
/**
 * 审批管理
 * Created by wrb on 2018/8/2.
 */
;(function ($, window, document, undefined) {

    "use strict";
    var pluginName = "m_approval_mgt",
        defaults = {
        };

    // The actual plugin constructor
    function Plugin(element, options) {
        this.element = element;

        this.settings = $.extend({}, defaults, options);
        this._defaults = defaults;
        this._name = pluginName;
        this._currentUserId = window.currentUserId;
        this._currentCompanyId = window.currentCompanyId;
        this.init();
    }

    // Avoid Plugin.prototype conflicts
    $.extend(Plugin.prototype, {
        init: function () {
            var that = this;
            var html = template('m_approval/m_approval_mgt',{});
            $(that.element).html(html);

            that.renderContent(function () {
                that.initICheck();
                that.bindActionClick();
            });


        }
        //渲染列表内容
        ,renderContent:function (callBack) {
            var that = this;
            var option = {};
            option.classId = '#content-right';
            option.url = restApi.url_listProcessDefine;
            option.postData = {};
            option.accountId = that._currentUserId;
            option.currentCompanyId = that._currentCompanyId;
            m_ajax.postJson(option, function (response) {
                if (response.code == '0') {

                    var html = template('m_approval/m_approval_mgt_content',{approvalList:response.data});
                    $(that.element).find('#approvalManagement').html(html);
                    if(callBack)
                        callBack();

                } else {
                    S_dialog.error(response.info);
                }
            })

        }
        //初始化iCheck
        ,initICheck:function () {
            var that = this;
            var ifChecked = function (e) {
            };
            var ifUnchecked = function (e) {
            };
            var ifClicked = function (e) {
                var param = {};
                if ($(this).is(':checked')) {
                    $(this).iCheck('uncheck');
                    param.status = 0;
                }else{
                    $(this).iCheck('check');
                    param.status = 1;
                }
                param.id = $(this).closest('tr').attr('data-id');
            };
            $(that.element).find('input[name^="iCheck"]').iCheck({
                checkboxClass: 'icheckbox_square-pink',
                radioClass: 'iradio_square-blue'
            }).on('ifUnchecked.s', ifUnchecked).on('ifChecked.s', ifChecked).on('ifClicked',ifClicked);
        }
        //事件绑定
        ,bindActionClick:function () {
            var that = this;
            $(that.element).find('a[data-action]').off('click').on('click',function () {
               var $this = $(this);
               var dataAction = $this.attr('data-action');
               switch (dataAction){
                   case 'setProcess':

                        var option = {};
                        option.$key = $this.attr('data-key');
                        option.$type = $this.attr('data-type');
                        $(that.element).m_approval_mgt_setProcess(option,true);

                       break;

               }

            });
        }
    });

    /*
     1.一般初始化（缓存单例）： $('#id').pluginName(initOptions);
     2.强制初始化（无视缓存）： $('#id').pluginName(initOptions,true);
     3.调用方法： $('#id').pluginName('methodName',args);
     */
    $.fn[pluginName] = function (options, args) {
        var instance;
        var funcResult;
        var jqObj = this.each(function () {

            //从缓存获取实例
            instance = $.data(this, "plugin_" + pluginName);

            if (options === undefined || options === null || typeof options === "object") {

                var opts = $.extend(true, {}, defaults, options);

                //options作为初始化参数，若args===true则强制重新初始化，否则根据缓存判断是否需要初始化
                if (args === true) {
                    instance = new Plugin(this, opts);
                } else {
                    if (instance === undefined || instance === null)
                        instance = new Plugin(this, opts);
                }

                //写入缓存
                $.data(this, "plugin_" + pluginName, instance);
            }
            else if (typeof options === "string" && typeof instance[options] === "function") {

                //options作为方法名，args则作为方法要调用的参数
                //如果方法没有返回值，funcReuslt为undefined
                funcResult = instance[options].call(instance, args);
            }
        });

        return funcResult === undefined ? jqObj : funcResult;
    };

})(jQuery, window, document);

/**
 * 审批管理-设置流程
 * Created by wrb on 2018/8/3.
 */
;(function ($, window, document, undefined) {

    "use strict";
    var pluginName = "m_approval_mgt_setProcess",
        defaults = {
            $type:null,
            $key:null
        };

    // The actual plugin constructor
    function Plugin(element, options) {
        this.element = element;

        this.settings = $.extend({}, defaults, options);
        this._defaults = defaults;
        this._name = pluginName;
        this._currentUserId = window.currentUserId;
        this._currentCompanyId = window.currentCompanyId;
        this._processDetail = null;//当前流程信息
        this._editFixedProcess = [];//固定流程保存数据
        this._editCondProcess = [];//条件流程保存数据
        this.init();
    }

    // Avoid Plugin.prototype conflicts
    $.extend(Plugin.prototype, {
        init: function () {
            var that = this;
            that.renderContent(function (data) {
                that.initICheck();
                that.bindActionClick();
                that.approvalRemoveIconHover();
                $(that.element).find('input[type="radio"][data-type="'+data.type+'"]').iCheck('check');
            });
        }
        //渲染列表内容
        ,renderContent:function (callBack) {
            var that = this;
            var option = {};
            option.classId = '#content-right';
            option.url = restApi.url_prepareProcessDefine;
            option.postData = {};
            option.postData.key = that.settings.$key;
            option.postData.currentCompanyId = that._currentCompanyId;
            m_ajax.postJson(option, function (response) {
                if (response.code == '0') {

                    that._processDetail = $.extend(true, {}, response.data);

                    //生成固定流程保存数据
                    if(that._processDetail.type==2){
                        that._editFixedProcess = $.extend(true, [], that._processDetail.flowTaskGroupList);
                    }

                    //空数据时，创建默认数据
                    if(that._editCondProcess==null || that._editFixedProcess[0]==null || that._processDetail.type!=2){
                        that._editFixedProcess = [];
                        that._editFixedProcess[0] = {};
                        that._editFixedProcess[0].flowTaskList = [];
                        that._editFixedProcess[0].maxValue = null;
                        that._editFixedProcess[0].minValue = null;
                        that._editFixedProcess[0].title = null;
                    }


                    //生成条件流程保存数据
                    that._editCondProcess = $.extend(true, [], that._processDetail.flowTaskGroupList);

                    //空数据时，创建默认数据
                    if(that._editCondProcess==null || that._processDetail.type!=3){
                        that._editCondProcess = [];
                        that._editCondProcess[0] = {};
                        that._editCondProcess[0].flowTaskList = [];

                    }
                    console.log(that._editFixedProcess);
                    console.log(that._editCondProcess);

                    var html = template('m_approval/m_approval_mgt_setProcess',{
                        name:response.data.name,
                        fixedProcess:that._editFixedProcess,
                        condProcess:that._editCondProcess
                    });
                    $(that.element).html(html);
                    if(callBack)
                        callBack(response.data);

                } else {
                    S_dialog.error(response.info);
                }
            })

        }
        //初始化iCheck
        ,initICheck:function () {
            var that = this;
            var ifChecked = function (e) {
                var type = $(this).attr('data-type');
                $(that.element).find('.panel[data-type]').hide();
                $(that.element).find('.panel[data-type="'+type+'"]').show();
                if(type==3){
                    $(that.element).find('a[data-action="setApprovalCondition"]').show();
                }else{
                    $(that.element).find('a[data-action="setApprovalCondition"]').hide();
                }
            };
            var ifUnchecked = function (e) {
            };
            var ifClicked = function (e) {

            };
            $(that.element).find('input[name^="iCheck"]').iCheck({
                checkboxClass: 'icheckbox_square-pink',
                radioClass: 'iradio_square-blue'
            }).on('ifUnchecked.s', ifUnchecked).on('ifChecked.s', ifChecked).on('ifClicked',ifClicked);

        }
        //保存设置
        ,saveProcess:function () {
            var that =this;
            var type = $(that.element).find('input[type="radio"]:checked').attr('data-type');

            if(type==2){

                that._processDetail.flowTaskGroupList = that._editFixedProcess;

            }else if(type==3){

                that._processDetail.flowTaskGroupList = that._editCondProcess;

            }else{

                that._processDetail.flowTaskGroupList = [];
            }

            var option = {};
            option.classId = '#content-right';
            option.url = restApi.url_changeProcessDefine;
            option.postData = {};
            option.postData = that._processDetail;
            option.postData.type = type;

            m_ajax.postJson(option, function (response) {
                if (response.code == '0') {

                    S_toastr.success('保存成功！');

                } else {
                    S_dialog.error(response.info);
                }
            });
        }
        //选择人员
        ,choseUser:function ($this) {
            var that = this,options = {};
            options.title = '添加审批人员';
            options.selectedUserList = [];
            options.url = restApi.url_getOrgTree;
            options.saveCallback = function (data) {

                var len = $this.closest('.panel-body').find('.approver-outbox').length;
                var isAppendArrow = 0;
                if(len>0 && data.selectedUserList &&  data.selectedUserList.length>0){//存在审批人,添加时，前面加箭头
                    isAppendArrow = 1;
                }
                var html = template('m_approval/m_approval_mgt_setProcess_approver',{approverList:data.selectedUserList,isAppendArrow:isAppendArrow});
                $this.parent().before(html);
                that.approvalRemoveIconHover();
                that.bindActionClick();//重新绑定事件，针对新添加的审批人删除事件

                var i = $this.closest('div.panel').attr('data-i');
                var type = $(that.element).find('input[type="radio"]:checked').attr('data-type');

                var flowTaskList = [];
                $.each(data.selectedUserList,function (i,item) {
                    var userList = [];
                    userList.push({id:item.id});
                    flowTaskList.push({candidateUserList:userList});
                });

                //固定流程
                if(type==2){
                    that._editFixedProcess[0].flowTaskList =  that._editFixedProcess[0].flowTaskList.concat(flowTaskList);
                }
                //条件流程
                if(type==3){

                    if(that._editCondProcess[i].flowTaskList==null)
                        that._editCondProcess[i].flowTaskList = [];

                    that._editCondProcess[i].flowTaskList =  that._editCondProcess[i].flowTaskList.concat(flowTaskList);
                }

            };
            $('body').m_orgByTree(options);
        }
        //删除审批人图标hover事件
        ,approvalRemoveIconHover:function ($ele) {
            var that = this;
            if(isNullOrBlank($ele))
                $ele = $(that.element);

            $ele.find('.approver-box').hover(function () {
                $(this).find('.approver-remove').show();
            },function () {
                $(this).find('.approver-remove').hide();
            });
        }
        //删除审批人处理
        ,removeApprover:function ($this) {
            var that = this;
            var $ele = $this.closest('.approver-outbox');
            //var i = $this.closest('.approver-outbox').index('.approver-outbox');
            var i = $this.closest('.panel-body').find('.approver-outbox').index($this.closest('.approver-outbox'));

            var panelI = $this.closest('.panel').attr('data-i');
            var len = $this.closest('.panel-body').find('.approver-outbox').length;
            var type = $(that.element).find('input[type="radio"]:checked').attr('data-type');

            //固定流程
            if(type==2){
                that._editFixedProcess[0].flowTaskList.splice(i,1);
            }

            if(type==3){
                that._editCondProcess[panelI].flowTaskList.splice(i,1);
            }

            if(len==i+1){//删除的是最后一个
                $ele.prev('.arrow-icon').remove();
                $ele.remove();
            }else{
                $ele.next('.arrow-icon').remove();
                $ele.remove();
            }
        }
        //事件绑定
        ,bindActionClick:function () {
            var that = this;
            $(that.element).find('a[data-action]').off('click').on('click',function () {
                var $this = $(this);
                var dataAction = $this.attr('data-action');
                switch (dataAction){
                    case 'setApprovalCondition'://设置审批流程

                        var option = {};
                        option.$type = $this.attr('data-type');
                        option.$processData = that._processDetail;
                        option.$oKCallBack = function (data) {

                            that._editCondProcess = data;
                            var html = template('m_approval/m_approval_mgt_setProcess_flow',{flowTaskGroupList:data});
                            $(that.element).find('#flowTaskGroupList').html(html);
                            that.bindActionClick();//重新绑定事件
                        };
                        $('body').m_approval_mgt_setProcessCondition(option,true);
                        break;
                    case 'addReview'://添加人员

                        that.choseUser($this);

                        break;
                    case 'back'://返回

                        $(that.element).m_approval_mgt({}, true);

                        break;

                    case 'save'://保存

                        that.saveProcess();
                        break;

                    case 'removeApprover'://删除审批人

                        that.removeApprover($this);
                        break;
                }
            })
        }
    });

    /*
     1.一般初始化（缓存单例）： $('#id').pluginName(initOptions);
     2.强制初始化（无视缓存）： $('#id').pluginName(initOptions,true);
     3.调用方法： $('#id').pluginName('methodName',args);
     */
    $.fn[pluginName] = function (options, args) {
        var instance;
        var funcResult;
        var jqObj = this.each(function () {

            //从缓存获取实例
            instance = $.data(this, "plugin_" + pluginName);

            if (options === undefined || options === null || typeof options === "object") {

                var opts = $.extend(true, {}, defaults, options);

                //options作为初始化参数，若args===true则强制重新初始化，否则根据缓存判断是否需要初始化
                if (args === true) {
                    instance = new Plugin(this, opts);
                } else {
                    if (instance === undefined || instance === null)
                        instance = new Plugin(this, opts);
                }

                //写入缓存
                $.data(this, "plugin_" + pluginName, instance);
            }
            else if (typeof options === "string" && typeof instance[options] === "function") {

                //options作为方法名，args则作为方法要调用的参数
                //如果方法没有返回值，funcReuslt为undefined
                funcResult = instance[options].call(instance, args);
            }
        });

        return funcResult === undefined ? jqObj : funcResult;
    };

})(jQuery, window, document);

/**
 * 审批管理-设置流程条件
 * Created by wrb on 2018/8/3.
 */
;(function ($, window, document, undefined) {

    "use strict";
    var pluginName = "m_approval_mgt_setProcessCondition",
        defaults = {
            $isDialog:true,
            $type:null,
            $processData:null,//流程信息数据{类型名称,key...}
            $oKCallBack:null//保存回滚事件
        };

    // The actual plugin constructor
    function Plugin(element, options) {
        this.element = element;

        this.settings = $.extend({}, defaults, options);
        this._defaults = defaults;
        this._name = pluginName;
        this._currentUserId = window.currentUserId;
        this._currentCompanyId = window.currentCompanyId;
        this.init();
    }

    // Avoid Plugin.prototype conflicts
    $.extend(Plugin.prototype, {
        init: function () {
            var that = this;
            that.renderDialog();
        }
        ,renderDialog:function () {
            var that = this;
            if(that.settings.$isDialog){//以弹窗编辑
                S_dialog.dialog({
                    title: that.settings.$title||'设置审批条件',
                    contentEle: 'dialogOBox',
                    lock: 3,
                    width: '600',
                    height:'572',
                    url: rootPath+'/assets/module/m_common/m_dialog.html',
                    cancel:function(){
                    },
                    ok:function () {
                        if ($(that.element).find('form.form-horizontal').valid()) {
                            return that.saveProcessCondtion();
                        }else{
                            return false;
                        }
                    }

                },function(d){//加载html后触发

                    that.element = $('div[id="content:'+d.id+'"] .dialogOBox');
                    $(that.element).closest('table').find('.ui-dialog-header .ui-dialog-title').append('<span class="fc-ccc">（审批条件仅能指定一个，且为必填字段）</span>');

                    that.initHtmlData();
                });
            }else {//不以弹窗编辑
            }
        }
        //渲染列表内容
        ,initHtmlData:function () {
            var that =this;
            var html = template('m_approval/m_approval_mgt_setProcessCondition',{processData:that.settings.$processData});
            $(that.element).html(html);
            that.bindActionClick();
            that.submit_validate();
        }
        ,saveProcessCondtion:function () {
            var that =this;
            var option = {};
            option.classId = '#content-right';
            option.url = restApi.url_prepareProcessDefine;
            option.postData = {};
            option.postData.key = that.settings.$key;
            option.postData.type = that.settings.$type;

            var list = [];
            $(that.element).find('input[name="conditionalVal"]').each(function () {
               list.push($(this).val());
            });
            option.postData.startDigitCondition = {};
            option.postData.startDigitCondition.pointList = list;
            m_ajax.postJson(option, function (response) {
                if (response.code == '0') {

                    if(that.settings.$oKCallBack)
                        that.settings.$oKCallBack(response.data.flowTaskGroupList);

                } else {
                    S_dialog.error(response.info);
                }
            });
        }
        //事件绑定
        ,bindActionClick:function () {
            var that = this;
            $(that.element).find('a[data-action]').off('click').on('click',function () {
                var $this = $(this);
                var dataAction = $this.attr('data-action');
                switch (dataAction){
                    case 'addCondition'://添加条件

                        $this.parent().before('<div class="col-md-1 m-b-xs p-xxs text-center"> < </div><div class="col-md-2 m-b-xs"><input class="form-control input-sm" type="text" name="conditionalVal"></div>');

                        break;
                }
            })
        }
        //保存验证
        , submit_validate: function () {
            var that = this;
            $(that.element).find('form.form-horizontal').validate({
                rules: {
                    conditionalVal: {
                        ckIsEmpty:true,
                        ckIsNumber:true
                    }
                },
                messages: {
                    conditionalVal: {
                        ckIsEmpty: '请输入数值区间！',
                        ckIsNumber:'请输入数字！'
                    }
                },
                errorElement: "label",  //用来创建错误提示信息标签
                errorPlacement: function (error, element) {  //重新编辑error信息的显示位置
                    error.appendTo(element.closest('.form-group'));
                }
            });
            $.validator.addMethod('ckIsEmpty', function(value, element) {
                var isOk = true;
                $(that.element).find('input[name="conditionalVal"]').each(function () {
                    var val = $(this).val();
                    if($.trim(val)==''){
                        isOk = false;
                        return false;
                    }
                });
                return  isOk;
            }, '请输入数值区间！');
            $.validator.addMethod('ckIsNumber', function(value, element) {
                var isOk = true;
                $(that.element).find('input[name="conditionalVal"]').each(function () {
                    var val = $(this).val();
                    if(!regularExpressions.number.test(val)){
                        isOk = false;
                        return false;
                    }
                });
                return  isOk;
            }, '请输入数字！');
        }
    });

    /*
     1.一般初始化（缓存单例）： $('#id').pluginName(initOptions);
     2.强制初始化（无视缓存）： $('#id').pluginName(initOptions,true);
     3.调用方法： $('#id').pluginName('methodName',args);
     */
    $.fn[pluginName] = function (options, args) {
        var instance;
        var funcResult;
        var jqObj = this.each(function () {

            //从缓存获取实例
            instance = $.data(this, "plugin_" + pluginName);

            if (options === undefined || options === null || typeof options === "object") {

                var opts = $.extend(true, {}, defaults, options);

                //options作为初始化参数，若args===true则强制重新初始化，否则根据缓存判断是否需要初始化
                if (args === true) {
                    instance = new Plugin(this, opts);
                } else {
                    if (instance === undefined || instance === null)
                        instance = new Plugin(this, opts);
                }

                //写入缓存
                $.data(this, "plugin_" + pluginName, instance);
            }
            else if (typeof options === "string" && typeof instance[options] === "function") {

                //options作为方法名，args则作为方法要调用的参数
                //如果方法没有返回值，funcReuslt为undefined
                funcResult = instance[options].call(instance, args);
            }
        });

        return funcResult === undefined ? jqObj : funcResult;
    };

})(jQuery, window, document);

/**
 * Created by Wuwq on 2017/1/5.
 */
;(function ($, window, document, undefined) {

    "use strict";
    var pluginName = "m_browser_tips",
        defaults = {};

    function Plugin(element, options) {
        this.element = element;

        this.settings = options;
        this._defaults = defaults;
        this._name = pluginName;
        this.init();
    }

    $.extend(Plugin.prototype, {
        init: function () {
            var that = this;
            that._render();
        }
        , _render: function () {
            var that = this;

            var html = template('m_browser_tips/m_browser_tips', {});

            var layerIndex;
            //检测少于IE10
            if (Cookies.get('m_browser_never_tips') !== '1'&&bowser && bowser.msie && bowser.version < 10) {
                layerIndex=layer.open({
                    type: 1,
                    title: false,
                    closeBtn:false,
                    area: ['800px', '500px'],
                    shade: 0.7,
                    content: html
                });
            }

            $('a[data-action="continue"]').click(function(){
                var neverTips=$('#m-browser-never-tips').prop('checked');
                if(neverTips===true){
                    Cookies.set('m_browser_never_tips', '1');
                }
                layer.close(layerIndex);
            });
        }
    });

    /*
     1.一般初始化（缓存单例）： $('#id').pluginName(initOptions);
     2.强制初始化（无视缓存）： $('#id').pluginName(initOptions,true);
     3.调用方法： $('#id').pluginName('methodName',args);
     */
    $.fn[pluginName] = function (options, args) {
        var instance;
        var funcResult;
        var jqObj = this.each(function () {

            //从缓存获取实例
            instance = $.data(this, "plugin_" + pluginName);

            if (options === undefined || options === null || typeof options === "object") {

                var opts = $.extend(true, {}, defaults, options);

                //options作为初始化参数，若args===true则强制重新初始化，否则根据缓存判断是否需要初始化
                if (args === true) {
                    instance = new Plugin(this, opts);
                } else {
                    if (instance === undefined || instance === null)
                        instance = new Plugin(this, opts);
                }

                //写入缓存
                $.data(this, "plugin_" + pluginName, instance);
            }
            else if (typeof options === "string" && typeof instance[options] === "function") {

                //options作为方法名，args则作为方法要调用的参数
                //如果方法没有返回值，funcReuslt为undefined
                funcResult = instance[options].call(instance, args);
            }
        });

        return funcResult === undefined ? jqObj : funcResult;
    };

})(jQuery, window, document);
/**
 * Created by wrb on 2016/12/21.
 */
;(function ($, window, document, undefined) {

    "use strict";
    var pluginName = "m_inputProcessTime",
        defaults = {
            $title: null,
            $isDialog: true,
            $isHaveMemo: true,
            $timeInfo: null,
            $okCallBack: null,
            $isOkSave: false,//默认false
            $okText: null,//按钮文字
            $saveDataUrl: null,//直接保存url
            $minHeight: null,//弹窗的最小高度
            $saveData: null,//保存格外的参数
            $currentAppointmentDate: null,//当前任务的合同进度时间
            $saveTimeKeyVal: null,//保存到库所对应的时间字段 key 值
            $validate:null//验证{默认第一套验证}
        };

    // The actual plugin constructor
    function Plugin(element, options) {
        this.element = element;

        this.settings = $.extend({}, defaults, options);
        this._defaults = defaults;
        this._name = pluginName;
        this.init();
    }

    // Avoid Plugin.prototype conflicts
    $.extend(Plugin.prototype, {
        init: function () {
            var that = this;
            that.initHtmlData(function () {
                that.initSpinner();
                if(that.settings.$validate!=null && that.settings.$validate==1){
                    that.addInputTime_validate1();
                }else if(that.settings.$validate!=null && that.settings.$validate==2){

                }else{
                    that.addInputTime_validate();
                }

            });
        },

        //初始化数据
        initHtmlData: function (callBack) {
            var that = this;
            if (that.settings.$isDialog) {//以弹窗编辑
                var options = {};
                options.title = that.settings.$title || '设计依据';
                options.contentEle = 'dialogOBox';
                options.lock = 3;
                options.width = '510';
                options.minHeight = that.settings.$minHeight || '100';
                options.tPadding = '0px';
                options.url = rootPath + '/assets/module/m_common/m_dialog.html';
                options.cancel = function () {
                };
                if (that.settings.$isOkSave) {//直接保存
                    options.okText = '保存';
                    options.ok = function () {
                        if ($('form.inputTimeOBox').valid()) {
                            var $data = $("form.inputTimeOBox").serializeObject();
                            var timeObj = {};
                            if (that.settings.$saveTimeKeyVal != null) {//处理保存到库所对应的时间字段 key 值,此处传入的key是有序的
                                for (var key in $data) {
                                    if (key == 'startTime') {
                                        timeObj[that.settings.$saveTimeKeyVal[0]] = $data[key];
                                        continue;
                                    }
                                    if (key == 'endTime') {
                                        timeObj[that.settings.$saveTimeKeyVal[1]] = $data[key];
                                        continue;
                                    }
                                    if (key == 'memo') {
                                        timeObj[that.settings.$saveTimeKeyVal[2]] = $data[key];
                                        timeObj[that.settings.$saveTimeKeyVal[2]] = $.trim(timeObj[that.settings.$saveTimeKeyVal[2]]);
                                        continue;
                                    }
                                }
                            }
                            $.extend(timeObj, that.settings.$saveData);
                            var option = {};
                            if($('#page-wrapper #content-right').length>0){
                                option.classId = '#page-wrapper #content-right';
                            }
                            option.url = that.settings.$saveDataUrl;
                            option.postData = timeObj;
                            m_ajax.postJson(option, function (response) {
                                if (response.code == '0') {
                                    S_toastr.success("保存成功!");
                                    if (that.settings.$okCallBack != null) {
                                        return that.settings.$okCallBack(response.data);
                                    }
                                } else {
                                    S_dialog.error(response.info);
                                }
                            })
                        } else {
                            return false;
                        }
                    }
                } else {//返回上级
                    options.okText = '确定';
                    options.ok = function () {
                        if ($('form.inputTimeOBox').valid()) {
                            var $data = $("form.inputTimeOBox").serializeObject();
                            if (that.settings.$okCallBack != null) {
                                return that.settings.$okCallBack($data);
                            }
                        } else {
                            return false;
                        }
                    };
                }
                if (that.settings.$okText != null) {
                    options.okText = that.settings.$okText;
                }


                S_dialog.dialog(options, function (d) {//加载html后触发

                    var $data = {};
                    $data.$isHaveMemo = that.settings.$isHaveMemo;
                    $data.$timeInfo = {};
                    if (that.settings.$timeInfo != null) {
                        $data.$timeInfo = that.settings.$timeInfo;
                    }
                    var classIdObj = $('div[id="content:' + d.id + '"] .dialogOBox');
                    that.initHtmlTemplate(callBack, $data, classIdObj)
                });
            } else {//不以弹窗编辑
                var $data = {};
                $data.$isHaveMemo = that.settings.$isHaveMemo;
                $data.$timeInfo = {};
                if (that.settings.$timeInfo != null) {
                    $data.$timeInfo = that.settings.$timeInfo;
                }
                var classIdObj = $(that.element);
                that.initHtmlTemplate(callBack, $data, classIdObj)
            }
        }
        //计算时间差的方法
        , countTimeDiff: function (startTime, endTime) {
            return moment(endTime).diff(moment(startTime), 'days') + 1;
        }
        //生成html
        , initHtmlTemplate: function (callBack, data, classIdObj) {
            var that = this;
            if (that.settings.$currentAppointmentDate != null) {
                data.appointmentStartTime = that.settings.$currentAppointmentDate.startTime;
                data.appointmentEndTime = that.settings.$currentAppointmentDate.endTime;
            }
            var html = template('m_common/m_inputProcessTime', data);
            classIdObj.html(html);

            m_inputProcessTime_onpicked();

            $(that.element).find('.fa-calendar').click(function () {
                $(this).closest('.input-group').find('input:first').focus();
            });

            if (callBack != null) {
                callBack();
            }
        }
        //初始化Spinner
        , initSpinner: function () {
            $('form.inputTimeOBox').find('.dayCountSpinner:eq(0)')
                .spinner({
                    delay: 200,
                    changed: function (e, newVal, oldVal) {
                        var startTime = $('form.inputTimeOBox').find('.startTime:eq(0)').val();
                        if (startTime === null || _.isBlank(startTime))
                            return;

                        if (newVal == 0) {
                            $('form.inputTimeOBox').find('.endTime:eq(0)').val('');
                            return;
                        }

                        var endTime = moment(startTime).add(newVal - 1, 'days').format('YYYY-MM-DD');
                        $('form.inputTimeOBox').find('.endTime:eq(0)').val(endTime);
                    }
                });
        }
        //step1的表单验证
        , addInputTime_validate: function () {
            var that = this;
            $('form.inputTimeOBox').validate({
                rules: {
                    startTime: {
                        required: true
                    }
                    , endTime: {
                        required: true
                    }
                    , memo: {
                        required: true,
                        maxlength: 250,
                        isBlank:true
                    }
                },
                messages: {
                    startTime: {
                        required: '请设置开始日期！'
                    }
                    , endTime: {
                        required: '请设置结束日期！'
                    }
                    , memo: {
                        required: '请输入进度变更原因！',
                        maxlength: '输入不能超过250个字符！',
                        isBlank:'请输入进度变更原因!'
                    }
                },
                errorElement: "label",  //用来创建错误提示信息标签
                errorPlacement: function (error, element) {  //重新编辑error信息的显示位置
                    error.appendTo(element.closest('.form-group'));
                }
            });
            $.validator.addMethod('isBlank', function(value, element) {
                value = $.trim(value);
                var isOk = true;
                if( value!=null && $.trim(value)==''){
                    isOk = false;
                }
                return  isOk;
            }, '请输入进度变更原因!');

        }
        , addInputTime_validate1: function () {
            var that = this;
            $('form.inputTimeOBox').validate({
                rules: {
                    startTime: {
                        ckTime: true
                    }
                },
                messages: {
                    startTime: {
                        ckTime: '请输入日期!'
                    }
                },
                errorElement: "label",  //用来创建错误提示信息标签
                errorPlacement: function (error, element) {  //重新编辑error信息的显示位置
                    error.appendTo(element.closest('.form-group'));
                }
            });
            $.validator.addMethod('ckTime', function(value, element) {
                var isOk = true;
                var startTime = $('.inputTimeOBox input[name="startTime"]').val();
                var endTime = $('.inputTimeOBox input[name="endTime"]').val();
                if(startTime=='' && endTime==''){
                    isOk = false;
                }
                return  isOk;
            }, '请输入日期!');

            $('form.inputTimeOBox').find('input,textarea').on('click',function () {
                $('form.inputTimeOBox label.error').hide();
            });
        }

    });

    $.fn[pluginName] = function (options) {
        return this.each(function () {

            //if (!$.data(this, "plugin_" + pluginName)) {
            $.data(this, "plugin_" +
                pluginName, new Plugin(this, options));
            //}
        });
    };

})(jQuery, window, document);

;(function ($, window, document, undefined) {

    "use strict";
    var pluginName = "m_popover",
        defaults = {
            clearOnInit: true,//初始化是否清掉其他的Popover
            titleHtml: null,
            hideArrow: false,
            popoverStyle: '',//父容器popover的追加样式，如弹窗宽度
            contentStyle: 'padding: 10px 14px 10px;',//popover-content的追加样式
            content: null,//自定义内容，可以用模板
            placement: null,//浮窗是在哪个位置展开：‘left’,‘right’,‘top’,‘bottom’,空值则默认为top
            onShown: null,//浮窗显示后的事件，可以用来重新绑定值
            onSave: null,//提交事件
            onClear: null,//清除事件
            onClose: null,//关闭事件
            template: 'm_common/m_popover',//主框架,
            type:null,//默认浮窗,inline=内置
            hideElement:false,//隐藏该标签
            closeOnDocumentClicked: null//自定义样式类处理关闭editable
        };

    // The actual plugin constructor
    function Plugin(element, options) {
        this.element = element;

        this.settings = options;
        this._defaults = defaults;
        this._name = pluginName;
        this._popoverTop = null;//初始化页面时，保存浮窗的top值
        this._popoverHeight = null;//初始化页面时，保存浮窗的height值
        this.init();
    }

    // Avoid Plugin.prototype conflicts
    $.extend(Plugin.prototype, {
        init: function () {
            var that = this;

            if (that.settings.clearOnInit === true) {
                //清掉其他的Popover
                $(document).find('.m-popover').each(function (i, o) {
                    $(o).remove();
                });

                $(document).off('click.m-popover');
            }

            var html = template(that.settings.template, {
                titleHtml: that.settings.titleHtml,
                popoverStyle: that.settings.popoverStyle,
                contentStyle: that.settings.contentStyle,
                content: that.settings.content
            });

            $(html).insertAfter($(that.element));
            var $popover = $(that.element).next('.m-popover');

            if (that.settings.hideArrow === true)
                $popover.find('.arrow').eq(0).hide();

            if (that.settings.onShown && that.settings.onShown !== null)
                that.settings.onShown($popover);

            if(that.settings.hideElement === true){
                $(that.element).hide();
            }

            //防止冒泡
            $popover.off('click.m-popover').on('click.m-popover', function (e) {
                stopPropagation(e);
                return false;
            });

            setTimeout(function () {
                if(that.settings.type==null || that.settings.type!='inline'){
                    that.setPosition();
                }
                that.bindBtnClick();
                that.bindPopoverClickedOut();
            }, 50);

            //绑定回车事件
            $popover.find('input[type="text"]').keydown(function () {
                if (event.keyCode == '13') {//keyCode=13是回车键
                    var $btnSubmit = $popover.find('.m-popover-submit');
                    if ($btnSubmit && $btnSubmit.length > 0)
                        $btnSubmit.click();
                }
            });

        },
        //当鼠标点击的焦点不在浮窗内时，关闭浮窗
        bindPopoverClickedOut: function () {
            var that = this;
            $(document).on('click.m-popover', function (e) {
                //console.log('document.clicked');
                var flag = $(e.target).parents('.select2-container').length > 0 || $(e.target).is('.select2-container');
                //防止select2搜索框点击触发关闭
                if ($(e.target).closest('.select2-search__field').length > 0 || flag)
                    return false;

                if (typeof that.settings.closeOnDocumentClicked === 'function') {
                    if (that.settings.closeOnDocumentClicked(e) === false)
                        return false;
                }

                if (that.settings.onClose && that.settings.onClose !== null) {
                    //返回false则不关闭
                    if (that.settings.onClose($(e.target)) !== false)
                        that.closeFilter();
                }
                else {
                    that.closeFilter();
                }
            });
        },
        setPosition: function () {
            var that = this;
            var $popover = $(that.element).next('.m-popover');
            if ($popover.length > 0) {
                var p_p = that.settings.placement ? that.settings.placement : 'top';//浮窗的展示位置
                var a_ptop = $(that.element).position().top;//a标签的top值
                var a_width = $(that.element).outerWidth();//a标签的width值
                var a_height = $(that.element).outerHeight();//a标签的height值
                var a_pleft = $(that.element).position().left;//a标签的left值
                var p_width = $popover.width();//浮窗的宽度
                var p_height = $popover.outerHeight();//浮窗的高度
                var p_top = 0;//浮窗的top值
                var p_left = 0;//浮窗的left值
                switch (p_p) {
                    case 'top':
                        p_top = (a_ptop - p_height);
                        p_left = a_pleft + a_width / 2 - p_width / 2;
                        break;
                    case 'bottom':
                        p_top = (a_ptop + a_height);
                        p_left = a_pleft + a_width / 2 - p_width / 2;
                        break;
                    case 'left':
                        p_top = (a_ptop - p_height / 2 + 5);
                        p_left = a_pleft - p_width - 10;
                        break;
                    case 'right':
                        p_top = (a_ptop - p_height / 2 + 7);
                        p_left = a_pleft + a_width;
                        break;


                };
                that._popoverTop = p_top;
                that._popoverHeight = p_height;
                $popover.removeClass('top').addClass(p_p);
                if (p_p.indexOf('left') > -1 || p_p.indexOf('right') > -1) {
                    $popover.find('.arrow').css({'top': '50%', 'left': ''});
                }

                $popover.css({
                    display: 'inline-block',
                    position: 'absolute',
                    top: p_top,
                    left: p_left
                });
            }
        },
        bindBtnClick: function () {
            var that = this;
            var $popover = $(that.element).next('.m-popover');
            if ($popover.length > 0) {

                //查找【提交按钮】并绑定事件
                var $btnSubmit = $popover.find('.m-popover-submit');
                if ($btnSubmit.length > 0) {
                    $btnSubmit.click(function (e) {

                        if (that.settings.onSave && that.settings.onSave !== null) {
                            if (that.settings.onSave($popover) !== false)
                                that.closeFilter();
                        }
                        else
                            that.closeFilter();

                        stopPropagation(e);
                        return false;
                    });
                }

                //查找【清除按钮】并绑定事件
                var $btnClear = $popover.find('.m-popover-clear');
                if ($btnClear.length > 0) {
                    $btnClear.click(function (e) {

                        //如果没有自定义清除函数，则使用默认
                        if (that.settings.onClear && that.settings.onClear !== null)
                            that.settings.onClear($popover);
                        else {
                            //查找第一个input清空
                            var $input = $(this).closest('form').find('input:first');
                            if ($input.length > 0)
                                $input.val('');
                        }

                        stopPropagation(e);
                        return false;
                    });
                }

                //查找【关闭按钮】并绑定事件
                var $btnClose = $popover.find('.m-popover-close');
                if ($btnClose.length > 0) {
                    $btnClose.click(function (e) {

                        if (that.settings.onClose && that.settings.onClose !== null) {
                            //返回false则不关闭
                            if (that.settings.onClose($popover) !== false)
                                that.closeFilter();
                        }
                        else {
                            that.closeFilter();
                        }

                        stopPropagation(e);
                        return false;
                    });
                }
                /*var $btnSubmit = $popover.find('.m-popover-submit');
                 //点击submit按钮或浮窗其他地方，出现验证信息时，相应改变popover的top值
                 $popover.find('.popover-content,button,input').off('click.changePosition').on('click.changePosition',function(e){
                 setTimeout(function(){
                 that.changePosition($popover);
                 },20);
                 });
                 //点击input表单，出现验证信息时，相应改变popover的top值
                 $popover.find('input[type="text"]').off('keyup.changePosition').on('keyup.changePosition',function(e){
                 setTimeout(function(){
                 console.log(2222)
                 that.changePosition($popover);
                 },20);
                 });*/
                $popover.resize(function () {
                    setTimeout(function () {
                        that.changePosition($popover);
                    }, 20);
                });
            }
        },
        //通过改变弹窗的top值来改变弹窗的位置
        changePosition: function ($popover) {
            var that = this;
            var errTag = $popover.find('label.error').length;
            var errTagH = errTag * ($popover.find('label.error').outerHeight() - 0);
            var popH = $popover.height();
            var popT = $popover.position().top;
            var h1 = popH - that._popoverHeight;

            if (that.settings.placement != null && that.settings.placement == 'top') {//当为top，popoverTop需要设置
                if (h1 == -4) {
                    $popover.css('top', that._popoverTop + 'px');
                } else {
                    var newTop = that._popoverTop - h1 - 4;
                    $popover.css('top', newTop);
                }

            } else if (that.settings.placement != null && (that.settings.placement == 'left' || that.settings.placement == 'right')) {

                $popover.find('.arrow').css('top', (that._popoverHeight) / 2 + 'px');
            }
        },
        closeFilter: function () {
            var that = this;
            $(that.element).siblings('.m-popover').each(function (i, o) {
                $(o).remove();
            });
            $(document).off('click.m-popover');
            if(that.settings.hideElement === true){
                $(that.element).show();
            }
        }
    });

    /*
     1.一般初始化（缓存单例）： $('#id').pluginName(initOptions);
     2.强制初始化（无视缓存）： $('#id').pluginName(initOptions,true);
     3.调用方法： $('#id').pluginName('methodName',args);
     */
    $.fn[pluginName] = function (options, args) {
        var instance;
        var funcResult;
        var jqObj = this.each(function () {

            //从缓存获取实例
            instance = $.data(this, "plugin_" + pluginName);

            if (options === undefined || options === null || typeof options === "object") {

                var opts = $.extend(true, {}, defaults, options);

                //options作为初始化参数，若args===true则强制重新初始化，否则根据缓存判断是否需要初始化
                if (args === true) {
                    instance = new Plugin(this, opts);
                } else {
                    if (instance === undefined || instance === null)
                        instance = new Plugin(this, opts);
                }

                //写入缓存
                $.data(this, "plugin_" + pluginName, instance);
            }
            else if (typeof options === "string" && typeof instance[options] === "function") {

                //options作为方法名，args则作为方法要调用的参数
                //如果方法没有返回值，funcReuslt为undefined
                funcResult = instance[options].call(instance, args);
            }
        });

        return funcResult === undefined ? jqObj : funcResult;
    };

})(jQuery, window, document);



/**
 * 快速选择时间，以在位编辑的方式打开
 * Created by veata on 2016/12/21.
 */
;(function ($, window, document, undefined) {

    "use strict";
    var pluginName = "m_quickDatePicker",
        defaults = {
            $title:null,
            $placement:true,//浮窗展开的位置，共四个值‘top’,‘bottom’,‘left’,‘right’,
            $okCallBack:null,
            $isClear:true,//展示清空按钮
            $eleId:null//当前元素浮动窗ID
        };

    // The actual plugin constructor
    function Plugin(element, options) {
        this.element = element;

        this.settings = $.extend({}, defaults, options);
        this._defaults = defaults;
        this._name = pluginName;
        this.init();
    }

    // Avoid Plugin.prototype conflicts
    $.extend(Plugin.prototype, {
        init: function () {
            var that = this;
            that.initHtmlData(function (data) {
                WdatePicker({eCont:'quickDatePicker',onpicked:function(dp){that.saveDate(dp)}});
                $('#quickDatePicker iframe').css('height','232px');//firefox有时不出来修改
            });
        },
        //初始化数据
        initHtmlData:function (callBack) {
            var that = this;
            var title = '变更合同签订日期';
            if(that.settings.$title!=null){
                title = that.settings.$title;
            }
            $(that.settings.$eleId).m_popover({
                placement: that.settings.$placement==null?'top':that.settings.$placement,
                titleHtml : '<div i="header" class="ui-dialog-header"><button i="close" class="ui-dialog-close">&#215;</button><div i="title" class="ui-dialog-title">'+title+'</div></div>',
                content: template('m_common/m_quickDatePicker', {isClear:that.settings.$isClear}),
                contentStyle: 'height:257px;',
                onShown: function ($popover) {
                    if(callBack!=null){
                        callBack();
                    }
                    if($popover.prev().text()=='未签订'){
                        $popover.find('.ui-dialog-header').remove();
                    }
                    $popover.find('.ui-dialog-close').on('click',function () {
                        $(that.settings.$eleId).next().remove();
                    });
                    that.bindClearDate($popover);
                },
                onSave: function ($popover) {
                    return that.saveDate();
                }
            }, true);
        }
        //保存编辑
        ,saveDate:function (dp) {
            var that = this;
            var $data = dp.cal.getDateStr();

            if(that.settings.$okCallBack!=null){
                return that.settings.$okCallBack($data);
            }
        }
        ,bindClearDate:function ($popover) {
            var that = this;
            $popover.find('button.m-popover-clear').on('click',function () {
                if(that.settings.$okCallBack!=null){
                    return that.settings.$okCallBack(null);
                }
            });
        }

    });

    $.fn[pluginName] = function (options) {
        return this.each(function () {

            //if (!$.data(this, "plugin_" + pluginName)) {
            $.data(this, "plugin_" +
                pluginName, new Plugin(this, options));
            //}
        });
    };

})(jQuery, window, document);



/**
 * Created by veata on 2017/02/14.
 */
;(function ($, window, document, undefined) {

    "use strict";
    var pluginName = "m_top",
        defaults = {
            data: null
        };

    // The actual plugin constructor
    function Plugin(element, options) {
        this.element = element;

        this.settings = $.extend({}, defaults, options);
        this._defaults = defaults;
        this._name = pluginName;
        this.init();
    }

    // Avoid Plugin.prototype conflicts
    $.extend(Plugin.prototype, {
        init: function () {
            this.initHtml();
        },
        initHtml: function () {
            var that = this;

            //请求基础数据
            var option = {};
            option.url = restApi.url_getCurrUserOfWork;
            m_ajax.postJson(option, function (response) {
                if (response.code == '0') {
                    var $data = {};
                    $data.rootPath = window.rootPath;
                    if (response.data != null) {
                        $data.companyFilePath = response.data.companyInfo != null ? response.data.companyInfo.filePath : '';
                        $data.userInfo = response.data.userInfo != null ? response.data.userInfo : {};
                        $data.orgList = response.data.orgList;
                        $data.companyInfo = response.data.companyInfo != null ? response.data.companyInfo : {};
                        $data.companyUserInfo = response.data.companyUser != null ? response.data.companyUser : {};
                        $data.fastdfsUrl = response.data.fastdfsUrl;
                        $data.roleCodes = response.data.roleCodes;
                        $data.fileCenterUrl = response.data.fileCenterUrl;
                        $data.enterpriseUrl = response.data.enterpriseUrl;
                        $data.adminFlag = response.data.adminFlag;
                        $data.isAuth = response.data.isAuth;
                        window.adminFlag = $data.adminFlag;
                        var globalData = {
                            currentCompanyId : $data.companyInfo.id,
                            currentUserId : $data.userInfo.id,
                            currentCompanyUserId : $data.companyUserInfo.id,
                            currentRoleCodes : $data.roleCodes==null?'':$data.roleCodes
                        };
                        that.globalVariables(globalData);

                        if (isNullOrBlank(response.data.unReadMessage) || response.data.unReadMessage === 0)
                            $data.unReadMessage = '';
                        else
                            $data.unReadMessage = response.data.unReadMessage;

                        if (isNullOrBlank(response.data.unReadNotice) || response.data.unReadNotice === 0)
                            $data.unReadNotice = '';
                        else
                            $data.unReadNotice = response.data.unReadNotice;

                        if (isNullOrBlank($data.userInfo.imgUrl))
                            $data.userInfo.imgUrl = window.rootPath + '/assets/img/head_default.png';
                        else
                            $data.userInfo.imgUrl = $data.userInfo.imgUrl;


                        var data = {};
                        data.rootPath = window.rootPath;
                        $.extend(data, $data);
                        var html = template('m_common/m_top', data);
                        $('#m_top').html(html);

                        rolesControl();
                        that.bindActionClick();
                        $.each($('#top-nav li'), function (i, o) {
                            var $el = $(o);
                            if ($el.data('nav') === currentNav)
                                $el.addClass('active');
                        });

                        var oLi=$('#m_top_orgList');
                        if(oLi.find('li').length==0){
                            oLi.prev().find('.caret').remove();
                            oLi.remove()
                        }
                    }

                    that.renderToolTip();

                } else {
                    S_dialog.error(response.info);
                }
            });


        }
        //渲染ToolTip
        , renderToolTip: function () {
            $('.tooltip-demo').tooltip({
                selector: '[data-toggle=tooltip]',
                container: 'body',
                trigger: 'hover'
            });
        },
        //更改组织全局变量
        globalVariables:function (data) {
            window.currentCompanyId = data.currentCompanyId;
            window.currentUserId = data.currentUserId;
            window.currentCompanyUserId = data.currentCompanyUserId;
            window.currentRoleCodes = data.currentRoleCodes;
        }
        , switchOrg: function (orgId) {
            var option = {};
            option.url = restApi.url_switchCompany + '/' + orgId;
            m_ajax.getJson(option, function (response) {
                if (response.code == '0') {
                    window.location.href = window.rootPath + '/iWork/home/workbench';
                } else {
                    S_dialog.error(response.info);
                }
            })
        }
        //事件绑定
        , bindActionClick: function () {
            var that = this;
            $(that.element).find('a[data-action]').on('click', function (e) {
                var $this = $(this);
                var dataAction = $this.attr('data-action');
                switch (dataAction) {
                    case 'switchOrg'://切换组织
                        var companyInfoId = window.currentCompanyId;
                        var orgId = $(this).attr('org-id');
                        if (orgId != companyInfoId) {
                            that.switchOrg(orgId);
                        }
                        return false;
                        break;
                    case 'messageCenter'://消息界面
                        location.hash = '/messageCenter';
                        $('#unReadMessageCount').html('');
                        break;
                    case 'backstageMgt'://后台管理

                        if(window.currentRoleCodes.indexOf('com_enterprise_edit')>-1 || window.currentRoleCodes.indexOf('sys_enterprise_logout')>-1){//具有组织编辑权限
                            location.hash = '/backstageMgt/orgInfo';
                        }else if(window.currentRoleCodes.indexOf('hr_org_set')>-1 || window.currentRoleCodes.indexOf('hr_employee')>-1 || window.currentRoleCodes.indexOf('org_data_import')>-1 || window.currentRoleCodes.indexOf('org_partner')>-1){//具有组织架构权限
                            location.hash = '/backstageMgt/organizational';
                        }else if(window.currentRoleCodes.indexOf('sys_role_permission')>-1 || window.adminFlag==1){//具有权限配置权限
                            location.hash = '/backstageMgt/organizational';
                        }else if(window.currentRoleCodes.indexOf('sys_role_auth')>-1){//具有企业认证权限
                            location.hash = '/backstageMgt/enterpriseCertification';
                        }else if(window.currentRoleCodes.indexOf('data_import')>-1){//具有历史导入
                            location.hash = '/backstageMgt/historicalDataImport';
                        }
                        break;
                    case 'personalSettings'://个人设置
                        location.hash = '/personalSettings';
                        break;
                    case 'announcement'://公告
                        location.hash = '/announcement';
                        $('#unReadNoticeCount').html('');
                        break;
                    case 'createOrg'://创建组织
                        location.hash = '/createOrg';
                        break;
                    /*case 'financeSettings'://财务设置
                        var option = {};
                        option.$isFirstEnter = true;
                        $('#content-right').m_financeSettings_menu(option);
                        that.dealMenuShowOrHide(0);
                        break;*/
                }
            })
        }

    });

    $.fn[pluginName] = function (options) {
        return this.each(function () {
            //if (!$.data(this, "plugin_" + pluginName)) {
            $.data(this, "plugin_" +
                pluginName, new Plugin(this, options));
            //}
        });
    };

})(jQuery, window, document);

/**
 * 项目信息－收款计划-添加节点
 * Created by wrb on 2018/8/10.
 */
;(function ($, window, document, undefined) {

    "use strict";
    var pluginName = "m_cost_addNode",
        defaults = {
            isDialog:true,
            projectId:null,
            totalCost:null,
            costId:null,
            saveCallBack:null
        };

    // The actual plugin constructor
    function Plugin(element, options) {
        this.element = element;

        this.settings = $.extend({}, defaults, options);
        this._defaults = defaults;
        this._name = pluginName;
        this._currentCompanyId = window.currentCompanyId;//当前组织ID
        this.init();
    }

    // Avoid Plugin.prototype conflicts
    $.extend(Plugin.prototype, {
        init: function () {
            var that = this;
            that._initHtml();
        },
        //初始化数据,生成html
        _initHtml:function () {

            var that = this;
            if(that.settings.isDialog){//以弹窗编辑
                S_dialog.dialog({
                    title: that.settings.title||'添加回款节点',
                    contentEle: 'dialogOBox',
                    lock: 3,
                    width: '600',
                    tPadding: '0px',
                    url: rootPath+'/assets/module/m_common/m_dialog.html',
                    cancel:function () {

                    },
                    okText:'保存',
                    ok:function () {
                        var flag = $(that.element).find('form').valid();
                        if (!flag || that._saveContract()) {
                            return false;
                        }
                    }
                },function(d){//加载html后触发

                    that.element = 'div[id="content:'+d.id+'"] .dialogOBox';
                    var html = template('m_cost/m_cost_addNode',{});
                    $(that.element).html(html);
                    that._saveContract_validate();
                    that._bindFeeCalculation();

                });
            }else{//不以弹窗编辑

            }
        }
        //保存合同回款节点
        ,_saveContract:function () {

            var that = this,option  = {},isError = false;
            option.classId = that.element;
            option.url = restApi.url_saveProjectCostPoint;
            option.async = false;
            var $data = $(that.element).find('form').serializeObject();
            option.postData = $data;
            option.postData.projectId = that.settings.projectId;
            option.postData.feeProportion = parseFloat(option.postData.feeProportion);
            option.postData.type = '1';
            option.postData.costId = that.settings.costId;

            m_ajax.postJson(option,function (response) {
                if(response.code=='0'){
                    S_toastr.success('保存成功！');
                    if(that.settings.saveCallBack!=null){
                        that.settings.saveCallBack();
                    }

                }else {
                    S_dialog.error(response.info);
                    isError = true;
                }
            });
            return isError;
        }
        //添加回款的表单验证
        ,_saveContract_validate:function(){
            var that = this;
            $(that.element).find('form').validate({
                rules: {
                    feeDescription: {
                        required: true,
                        maxlength: 250
                    },
                    feeProportion:{
                        required: true,
                        number:true,
                        limitProportion:true,
                        pointNumber:true
                    },
                    fee:{
                        required: true,
                        number:true,
                        minNumber:true,
                        over10:true,//整数部分是否超过10位
                        pointSix:true,
                        ckFee:true
                    }
                },
                messages: {
                    feeDescription: {
                        required: '请输入节点描述!',
                        maxlength: '节点描述不超过250位!'
                    },
                    feeProportion:{
                        required:'请输入比例',
                        number:'请输入有效数字',
                        limitProportion:'请输入0到100之间的数字!',
                        pointNumber:'请保留小数点后两位!'
                    },
                    fee:{
                        required:'金额不能为空',
                        number:'请输入有效数字',
                        minNumber:'请输入大于0的数字!',
                        over10:'对不起，您的操作超出了系统允许的范围。合同总金额的单位为“万元”',
                        pointSix:'请保留小数点后六位!',
                        ckFee:'金额不能超过合同总金额!'

                    }
                },
                errorPlacement: function (error, element) { //指定错误信息位置
                    if ($(element).attr('data-action')=='feeCalculation') {
                        error.appendTo(element.closest('.form-group'));
                    } else {
                        error.insertAfter(element);
                    }
                }
            });
            $.validator.addMethod('limitProportion', function(value, element) {
                value = $.trim(value);
                var isOk = true;
                if( value<=0 || value>100){
                    isOk = false;
                }
                return  isOk;
            }, '请输入0到100之间的数字!');
            $.validator.addMethod('minNumber', function(value, element) {
                value = $.trim(value);
                var isOk = true;
                if( value<=0){
                    isOk = false;
                }
                return  isOk;
            }, '请输入大于0的数字!');
            $.validator.addMethod('pointNumber', function(value, element) {
                value = $.trim(value);
                var isOk = true;
                if(!regularExpressions.proportionnumber.test(value)){
                    isOk = false;
                }
                return  isOk;
            }, '请保留小数点后两位!');
            $.validator.addMethod('over10', function (value, element) {
                value = $.trim(value);
                var isOk = true;
                if(parseInt(value).toString().length>10)
                    isOk=false;
                return isOk;
            }, '对不起，您的操作超出了系统允许的范围。合同总金额的单位为“万元”');
            $.validator.addMethod('pointSix', function(value, element) {
                value = $.trim(value);
                var isOk = true;
                if(!regularExpressions.pnumber.test(value)){
                    isOk = false;
                }
                return  isOk;
            }, '请保留小数点后六位!');

            $.validator.addMethod('ckFee', function(value, element) {
                var that = this;
                value = $.trim(value);
                var isOk = true;
                var total = that.settings.totalCost-0;
                if(value>total ){
                    isOk = false;
                }
                return  isOk;
            }, '金额不能超过合同总金额!');
        }
        //金额比例keyup事件
        ,_bindFeeCalculation:function () {
            var that = this;
            $(that.element).find('input[data-action="feeCalculation"]').keyup(function () {

                var name = $(this).attr('name');
                var val = $(this).val();
                var total = that.settings.totalCost;
                if(name=='feeProportion'){//比例
                    var fee = (val-0)*(total-0)/100;
                    fee = decimal(fee,7);
                    fee = parseFloat(decimal(fee,6));
                    $(that.element).find('input[name="fee"]').val(fee);
                }
                if(name=='fee'){//金额
                    var proportion = (val-0)/(total-0)*100;
                    proportion = decimal(proportion,3);
                    proportion = decimal(proportion,2);
                    $(that.element).find('input[name="feeProportion"]').val(proportion);
                }
            });
        }


    });

    $.fn[pluginName] = function (options) {
        return this.each(function () {

            //if (!$.data(this, "plugin_" + pluginName)) {
            $.data(this, "plugin_" +
                pluginName, new Plugin(this, options));
            //}
        });
    };

})(jQuery, window, document);

/**
 * 项目信息－收款计划-发起收款
 * Created by wrb on 2018/8/10.
 */
;(function ($, window, document, undefined) {

    "use strict";
    var pluginName = "m_cost_addPayment",
        defaults = {
            isDialog:true,
            projectId:null,
            relationCompany:null,
            backFee:null,
            maxFee:null,
            pointId:null,
            saveCallBack:null
        };

    // The actual plugin constructor
    function Plugin(element, options) {
        this.element = element;

        this.settings = $.extend({}, defaults, options);
        this._defaults = defaults;
        this._name = pluginName;
        this._currentCompanyId = window.currentCompanyId;//当前组织ID
        this.init();
    }

    // Avoid Plugin.prototype conflicts
    $.extend(Plugin.prototype, {
        init: function () {
            var that = this;
            that.renderDialog(function () {

                var html = template('m_cost/m_cost_addPayment',{currentDate:getNowDate()});
                $(that.element).html(html);
                that.renderListCompany();
                that.initICheck();
                that.save_validate();
                clickTimeIcon($(that.element));

            });
        },
        //初始化数据,生成html
        renderDialog:function (callBack) {

            var that = this;
            if(that.settings.isDialog){//以弹窗编辑
                S_dialog.dialog({
                    title: that.settings.title||'发起回款',
                    contentEle: 'dialogOBox',
                    lock: 3,
                    width: '705',
                    minHeight: '160',
                    tPadding: '0px',
                    url: rootPath+'/assets/module/m_common/m_dialog.html',
                    cancel:function () {

                    },
                    okText:'保存',
                    ok:function () {
                        var flag = $(that.element).find('form').valid();
                        if (!flag || that.save()) {
                            return false;
                        }
                    }
                },function(d){//加载html后触发
                    that.element = 'div[id="content:'+d.id+'"] .dialogOBox';
                    if(callBack!=null)
                        callBack();

                });
            }else{//不以弹窗编辑
                if(callBack!=null)
                    callBack();
            }
        }
        //渲染收票方
        ,renderListCompany:function () {
            var that = this;
            var staffArr = [];
            var company = that.settings.relationCompany;
            if(company!=null){
                staffArr.push({
                    id: company.companyId,
                    text: company.companyName
                });
            }
            $(that.element).find('select[name="invoiceName"]').select2({
                tags:true,
                allowClear: true,
                placeholder: "请选择或输入收票方名称!",
                language: "zh-CN",
                data: staffArr
            });
        }
        //初始化iCheck
        ,initICheck:function () {
            var that = this;
            var ifChecked = function (e) {
                that.add_invoice_validate();
                $(that.element).find('.invoice-box').show();
            };
            var ifUnchecked = function (e) {
                that.remove_invoice_validate();
                $(that.element).find('.invoice-box').hide();
            };
            $(that.element).find('input[name="addInvoiceCk"]').iCheck({
                checkboxClass: 'icheckbox_minimal-green',
                radioClass: 'iradio_minimal-green'
            }).on('ifUnchecked.s', ifUnchecked).on('ifChecked.s', ifChecked);
        }
        //保存
        ,save:function () {

            var that = this,option  = {};
            option.classId = that.element;
            option.url = restApi.url_saveReturnMoneyDetail;
            option.postData = {};
            option.postData.projectId = that.settings.projectId;
            option.postData.pointId = that.settings.pointId;
            option.postData.payType = 1;
            option.postData.fee = $(that.element).find('input[name="fee"]').val();

            if($(that.element).find('input[name="addInvoiceCk"]').is(':checked')) {
                option.postData.isInvoice = '1';
                option.postData.applyDate = $(that.element).find('input[name="applyDate"]').val();

                var id = $(that.element).find('select[name="invoiceName"]').val();
                var text = $(that.element).find('select[name="invoiceName"] option:selected').text();
                if(id==text){//输入的
                    option.postData.relationCompanyName = id;
                }else{//选择的
                    option.postData.relationCompanyId = id;
                }

                option.postData.taxIdNumber = $(that.element).find('input[name="taxIdNumber"]').val();
                option.postData.invoiceContent = $(that.element).find('input[name="invoiceContent"]').val();
                option.postData.invoiceRemark = $(that.element).find('textarea[name="invoiceRemark"]').val();
            }

            m_ajax.postJson(option,function (response) {
                if(response.code=='0'){
                    S_toastr.success('保存成功！');
                    if(that.settings.saveCallBack)
                        that.settings.saveCallBack();
                }else {
                    S_dialog.error(response.info);
                }
            });
        }
        //添加回款的表单验证
        ,save_validate:function(){
            var that = this;
            var maxFee = that.settings.maxFee.sub(that.settings.backFee-0);
            $(that.element).find('form').validate({
                rules: {
                    fee:{
                        required: true,
                        number:true,
                        minNumber:true,
                        over10:true,//整数部分是否超过10位
                        pointSix:true,
                        ckFee:true
                    }
                },
                messages: {
                    fee:{
                        required:'发起金额不能为空',
                        number:'请输入有效数字',
                        minNumber:'请输入大于0的数字!',
                        over10:'对不起，您的操作超出了系统允许的范围。合同总金额的单位为“万元”',
                        pointSix:'请保留小数点后六位!',
                        ckFee:'发起回款金额不能大于'+maxFee+'!'

                    }
                },
                errorPlacement: function (error, element) { //指定错误信息位置
                    error.insertAfter(element);
                }
            });
            $.validator.addMethod('minNumber', function(value, element) {
                value = $.trim(value);
                var isOk = true;
                if( value<=0){
                    isOk = false;
                }
                return  isOk;
            }, '请输入大于0的数字!');
            $.validator.addMethod('over10', function (value, element) {
                value = $.trim(value);
                var isOk = true;
                if(parseInt(value).toString().length>10)
                    isOk=false;
                return isOk;
            }, '对不起，您的操作超出了系统允许的范围。合同总金额的单位为“万元”');
            $.validator.addMethod('pointSix', function(value, element) {
                value = $.trim(value);
                var isOk = true;
                if(!regularExpressions.pnumber.test(value)){
                    isOk = false;
                }
                return  isOk;
            }, '请保留小数点后六位!');

            $.validator.addMethod('ckFee', function(value, element) {
                value = $.trim(value);
                var isOk = true;
                var total = maxFee-0;
                if(value>total ){
                    isOk = false;
                }
                return  isOk;
            }, '发起回款金额不能大于'+maxFee+'!');
        }

        //添加发票验证
        ,add_invoice_validate:function () {
            var that = this;
            console.log($(that.element).find('form select[name="invoiceName"]').length)
            $(that.element).find('form select[name="invoiceName"]').rules('add',{
                required:true,
                messages:{
                    required:'请输入收票方名称！'
                }
            });
            $(that.element).find('form input[name="taxIdNumber"]').rules('add',{
                required:true,
                messages:{
                    required:'请输入纳税识别号！'
                }
            });
            $(that.element).find('form input[name="invoiceContent"]').rules('add',{
                required:true,
                messages:{
                    required:'请输入开票内容！'
                }
            });
        }
        //删除发票验证
        ,remove_invoice_validate:function () {
            var that = this;
            $(that.element).find('form select[name="invoiceName"]').rules('remove','required');
            $(that.element).find('form input[name="taxIdNumber"]').rules('remove','required');
            $(that.element).find('form input[name="invoiceContent"]').rules('remove','required');
        }

    });

    /*
     1.一般初始化（缓存单例）： $('#id').pluginName(initOptions);
     2.强制初始化（无视缓存）： $('#id').pluginName(initOptions,true);
     3.调用方法： $('#id').pluginName('methodName',args);
     */
    $.fn[pluginName] = function (options, args) {
        var instance;
        var funcResult;
        var jqObj = this.each(function () {

            //从缓存获取实例
            instance = $.data(this, "plugin_" + pluginName);

            if (options === undefined || options === null || typeof options === "object") {

                var opts = $.extend(true, {}, defaults, options);

                //options作为初始化参数，若args===true则强制重新初始化，否则根据缓存判断是否需要初始化
                if (args === true) {
                    instance = new Plugin(this, opts);
                } else {
                    if (instance === undefined || instance === null)
                        instance = new Plugin(this, opts);
                }

                //写入缓存
                $.data(this, "plugin_" + pluginName, instance);
            }
            else if (typeof options === "string" && typeof instance[options] === "function") {

                //options作为方法名，args则作为方法要调用的参数
                //如果方法没有返回值，funcReuslt为undefined
                funcResult = instance[options].call(instance, args);
            }
        });

        return funcResult === undefined ? jqObj : funcResult;
    };

})(jQuery, window, document);

/**
 * 项目－收款计划
 * Created by wrb on 2018/8/8.
 */
;(function ($, window, document, undefined) {

    "use strict";
    var pluginName = "m_cost_collectionPlan",
        defaults = {
            myTaskId:null,//任务ID
            projectId:null//项目ID
        };

    // The actual plugin constructor
    function Plugin(element, options) {
        this.element = element;

        this.settings = $.extend({}, defaults, options);
        this._defaults = defaults;
        this._name = pluginName;
        this._currentCompanyId = window.currentCompanyId;//当前组织ID
        this._currentCompanyUserId = window.currentCompanyUserId;//当前员工ID
        this._collectionPlan = null;
        this.init();
    }

    // Avoid Plugin.prototype conflicts
    $.extend(Plugin.prototype, {
        init: function () {
            var that = this;
            that.renderPage();
        }
        //初始化数据,生成html
        ,renderPage:function () {

            var that = this;
            var option  = {};
            option.classId = that.element;
            option.url = restApi.url_listProjectCost;
            option.postData = {};
            option.postData.payType = '1';
            option.postData.projectId = that.settings.projectId;
            if(that.settings.myTaskId!=null)
                option.postData.myTaskId = that.settings.myTaskId;

            m_ajax.postJson(option,function (response) {
                if(response.code=='0'){
                    that._collectionPlan = response.data.costList;
                    var html = template('m_cost/m_cost_collectionPlan',{
                        dataList:that._collectionPlan,
                        isFinancial:response.data.isFinancial,
                        isManager:response.data.isManager
                    });
                    $(that.element).html(html);
                    that.bindActionClick();

                    if(that._collectionPlan!=null && that._collectionPlan.length>0){
                        $.each(that._collectionPlan,function (i,item) {

                            var option = {};
                            option.projectCost = item;
                            option.projectId = that.settings.projectId;
                            option.isAppend = true;
                            option.myTaskId = that.settings.myTaskId;
                            $(that.element).find('#collectionPlanBox').m_cost_collectionPlan_item(option,true);
                        });
                    }

                }else {
                    S_dialog.error(response.info);
                }
            })
        }

        //事件绑定
        ,bindActionClick:function () {
            var that = this;
            $(that.element).find('a[data-action]').on('click',function () {
                var $this = $(this),dataAction = $this.attr('data-action');
                switch (dataAction){
                    case 'addCollectionPlan'://添加收款计划

                        var option = {};
                        option.projectId = that.settings.projectId;
                        option.oKCallBack = function () {
                            that.renderPage();
                        };
                        $('body').m_cost_collectionPlan_add(option,true);

                        break;
                }
            });
        }


    });

    /*
     1.一般初始化（缓存单例）： $('#id').pluginName(initOptions);
     2.强制初始化（无视缓存）： $('#id').pluginName(initOptions,true);
     3.调用方法： $('#id').pluginName('methodName',args);
     */
    $.fn[pluginName] = function (options, args) {
        var instance;
        var funcResult;
        var jqObj = this.each(function () {

            //从缓存获取实例
            instance = $.data(this, "plugin_" + pluginName);

            if (options === undefined || options === null || typeof options === "object") {

                var opts = $.extend(true, {}, defaults, options);

                //options作为初始化参数，若args===true则强制重新初始化，否则根据缓存判断是否需要初始化
                if (args === true) {
                    instance = new Plugin(this, opts);
                } else {
                    if (instance === undefined || instance === null)
                        instance = new Plugin(this, opts);
                }

                //写入缓存
                $.data(this, "plugin_" + pluginName, instance);
            }
            else if (typeof options === "string" && typeof instance[options] === "function") {

                //options作为方法名，args则作为方法要调用的参数
                //如果方法没有返回值，funcReuslt为undefined
                funcResult = instance[options].call(instance, args);
            }
        });

        return funcResult === undefined ? jqObj : funcResult;
    };

})(jQuery, window, document);

/**
 * 项目-收支管理-添加收款计划/付款计划
 * Created by wrb on 2018/8/8.
 */
;(function ($, window, document, undefined) {

    "use strict";
    var pluginName = "m_cost_collectionPlan_add",
        defaults = {
            isDialog:true,
            doType:0,//操作类型 0=收款，1=付款
            projectId:null,
            oKCallBack:null//保存回滚事件
        };

    // The actual plugin constructor
    function Plugin(element, options) {
        this.element = element;

        this.settings = $.extend({}, defaults, options);
        this._defaults = defaults;
        this._name = pluginName;
        this._currentUserId = window.currentUserId;
        this._currentCompanyId = window.currentCompanyId;
        this._uploadmgrContainer = null;//上传容器
        this._contactAttachList = [];//关联合同-上传的合同附件
        this._attachList = null;//查询的合同列表

        this._title = '收款';
        if(this.settings.doType==1){//付款
            this.settings.title = '添加付款计划';
            this._title = '付款';
        }

        this.init();
    }

    // Avoid Plugin.prototype conflicts
    $.extend(Plugin.prototype, {
        init: function () {
            var that = this;
            that.renderDialog(function () {
                that.initHtmlData();
            });
        }
        ,renderDialog:function (callBack) {
            var that = this;
            if(that.settings.isDialog){//以弹窗编辑
                S_dialog.dialog({
                    title: that.settings.title||'添加收款计划',
                    contentEle: 'dialogOBox',
                    lock: 3,
                    width: '600',
                    height:'220',
                    //overFlow:'inherit',
                    url: rootPath+'/assets/module/m_common/m_dialog.html',
                    cancel:function(){
                    },
                    okText:'保存',
                    ok:function () {
                        if ($(that.element).find('form.form-horizontal').valid()) {
                            return that.save();
                        }else{
                            return false;
                        }
                    }

                },function(d){//加载html后触发

                    that.element = $('div[id="content:'+d.id+'"] .dialogOBox');

                    if(callBack)
                        callBack();
                });
            }else {//不以弹窗编辑
                if(callBack)
                    callBack();
            }
        }
        //渲染列表内容
        ,initHtmlData:function () {
            var that =this;

            var html = template('m_cost/m_cost_collectionPlan_add',{
                doType:that.settings.doType,
                title:that._title
            });
            $(that.element).html(html);
            that.submit_validate();
            that.initSelect2();
            that.uploadRecordFile();
            that.bindActionClick();


        }
        //select2初始化
        ,initSelect2:function () {
            var that = this;
            $(that.element).find('select[name="feeType"]').select2({
                tags:false,
                allowClear: false,
                //containerCssClass:'select-sm b-r-sm',
                minimumResultsForSearch: -1,
                language: "zh-CN"
            });
            $(that.element).find('select[name="feeType"]').on("change", function (e) {
                var feeType = $(this).val();
                if(isNullOrBlank(feeType))
                    return false;

                var option = {};
                option.url = restApi.url_listCompany;
                option.postData = {};
                option.postData.feeType = feeType;
                option.postData.isPay = that.settings.doType;
                option.postData.projectId = that.settings.projectId;
                m_ajax.postJson(option, function (response) {
                    if (response.code == '0') {

                        that.renderListCompany(response.data);

                    } else {
                        S_dialog.error(response.info);
                    }
                });
            });

            var option = {};
            option.classId = that.element;
            option.url = restApi.url_getProjectContract;
            option.postData = {};
            option.postData.projectId = that.settings.projectId;
            m_ajax.postJson(option, function (response) {
                if (response.code == '0') {

                    that._attachList = response.data;
                    var staffArr = [];
                    var selectArr = response.data;
                    if(selectArr!=null && selectArr.length>0){
                        $.each(selectArr, function (i, o) {
                            staffArr.push({
                                id: o.id,
                                text: o.fileName
                            });
                        });
                    }
                    $(that.element).find('select[name="projectContract"]').select2({
                        //tags: true,
                        tokenSeparators: [',', ' '],
                        multiple: true,
                        placeholder: "请选择或上传关联合同!",
                        language: "zh-CN",
                        data: staffArr
                    });

                    $(that.element).find('.select2-multiple input[type="search"]').on("blur focus",function(){
                        //console.log('blur')
                        var len = $(that.element).find('.select2-multiple .select2-selection__rendered li.select2-selection__choice').length;
                        if(len>0){
                            $(this).css('width','0.75em');
                            $(this).attr('placeholder','');
                        }else{
                            $(this).css('width','390px');
                            $(this).attr('placeholder','请选择或上传关联合同!');
                        }
                    })

                } else {
                    S_dialog.error(response.info);
                }
            });


        }
        //渲染付款单位
        ,renderListCompany:function (data) {
            var that = this;
            var staffArr = [];
            var selectArr = data;
            if(selectArr!=null && selectArr.length>0){
                $.each(selectArr, function (i, o) {
                    staffArr.push({
                        id: o.id,
                        text: o.name
                    });
                });
            }
            $(that.element).find('select[name="receivingUnit"]').select2({
                tags:true,
                allowClear: true,
                //containerCssClass:'select-sm b-r-sm',
                //minimumResultsForSearch: -1,
                placeholder: "请选择或输入付款单位!",
                language: "zh-CN",
                data: staffArr
            });

        }
        //上传附件
        ,uploadRecordFile: function () {
            var that = this;
            $(that.element).find('button[data-action="upload"]').m_fileUploader({
                server: restApi.url_attachment_uploadCostPlanAttach,
                fileExts: 'pdf',
                fileSingleSizeLimit:20*1024*1024,
                formData: {},
                multiple:true,
                //duplicate:false,
                loadingId: that.element,
                innerHTML: '上传',
                uploadBeforeSend: function (object, data, headers) {
                    data.companyId = window.currentCompanyId;
                    data.accountId = window.currentUserId;
                    data.projectId = that.settings.projectId;

                },
                uploadSuccessCallback: function (file, response) {
                    //console.log(response)
                    S_toastr.success('上传成功！');

                    //上传后append到文件选择框
                    var $ele = $(that.element).find('.select2-multiple .select2-selection__rendered');
                    var iHtml = '<li class="select2-selection__choice" title="'+response.data.fileName+'" data-id="'+response.data.netFileId+'">' +
                        '<span class="select2-selection__choice__remove" role="presentation">×</span>'+response.data.fileName+'</li>';

                    $(that.element).find('.select2-multiple .select2-selection__rendered .select2-search--inline').before(iHtml);
                    that._contactAttachList.push(response.data.netFileId);

                    $(that.element).find('.select2-multiple input[type="search"]').css('width','0.75em');
                    $(that.element).find('.select2-multiple input[type="search"]').attr('placeholder','');

                    //删除事件绑定
                    $ele.find('li.select2-selection__choice').last().find('.select2-selection__choice__remove').on('click',function () {

                        var id = $(this).parent().attr('data-id');
                        that._contactAttachList.splice(that._contactAttachList.indexOf(id),1);
                        $(this).parent().remove();
                    });
                }
            },true);
        }
        ,save:function () {
            var that =this;
            var option = {};
            option.classId = '#content-right';
            option.url = restApi.url_saveProjectCost;
            option.postData = {};
            option.postData.projectId = that.settings.projectId;

            if(that.settings.doType==0){
                option.postData.fromCompanyId = $(that.element).find('select[name="receivingUnit"]').val();
            }else{
                option.postData.toCompanyId = $(that.element).find('select[name="receivingUnit"]').val();
            }

            option.postData.fee = $(that.element).find('input[name="fee"]').val();
            option.postData.type = $(that.element).find('select[name="feeType"]').val();

            var contactAttactList = [];
            //从select选择的
            var selectedAttact = $(that.element).find('select[name="projectContract"]').val();
            if(selectedAttact!=null && selectedAttact.length>0){
                $.each(selectedAttact,function (i,item) {
                    contactAttactList.push({id:item})
                })
            }

            if(that._contactAttachList.length>0){
                $.each(that._contactAttachList,function (i,item) {
                    contactAttactList.push({id:item,isUploadFile:1})
                })
            }
            option.postData.contactAttachList = contactAttactList;
            option.postData.payType = that.settings.doType==0?1:2;
            m_ajax.postJson(option, function (response) {
                if (response.code == '0') {

                    if(that.settings.oKCallBack)
                        that.settings.oKCallBack();

                } else {
                    S_dialog.error(response.info);
                }
            });
        }
        //事件绑定
        ,bindActionClick:function () {
            var that = this;
            $(that.element).find('a[data-action]').off('click').on('click',function () {
                var $this = $(this),dataAction = $this.attr('data-action');
                switch (dataAction){
                    case 'getProjectContract'://选择合同

                        var $ele = $(that.element).find('input[name="projectContract"]');
                        var val = $ele.val();
                        if($ele.val()==''){
                            $ele.val($this.text());
                        }else{
                            $ele.val(val+','+$this.text());
                        }


                        return false;
                        break;
                }

            });
            $(that.element).find('input[name="projectContract"],input[name="receivingUnit"]').click(function (e) {
                $(this).parent().find('button[data-toggle="dropdown"]').click();
                e.stopPropagation()
            });

        }
        //保存验证
        , submit_validate: function () {
            var that = this;
            $(that.element).find('form.form-horizontal').validate({
                rules: {
                    conditionalVal: {
                        ckIsEmpty:true,
                        ckIsNumber:true
                    }
                },
                messages: {
                    conditionalVal: {
                        ckIsEmpty: '请输入数值区间！',
                        ckIsNumber:'请输入数字！'
                    }
                },
                errorElement: "label",  //用来创建错误提示信息标签
                errorPlacement: function (error, element) {  //重新编辑error信息的显示位置
                    error.appendTo(element.closest('.form-group'));
                }
            });
            $.validator.addMethod('ckIsEmpty', function(value, element) {
                var isOk = true;
                $(that.element).find('input[name="conditionalVal"]').each(function () {
                    var val = $(this).val();
                    if($.trim(val)==''){
                        isOk = false;
                        return false;
                    }
                });
                return  isOk;
            }, '请输入数值区间！');
            $.validator.addMethod('ckIsNumber', function(value, element) {
                var isOk = true;
                $(that.element).find('input[name="conditionalVal"]').each(function () {
                    var val = $(this).val();
                    if(!regularExpressions.number.test(val)){
                        isOk = false;
                        return false;
                    }
                });
                return  isOk;
            }, '请输入数字！');
        }
    });

    /*
     1.一般初始化（缓存单例）： $('#id').pluginName(initOptions);
     2.强制初始化（无视缓存）： $('#id').pluginName(initOptions,true);
     3.调用方法： $('#id').pluginName('methodName',args);
     */
    $.fn[pluginName] = function (options, args) {
        var instance;
        var funcResult;
        var jqObj = this.each(function () {

            //从缓存获取实例
            instance = $.data(this, "plugin_" + pluginName);

            if (options === undefined || options === null || typeof options === "object") {

                var opts = $.extend(true, {}, defaults, options);

                //options作为初始化参数，若args===true则强制重新初始化，否则根据缓存判断是否需要初始化
                if (args === true) {
                    instance = new Plugin(this, opts);
                } else {
                    if (instance === undefined || instance === null)
                        instance = new Plugin(this, opts);
                }

                //写入缓存
                $.data(this, "plugin_" + pluginName, instance);
            }
            else if (typeof options === "string" && typeof instance[options] === "function") {

                //options作为方法名，args则作为方法要调用的参数
                //如果方法没有返回值，funcReuslt为undefined
                funcResult = instance[options].call(instance, args);
            }
        });

        return funcResult === undefined ? jqObj : funcResult;
    };

})(jQuery, window, document);

/**
 * 项目信息－收款计划列表-子项
 * Created by wrb on 2018/8/10.
 */
;(function ($, window, document, undefined) {

    "use strict";
    var pluginName = "m_cost_collectionPlan_item",
        defaults = {
            myTaskId:null,//任务ID
            projectId:null,
            isAppend:false,//是否追加到that.element
            projectCost:null//合同回款对象
        };

    // The actual plugin constructor
    function Plugin(element, options) {
        this.element = element;

        this.settings = $.extend({}, defaults, options);
        this._defaults = defaults;
        this._name = pluginName;
        this._currentCompanyId = window.currentCompanyId;//当前组织ID
        this._projectCost = this.settings.projectCost;
        this._pageText = {};//界面的文字
        this.init();
    }

    // Avoid Plugin.prototype conflicts
    $.extend(Plugin.prototype, {
        init: function () {
            var that = this;

            if(that.settings.isAppend){
                $(that.element).append('<div class="panel revenue-expenditure" data-id="'+that._projectCost.costId+'"></div>');
                that.element = '.panel[data-id="'+that._projectCost.costId+'"]';
            }

            that.initHtml();

        }
        //初始化数据,生成html
        ,initHtml:function (t) {
            var that = this;
            that.postData(function () {

                that.initText();
                that._projectCost.currentCompanyId = that._currentCompanyId;
                var html = template('m_cost/m_cost_collectionPlan_item',that._projectCost);
                $(that.element).html(html);

                $(that.element).find('span[data-toggle="tooltip"]').tooltip();

                rolesControl();//权限控制初始化
                stringCtrl('feeDescription');

                that.bindEditable();
                that.bindActionClick();
                that.initiatedContract();
                that.initEditCostPoint();
            },t);
        }
        //{t==1，重新请求数据}
        ,postData:function (callBack,t) {

            var that = this;
            //重新请求数据
            if(t==1 || that._projectCost==null){
                var option  = {};
                option.classId = that.element;
                option.url = restApi.url_listProjectCost;
                option.postData = {};
                option.postData.payType = '1';
                option.postData.projectId = that.settings.projectId;
                option.postData.costId = that._projectCost.costId;
                if(that.settings.myTaskId!=null)
                    option.postData.myTaskId = that.settings.myTaskId;

                m_ajax.postJson(option,function (response) {
                    if(response.code=='0'){

                        that._projectCost = response.data.costList[0];
                        if(callBack!=null)
                            callBack();
                    }else {
                        S_dialog.error(response.info);
                    }
                })
            }else{
                if(callBack!=null)
                    callBack();
            }
        }
        //初始化文字
        ,initText : function () {
            var that = this;

            switch (that._projectCost.type){
                case '1': //合同回款
                    that._pageText = {
                        title:'合同回款'
                    };
                    break;
                case '2': //技术审查费
                    that._pageText = {
                        title:'技术审查费'
                    };
                    break;
                case '3': //合作设计费
                    that._pageText = {
                        title:'合作设计费'
                    };
                    break;
                case '4': //
                    that._pageText = {
                        title:'合同回款'
                    };
                    break;
                case '5': //其他收款
                    that._pageText = {
                        title:'其他收款'
                    };
                    break;
            }
            that._projectCost.pageText = that._pageText;
        }
        //初始化合同总金额 － 在位编辑
        ,bindEditable:function () {
            var that = this;
            var $this = $(that.element).find('a.totalContract');
            $this.editable({//编辑
                type: 'text',
                title: '合同总金额',
                emptytext:'0',
                savenochange:true,
                placeholder: '金额',
                value: ($this.text().indexOf('未设置')>-1||$this.attr('data-value')=='')?'':$.trim($this.attr('data-value')),
                success: function(response, newValue) {
                    that.saveInitContract(newValue);
                },
                display: function(value, sourceData) {},
                validate: function(value) {
                    var errTips = '';
                    if($.trim(value) == ''){
                        errTips = '合同总金额不能为空';
                    }else if(parseInt(value).toString().length>10){
                        errTips = '对不起，您的操作超出了系统允许的范围。合同总金额的单位为“万元”'
                    }else if(value<=0){
                        errTips = '请输入大于0的数字'
                    }else{
                        var pnumber = regularExpressions.pnumber;
                        if(!pnumber.test(value)){
                            errTips = '请保留小数点后六位!';
                        }
                    }
                    return errTips;
                }
            });
        }
        //编辑任务名称
        ,saveInitContract:function (newValue) {

            var that = this,option  = {};
            option.classId = that.element;
            option.url = restApi.url_saveProjectCost;
            var param ={};
            param.fee = newValue;
            param.type = that._projectCost.type;
            param.projectId = that.settings.projectId;
            if(that._projectCost!=null && that._projectCost.costId!=null && that._projectCost.costId!=''){
                param.id = that._projectCost.costId;
            }
            option.postData = param;
            m_ajax.postJson(option,function (response) {
                if(response.code=='0'){
                    S_toastr.success('保存成功！');
                    that.initHtml(1);

                }else {
                    S_dialog.error(response.info);
                }
            })
        }

        //发起回款
        ,initiatedContract:function () {
            var that = this;

            $(that.element).find('a[data-action="initiatedContract"]').on('click',function () {
                var option={};
                option.relationCompany = that._projectCost.relationCompany;
                option.backFee = $(this).closest('tr').attr('data-backfee')-0;
                option.maxFee = $(this).closest('tr').attr('data-fee')-0;
                option.pointId = $(this).attr('data-id');
                option.projectId = that.settings.projectId;
                option.saveCallBack = function () {
                    that.initHtml(1);
                };
                $('body').m_cost_addPayment(option,true);
            });
        }

        //初始化编辑x-editable{dataEditType:1=节点描述，2＝比例，3＝金额，4＝明细金额,6=明细到账金额}
        ,initEditCostPoint:function () {
            var that = this,projectId = that.settings.projectId;

            $(that.element).find('a[data-action="editContract"][data-edit-type="2"],a[data-action="editContract"][data-edit-type="3"]').on('click',function () {
                var options = {},_this = this;

                var dataEditType = $(this).attr('data-edit-type');

                options.content = template('m_cost/m_editFee');
                options.titleHtml = '<h3 class="popover-title">编辑</h3>';
                options.closeOnDocumentClicked=function (e) {

                    if($(e.target).closest('.ui-popup-backdrop').length > 0 || $(e.target).closest('.ui-popup').length > 0){
                        return false;
                    }
                };
                options.onShown = function ($popover) {
                    //恢复浮动窗口里的值
                    var feeProportion = $(_this).closest('TR').find('td.feeProportion').attr('data-value');
                    var fee = $(_this).closest('TR').find('td.fee').attr('data-value');

                    $popover.find('input[name="feeProportion"]').val(feeProportion);
                    $popover.find('input[name="fee"]').val(fee);
                    that.bindFeeCalculation($popover);
                    that.saveCostFee_validate($popover);
                };
                options.onSave = function ($popover) {

                    var flag = $($popover).find('form').valid();
                    if (!flag) {
                        return false;
                    }else {

                        var $data = {};
                        $data.id = $(_this).attr('data-id');
                        $data.feeProportion = parseFloat($popover.find('input[name="feeProportion"]').val());
                        $data.fee = $popover.find('input[name="fee"]').val();

                        if(that.saveConstPoint($data,dataEditType)){
                            return false;
                        }
                    }
                };

                $(this).m_popover(options,true);
            });

            $(that.element).find('a[data-action="editContract"]').each(function () {
                var $this = $(this);
                var placeholder = $(this).attr('data-edit-type')==1?'描述':'金额';
                var dataEditType = $(this).attr('data-edit-type');
                var text = $(this).parent().attr('data-string');//当存在data-string 表示节点描述需要控制字数展示(此处多一个外元素包含)
                if(text==undefined){
                    text = $.trim($(this).closest('td').attr('data-value'));
                }
                if(!(dataEditType==2 || dataEditType==3)){
                    $(this).editable({//编辑
                        type: 'text',
                        title: '编辑',
                        emptytext:'0',
                        value:text==null||text==''||text===void 0?'':$.trim(text),
                        savenochange:true,
                        placeholder: placeholder,
                        closeClass:['.ui-popup-backdrop','.ui-popup'],
                        success: function(response, newValue,event) {
                            var $data = {};

                            $data.id = $(this).attr('data-id');

                            if(dataEditType==1){//节点名称
                                $data.feeDescription = newValue;
                            }else if(dataEditType==2){
                                $data.feeProportion = newValue;
                            }else if(dataEditType==6){
                                $data.paidFee = newValue;
                            }else{//节点金额、明细金额
                                $data.fee = newValue;
                            }
                            if(dataEditType==4 || dataEditType==6){
                                $data.pointId = $(this).attr('data-point-id');
                            }
                            if(that.saveConstPoint($data,dataEditType)){
                                return false;
                            }
                        },
                        display: function(value) {
                        },
                        validate: function(value) {

                            if($(this).attr('data-edit-type')==1){
                                if($.trim(value) == ''){
                                    return '请输入回款节点描述';
                                }else if($.trim(value).length>250){
                                    return '节点描述不超过250位!';
                                }
                            }else{
                                var errTips = '';
                                if($.trim(value) == ''){
                                    errTips = '发起回款金额不能为空!';
                                }else if(dataEditType==4){
                                    errTips = that.saveFee_validate(value,$this);
                                }
                                return errTips;
                            }
                        }
                    });
                }
            });
        }
        //编辑节点名称，金额，明细金额
        ,saveConstPoint:function (data,dataEditType) {
            var that = this,option  = {},isError = false;
            option.classId = that.element;
            if(dataEditType==4 || dataEditType==6){//费用明细
                option.url = restApi.url_saveReturnMoneyDetail;
            }else{//费用节点
                option.url = restApi.url_saveProjectCostPoint;
            }
            option.async = false;
            option.postData = data;
            option.postData.projectId = that.settings.projectId;
            option.postData.type = 1;
            m_ajax.postJson(option,function (response) {
                if(response.code=='0'){
                    S_toastr.success('保存成功！');

                    that.initHtml(1);

                }else {
                    S_dialog.error(response.info);
                    isError = true;
                }
            });
            return isError;
        }
        //事件绑定
        ,bindActionClick:function () {
            var that = this;

            $(that.element).find('a[data-action]').on('click',function () {
                var $this = $(this), dataAction = $this.attr('data-action');
                var pointId = $this.closest('tr').attr('data-id');//节点ID
                var dataId = $this.attr('data-id');//当前元素赋予的ID
                //获取节点数据
                var dataItem = getObjectInArray(that._projectCost.pointList,pointId);
                //获取子节点数据
                var dataSubItem = dataItem==null?null: getObjectInArray(dataItem.pointDetailList,dataId);

                switch (dataAction) {
                    case 'addContract':
                        if(that._projectCost.totalCost==null || that._projectCost.totalCost<=0){
                            S_toastr.warning('请确定合同总金额！');
                            return false;
                        }
                        var options = {};
                        options.projectId = that.settings.projectId;
                        options.totalCost = that._projectCost.totalCost;
                        options.costId = that._projectCost.costId;
                        options.saveCallBack = function () {
                            that.initHtml(1);
                        };
                        $('body').m_cost_addNode(options);
                        break;

                    case 'delCostPointDetail'://删除费用明细

                        S_dialog.confirm('删除后将不能恢复，您确定要删除吗？', function () {

                            var option = {};
                            option.url = restApi.url_deleteProjectCostPointDetail+'/'+$this.attr('data-id');
                            m_ajax.get(option, function (response) {
                                if (response.code == '0') {
                                    S_toastr.success('删除成功！');
                                    that.initHtml(1);
                                } else {
                                    S_dialog.error(response.info);
                                }
                            });

                        }, function () {
                        });
                        break;

                    case 'delCostPoint'://删除费用节点

                        S_dialog.confirm('删除后将不能恢复，您确定要删除吗？', function () {

                            var option = {};
                            option.url = restApi.url_deleteProjectCostPoint+'/'+$this.attr('data-id');
                            m_ajax.get(option, function (response) {
                                if (response.code == '0') {
                                    S_toastr.success('删除成功！');
                                    that.initHtml(1);
                                } else {
                                    S_dialog.error(response.info);
                                }
                            });

                        }, function () {
                        });
                        break;

                    case 'delPaidFee'://删除到账节点

                        S_dialog.confirm('删除后将不能恢复，您确定要删除吗？', function () {

                            var option = {};
                            option.url = restApi.url_deleteProjectCostPaymentDetail+'/'+$this.attr('data-id');
                            m_ajax.get(option, function (response) {
                                if (response.code == '0') {
                                    S_toastr.success('删除成功！');
                                    that.initHtml(1);
                                } else {
                                    S_dialog.error(response.info);
                                }
                            });

                        }, function () {
                        });
                        break;

                    case 'costConfirm':
                        var taskId = $this.attr('data-id');
                        $this.m_popover({
                            titleHtml: '<h3 class="popover-title">编辑</h3>',
                            placement: 'left',
                            content: template('m_cost/m_cost_addPaidFee', {}),
                            onShown: function ($popover) {

                                var fee = $this.closest('.footTools2').siblings('p[name="fee"]:first').html();

                                $popover.find('input[name="fee"]:first').val(fee);

                                var dateStr = getNowDate();
                                $popover.find('input[name="paidDate"]:first').val(dateStr);
                                $popover.find('.input-group-addon').on('click',function(e){

                                    $(this).prev('input').focus();
                                    stopPropagation(e);
                                });
                                that.saveCostFee_validate($popover);
                            },
                            onSave: function ($popover) {

                                var fee = $popover.find('input[name="fee"]:first').val();
                                var paidDate = $popover.find('input[name="paidDate"]:first').val();

                                var flag = $($popover).find('form').valid();
                                if (!flag) {
                                    return false;
                                }else {
                                    var option = {};
                                    option.url = restApi.url_handleMyTask;
                                    option.postData = {id: taskId, status: '1', result: fee,paidDate:paidDate};
                                    m_ajax.postJson(option, function (response) {
                                        if (response.code == '0') {
                                            S_toastr.success('操作成功');
                                            that.initHtml(1);
                                        } else {
                                            S_dialog.error(response.info);
                                        }
                                    });
                                }
                            }
                        }, true);
                        return false;
                        break;

                    case 'confirmInvoice'://确认开票

                        var option = {};
                        option.invoiceId = $this.attr('data-invoice');
                        option.pointInfo = {
                            fee:dataSubItem.fee
                        };
                        option.taskId = dataSubItem.roleMap.invoiceConfirm;
                        option.projectId = that.settings.projectId;
                        option.saveCallBack = function () {
                            that.initHtml(1);
                        };
                        $('body').m_cost_confirmInvoice(option,true);
                        break;
                }

            });
        }
        //当存在到账节点时，修改明细金额需进行验证
        ,saveFee_validate:function(value,$obj){
            var that = this,errTips='';
            var maxLimit = $.trim($obj.closest('tr').attr('data-fee'))-0;
            var hasFee = ($obj.closest('tr').attr('data-backFee')-0).sub($.trim($obj.closest('td').attr('data-value'))-0);
            var minLimit = 0;
            var pnumber = regularExpressions.pnumber;
            value = $.trim(value)-0;
            if( value<=0){
               return '请输入大于0的数字';
            }
            if(parseInt(value).toString().length>10){
                return '对不起，您的操作超出了系统允许的范围。合同总金额的单位为“万元”'
            }
            if(!pnumber.test(value-0)){
                return '请保留小数点后六位!';
            }

            $obj.closest('tr').find('div.bPaidFee').each(function(){
                minLimit += ($(this).find('span').text()-0);
            });
            if(!(value>=minLimit && (value.add(hasFee))<=maxLimit)){
                if(minLimit==0){
                    errTips  = '请输入大于0且不超过'+maxLimit.sub(hasFee)+'的数字!'
                }else{
                    errTips = '请输入区间为'+minLimit+'到'+maxLimit.sub(hasFee)+'的数字!'
                }
            }
            return errTips;

        }
        //金额比例验证
        ,saveCostFee_validate:function(ele){
            var that = this;
            var flag = $(ele).closest('.popover').prev('a[data-action="costConfirm"]').length>0;
            var limit=$(ele).closest('tr').attr('data-backfee');
            var limit0=(ele).prev().attr('data-limit');
            var title=$(ele).closest('.popover').prev('a').attr('data-action')=="costConfirm"?"到账":"回款";
            $(ele).find('form').validate({
                rules: {
                    feeProportion:{
                        required:true,
                        number:true,
                        limitProportion:true,
                        pointNumber:true
                    },
                    fee:{
                        required:true,
                        number:true,
                        minNumber:true,
                        feeLimit:flag,
                        ckFee:true,//验证数字
                        over10:true,//整数部分是否超过10位
                        ckFee2:!flag,//验证是否超过合同总金额
                        notReachFee:!flag//验证是否超过合同总金额
                    },
                    paidDate:{
                        required:true
                    }

                },
                messages: {
                    feeProportion:{
                        required:'请输入比例!',
                        number:'请输入有效数字',
                        limitProportion:'请输入0到100之间的数字!',
                        pointNumber:'请保留小数点后两位!'
                    },
                    fee:{
                        required:title+'金额不能为空!',
                        number:'请输入有效数字',
                        minNumber:'请输入大于0的数字!',
                        feeLimit:title+'金额不能超过'+limit0+'!',
                        over10:'对不起，您的操作超出了系统允许的范围。合同总金额的单位为“万元”',
                        ckFee:'请保留小数点后六位!',
                        ckFee2:title+'金额不能超过合同总金额!',
                        notReachFee:title+'金额不能小于'+limit+'!'
                    },
                    paidDate:{
                        required:'请选择'+title+'日期!'
                    }
                },
                errorPlacement: function (error, element) { //指定错误信息位置
                    if ($(element).attr('data-action')=='feeCalculation') {
                        error.appendTo(element.closest('.form-group'));
                    }
                    else {
                        error.appendTo(element.closest('.col-24-md-16'));
                    }
                }
            });
            $.validator.addMethod('limitProportion', function(value, element) {
                value = $.trim(value);
                var isOk = true;
                if( value<=0 || value>100){
                    isOk = false;
                }
                return  isOk;
            }, '请输入0到100之间的数字!');
            $.validator.addMethod('minNumber', function(value, element) {
                value = $.trim(value);
                var isOk = true;
                if( value<=0){
                    isOk = false;
                }
                return  isOk;
            }, '请输入大于0的数字!');
            $.validator.addMethod('pointNumber', function(value, element) {
                value = $.trim(value);
                var isOk = true;
                if(!regularExpressions.proportionnumber.test(value)){
                    isOk = false;
                }
                return  isOk;
            }, '请保留小数点后两位!');
            $.validator.addMethod('feeLimit', function(value, element) {
                var $plus_T = $(element).closest('.popover').prev('a[data-action="costConfirm"]');
                var maxLimit = $(ele).prev('a[data-action="costConfirm"]').attr("data-limit")-0;
                value = $.trim(value);
                var isOk = true;
                if(!(value<=maxLimit)){
                    isOk = false;
                }
                return  isOk;
            }, '数字不能超过发起到账金额!');
            $.validator.addMethod('ckFee', function(value, element) {
                var isOk = true;
                if(!regularExpressions.pnumber.test(value)){
                    isOk = false;
                }
                return  isOk;

            }, '请保留小数点后六位!');
            $.validator.addMethod('over10', function(value, element) {
                value = $.trim(value);
                var isOk = true;
                if(parseInt(value).toString().length>10){
                    isOk = false;
                }
                return  isOk;

            }, '对不起，您的操作超出了系统允许的范围。合同总金额的单位为“万元”');
            $.validator.addMethod('ckFee2', function(value, element) {

                return  that.validator_ckFee(value);
            }, '数字不能超过合同总金额!');
            $.validator.addMethod('notReachFee', function(value, element) {
                value = value-0;
                var backFee = $(element).closest('tr').attr('data-backFee')-0;
                if(value<backFee){
                    return false;
                }else{
                    return true;
                }

            }, '输入金额不能小于发起回款金额!');
        }
        //金额验证
        ,validator_ckFee:function (value) {
            var that = this;
            var totalCost = that._projectCost.totalCost;
            value = $.trim(value);
            var isOk = true;
            var total = totalCost-0;
            if(value>total){
                isOk = false;
            }
            return isOk;
        }

        //金额比例计算
        ,bindFeeCalculation:function (ele) {
            var that = this;
            $(ele).find('input[data-action="feeCalculation"]').keyup(function () {

                var name = $(this).attr('name');
                var val = $(this).val();
                var total = that._projectCost.totalCost;
                if(name=='feeProportion'){//比例
                    var fee = (val-0)*(total-0)/100;
                    fee = decimal(fee,7);
                    fee = parseFloat(decimal(fee,6));
                    $(ele).find('input[name="fee"]').val(fee);
                }
                if(name=='fee'){//金额
                    var proportion = (val-0)/(total-0)*100;
                    proportion = decimal(proportion,3);
                    proportion = decimal(proportion,2);
                    $(ele).find('input[name="feeProportion"]').val(proportion);
                }

            });
        }


    });

    $.fn[pluginName] = function (options) {
        return this.each(function () {

            //if (!$.data(this, "plugin_" + pluginName)) {
            $.data(this, "plugin_" +
                pluginName, new Plugin(this, options));
            //}
        });
    };

})(jQuery, window, document);

/**
 * 项目信息－收款计划-发起收款
 * Created by wrb on 2018/8/10.
 */
;(function ($, window, document, undefined) {

    "use strict";
    var pluginName = "m_cost_confirmInvoice",
        defaults = {
            isDialog:true,
            projectId:null,
            invoiceId:null,//发票ID
            pointInfo:null,//节点信息
            taskId:null,//任务ID
            saveCallBack:null
        };

    // The actual plugin constructor
    function Plugin(element, options) {
        this.element = element;

        this.settings = $.extend({}, defaults, options);
        this._defaults = defaults;
        this._name = pluginName;
        this._currentCompanyId = window.currentCompanyId;//当前组织ID
        this.init();
    }

    // Avoid Plugin.prototype conflicts
    $.extend(Plugin.prototype, {
        init: function () {
            var that = this;
            that.renderDialog(function () {

                var option  = {};
                option.classId = that.element;
                option.url = restApi.url_getInvoice;
                option.postData = {
                    id:that.settings.invoiceId
                };

                m_ajax.postJson(option,function (response) {
                    if(response.code=='0'){

                        var html = template('m_cost/m_cost_confirmInvoice',{
                            pointInfo:that.settings.pointInfo,
                            invoiceInfo:response.data
                        });
                        $(that.element).html(html);
                        that.renderListCompany();
                        that.initICheck();
                        that.save_validate();
                        clickTimeIcon($(that.element));

                    }else {
                        S_dialog.error(response.info);
                    }
                });


            });
        },
        //初始化数据,生成html
        renderDialog:function (callBack) {

            var that = this;
            if(that.settings.isDialog){//以弹窗编辑
                S_dialog.dialog({
                    title: that.settings.title||'确认开票',
                    contentEle: 'dialogOBox',
                    lock: 3,
                    width: '705',
                    minHeight: '300',
                    tPadding: '0px',
                    url: rootPath+'/assets/module/m_common/m_dialog.html',
                    cancel:function () {

                    },
                    ok:function () {
                        var flag = $(that.element).find('form').valid();
                        if (!flag || that.save()) {
                            return false;
                        }
                    }
                },function(d){//加载html后触发
                    that.element = 'div[id="content:'+d.id+'"] .dialogOBox';
                    if(callBack!=null)
                        callBack();

                });
            }else{//不以弹窗编辑
                if(callBack!=null)
                    callBack();
            }
        }
        //渲染收票方
        ,renderListCompany:function () {
            var that = this;
            var staffArr = [];
            var company = that.settings.relationCompany;
            if(company!=null){
                staffArr.push({
                    id: company.companyId,
                    text: company.companyName
                });
            }
            $(that.element).find('select[name="invoiceName"]').select2({
                tags:true,
                allowClear: true,
                placeholder: "请选择或输入收票方名称!",
                language: "zh-CN",
                data: staffArr
            });
        }
        //初始化iCheck
        ,initICheck:function () {
            var that = this;
            var ifChecked = function (e) {
            };
            var ifUnchecked = function (e) {
            };
            var ifClicked = function (e) {
                console.log($(this).val())
                if($(this).val()==2){
                    $(that.element).find('.invoice-box').show();
                }else{
                    $(that.element).find('.invoice-box').hide();
                }

            };
            $(that.element).find('input[name="invoiceType"]').iCheck({
                checkboxClass: 'icheckbox_minimal-green',
                radioClass: 'iradio_square-blue'
            }).on('ifUnchecked.s', ifUnchecked).on('ifChecked.s', ifChecked).on('ifClicked',ifClicked);

        }
        //保存
        ,save:function () {

            var that = this,option  = {};
            option.classId = that.element;
            option.url = restApi.url_handleMyTask;
            option.postData = {};

            option.postData.invoiceData = $(that.element).find("form.form-horizontal").serializeObject();
            option.postData.invoiceData.id = that.settings.invoiceId;
            option.postData.projectId = that.settings.projectId;
            option.postData.id = that.settings.taskId;


            m_ajax.postJson(option,function (response) {
                if(response.code=='0'){
                    S_toastr.success('保存成功！');
                    if(that.settings.saveCallBack)
                        that.settings.saveCallBack();
                }else {
                    S_dialog.error(response.info);
                }
            });
        }
        //添加回款的表单验证
        ,save_validate:function(){
            var that = this;
            $(that.element).find('form').validate({
                rules: {
                    invoiceNo:{
                        required: true
                    },
                    address:{
                        required: true
                    },
                    cellphone:{
                        required: true
                    },
                    accountBank:{
                        required: true
                    },
                    bankNo:{
                        required: true
                    }
                },
                messages: {
                    invoiceNo:{
                        required:'请输入发票号！'

                    },
                    address:{
                        required: '请输入地址！'
                    },
                    cellphone:{
                        required: '请输入电话！'
                    },
                    accountBank:{
                        required: '请输入开户行！'
                    },
                    bankNo:{
                        required: '请输入账号！'
                    }

                },
                errorPlacement: function (error, element) { //指定错误信息位置
                    error.insertAfter(element);
                }
            });
        }

    });

    /*
     1.一般初始化（缓存单例）： $('#id').pluginName(initOptions);
     2.强制初始化（无视缓存）： $('#id').pluginName(initOptions,true);
     3.调用方法： $('#id').pluginName('methodName',args);
     */
    $.fn[pluginName] = function (options, args) {
        var instance;
        var funcResult;
        var jqObj = this.each(function () {

            //从缓存获取实例
            instance = $.data(this, "plugin_" + pluginName);

            if (options === undefined || options === null || typeof options === "object") {

                var opts = $.extend(true, {}, defaults, options);

                //options作为初始化参数，若args===true则强制重新初始化，否则根据缓存判断是否需要初始化
                if (args === true) {
                    instance = new Plugin(this, opts);
                } else {
                    if (instance === undefined || instance === null)
                        instance = new Plugin(this, opts);
                }

                //写入缓存
                $.data(this, "plugin_" + pluginName, instance);
            }
            else if (typeof options === "string" && typeof instance[options] === "function") {

                //options作为方法名，args则作为方法要调用的参数
                //如果方法没有返回值，funcReuslt为undefined
                funcResult = instance[options].call(instance, args);
            }
        });

        return funcResult === undefined ? jqObj : funcResult;
    };

})(jQuery, window, document);

/**
 * 收支管理-菜单
 * Created by wrb on 2018/8/8.
 */
;(function ($, window, document, undefined) {

    "use strict";
    var pluginName = "m_cost_menu",
        defaults = {
            projectId:null,
            projectName:null,
            myTaskId:null,//任务ID
            dataAction:null//记录页面的key
        };

    // The actual plugin constructor
    function Plugin(element, options) {
        this.element = element;

        this.settings = $.extend({}, defaults, options);
        this._defaults = defaults;
        this._name = pluginName;
        this._currentCompanyId = window.currentCompanyId;//当前组织ID
        this._currentCompanyUserId = window.currentCompanyUserId;//当前员工ID
        this.init();
    }

    // Avoid Plugin.prototype conflicts
    $.extend(Plugin.prototype, {
        init: function () {
            var that = this;
            that.initHtmlData();
        }
        //初始化数据并加载模板
        ,initHtmlData:function () {
            var that = this;

            var html = template('m_cost/m_cost_menu',{
                id:that.settings.projectId,
                projectName:that.settings.projectName,
                projectNameCode:encodeURI(that.settings.projectName)
            });
            $(that.element).html(html);
            var dataAction = $(that.element).find('li:eq(0) a').attr('id');
            if(that.settings.dataAction!=null){
                dataAction = that.settings.dataAction;
            }

            that.switchPage(dataAction);
        }
        //菜单点击事件
        , menuClickFun:function () {
            var that = this;
            $(that.element).find('.secondary-menu-ul li a').on('click',function () {
                var id = $(this).parent().attr('id');
                $(this).parent().addClass('active').siblings().removeClass('active');
            });
        }
        //切换页面
        , switchPage: function (dataAction) {
            var that = this;
            switch (dataAction) {
                case 'costDetails'://收支明细
                    that.costDetails();
                    break;
                case 'collectionPlan'://收款计划
                    that.collectionPlan();
                    break;
                case 'paymentPlan'://付款计划
                    that.paymentPlan();
                    break;
                default:
                    dataAction = 'collectionPlan';
                    that.collectionPlan();
                    break;
            }

            $(that.element).find('ul.secondary-menu-ul li a[id="'+dataAction+'"]').parent().addClass('active').siblings().removeClass('active');
            var name = $(that.element).find('ul.secondary-menu-ul li.active a[id="'+dataAction+'"]').text();
            $(that.element).find('.breadcrumb li.active strong').text(name);

        }
        //收支明细
        ,costDetails:function () {
            var that = this;
            var options = {};
            $(that.element).find('#content-box').m_cost_details(options, true);
        }
        //收款计划
        ,collectionPlan:function () {
            var that = this;
            var options = {};
            options.projectId = that.settings.projectId;
            options.myTaskId = that.settings.myTaskId;
            $(that.element).find('#content-box').m_cost_collectionPlan(options, true);
        }
        //付款计划
        ,paymentPlan:function () {
            var that = this;
            var options = {};
            options.projectId = that.settings.projectId;
            options.myTaskId = that.settings.myTaskId;
            $(that.element).find('#content-box').m_cost_paymentPlan(options, true);
        }



    });

    /*
    1.一般初始化（缓存单例）： $('#id').pluginName(initOptions);
    2.强制初始化（无视缓存）： $('#id').pluginName(initOptions,true);
    3.调用方法： $('#id').pluginName('methodName',args);
    */
    $.fn[pluginName] = function (options, args) {
        var instance;
        var funcResult;
        var jqObj = this.each(function () {

            //从缓存获取实例
            instance = $.data(this, "plugin_" + pluginName);

            if (options === undefined || options === null || typeof options === "object") {

                var opts = $.extend(true, {}, defaults, options);

                //options作为初始化参数，若args===true则强制重新初始化，否则根据缓存判断是否需要初始化
                if (args === true) {
                    instance = new Plugin(this, opts);
                } else {
                    if (instance === undefined || instance === null)
                        instance = new Plugin(this, opts);
                }

                //写入缓存
                $.data(this, "plugin_" + pluginName, instance);
            }
            else if (typeof options === "string" && typeof instance[options] === "function") {

                //options作为方法名，args则作为方法要调用的参数
                //如果方法没有返回值，funcReuslt为undefined
                funcResult = instance[options].call(instance, args);
            }
        });

        return funcResult === undefined ? jqObj : funcResult;
    };

})(jQuery, window, document);

/**
 * 项目信息－付款计划-付款申请
 * Created by wrb on 2018/8/10.
 */
;(function ($, window, document, undefined) {

    "use strict";
    var pluginName = "m_cost_paymentApplication",
        defaults = {
            isDialog:true,
            projectId:null,
            pointInfo:null,//节点信息
            pointId:null,
            saveCallBack:null
        };

    // The actual plugin constructor
    function Plugin(element, options) {
        this.element = element;

        this.settings = $.extend({}, defaults, options);
        this._defaults = defaults;
        this._name = pluginName;
        this._currentCompanyId = window.currentCompanyId;//当前组织ID
        this.init();
    }

    // Avoid Plugin.prototype conflicts
    $.extend(Plugin.prototype, {
        init: function () {
            var that = this;
            that.renderDialog(function () {

                var html = template('m_cost/m_cost_paymentApplication',{pointInfo:that.settings.pointInfo});
                $(that.element).html(html);
                that.save_validate();
            });
        },
        //初始化数据,生成html
        renderDialog:function (callBack) {

            var that = this;
            if(that.settings.isDialog){//以弹窗编辑
                S_dialog.dialog({
                    title: that.settings.title||'付款申请',
                    contentEle: 'dialogOBox',
                    lock: 3,
                    width: '700',
                    minHeight: '250',
                    tPadding: '0px',
                    url: rootPath+'/assets/module/m_common/m_dialog.html',
                    cancel:function () {

                    },
                    ok:function () {
                        var flag = $(that.element).find('form').valid();
                        if (!flag || that.save()) {
                            return false;
                        }
                    }
                },function(d){//加载html后触发
                    that.element = 'div[id="content:'+d.id+'"] .dialogOBox';
                    if(callBack!=null)
                        callBack();

                });
            }else{//不以弹窗编辑
                if(callBack!=null)
                    callBack();
            }
        }
        //保存
        ,save:function () {

            var that = this,option  = {};
            option.classId = that.element;
            option.postData = {};
            if(that.settings.pointInfo.isInnerCompany){//内部
                option.url = restApi.url_applyProjectCostPayFee;
                option.postData.id = that.settings.pointInfo.subId;
            }else{
                option.url = restApi.url_saveReturnMoneyDetail;
            }

            option.postData.projectId = that.settings.projectId;
            option.postData.pointId = that.settings.pointInfo.pointId;
            option.postData.payType = 2;
            option.postData.fee = $(that.element).find('input[name="fee"]').val();
            option.postData.pointDetailDescription = $(that.element).find('textarea[name="pointDetailDescription"]').val();

            m_ajax.postJson(option,function (response) {
                if(response.code=='0'){
                    S_toastr.success('保存成功！');
                    if(that.settings.saveCallBack)
                        that.settings.saveCallBack();
                }else {
                    S_dialog.error(response.info);
                }
            });
        }
        //添加回款的表单验证
        ,save_validate:function(){
            var that = this;
            var maxFee = (that.settings.pointInfo.fee).sub(that.settings.pointInfo.backFee);
            $(that.element).find('form').validate({
                rules: {
                    fee:{
                        required: true,
                        number:true,
                        minNumber:true,
                        over10:true,//整数部分是否超过10位
                        pointSix:true,
                        ckFee:true
                    }
                },
                messages: {
                    fee:{
                        required:'请输入金额！',
                        number:'请输入有效数字',
                        minNumber:'请输入大于0的数字!',
                        over10:'对不起，您的操作超出了系统允许的范围。合同总金额的单位为“万元”',
                        pointSix:'请保留小数点后六位!',
                        ckFee:'发起申请金额不能大于'+maxFee+'!'

                    }

                },
                errorPlacement: function (error, element) { //指定错误信息位置
                    error.insertAfter(element);
                }
            });
            $.validator.addMethod('minNumber', function(value, element) {
                value = $.trim(value);
                var isOk = true;
                if( value<=0){
                    isOk = false;
                }
                return  isOk;
            }, '请输入大于0的数字!');
            $.validator.addMethod('over10', function (value, element) {
                value = $.trim(value);
                var isOk = true;
                if(parseInt(value).toString().length>10)
                    isOk=false;
                return isOk;
            }, '对不起，您的操作超出了系统允许的范围。合同总金额的单位为“万元”');
            $.validator.addMethod('pointSix', function(value, element) {
                value = $.trim(value);
                var isOk = true;
                if(!regularExpressions.pnumber.test(value)){
                    isOk = false;
                }
                return  isOk;
            }, '请保留小数点后六位!');

            $.validator.addMethod('ckFee', function(value, element) {
                value = $.trim(value);
                var isOk = true;
                var total = maxFee-0;
                if(value>total ){
                    isOk = false;
                }
                return  isOk;
            }, '发起申请金额不能大于'+maxFee+'!');
        }

    });

    /*
     1.一般初始化（缓存单例）： $('#id').pluginName(initOptions);
     2.强制初始化（无视缓存）： $('#id').pluginName(initOptions,true);
     3.调用方法： $('#id').pluginName('methodName',args);
     */
    $.fn[pluginName] = function (options, args) {
        var instance;
        var funcResult;
        var jqObj = this.each(function () {

            //从缓存获取实例
            instance = $.data(this, "plugin_" + pluginName);

            if (options === undefined || options === null || typeof options === "object") {

                var opts = $.extend(true, {}, defaults, options);

                //options作为初始化参数，若args===true则强制重新初始化，否则根据缓存判断是否需要初始化
                if (args === true) {
                    instance = new Plugin(this, opts);
                } else {
                    if (instance === undefined || instance === null)
                        instance = new Plugin(this, opts);
                }

                //写入缓存
                $.data(this, "plugin_" + pluginName, instance);
            }
            else if (typeof options === "string" && typeof instance[options] === "function") {

                //options作为方法名，args则作为方法要调用的参数
                //如果方法没有返回值，funcReuslt为undefined
                funcResult = instance[options].call(instance, args);
            }
        });

        return funcResult === undefined ? jqObj : funcResult;
    };

})(jQuery, window, document);

/**
 * 项目－付款计划
 * Created by wrb on 2018/8/8.
 */
;(function ($, window, document, undefined) {

    "use strict";
    var pluginName = "m_cost_paymentPlan",
        defaults = {
            myTaskId:null,//任务ID
            projectId:null//项目ID
        };

    // The actual plugin constructor
    function Plugin(element, options) {
        this.element = element;

        this.settings = $.extend({}, defaults, options);
        this._defaults = defaults;
        this._name = pluginName;
        this._currentCompanyId = window.currentCompanyId;//当前组织ID
        this._currentCompanyUserId = window.currentCompanyUserId;//当前员工ID
        this._paymentPlan = null;
        this.init();
    }

    // Avoid Plugin.prototype conflicts
    $.extend(Plugin.prototype, {
        init: function () {
            var that = this;
            that.renderPage();
        }
        //初始化数据,生成html
        ,renderPage:function () {

            var that = this;
            var option  = {};
            option.classId = that.element;
            option.url = restApi.url_listProjectCost;
            option.postData = {};
            option.postData.payType = '2';
            option.postData.projectId = that.settings.projectId;
            if(that.settings.myTaskId!=null)
                option.postData.myTaskId = that.settings.myTaskId;

            m_ajax.postJson(option,function (response) {
                if(response.code=='0'){
                    that._paymentPlan = response.data.costList;
                    var html = template('m_cost/m_cost_paymentPlan',{
                        dataList:that._paymentPlan,
                        isFinancial:response.data.isFinancial,
                        isManager:response.data.isManager
                    });
                    $(that.element).html(html);
                    that.bindActionClick();

                    if(that._paymentPlan!=null && that._paymentPlan.length>0){
                        $.each(that._paymentPlan,function (i,item) {

                            var option = {};
                            option.projectCost = item;
                            option.projectId = that.settings.projectId;
                            option.isAppend = true;
                            option.myTaskId = that.settings.myTaskId;
                            $(that.element).find('#collectionPlanBox').m_cost_paymentPlan_item(option,true);
                        });
                    }

                }else {
                    S_dialog.error(response.info);
                }
            })
        }

        //事件绑定
        ,bindActionClick:function () {
            var that = this;
            $(that.element).find('a[data-action]').on('click',function () {
                var $this = $(this),dataAction = $this.attr('data-action');
                switch (dataAction){
                    case 'addCollectionPlan'://添加付款计划

                        var option = {};
                        option.projectId = that.settings.projectId;
                        option.doType = 1;//付款
                        option.oKCallBack = function () {
                            that.renderPage();
                        };
                        $('body').m_cost_collectionPlan_add(option,true);

                        break;
                }
            });
        }


    });

    /*
     1.一般初始化（缓存单例）： $('#id').pluginName(initOptions);
     2.强制初始化（无视缓存）： $('#id').pluginName(initOptions,true);
     3.调用方法： $('#id').pluginName('methodName',args);
     */
    $.fn[pluginName] = function (options, args) {
        var instance;
        var funcResult;
        var jqObj = this.each(function () {

            //从缓存获取实例
            instance = $.data(this, "plugin_" + pluginName);

            if (options === undefined || options === null || typeof options === "object") {

                var opts = $.extend(true, {}, defaults, options);

                //options作为初始化参数，若args===true则强制重新初始化，否则根据缓存判断是否需要初始化
                if (args === true) {
                    instance = new Plugin(this, opts);
                } else {
                    if (instance === undefined || instance === null)
                        instance = new Plugin(this, opts);
                }

                //写入缓存
                $.data(this, "plugin_" + pluginName, instance);
            }
            else if (typeof options === "string" && typeof instance[options] === "function") {

                //options作为方法名，args则作为方法要调用的参数
                //如果方法没有返回值，funcReuslt为undefined
                funcResult = instance[options].call(instance, args);
            }
        });

        return funcResult === undefined ? jqObj : funcResult;
    };

})(jQuery, window, document);

/**
 * 项目信息－收款计划列表-子项
 * Created by wrb on 2018/8/10.
 */
;(function ($, window, document, undefined) {

    "use strict";
    var pluginName = "m_cost_paymentPlan_item",
        defaults = {
            myTaskId:null,//任务ID
            projectId:null,
            isAppend:false,//是否追加到that.element
            projectCost:null//合同回款对象
        };

    // The actual plugin constructor
    function Plugin(element, options) {
        this.element = element;

        this.settings = $.extend({}, defaults, options);
        this._defaults = defaults;
        this._name = pluginName;
        this._currentCompanyId = window.currentCompanyId;//当前组织ID
        this._projectCost = this.settings.projectCost;
        this._pageText = {};//界面的文字
        this.init();
    }

    // Avoid Plugin.prototype conflicts
    $.extend(Plugin.prototype, {
        init: function () {
            var that = this;

            if(that.settings.isAppend){
                $(that.element).append('<div class="panel revenue-expenditure" data-id="'+that._projectCost.costId+'"></div>');
                that.element = '.panel[data-id="'+that._projectCost.costId+'"]';
            }

            that.initHtml();

        }
        //初始化数据,生成html
        ,initHtml:function (t) {
            var that = this;
            that.postData(function () {

                that.initText();
                that._projectCost.currentCompanyId = that._currentCompanyId;
                var html = template('m_cost/m_cost_paymentPlan_item',that._projectCost);
                $(that.element).html(html);

                $(that.element).find('span[data-toggle="tooltip"]').tooltip();

                rolesControl();//权限控制初始化
                stringCtrl('feeDescription');

                that.bindEditable();
                that.bindActionClick();
                that.initEditCostPoint();
            },t);
        }
        //{t==1，重新请求数据}
        ,postData:function (callBack,t) {

            var that = this;
            //重新请求数据
            if(t==1 || that._projectCost==null){
                var option  = {};
                option.classId = that.element;
                option.url = restApi.url_listProjectCost;
                option.postData = {};
                option.postData.payType = '2';
                option.postData.projectId = that.settings.projectId;
                option.postData.costId = that._projectCost.costId;
                if(that.settings.myTaskId!=null)
                    option.postData.myTaskId = that.settings.myTaskId;

                m_ajax.postJson(option,function (response) {
                    if(response.code=='0'){

                        that._projectCost = response.data.costList[0];
                        if(callBack!=null)
                            callBack();
                    }else {
                        S_dialog.error(response.info);
                    }
                })
            }else{
                if(callBack!=null)
                    callBack();
            }
        }
        //初始化文字
        ,initText : function () {
            var that = this;

            switch (that._projectCost.type){
                case '1': //合同回款
                    that._pageText = {
                        title:'合同回款'
                    };
                    break;
                case '2': //技术审查费
                    that._pageText = {
                        title:'技术审查费'
                    };
                    break;
                case '3': //合作设计费
                    that._pageText = {
                        title:'合作设计费'
                    };
                    break;
                case '4': //
                    that._pageText = {
                        title:'其他支出'
                    };
                    break;
                case '5': //其他收款
                    that._pageText = {
                        title:'其他收款'
                    };
                    break;
            }
            that._projectCost.pageText = that._pageText;
        }
        //初始化合同总金额 － 在位编辑
        ,bindEditable:function () {
            var that = this;
            var $this = $(that.element).find('a.totalContract');
            $this.editable({//编辑
                type: 'text',
                title: '合同总金额',
                emptytext:'0',
                savenochange:true,
                placeholder: '金额',
                value: ($this.text().indexOf('未设置')>-1||$this.attr('data-value')=='')?'':$.trim($this.attr('data-value')),
                success: function(response, newValue) {
                    that.saveInitContract(newValue);
                },
                display: function(value, sourceData) {},
                validate: function(value) {
                    var errTips = '';
                    if($.trim(value) == ''){
                        errTips = '合同总金额不能为空';
                    }else if(parseInt(value).toString().length>10){
                        errTips = '对不起，您的操作超出了系统允许的范围。合同总金额的单位为“万元”'
                    }else if(value<=0){
                        errTips = '请输入大于0的数字'
                    }else{
                        var pnumber = regularExpressions.pnumber;
                        if(!pnumber.test(value)){
                            errTips = '请保留小数点后六位!';
                        }
                    }
                    return errTips;
                }
            });
        }
        //保存合同总金额
        ,saveInitContract:function (newValue) {

            var that = this,option  = {};
            option.classId = that.element;
            option.url = restApi.url_saveProjectCost;
            var param ={};
            param.fee = newValue;
            param.type = that._projectCost.type;
            param.projectId = that.settings.projectId;
            if(that._projectCost!=null && that._projectCost.costId!=null && that._projectCost.costId!=''){
                param.id = that._projectCost.costId;
            }
            option.postData = param;
            m_ajax.postJson(option,function (response) {
                if(response.code=='0'){
                    S_toastr.success('保存成功！');
                    that.initHtml(1);

                }else {
                    S_dialog.error(response.info);
                }
            })
        }

        //初始化编辑x-editable{dataEditType:1=节点描述，2＝比例，3＝金额，4＝明细金额,6=明细付款金额}
        ,initEditCostPoint:function () {
            var that = this,projectId = that.settings.projectId;

            $(that.element).find('a[data-action="editContract"][data-edit-type="2"],a[data-action="editContract"][data-edit-type="3"]').on('click',function () {
                var options = {},_this = this;

                var dataEditType = $(this).attr('data-edit-type');

                options.content = template('m_cost/m_editFee');
                options.titleHtml = '<h3 class="popover-title">编辑</h3>';
                options.closeOnDocumentClicked=function (e) {

                    if($(e.target).closest('.ui-popup-backdrop').length > 0 || $(e.target).closest('.ui-popup').length > 0){
                        return false;
                    }
                };
                options.onShown = function ($popover) {
                    //恢复浮动窗口里的值
                    var feeProportion = $(_this).closest('TR').find('td.feeProportion').attr('data-value');
                    var fee = $(_this).closest('TR').find('td.fee').attr('data-value');

                    $popover.find('input[name="feeProportion"]').val(feeProportion);
                    $popover.find('input[name="fee"]').val(fee);
                    that.bindFeeCalculation($popover);
                    that.saveCostFee_validate($popover);
                };
                options.onSave = function ($popover) {

                    var flag = $($popover).find('form').valid();
                    if (!flag) {
                        return false;
                    }else {

                        var $data = {};
                        $data.id = $(_this).attr('data-id');
                        $data.feeProportion = parseFloat($popover.find('input[name="feeProportion"]').val());
                        $data.fee = $popover.find('input[name="fee"]').val();

                        if(that.saveConstPoint($data,dataEditType)){
                            return false;
                        }
                    }
                };

                $(this).m_popover(options,true);
            });

            $(that.element).find('a[data-action="editContract"]').each(function () {
                var $this = $(this);
                var placeholder = $(this).attr('data-edit-type')==1?'描述':'金额';
                var dataEditType = $(this).attr('data-edit-type');
                var text = $(this).parent().attr('data-string');//当存在data-string 表示节点描述需要控制字数展示(此处多一个外元素包含)
                if(text==undefined){
                    text = $.trim($(this).closest('td').attr('data-value'));
                }
                if(!(dataEditType==2 || dataEditType==3)){
                    $(this).editable({//编辑
                        type: 'text',
                        title: '编辑',
                        emptytext:'0',
                        value:text==null||text==''||text===void 0?'':$.trim(text),
                        savenochange:true,
                        placeholder: placeholder,
                        closeClass:['.ui-popup-backdrop','.ui-popup'],
                        success: function(response, newValue,event) {
                            var $data = {};

                            $data.id = $(this).attr('data-id');

                            if(dataEditType==1){//节点名称
                                $data.feeDescription = newValue;
                            }else if(dataEditType==2){
                                $data.feeProportion = newValue;
                            }else if(dataEditType==6){
                                $data.paidFee = newValue;
                            }else{//节点金额、明细金额
                                $data.fee = newValue;
                            }
                            if(dataEditType==4 || dataEditType==6){
                                $data.pointId = $(this).attr('data-point-id');
                            }
                            if(that.saveConstPoint($data,dataEditType)){
                                return false;
                            }
                        },
                        display: function(value) {
                        },
                        validate: function(value) {

                            if($(this).attr('data-edit-type')==1){
                                if($.trim(value) == ''){
                                    return '请输入付款节点描述';
                                }else if($.trim(value).length>250){
                                    return '节点描述不超过250位!';
                                }
                            }else{
                                var errTips = '';
                                if($.trim(value) == ''){
                                    errTips = '付款金额不能为空!';
                                }else if(dataEditType==4){
                                    errTips = that.saveFee_validate(value,$this);
                                }
                                return errTips;
                            }
                        }
                    });
                }
            });
        }
        //编辑节点名称，金额，明细金额
        ,saveConstPoint:function (data,dataEditType) {
            var that = this,option  = {},isError = false;
            option.classId = that.element;
            if(dataEditType==4 || dataEditType==6){//费用明细
                option.url = restApi.url_saveReturnMoneyDetail;
            }else{//费用节点
                option.url = restApi.url_saveProjectCostPoint;
            }
            option.async = false;
            option.postData = data;
            option.postData.projectId = that.settings.projectId;
            option.postData.type = 1;
            m_ajax.postJson(option,function (response) {
                if(response.code=='0'){
                    S_toastr.success('保存成功！');

                    that.initHtml(1);

                }else {
                    S_dialog.error(response.info);
                    isError = true;
                }
            });
            return isError;
        }
        //事件绑定
        ,bindActionClick:function () {
            var that = this;

            $(that.element).find('a[data-action]').on('click',function () {
                var $this = $(this),dataAction = $this.attr('data-action');
                var pointId = $this.closest('tr').attr('data-id');//节点ID
                var dataId = $this.attr('data-id');//当前元素赋予的ID
                //获取节点数据
                var dataItem = getObjectInArray(that._projectCost.pointList,pointId);
                //获取子节点数据
                var dataSubItem = dataItem==null?null: getObjectInArray(dataItem.pointDetailList,dataId);

                switch (dataAction) {
                    case 'addContract':
                        if(that._projectCost.totalCost==null || that._projectCost.totalCost<=0){
                            S_toastr.warning('请确定合同总金额！');
                            return false;
                        }
                        var options = {};
                        options.title = '添加付款节点';
                        options.projectId = that.settings.projectId;
                        options.totalCost = that._projectCost.totalCost;
                        options.costId = that._projectCost.costId;
                        options.saveCallBack = function () {
                            that.initHtml(1);
                        };
                        $('body').m_cost_addNode(options);
                        break;

                    case 'delCostPointDetail'://删除费用明细

                        S_dialog.confirm('删除后将不能恢复，您确定要删除吗？', function () {

                            var option = {};
                            option.url = restApi.url_deleteProjectCostPointDetail+'/'+$this.attr('data-id');
                            m_ajax.get(option, function (response) {
                                if (response.code == '0') {
                                    S_toastr.success('删除成功！');
                                    that.initHtml(1);
                                } else {
                                    S_dialog.error(response.info);
                                }
                            });

                        }, function () {
                        });

                        break;

                    case 'delCostPoint'://删除费用节点

                        S_dialog.confirm('删除后将不能恢复，您确定要删除吗？', function () {

                            var option = {};
                            option.url = restApi.url_deleteProjectCostPoint+'/'+$this.attr('data-id');
                            m_ajax.get(option, function (response) {
                                if (response.code == '0') {
                                    S_toastr.success('删除成功！');
                                    that.initHtml(1);
                                } else {
                                    S_dialog.error(response.info);
                                }
                            });

                        }, function () {
                        });
                        break;

                    case 'delPaidFee'://删除到账节点

                        S_dialog.confirm('删除后将不能恢复，您确定要删除吗？', function () {

                            var option = {};
                            option.url = restApi.url_deleteProjectCostPaymentDetail+'/'+$this.attr('data-id');
                            m_ajax.get(option, function (response) {
                                if (response.code == '0') {
                                    S_toastr.success('删除成功！');
                                    that.initHtml(1);
                                } else {
                                    S_dialog.error(response.info);
                                }
                            });

                        }, function () {
                        });
                        break;

                    case 'costConfirm':
                        var taskId = $this.attr('data-id');
                        $this.m_popover({
                            titleHtml: '<h3 class="popover-title">编辑</h3>',
                            placement: 'left',
                            content: template('m_cost/m_cost_addPaidFee', {doType:2}),
                            onShown: function ($popover) {
                                var fee = $this.closest('.footTools2').siblings('p[name="fee"]:first').html();
                                $popover.find('input[name="fee"]:first').val(fee);
                                var dateStr = getNowDate();
                                $popover.find('input[name="paidDate"]:first').val(dateStr);
                                $popover.find('.input-group-addon').on('click',function(e){
                                    $(this).prev('input').focus();
                                    stopPropagation(e);
                                });
                                that.saveCostFee_validate($popover);
                            },
                            onSave: function ($popover) {
                                var fee = $popover.find('input[name="fee"]:first').val();
                                var paidDate = $popover.find('input[name="paidDate"]:first').val();

                                var flag = $($popover).find('form').valid();
                                if (!flag) {
                                    return false;
                                }else {
                                    var option = {};
                                    option.url = restApi.url_handleMyTask;
                                    option.postData = {id: taskId, status: '1', result: fee,paidDate:paidDate};
                                    m_ajax.postJson(option, function (response) {
                                        if (response.code == '0') {
                                            S_toastr.success('操作成功');
                                            that.initHtml(1);
                                        } else {
                                            S_dialog.error(response.info);
                                        }
                                    });
                                }
                            }
                        }, true);
                        return false;
                        break;

                    case 'paymentRequest'://付款申请(内部)
                        var option = {};
                        option.projectId = that.settings.projectId;
                        option.pointInfo = {
                            companyName:that._projectCost.companyName,//收款方
                            costId:that._projectCost.costId,
                            isInnerCompany : that._projectCost.isInnerCompany,
                            fee:dataItem.fee,
                            feeDescription:dataItem.feeDescription,
                            pointId:pointId,
                            subId :dataSubItem.id,
                            subFee:dataSubItem.fee,
                            userName:dataSubItem.userName,
                            backFee : dataItem.backFee
                        };
                        option.saveCallBack = function () {
                            that.initHtml(1);
                        };
                        $('body').m_cost_paymentApplication(option,true);
                        break;

                    case 'paymentRequest2'://付款申请(外部)
                        var option = {};
                        option.projectId = that.settings.projectId;
                        option.pointInfo = {
                            companyName:that._projectCost.companyName,//收款方
                            costId:that._projectCost.costId,
                            isInnerCompany : that._projectCost.isInnerCompany,
                            fee:dataItem.fee,
                            feeDescription:dataItem.feeDescription,
                            pointId:pointId,
                            backFee : dataItem.backFee
                        };
                        option.saveCallBack = function () {
                            that.initHtml(1);
                        };
                        $('body').m_cost_paymentApplication(option,true);
                        break;
                }

            });
        }
        //当存在到账节点时，修改明细金额需进行验证
        ,saveFee_validate:function(value,$obj){
            var that = this,errTips='';
            var maxLimit = $.trim($obj.closest('tr').attr('data-fee'))-0;
            var hasFee = ($obj.closest('tr').attr('data-backFee')-0).sub($.trim($obj.closest('td').attr('data-value'))-0);
            var minLimit = 0;
            var pnumber = regularExpressions.pnumber;
            value = $.trim(value)-0;
            if( value<=0){
               return '请输入大于0的数字';
            }
            if(parseInt(value).toString().length>10){
                return '对不起，您的操作超出了系统允许的范围。合同总金额的单位为“万元”'
            }
            if(!pnumber.test(value-0)){
                return '请保留小数点后六位!';
            }

            $obj.closest('tr').find('div.bPaidFee').each(function(){
                minLimit += ($(this).find('span').text()-0);
            });
            if(!(value>=minLimit && (value.add(hasFee))<=maxLimit)){
                if(minLimit==0){
                    errTips  = '请输入大于0且不超过'+maxLimit.sub(hasFee)+'的数字!'
                }else{
                    errTips = '请输入区间为'+minLimit+'到'+maxLimit.sub(hasFee)+'的数字!'
                }
            }
            return errTips;

        }
        //金额比例验证
        ,saveCostFee_validate:function(ele){
            var that = this;

            //flag==true验证付款明细，flag==false验证节点金额编辑
            var flag = $(ele).closest('.popover').prev('a[data-action="costConfirm"]').length>0;
            var limit=$(ele).closest('tr').attr('data-backfee');
            var limit0=(ele).prev().attr('data-limit');
            $(ele).find('form').validate({
                rules: {
                    feeProportion:{
                        required:true,
                        number:true,
                        limitProportion:true,
                        pointNumber:true
                    },
                    fee:{
                        required:true,
                        number:true,
                        minNumber:true,
                        feeLimit:flag,
                        ckFee:true,//验证数字
                        over10:true,//整数部分是否超过10位
                        ckFee2:!flag,//验证是否超过合同总金额
                        notReachFee:!flag//验证是否超过合同总金额
                    },
                    paidDate:{
                        required:true
                    }

                },
                messages: {
                    feeProportion:{
                        required:'请输入比例!',
                        number:'请输入有效数字',
                        limitProportion:'请输入0到100之间的数字!',
                        pointNumber:'请保留小数点后两位!'
                    },
                    fee:{
                        required:'请输入金额!',
                        number:'请输入有效数字',
                        minNumber:'请输入大于0的数字!',
                        feeLimit:'付款金额不能超过'+limit0+'!',
                        over10:'对不起，您的操作超出了系统允许的范围。合同总金额的单位为“万元”',
                        ckFee:'请保留小数点后六位!',
                        ckFee2:'节点金额不能超过合同总金额!',
                        notReachFee:'付款金额不能小于已申请金额（'+limit+'）!'
                    },
                    paidDate:{
                        required:'请选择付款日期!'
                    }
                },
                errorPlacement: function (error, element) { //指定错误信息位置
                    if ($(element).attr('data-action')=='feeCalculation') {
                        error.appendTo(element.closest('.form-group'));
                    }
                    else {
                        error.appendTo(element.closest('.col-24-md-16'));
                    }
                }
            });
            $.validator.addMethod('limitProportion', function(value, element) {
                value = $.trim(value);
                var isOk = true;
                if( value<=0 || value>100){
                    isOk = false;
                }
                return  isOk;
            }, '请输入0到100之间的数字!');
            $.validator.addMethod('minNumber', function(value, element) {
                value = $.trim(value);
                var isOk = true;
                if( value<=0){
                    isOk = false;
                }
                return  isOk;
            }, '请输入大于0的数字!');
            $.validator.addMethod('pointNumber', function(value, element) {
                value = $.trim(value);
                var isOk = true;
                if(!regularExpressions.proportionnumber.test(value)){
                    isOk = false;
                }
                return  isOk;
            }, '请保留小数点后两位!');
            $.validator.addMethod('feeLimit', function(value, element) {
                var $plus_T = $(element).closest('.popover').prev('a[data-action="costConfirm"]');
                var maxLimit = $(ele).prev('a[data-action="costConfirm"]').attr("data-limit")-0;
                value = $.trim(value);
                var isOk = true;
                if(!(value<=maxLimit)){
                    isOk = false;
                }
                return  isOk;
            }, '数字不能超过发起收款金额!');
            $.validator.addMethod('ckFee', function(value, element) {
                var isOk = true;
                if(!regularExpressions.pnumber.test(value)){
                    isOk = false;
                }
                return  isOk;

            }, '请保留小数点后六位!');
            $.validator.addMethod('over10', function(value, element) {
                value = $.trim(value);
                var isOk = true;
                if(parseInt(value).toString().length>10){
                    isOk = false;
                }
                return  isOk;

            }, '对不起，您的操作超出了系统允许的范围。合同总金额的单位为“万元”');
            $.validator.addMethod('ckFee2', function(value, element) {

                return  that.validator_ckFee(value);
            }, '金额不能超过合同总金额!');
            $.validator.addMethod('notReachFee', function(value, element) {
                value = value-0;
                var backFee = $(element).closest('tr').attr('data-backFee')-0;
                if(value<backFee){
                    return false;
                }else{
                    return true;
                }

            }, '输入金额不能小于发起收款金额!');
        }
        //金额验证
        ,validator_ckFee:function (value) {
            var that = this;
            var totalCost = that._projectCost.totalCost;
            value = $.trim(value);
            var isOk = true;
            var total = totalCost-0;
            if(value>total){
                isOk = false;
            }
            return isOk;
        }

        //金额比例计算
        ,bindFeeCalculation:function (ele) {
            var that = this;
            $(ele).find('input[data-action="feeCalculation"]').keyup(function () {

                var name = $(this).attr('name');
                var val = $(this).val();
                var total = that._projectCost.totalCost;
                if(name=='feeProportion'){//比例
                    var fee = (val-0)*(total-0)/100;
                    fee = decimal(fee,7);
                    fee = parseFloat(decimal(fee,6));
                    $(ele).find('input[name="fee"]').val(fee);
                }
                if(name=='fee'){//金额
                    var proportion = (val-0)/(total-0)*100;
                    proportion = decimal(proportion,3);
                    proportion = decimal(proportion,2);
                    $(ele).find('input[name="feeProportion"]').val(proportion);
                }

            });
        }


    });

    $.fn[pluginName] = function (options) {
        return this.each(function () {

            //if (!$.data(this, "plugin_" + pluginName)) {
            $.data(this, "plugin_" +
                pluginName, new Plugin(this, options));
            //}
        });
    };

})(jQuery, window, document);

;(function ($, window, document, undefined) {

    "use strict";

    var pluginName = "m_docmgr",
        defaults = {
            $projectId: '',
            $projectName:null
        };

    function Plugin(element, options) {
        this.element = element;
        this.settings = options;
        this._defaults = defaults;
        this._name = pluginName;
        this._selectedNodeObj = null;//当前选中节点对象
        this._fileItems = [];
        this._uploadmgrContainer = null;
        this._btnNewDir = null;
        this._btnUpload = null;
        this._fileListItemsContainer = null;
        this._breadcrumbContainer = null;
        this._breadcrumb = {
            allowOperate: false,
            curDirId: null,
            lastDirId: null,
            items: [{dirId: null, text: '根目录'}]
        };

        this._companyId = currentCompanyId;
        if (_.isBlank(this._companyId)) {
            S_dialog.error('无法获取团队Id');
            return;
        }

        this._projectId = this.settings.$projectId;
        if (_.isBlank(this._projectId)) {
            S_dialog.error('无法获取项目Id');
            return;
        }

        this.init();
    }

    $.extend(Plugin.prototype, {
        init: function () {
            var that = this;
            that.renderHtml();
        }
        //渲染基础页
        ,renderHtml: function () {
            var that = this;

            var html = template('m_docmgr/m_docmgr', {
                projectName:that.settings.$projectName
            });
            $(that.element).html(html);

            that.initDocmgrTree();
            that.treeBoxHeightResize();
            $(window).resize(function () {
                var t = setTimeout(function () {
                    that.treeBoxHeightResize();
                    clearTimeout(t);
                });
            });

        }
        //初始化组织树
        , initDocmgrTree: function () {
            var that = this;
            var $tree = $('#documentDirectoryTree');
            $tree.jstree({
                'core': {
                    'check_callback': true,
                    'data':function (node, callback) {
                        var option = {};
                        option.async = false;
                        option.postData = {};
                        var jsonStr='[]';
                        var jsonArray = eval('('+jsonStr+')');
                        if(node.id === '#'){
                            option.url = restApi.url_getMyProjectsDocuments;
                            option.postData.id = that._projectId;
                            m_ajax.postJson(option, function (response) {
                                if (response.code == '0') {
                                    var arrays= response.data.data;
                                    var arr = {
                                        'id':arrays.id,
                                        'children':response.data.childId,
                                        'text':arrays.projectName,
                                        'pid':null,
                                        'taskId':response.data.taskId,
                                        'type':response.data.type,
                                        'haveNoticeRight':response.data.haveNoticeRight,
                                        'uploadFlag':response.data.uploadFlag
                                    };
                                    jsonArray.push(arr);
                                } else {
                                    S_dialog.error(response.info);
                                }
                            });
                        }else{
                            option.url = restApi.url_getSkyDriverByProject;
                            if(node.original.projectId!=null){//存在此字段
                                option.postData.projectId = node.original.projectId;
                                option.postData.pid = node.id;
                            }else{
                                option.postData.projectId = node.id;
                            }
                            option.postData.type = that._selectedNodeObj.type;
                            m_ajax.postJson(option, function (response) {
                                if (response.code == '0') {
                                    var arrays= response.data.list;
                                    if(arrays!=null && arrays.length>0){
                                        for(var i=0 ; i<arrays.length; i++){
                                            var arr = {
                                                'id':arrays[i].id,
                                                'pid':node.id,
                                                'children':arrays[i].childId,
                                                'text':arrays[i].fileName,
                                                'projectId':arrays[i].projectId,
                                                'taskId':arrays[i].taskId,
                                                'type':arrays[i].type,
                                                'haveNoticeRight':arrays[i].haveNoticeRight,
                                                'uploadFlag':response.data.uploadFlag
                                            };
                                            jsonArray.push(arr);
                                        }
                                    }
                                } else {
                                    S_dialog.error(response.info);
                                }
                            });
                        }
                        callback.call(this, jsonArray);
                    }
                },
                'plugins': ['noclose', 'types', 'wholerow'],
                'types': {
                    'default': {
                        'icon': 'fa fa-folder'
                    },
                    '1': {   //文件
                        'icon': 'fa fa-file'
                    },
                    '50': {   //归档文件
                        'icon': 'fa fa-steam-square'
                    }
                }
            }).on('select_node.jstree', function (e, data) {

                that._selectedNodeObj = data.node.original;
                that.getFileItemsList();

            }).on('ready.jstree', function (e, data) {//loaded.jstree

                var tree = $('#documentDirectoryTree').jstree(true);
                var firstId = $(that.element).find('#documentDirectoryTree li:first').attr('id');
                tree.select_node('#'+firstId);
                that.bindActionClick();

            }).on('load_node.jstree', function (e, data) {//load_node.jstree

                that.treeBoxHeightResize();
            });
        }
        //获取文件列表
        , getFileItemsList:function () {
            var that = this;
            var projectId = that._selectedNodeObj.pid==null?that._selectedNodeObj.id:that._selectedNodeObj.projectId;
            var pid = that._selectedNodeObj.id;
            var options = {};

            options.$projectId = projectId;
            if(projectId!=pid){//不是根目录
                options.$pid = pid;
            }
            options.$selectedNodeObj = that._selectedNodeObj;
            options.$requestCallBack = function (data) {
                that.hideBtnAction(data);
                that.initContextMenu(data.uploadFlag);
            };
            options.$refreshDataCallBack = function () {
                that.getFileItemsList();
                var tree = $('#documentDirectoryTree').jstree(true),
                    sel = tree.get_selected();
                tree.refresh_node('#'+sel);
            };
            options.$renderCallBack = function () {
                that.fileItemsBoxHeightResize();
                $(window).resize(function () {
                    var t1 = setTimeout(function () {
                        that.fileItemsBoxHeightResize();
                        clearTimeout(t1);
                    });
                });
            };
            $(that.element).find('#fileItems').m_docmgr_fileItems_list(options,true);
        }
        //初始化右键菜单
        ,initContextMenu:function (flag) {
            var that = this;
            var items = [];
            if(flag==1){
                items.push({
                    content: "上传文件",
                    action: function (e, item) {
                        that.uploadFile();
                    }
                });
                items.push({
                    content: "新建文件夹",
                    action: function (e, item) {
                        that.createFolder();
                    }
                });
            }
            if(that._selectedNodeObj.taskId!=null && that._selectedNodeObj.type==40){
                items.push({
                    content: "发送归档通知",
                    action: function (e, item) {
                        that.sendArchiveNotice();
                    }
                });
            }
            if(items.length>0){
                var menu = new contextMenu({
                    target: document.getElementById('fileItems'),//开启自定义右键菜单的目标,
                    hasIcon: false,//是否需要图标
                    hasTitle: false,//是否需要标题
                    autoHide:false,//是否自动隐藏右键菜单
                    menuClass:'outContentMenu',
                    menu: {//菜单数据配置
                        items: items
                    },
                    beforeShow:function () {
                        $('.contextMenuBox').hide();
                    },
                    afterShow:function () {
                        console.log(1);
                    }
                });
            }
        }
        //隐藏按钮
        ,hideBtnAction:function (data) {
            var that = this;
            if(data.uploadFlag==0){
                $(that.element).find('a.btn-flag').hide();
            }else{
                $(that.element).find('a.btn-flag').show();
            }
            if(that._selectedNodeObj.taskId!=null && that._selectedNodeObj.type==40 && data.haveNoticeRight==true){
                $(that.element).find('a[data-action="sendArchiveNotice"]').show();
            }else{
                $(that.element).find('a[data-action="sendArchiveNotice"]').hide();
            }
        }
        //树菜单高度自适应
        , treeBoxHeightResize:function () {
            var that = this;
            var pageWrapperH = $('#page-wrapper').css('min-height');
            $(that.element).find('#documentTreeBox').css('height',pageWrapperH);
        }
        //fileItems元素高度自适应
        , fileItemsBoxHeightResize:function () {
            var that = this;
            var itemsListHeight = $(that.element).find('#fileItems table').height();
            var pageWrapperH = $('#page-wrapper').css('min-height');
            if(parseInt(pageWrapperH)>itemsListHeight+50){
                $(that.element).find('#fileItems').css('height',(parseInt(pageWrapperH)-50)+'px');
            }else{
                $(that.element).find('#fileItems').css('height','auto');
            }
        }
        //创建文件夹
        ,createFolder:function () {
            var that = this,options = {};
            options.$selectedNodeObj = that._selectedNodeObj;
            options.$saveCallBack = function () {
                that.getFileItemsList();
                var tree = $('#documentDirectoryTree').jstree(true),
                    sel = tree.get_selected();
                tree.refresh_node('#'+sel);
            };
            $('body').m_docmgr_createFolder(options);
        }
        //上传文件
        ,uploadFile:function () {
            var that = this,options = {};
            options.$selectedNodeObj = that._selectedNodeObj;
            options.$saveCallBack = function () {
                that.getFileItemsList();
            };
            $('body').m_docmgr_fileUpload(options);
        }
        //发送归档通知
        ,sendArchiveNotice:function () {
            var that = this,options = {};
            options.$selectedNodeObj = that._selectedNodeObj;
            options.$saveCallBack = function () {
                that.getFileItemsList();
                var tree = $('#documentDirectoryTree').jstree(true),
                    sel = tree.get_selected();
                tree.refresh_node('#'+sel);
            };
            $('body').m_docmgr_sendArchiveNotice(options);
        }
        //绑定事件
        , bindActionClick:function () {
            var that = this;
            $(that.element).find('a[data-action]').off('click').on('click',function () {
                var $this = $(this);
                var dataAction = $this.attr('data-action');
                switch (dataAction){
                    case 'createFolder'://创建文件夹
                        that.createFolder();
                        break;
                    case 'uploadFile':
                        that.uploadFile();
                        break;
                    case 'sendArchiveNotice'://发送归档通知
                        that.sendArchiveNotice();
                        break;

                }
            });
        }

    });

    /*
     1.一般初始化（缓存单例）： $('#id').pluginName(initOptions);
     2.强制初始化（无视缓存）： $('#id').pluginName(initOptions,true);
     3.调用方法： $('#id').pluginName('methodName',args);
     */
    $.fn[pluginName] = function (options, args) {
        var instance;
        var funcResult;
        var jqObj = this.each(function () {

            //从缓存获取实例
            instance = $.data(this, "plugin_" + pluginName);

            if (options === undefined || options === null || typeof options === "object") {

                var opts = $.extend(true, {}, defaults, options);

                //options作为初始化参数，若args===true则强制重新初始化，否则根据缓存判断是否需要初始化
                if (args === true) {
                    instance = new Plugin(this, opts);
                } else {
                    if (instance === undefined || instance === null)
                        instance = new Plugin(this, opts);
                }

                //写入缓存
                $.data(this, "plugin_" + pluginName, instance);
            }
            else if (typeof options === "string" && typeof instance[options] === "function") {

                //options作为方法名，args则作为方法要调用的参数
                //如果方法没有返回值，funcReuslt为undefined
                funcResult = instance[options].call(instance, args);
            }
        });

        return funcResult === undefined ? jqObj : funcResult;
    };

})(jQuery, window, document);

/**
 * 创建文件夹
 * Created by wrb on 2018/1/10.
 */
;(function ($, window, document, undefined) {

    "use strict";
    var pluginName = "m_docmgr_createFolder",
        defaults = {
            $title:null,
            $isDialog:true,
            $selectedNodeObj:null,//当前选中对象
            $editType:0,//0=默认，1=编辑
            $itemData:null,//编辑对象
            $saveCallBack:null//保存后事件
        };

    // The actual plugin constructor
    function Plugin(element, options) {
        this.element = element;

        this.settings = $.extend({}, defaults, options);
        this._defaults = defaults;
        this._name = pluginName;
        this._fileTypeStr = this.settings.$itemData!=null &&this.settings.$itemData.type==1?'文件':'文件夹';
        this.init();
    }

    // Avoid Plugin.prototype conflicts
    $.extend(Plugin.prototype, {
        init: function () {
            var that = this;
            that.initHtmlData(function () {
                that.save_validate();
            });
        }
        //初始化数据并加载模板
        ,initHtmlData:function (callBack) {
            var that = this;
            if(that.settings.$isDialog){//以弹窗编辑
                S_dialog.dialog({
                    title: that.settings.$title||'新建文件夹',
                    contentEle: 'dialogOBox',
                    lock: 3,
                    width: '600',
                    tPadding: '0px',
                    url: rootPath+'/assets/module/m_common/m_dialog.html',
                    okText:'保存',
                    ok:function () {
                        if($('form.createFolder').valid()){
                            that.saveCreateFolder();
                        }else{
                            return false;
                        }
                    },
                    cancel:function () {

                    }
                },function(d){//加载html后触发

                    that.element = 'div[id="content:'+d.id+'"] .dialogOBox';
                    var html = template('m_docmgr/m_docmgr_createFolder',{
                        itemData:that.settings.$itemData,
                        fileTypeStr:that._fileTypeStr
                    });
                    $(that.element).html(html);
                    if(callBack!=null){
                        callBack();
                    }

                });
            }else{//不以弹窗编辑
                var html = template('m_docmgr/m_docmgr_createFolder',{
                });
                $(that.element).html(html);
                if(callBack!=null){
                    callBack();
                }
            }
        }
        //文件夹保存
        ,saveCreateFolder:function (e) {
            var that = this;
            var fileName = $(that.element).find('input[name="folderName"]').val();

            var option  = {};
            if(that.settings.$editType==1){
                option.classId = that.element;
                option.url = restApi.url_netFile_rename;
                option.postData = {
                    id: that.settings.$itemData.id,
                    accountId: window.currentUserId,
                    fileName: $.trim(fileName)
                };
                m_ajax.postJson(option,function (response) {
                    if(response.code=='0'){
                        S_toastr.success('修改成功！');
                        if(that.settings.isDailog){
                            S_dialog.close(e);
                        }
                        if(that.settings.$saveCallBack!=null){
                            return that.settings.$saveCallBack(response.data);
                        }
                    }else {
                        S_dialog.error(response.info);
                    }
                })
            }else{
                option.url = restApi.url_netFile_createDirectory;
                option.postData = {
                    accountId: window.currentUserId,
                    companyId: window.currentCompanyId,
                    projectId: that.settings.$selectedNodeObj.projectId,
                    pid: that.settings.$selectedNodeObj.id,
                    fileName: $.trim(fileName)
                };
                m_ajax.postJson(option,function (response) {
                    if(response.code=='0'){
                        S_toastr.success('保存成功！');
                        if(that.settings.isDailog){
                            S_dialog.close(e);
                        }
                        if(that.settings.$saveCallBack!=null){
                            return that.settings.$saveCallBack(response.data);
                        }
                    }else {
                        S_dialog.error(response.info);
                    }
                })
            }
        }
        //保存验证
        ,save_validate:function(){
            var that = this;
            $('form.createFolder').validate({
                rules: {
                    folderName:{
                        required:true,
                        maxlength:50
                    }
                },
                messages: {
                    folderName:{
                        required:'请输入'+that._fileTypeStr+'名称!',
                        maxlength:that._fileTypeStr+'名称不超过50位!'
                    }
                }
            });

        }

    });

    $.fn[pluginName] = function (options) {
        return this.each(function () {

            //if (!$.data(this, "plugin_" + pluginName)) {
            $.data(this, "plugin_" +
                pluginName, new Plugin(this, options));
            //}
        });
    };

})(jQuery, window, document);

/**
 * 项目归档-文件列表
 * Created by wrb on 2017/1/9.
 */
;(function ($, window, document, undefined) {

    "use strict";

    var pluginName = "m_docmgr_fileItems_list",
        defaults = {
            $projectId: '',
            $pid:null,
            $projectName:null,
            $type:0,//默认=0=项目归档,1=项目详情中的项目归档
            $isBySearch:false,//是否搜索的列表
            $keywordBySearch:'',//搜索的关键字
            $url:restApi.url_getSkyDriverByProjectList,
            $selectedNodeObj:null,//当前选中对象
            $refreshDataCallBack:null,//刷新回滚事件
            $renderCallBack:null,//渲染完成事件
            $requestCallBack:null//请求回滚事件
        };

    function Plugin(element, options) {
        this.element = element;
        this.settings = options;
        this._defaults = defaults;
        this._name = pluginName;
        this._selectedNodeObj = null;//当前选中节点对象
        this._fileItems = [];
        this._breadcrumbContainer = null;
        this._breadcrumb = {
            allowOperate: false,
            curDirId: null,
            lastDirId: null,
            items: [{dirId: null, text: '根目录'}]
        };

        this._currentCompanyId = window.currentCompanyId;
        this.init();
    }

    $.extend(Plugin.prototype, {
        init: function () {
            var that = this;
            that._selectedNodeObj = that.settings.$selectedNodeObj;
            that.renderHtml();
        },
        renderHtml: function () {
            var that = this;
            that.queryFileItems();
        }
        //查询文件项
        , queryFileItems: function () {

            var that = this;

            if(!that.settings.$isBySearch){
                var ajaxOption = {};
                ajaxOption.classId = '.file-list-items:eq(0)';
                //ajaxOption.url = restApi.url_getSkyDriverByProject;
                ajaxOption.url = that.settings.$url;
                ajaxOption.postData = {
                    projectId: that.settings.$projectId,
                    pid: that.settings.$pid,
                    type:that.settings.$selectedNodeObj.type
                };
                m_ajax.postJson(ajaxOption, function (res) {
                    if (res.code && res.code === '0') {

                        //判断是否能进行操作
                        //that._breadcrumb.allowOperate = (res.data && res.data.uploadFlag === 1);
                        that._fileItems = _.filter(res.data.list, function (o) {
                            return o.pid === that.settings.$pid;
                        });
                        that.renderFileItems(that._fileItems);
                        if(that.settings.$requestCallBack!=null){
                            that.settings.$requestCallBack(res.data);
                        }
                    }
                });

            }else{

                var option = {};
                option.param = {};
                option.param.fileName=that.settings.$keywordBySearch;
                paginationFun({
                    eleId: '#data-pagination-container',
                    loadingId: '.data-list-box',
                    url: restApi.url_getProjectFileByFileName,
                    params: option.param
                }, function (response) {

                    if (response.code == '0') {
                        that._fileItems = response.data.data;
                        $.each(that._fileItems, function (index, item) {
                            item.createDate = moment(item.createDate).format("YYYY-MM-DD");
                            item.fileSize = WebUploader.Base.formatSize(item.fileSize);
                        });
                        var html = template('m_docmgr/m_docmgr_fileItems_list', {
                            fileItems: that._fileItems,
                            rootPath: window.rootPath,
                            type:that.settings.$type
                        });
                        $(that.element).html(html);
                        that.initICheck();
                        that.bindActionClick();
                        that.editHoverFun();
                        that.initContextMenu(that._fileItems);
                        if(that.settings.$renderCallBack!=null){
                            that.settings.$renderCallBack(that._fileItems);
                        }

                    } else {
                        S_dialog.error(response.info);
                    }
                });
            }
        }
        //渲染文件项
        , renderFileItems: function (fileItems) {
            var that = this;
            $.each(fileItems, function (index, item) {
                //item.createDate = moment(item.createDate).format("YYYY-MM-DD HH:mm:ss");
                item.createDate = moment(item.createDate).format("YYYY-MM-DD");
                item.fileSize = WebUploader.Base.formatSize(item.fileSize);
            });
            var html = template('m_docmgr/m_docmgr_fileItems_list', {
                fileItems: fileItems,
                rootPath: window.rootPath,
                type:that.settings.$type
            });
            $(that.element).html(html);
            that.initICheck();
            that.bindActionClick();
            that.editHoverFun();
            that.initContextMenu(fileItems);
            if(that.settings.$renderCallBack!=null){
                that.settings.$renderCallBack();
            }
        }
        //初始化右键菜单
        , initContextMenu:function (fileItems) {
            var that = this;
            if(fileItems!=null && fileItems.length>0){
                $.each(fileItems, function (i, o) {
                    var id = 'box' + o.id;

                    var items = [];
                    if (o.type == 2) {
                        items.push({
                            content: "修改名称",//菜单项内容
                            action: function (e, item) {//菜单项单击和快捷键触发事件
                                var index = $(that.element).find('tr[id="'+id+'"]').attr('data-i');
                                that.editFileName(index);
                            }
                        });
                    }
                    if (o.type == 1) {
                        items.push({
                            content: "下载文件",
                            action: function (e, item) {
                                that.donwloadFile(o.id);
                            }
                        });
                    }
                    if (o.type == 0 || o.type == 1){
                        items.push({
                            content: "删除文件",
                            action: function (e, item) {
                                var index = $(that.element).find('tr[id="'+id+'"]').attr('data-i');
                                that.delFile(index);
                            }
                        });
                    }
                    if(o.type==50){
                        items.push({
                            content: "提交成果",
                            action: function (e, item) {
                                var index =  $(that.element).find('tr[id="'+id+'"]').attr('data-i');
                                that.submitDocResults(index);
                            }
                        });
                    }
                    if(o.sendResults==1 && o.type==30){
                        items.push({
                            content: "发送成果",
                            action: function (e, item) {
                                var index =  $(that.element).find('tr[id="'+id+'"]').attr('data-i');
                                that.sendDocResults(index);
                            }
                        });
                    }
                    if(!(o.type == 2 || o.type == 1 || (o.type == 0 || o.type == 1) || o.type==50 || (o.sendResults==1 && o.type==30)) ){
                        return true;
                    }
                    var menu = new contextMenu({
                        target: document.getElementById(id),//开启自定义右键菜单的目标,
                        hasIcon: false,//是否需要图标
                        hasTitle: false,//是否需要标题
                        autoHide:false,//是否自动隐藏右键菜单
                        menuClass:'innerContentMenu',
                        menu: {//菜单数据配置
                            items: items
                        },
                        beforeShow:function () {
                            $('.contextMenuBox').hide();
                            /*$(that.element).find('input[name="itemCk"]').prop('checked',false);
                            $(that.element).find('input[name="itemCk"]').iCheck('update');
                            $(that.element).find('tr[id="'+id+'"] input[name="itemCk"]').prop('checked',true);
                            $(that.element).find('tr[id="'+id+'"] input[name="itemCk"]').iCheck('update');*/
                        },
                        afterShow:function () {
                            $(that.element).find('tr[id="'+id+'"]').addClass('active').siblings().removeClass('active');
                        }
                    });
                });
            }

        }
        //初始化icheck
        , initICheck:function () {
            var that = this;
            var ifChecked = function (e) {
                $(this).closest('tr').find('.singleOperation').show();
                that.isItemAllCheck();
            };
            var ifUnchecked = function (e) {
                $(this).closest('tr').find('.singleOperation').hide();
                that.isItemAllCheck();
            };
            $(that.element).find('input[name="itemCk"]').iCheck({
                checkboxClass: 'icheckbox_minimal-green',
                radioClass: 'iradio_minimal-green'
            }).on('ifUnchecked.s', ifUnchecked).on('ifChecked.s', ifChecked);
            var ifAllChecked = function (e) {
                $(that.element).find('.batchOperation').show();
                $(that.element).find('input[name="itemCk"]').iCheck('check');
            };
            var ifAllUnchecked = function (e) {
                $(that.element).find('input[name="itemCk"]').prop('checked',false);
                $(that.element).find('input[name="itemCk"]').iCheck('update');
                $(that.element).find('input[name="itemCk"]').iCheck('enable');
                $(that.element).find('.singleOperation').hide();
                $(that.element).find('.batchOperation').hide();
            };
            $(that.element).find('input[name="itemAllCk"]').iCheck({
                checkboxClass: 'icheckbox_minimal-green',
                radioClass: 'iradio_minimal-green'
            }).on('ifUnchecked.s', ifAllUnchecked).on('ifChecked.s', ifAllChecked);
        }
        //判断全选是否该选中并给相关处理
        , isItemAllCheck:function () {
            var that =this;
            var len = $(that.element).find('input[name="itemCk"]:checked').length;
            var itemLen = that._fileItems.length;
            if(len==itemLen){
                $(that.element).find('input[name="itemAllCk"]').prop('checked',true);
                $(that.element).find('input[name="itemAllCk"]').iCheck('update');
            }else{
                $(that.element).find('input[name="itemAllCk"]').prop('checked',false);
                $(that.element).find('input[name="itemAllCk"]').iCheck('update');
            }
        }
        //hover事件
        , editHoverFun:function () {
            var that = this;
            $(that.element).find('TR').each(function () {

                var $this = $(this);
                var itemCkEle = $this.find('input[name="itemCk"]');
                var singleOperation = $this.find('.singleOperation');
                $this.hover(function () {
                    if(!itemCkEle.is(':checked')){//选中，出现操作按钮
                        singleOperation.show();
                    }
                },function () {
                    if(!itemCkEle.is(':checked')){//选中，出现操作按钮
                        singleOperation.hide();
                    }
                });
            });
        }
        //删除文件
        , delFile:function (index) {
            var that = this;
            var content = '确定要删除 【' + that._fileItems[index].fileName + '】 吗？';
            if (that._fileItems[index].type == 0 || that._fileItems[index].type == 40 || that._fileItems[index].type==30 || that._fileItems[index].type==2 || that._fileItems[index].type == 50){
                content = '删除文件夹会移除所有子文件,' + content;
            }
            S_swal.confirm({
                title:'确定删除吗?',
                text:content,
                callBack:function () {
                    that.ajaxDelete(that._fileItems[index]);
                }
            });
        }
        //删除文件
        , ajaxDelete : function (data) {
            var that = this;
            var ajaxOption = {};
            ajaxOption.url = restApi.url_netFile_delete;
            ajaxOption.postData = {
                id: data.id,
                accountId: window.currentUserId
            };
            m_ajax.postJson(ajaxOption, function (res) {
                if (res.code === '0') {

                    S_swal.sure({
                        title:'已删除',
                        text:'该文件删除成功。',
                        callBack:function () {
                            if(that.settings.$refreshDataCallBack!=null){
                                that.settings.$refreshDataCallBack();
                            }
                        }
                    });
                } else if (res.code === '1') {
                    S_dialog.error(res.msg);
                }
            });
        }
        //下载文件
        , donwloadFile:function (id) {
            var url = restApi.url_downLoadFile+'/'+id;
            window.open(url);
            return false;
        }
        //修改名称
        , editFileName:function (index) {
            var that = this, options = {};
            options.$title = that._fileItems[index].type==0?'修改文件夹':'修改文件';
            options.$editType = 1;
            options.$itemData = {
                id:that._fileItems[index].id,
                fileName:that._fileItems[index].fileName,
                fileExtName:that._fileItems[index].fileExtName,
                type:that._fileItems[index].type
            };
            options.$selectedNodeObj = that._selectedNodeObj;
            options.$saveCallBack = function () {
                if(that.settings.$refreshDataCallBack!=null){
                    that.settings.$refreshDataCallBack();
                }
            };
            $('body').m_docmgr_createFolder(options);
        }
        //提交成果文件
        , submitDocResults:function (index) {
            var that = this;
            S_dialog.confirm('确定提交成果文件？',function () {

                var option = {};
                option.url = restApi.url_notarizeArchivedFileNotifier;
                option.postData = {
                    projectId:that.settings.$projectId,
                    companyId:that._currentCompanyId,
                    id:that._fileItems[index].id,
                    pid:that._selectedNodeObj.id
                };
                m_ajax.postJson(option, function (response) {
                    if (response.code == '0') {
                        S_toastr.success('操作成功');
                        if(that.settings.$refreshDataCallBack!=null){
                            that.settings.$refreshDataCallBack();
                        }
                    } else {
                        S_dialog.error(response.info);
                    }
                });
            },function () {
            });
        }
        //发送成果文件
        , sendDocResults:function (index) {
            var that = this;
            var options = {};
            options.$itemData = {
                id:that._fileItems[index].id,
                fileName:that._fileItems[index].fileName,
                fileExtName:that._fileItems[index].fileExtName,
                type:that._fileItems[index].type
            };
            options.$selectedNodeObj = that._selectedNodeObj;
            options.$saveCallBack = function () {
                if(that.settings.$refreshDataCallBack!=null){
                    that.settings.$refreshDataCallBack();
                }
            };
            $('body').m_docmgr_sendDocResults(options);
        }
        , openOrSelectNode:function (skyDrivePathArr,i) {
            var that = this;
            var tree = $('#documentDirectoryTree').jstree(true);
            var node = tree.get_node(skyDrivePathArr[i]);

            if(skyDrivePathArr.length==1){

                tree.select_node('#'+skyDrivePathArr[i]);

            }else if(i<=skyDrivePathArr.length-2){
                if(!tree.is_open(node)){
                    tree.open_node(node,function () {
                        if(i<=skyDrivePathArr.length-1){
                            that.openOrSelectNode(skyDrivePathArr,i+1);
                        }
                    });
                }else{
                    if(i<=skyDrivePathArr.length-1){
                        that.openOrSelectNode(skyDrivePathArr,i+1);
                    }
                }
            }else{
                tree.select_node('#'+skyDrivePathArr[i]);
            }
        }
        //事件绑定
        , bindActionClick:function () {
            var that = this;
            $(that.element).find('a[data-action]').off('click').on('click',function (e) {
                var $this = $(this);
                var dataAction = $this.attr('data-action');
                var index = $this.closest('TR').attr('data-i');
                switch (dataAction){
                    case 'editFileName'://修改文件夹或文件名称
                        that.editFileName(index);
                        break;
                    case 'downloadFile'://下载文件
                        that.donwloadFile(that._fileItems[index].id);
                        return false;
                        break;
                    case 'batchDownloadFile'://批量下载文件

                        $(that.element).find('input[name="itemCk"]:checked').each(function () {
                            var id = $(this).closest('TR').attr('data-id');
                            var type = $(this).closest('TR').attr('data-type');
                            if(type==1){
                                that.donwloadFile(id);
                            }
                        });
                        return false;
                        break;
                    case 'delFile'://删除文件
                        that.delFile(index);
                        break;
                    case 'batchDelFile'://批量删除

                        break;
                    case 'intoSubDirectory'://点击进入子目录

                        if(that._fileItems[index].type==0 || that._fileItems[index].type==40 || that._fileItems[index].type==30 || that._fileItems[index].type==2 || that._fileItems[index].type == 50 || that._fileItems[index].type == 41){

                            if(that.settings.$isBySearch){//经搜索

                                var skyDrivePath = that._fileItems[index].skyDrivePath;
                                skyDrivePath = that._fileItems[index].projectId + '-' + skyDrivePath;
                                var skyDrivePathArr = skyDrivePath.split('-');
                                that.openOrSelectNode(skyDrivePathArr,0);


                            }else{//不经搜索

                                var tree = $('#documentDirectoryTree').jstree(true),
                                    sel = tree.get_selected();

                                if(!tree.is_open(sel)){
                                    tree.open_node(sel,function () {
                                        tree.select_node('#'+that._fileItems[index].id);
                                    });
                                }else{
                                    tree.select_node('#'+that._fileItems[index].id);
                                }
                                tree.deselect_node(sel);
                            }

                        }
                        break;
                    case 'submitDocResults'://提交成果文件

                        that.submitDocResults(index);
                        e.stopPropagation();
                        break;
                    case 'sendDocResults'://发送成果文件
                        that.sendDocResults(index);
                        e.stopPropagation();
                        break;
                }
            });
        }

    });

    /*
     1.一般初始化（缓存单例）： $('#id').pluginName(initOptions);
     2.强制初始化（无视缓存）： $('#id').pluginName(initOptions,true);
     3.调用方法： $('#id').pluginName('methodName',args);
     */
    $.fn[pluginName] = function (options, args) {
        var instance;
        var funcResult;
        var jqObj = this.each(function () {

            //从缓存获取实例
            instance = $.data(this, "plugin_" + pluginName);

            if (options === undefined || options === null || typeof options === "object") {

                var opts = $.extend(true, {}, defaults, options);

                //options作为初始化参数，若args===true则强制重新初始化，否则根据缓存判断是否需要初始化
                if (args === true) {
                    instance = new Plugin(this, opts);
                } else {
                    if (instance === undefined || instance === null)
                        instance = new Plugin(this, opts);
                }

                //写入缓存
                $.data(this, "plugin_" + pluginName, instance);
            }
            else if (typeof options === "string" && typeof instance[options] === "function") {

                //options作为方法名，args则作为方法要调用的参数
                //如果方法没有返回值，funcReuslt为undefined
                funcResult = instance[options].call(instance, args);
            }
        });

        return funcResult === undefined ? jqObj : funcResult;
    };

})(jQuery, window, document);

/**
 * 上传文件
 * Created by wrb on 2018/1/11.
 */
;(function ($, window, document, undefined) {

    "use strict";
    var pluginName = "m_docmgr_fileUpload",
        defaults = {
            $title:null,
            $isDialog:true,
            $selectedNodeObj:null,//当前选中对象
            $saveCallBack:null//保存后事件
        };

    // The actual plugin constructor
    function Plugin(element, options) {
        this.element = element;

        this.settings = $.extend({}, defaults, options);
        this._defaults = defaults;
        this._name = pluginName;
        this._uploadmgrContainer = null;//上传容器
        this._btnNewDir = null;
        this._btnUpload = null;
        this._fileListItemsContainer = null;
        this.init();
    }

    // Avoid Plugin.prototype conflicts
    $.extend(Plugin.prototype, {
        init: function () {
            var that = this;
            that.initHtmlData(function () {
                that.bindBtnUpload();
            });
        }
        //初始化数据并加载模板
        ,initHtmlData:function (callBack) {
            var that = this;
            if(that.settings.$isDialog){//以弹窗编辑
                S_dialog.dialog({
                    title: that.settings.$title||'上传文件',
                    contentEle: 'dialogOBox',
                    lock: 3,
                    width: '800',
                    height: '370',
                    tPadding: '0px',
                    url: rootPath+'/assets/module/m_common/m_dialog.html',
                    cancelText:'关闭',
                    cancel:function () {

                    }
                },function(d){//加载html后触发

                    that.element = 'div[id="content:'+d.id+'"] .dialogOBox';
                    var html = template('m_docmgr/m_docmgr_fileUpload',{});
                    $(that.element).html(html);
                    if(callBack!=null){
                        callBack();
                    }
                });
            }else{//不以弹窗编辑
                var html = template('m_docmgr/m_docmgr_fileUpload',{
                });
                $(that.element).html(html);
                if(callBack!=null){
                    callBack();
                }
            }
        }
        //上传文件
        , bindBtnUpload: function () {
            var that = this;
            that._btnUpload = $(that.element).find('.btnUpload:eq(0)');
            that._uploadmgrContainer = $(that.element).find('.uploadmgrContainer:eq(0)');

            //防止重复渲染
            if (that._uploadmgrContainer.find('.uploadmgr').length > 0)
                return false;


            that._uploadmgrContainer.m_uploadmgr({
                server: restApi.url_netFile_uploadFile,
                btnPickText : '<i class="fa fa-upload"></i>&nbsp;上传附件',
                ifCloseItemFinished : false,
                boxClass : 'no-borders',
                isShowBtnClose : false,
                auto:true,
                beforeFileQueued: function (file, m_uploadmgr) {

                    return true;
                },
                uploadBeforeSend: function (object, data, headers) {
                    data.companyId = window.currentCompanyId;
                    data.accountId = window.currentUserId;
                    data.projectId = that.settings.$selectedNodeObj.projectId;
                    data.pid = that.settings.$selectedNodeObj.id;
                },
                uploadSuccessCallback: function (file, res) {
                    if (res.code === '0') {
                        if(that.settings.$saveCallBack!=null){
                            that.settings.$saveCallBack();
                        }
                    }
                }
            }, true);

            return false;
        }

    });

    $.fn[pluginName] = function (options) {
        return this.each(function () {

            //if (!$.data(this, "plugin_" + pluginName)) {
            $.data(this, "plugin_" +
                pluginName, new Plugin(this, options));
            //}
        });
    };

})(jQuery, window, document);

/**
 * 发送归档通知
 * Created by wrb on 2018/1/12.
 */
;(function ($, window, document, undefined) {

    "use strict";
    var pluginName = "m_docmgr_sendArchiveNotice",
        defaults = {
            $title:null,
            $isDialog:true,
            $selectedNodeObj:null,//当前选中对象
            $itemData:null,//编辑对象
            $saveCallBack:null//保存后事件
        };

    // The actual plugin constructor
    function Plugin(element, options) {
        this.element = element;

        this.settings = $.extend({}, defaults, options);
        this._defaults = defaults;
        this._name = pluginName;
        this.init();
    }

    // Avoid Plugin.prototype conflicts
    $.extend(Plugin.prototype, {
        init: function () {
            var that = this;
            that.initHtmlData(function () {
                that.save_validate();
                that.initSelect2();
            });
        }
        //初始化数据并加载模板
        ,initHtmlData:function (callBack) {
            var that = this;
            if(that.settings.$isDialog){//以弹窗编辑
                S_dialog.dialog({
                    title: that.settings.$title||'发送归档通知',
                    contentEle: 'dialogOBox',
                    lock: 3,
                    width: '700',
                    tPadding: '0px',
                    url: rootPath+'/assets/module/m_common/m_dialog.html',
                    okText:'发送',
                    ok:function () {
                        if($('form.sendArchiveNotice').valid()){
                            if(that.sendArchiveNotice()==false){
                                return false;
                            }
                        }else{
                            return false;
                        }
                    },
                    cancel:function () {

                    }
                },function(d){//加载html后触发

                    that.element = 'div[id="content:'+d.id+'"] .dialogOBox';
                    var html = template('m_docmgr/m_docmgr_sendArchiveNotice',{
                        selectedNodeObj:that.settings.$selectedNodeObj,
                        nowDate: getNowDate()
                    });
                    $(that.element).html(html);
                    if(callBack!=null){
                        callBack();
                    }

                });
            }else{//不以弹窗编辑
                var html = template('m_docmgr/m_docmgr_sendArchiveNotice',{
                });
                $(that.element).html(html);
                if(callBack!=null){
                    callBack();
                }
            }
        }
        //初始化select2
        ,initSelect2:function () {
            var that = this;
            var option  = {};
            option.classId = that.element;
            option.url = restApi.url_getArchivedFileNotifier;
            option.postData = {
                companyId: window.currentCompanyId,
                projectId: that.settings.$selectedNodeObj.projectId,
                taskId: that.settings.$selectedNodeObj.taskId
            };
            m_ajax.postJson(option,function (response) {
                if(response.code=='0'){
                    var staffArr = [],selectedArr=[];
                    var selectNameArr = response.data.selectName;
                    var defaultNameArr = response.data.defaultName;
                    if(selectNameArr!=null && selectNameArr.length>0){
                        $.each(selectNameArr, function (i, o) {
                            staffArr.push({
                                id: o.id,
                                text: o.userName
                            });
                        });
                    }
                    if(defaultNameArr!=null && defaultNameArr.length>0){
                        $.each(defaultNameArr, function (i, o) {
                            selectedArr.push(o.id);
                        });
                    }
                    $(that.element).find('select.js-example-disabled-results').select2({
                        tags: true,
                        tokenSeparators: [',', ' '],
                        multiple: true,
                        data: staffArr
                    });
                    $(that.element).find('select.js-example-disabled-results').val(selectedArr).trigger('change');
                    $(that.element).find('select.js-example-disabled-results').on("change", function(e) {
                        $(this).parent().find('.error').hide();
                    })



                }else {
                    S_dialog.error(response.info);
                }
            })

        }
        //发送
        ,sendArchiveNotice:function (e) {
            var that = this;
            var userArr = [];
            var usersArr = $(that.element).find('select.js-example-disabled-results').select2("data");
            var taskName = $(that.element).find('input[name="taskName"]').val();
            var deadline = $(that.element).find('input[name="deadline"]').val();
            var remarks = $(that.element).find('textarea[name="remarks"]').val();
            if(usersArr!=null && usersArr.length>0){
                $.each(usersArr, function (i, o) {
                    var user = new Object;
                    user.id = o.id;
                    user.name = o.text;
                    userArr.push(user);
                });

            }
            if(usersArr==null || usersArr.length==0){
                S_toastr.error('当前任务没有发送人员，请在生产安排确定参与人员！');
                return false;
            }

            var option  = {};
            option.classId = that.element;
            option.url = restApi.url_sendArchivedFileNotifier;
            option.postData = {
                targetId: that.settings.$selectedNodeObj.taskId,
                projectId: that.settings.$selectedNodeObj.projectId,
                companyId: window.currentCompanyId,
                id:that.settings.$selectedNodeObj.id,
                userId: window.currentUserId,
                taskName:taskName,
                deadline:deadline,
                remarks:remarks,
                userArr: userArr
            };
            m_ajax.postJson(option,function (response) {
                if(response.code=='0'){
                    S_toastr.success('发送成功！');
                    if(that.settings.$saveCallBack!=null){
                        that.settings.$saveCallBack();
                    }
                }else {
                    S_dialog.error(response.info);
                }
            })

        }
        //保存验证
        ,save_validate:function(){
            var that = this;
            $('form.sendArchiveNotice').validate({
                rules: {
                    taskName:{
                        required:true,
                        maxlength:50
                    },
                    users:{
                        required:true
                    },
                    deadline:{
                        required:true
                    }
                },
                messages: {
                    taskName:{
                        required:'请输入归档名称!',
                        maxlength:'归档名称不超过50位!'
                    },
                    users:{
                        required:'请选择发送人员!'
                    },
                    deadline:{
                        required:'请选择截止日期!'
                    }
                },
                errorPlacement:function(error,element){
                    error.appendTo(element.parent());
                }
            });

        }

    });

    $.fn[pluginName] = function (options) {
        return this.each(function () {

            //if (!$.data(this, "plugin_" + pluginName)) {
            $.data(this, "plugin_" +
                pluginName, new Plugin(this, options));
            //}
        });
    };

})(jQuery, window, document);

/**
 * 发送成果
 * Created by wrb on 2018/1/12.
 */
;(function ($, window, document, undefined) {

    "use strict";
    var pluginName = "m_docmgr_sendDocResults",
        defaults = {
            $title:null,
            $isDialog:true,
            $selectedNodeObj:null,//当前选中对象
            $itemData:null,//编辑对象
            $saveCallBack:null//保存后事件
        };

    // The actual plugin constructor
    function Plugin(element, options) {
        this.element = element;

        this.settings = $.extend({}, defaults, options);
        this._defaults = defaults;
        this._name = pluginName;
        this._currentCompanyId = window.currentCompanyId;
        this._companyInfoData = null;
        this.init();
    }

    // Avoid Plugin.prototype conflicts
    $.extend(Plugin.prototype, {
        init: function () {
            var that = this;
            that.initHtmlData(function () {
            });
        }
        //初始化数据并加载模板
        ,initHtmlData:function (callBack) {
            var that = this;
            if(that.settings.$isDialog){//以弹窗编辑
                S_dialog.dialog({
                    title: that.settings.$title||'发送归档通知',
                    contentEle: 'dialogOBox',
                    lock: 3,
                    width: '700',
                    tPadding: '0px',
                    url: rootPath+'/assets/module/m_common/m_dialog.html',
                    okText:'发送',
                    ok:function () {
                        S_dialog.confirm('确定发送成果？',function () {
                           that.sendArchiveNotice();
                        },function () {
                        });
                    },
                    cancel:function () {

                    }
                },function(d){//加载html后触发

                    that.element = 'div[id="content:'+d.id+'"] .dialogOBox';
                    that.getPartAInfo(function (data) {
                        console.log(data)

                        var html = template('m_docmgr/m_docmgr_sendDocResults',{
                            companyData:data
                        });
                        $(that.element).html(html);
                        if(callBack!=null){
                            callBack();
                        }
                    });

                });
            }else{//不以弹窗编辑
                var html = template('m_docmgr/m_docmgr_sendDocResults',{
                });
                $(that.element).html(html);
                if(callBack!=null){
                    callBack();
                }
            }
        }
        //查询甲方信息
        ,getPartAInfo:function (callback) {
            var that = this;
            var option  = {};
            option.classId = that.element;
            option.url = restApi.url_sendOwner;
            option.postData = {
                projectId:that.settings.$selectedNodeObj.projectId,
                companyId:that._currentCompanyId,
                id:that.settings.$itemData.id,
                pid:that.settings.$selectedNodeObj.id
            };
            m_ajax.postJson(option,function (response) {
                if(response.code=='0'){
                    that._companyInfoData = response.data;
                    if(callback!=null){
                        callback(response.data);
                    }
                }else {
                    S_dialog.error(response.info);
                }
            })

        }
        //发送
        ,sendArchiveNotice:function (e) {
            var that = this;
            var option  = {};
            option.classId = that.element;
            option.url = restApi.url_sendOwnerProjectFile;
            option.postData = {
                id: that._companyInfoData.id,
                projectId: that._companyInfoData.projectId,
                companyId: window.currentCompanyId,
                pid: that._companyInfoData.pid,
                fromCompanyId: that._companyInfoData.fromCompanyId,
                companyName: that._companyInfoData.companyName,
                fileName: that._companyInfoData.fileName
            };
            m_ajax.postJson(option,function (response) {
                if(response.code=='0'){
                    S_toastr.success('发送成功！');
                    if(that.settings.$saveCallBack!=null){
                        that.settings.$saveCallBack();
                    }
                }else {
                    S_dialog.error(response.info);
                }
            })

        }


    });

    $.fn[pluginName] = function (options) {
        return this.each(function () {

            //if (!$.data(this, "plugin_" + pluginName)) {
            $.data(this, "plugin_" +
                pluginName, new Plugin(this, options));
            //}
        });
    };

})(jQuery, window, document);

;(function ($, window, document, undefined) {
    "use strict";

    var pluginName = "m_fileUploader",
        defaults = {
            server: null,
            auto: true,//选择文件后是否自动开始上传
            chunked: false,//是否分块上传，需要后台配合
            chunkSize: 5 * 1024 * 1024,
            chunkRetry: 3,
            fileExts: 'pdf,zip,rar,doc,docx,xls,xlsx,ppt,pptx,txt',
            fileSingleSizeLimit: null,
            formData: {},
            uploadBeforeSend: null,
            uploadSuccessCallback: null,
            uploadProgressCallback: null,//进度处理方法
            loadingId: null,//锁屏加载ID
            multiple:false,//是否上传多个文件
            duplicate:true//是否可重复选择同一文件
        };

    function Plugin(element, options) {
        this.element = element;

        this.settings = options;
        this._defaults = defaults;
        this._name = pluginName;
        this._lastUploadFile = null;
        this._uploader = null;
        this.init();
    }

    $.extend(Plugin.prototype, {
        init: function () {
            var that = this;
            that._initWebUploader();
        },
        _initWebUploader: function () {
            var that = this;
            that._uploader = WebUploader.create({
                fileSingleSizeLimit: that.settings.fileSingleSizeLimit,
                compress: false,// 不压缩image
                auto: that.settings.auto,
                swf: window.rootPath + '/assets/lib/webuploader/Uploader.swf',
                server: that.settings.server,
                //timeout: 600000,
                pick: {
                    id: that.element,
                    innerHTML: that.settings.innerHTML || '上传',
                    multiple: that.settings.multiple
                },
                duplicate: that.settings.duplicate,//是否可重复选择同一文件
                resize: false,
                chunked: that.settings.chunked,
                chunkSize: that.settings.chunkSize,
                chunkRetry: that.settings.chunkRetry,
                formData: that.settings.formData,
                accept: that.settings.accept || {
                    extensions: that.settings.fileExts
                },
                threads: 1,
                disableGlobalDnd: true
            });
            //文件队列
            that._uploader.on('beforeFileQueued', function (file) {
                if (_.isBlank(file.ext)) {
                    S_dialog.error(file.name + ' 缺少扩展名，无法加入上传队列');
                    return false;
                }

                if (that._uploader.isInProgress()) {
                    //console.log('当前正在上传，禁止添加新文件到队列中');
                    return false;
                }
                if(!that.settings.multiple){
                    that._uploader.reset();//单个上传重置队列，防止队列不断增大
                }
                return true;
            });
            that._uploader.on('fileQueued', function (file) {
                that._lastUploadFile = file;
                that._uploader.option("formData", {
                    uploadId: WebUploader.Base.guid()
                });
            });
            that._uploader.on('startUpload', function (file) {
                if (!isNullOrBlank(that.settings.loadingId))
                    $_loading.show(that.settings.loadingId, '正在上传中...');
            });
            that._uploader.on('uploadStart', function (file) {
                //console.log('uploadStart.');
            });
            that._uploader.on('uploadProgress', function (file, percentage) {
                //console.log(percentage);
                if (that.settings.uploadProgressCallback != null) {
                    that.settings.uploadProgressCallback(file, percentage);
                }
            });
            //当某个文件的分块在发送前触发，主要用来询问是否要添加附带参数，大文件在开起分片上传的前提下此事件可能会触发多次
            that._uploader.on("uploadBeforeSend", function (object, data, headers) {
                if (that.settings.chunked === true)
                    data.chunkPerSize = that.settings.chunkSize;
                if (that.settings.uploadBeforeSend)
                    that.settings.uploadBeforeSend(object, data, headers);
            });
            //当某个文件上传到服务端响应后，会派送此事件来询问服务端响应是否有效。
            that._uploader.on("uploadAccept", function (object, response) {
                if (!handleResponse(response)) {
                    if (response.code) {
                        if (response.code === '0' && response.data) {
                            //分片后续处理
                            if (response.data.needFlow === true) {
                                that._uploader.options.formData.fastdfsGroup = response.data.fastdfsGroup;
                                that._uploader.options.formData.fastdfsPath = response.data.fastdfsPath;
                            }
                            return true;
                        } else {

                            var errorMsg = response.msg != null && response.msg != undefined ? response.msg : (response.info != null && response.info != undefined ? response.info : '');

                            if (object && object.file && object.file.name) {
                                object.file.uploadAcceptFailed = true;
                                object.file.uploadAcceptFailedMsg = errorMsg;
                            }
                            else
                                that._onError(null, "上传失败(#02)，" + errorMsg);
                        }
                    }
                }
                //返回False触发uploadError
                return false;
            });
            //上传成功
            that._uploader.on('uploadSuccess', function (file, response) {
                //console.log('uploadSuccess');
                //console.log(response);
                if (!isNullOrBlank(that.settings.loadingId))
                    $_loading.close(that.settings.loadingId);

                if (!handleResponse(response)) {
                    if (response.code === '0') {
                        if (that.settings.uploadSuccessCallback)
                            that.settings.uploadSuccessCallback(file, response);
                    }
                    else {
                        var errorMsg = response.msg != null && response.msg != undefined ? response.msg : (response.info != null && response.info != undefined ? response.info : '');
                        that._onError(file, errorMsg);
                    }
                }
            });
            //当所有文件上传结束时触发
            that._uploader.on("uploadFinished", function () {
                //console.log("uploadFinished");
            });
            //上传失败
            that._uploader.on('uploadError', function (file, reason) {
                if (!isNullOrBlank(that.settings.loadingId))
                    $_loading.close(that.settings.loadingId);
                if (file.uploadAcceptFailed === true)
                    that._onError(file, file.uploadAcceptFailedMsg)
                else
                    that._onError(file, "上传失败，" + reason);
            });
            that._uploader.on('error', function (handler) {
                var content;
                switch (handler) {
                    case 'F_EXCEED_SIZE':
                        content = '文件大小超出范围（' + that.settings.fileSingleSizeLimit / (1024 * 1024) + 'MB）';
                        break;
                    case 'Q_EXCEED_NUM_LIMIT':
                        content = '已超最大的文件上传数';
                        break;
                    case 'Q_TYPE_DENIED':
                        content = '仅支持上传如下类型文件：' + that.settings.fileExts;
                        break;
                    case 'F_DUPLICATE':
                        content = '文件已经添加';
                        break;
                    default:
                        content = '文件添加失败';
                        break;
                }
                that._onError(that._lastUploadFile, content);
            });
        },
        _onError: function (file, msg) {
            var that = this;
            //为了可以重试，设置为错误状态
            if (file !== void 0 && file !== null)
                file.setStatus('error');
            that._debounceShowError(msg);
        },
        _debounceShowError: _.debounce(function (msg) {
            S_toastr.error(msg);
        }, 200),
        //获取WebUploader实例
        getUploader: function () {
            var that = this;
            return that._uploader;
        }
    });

    /*
     1.一般初始化（缓存单例）： $('#id').pluginName(initOptions);
     2.强制初始化（无视缓存）： $('#id').pluginName(initOptions,true);
     3.调用方法： $('#id').pluginName('methodName',args);
     */
    $.fn[pluginName] = function (options, args) {
        var instance;
        var funcResult;
        var jqObj = this.each(function () {

            //从缓存获取实例
            instance = $.data(this, "plugin_" + pluginName);

            if (options === undefined || options === null || typeof options === "object") {

                var opts = $.extend(true, {}, defaults, options);

                //options作为初始化参数，若args===true则强制重新初始化，否则根据缓存判断是否需要初始化
                if (args === true) {
                    instance = new Plugin(this, opts);
                } else {
                    if (instance === undefined || instance === null)
                        instance = new Plugin(this, opts);
                }

                //写入缓存
                $.data(this, "plugin_" + pluginName, instance);
            }
            else if (typeof options === "string" && typeof instance[options] === "function") {

                //options作为方法名，args则作为方法要调用的参数
                //如果方法没有返回值，funcReuslt为undefined
                funcResult = instance[options].call(instance, args);
            }
        });

        return funcResult === undefined ? jqObj : funcResult;
    };

})(jQuery, window, document);

;(function ($, window, document, undefined) {
    "use strict";

    var pluginName = "m_imgUploader",
        defaults = {
            server: null,
            auto: true,//选择文件后是否自动开始上传
            chunked: false,//是否分块上传，需要后台配合
            chunkSize: 5 * 1024 * 1024,
            chunkRetry: 3,
            fileExts: 'gif,jpg,jpeg,bmp,png',
            fileSingleSizeLimit: null,
            formData: {},
            uploadBeforeSend: null,
            uploadSuccessCallback: null,
            uploadProgressCallback: null,//进度处理方法
            innerHTML: null,
            loadingId: null//锁屏加载ID
        };

    function Plugin(element, options) {
        this.element = element;

        this.settings = options;
        this._defaults = defaults;
        this._name = pluginName;
        this._lastUploadFile = null;
        this._uploader = null;
        this.init();
    }

    $.extend(Plugin.prototype, {
        init: function () {
            var that = this;
            that._initWebUploader();
        },
        _initWebUploader: function () {
            var that = this;
            that._uploader =  WebUploader.create({
                compress: false,// 不压缩image
                auto: true,
                swf: window.rootPath + '/assets/lib/webuploader/Uploader.swf',
                server: that.settings.server,
                //timeout: 600000,
                pick: {
                    id: that.element,
                    innerHTML: that.settings.innerHTML || '上传',
                    multiple: false
                },
                duplicate: true,//是否可重复选择同一文件
                resize: false,
                chunked: false,
                formData: that.settings.formData,
                accept: that.settings.accept||{
                    extensions: that.settings.fileExts
                },
                threads: 1,
                disableGlobalDnd: true
            });
            //文件队列
            that._uploader.on('beforeFileQueued', function (file) {
                if (_.isBlank(file.ext)) {
                    S_dialog.error(file.name + ' 缺少扩展名，无法加入上传队列');
                    return false;
                }

                if (that._uploader.isInProgress()) {
                    //console.log('当前正在上传，禁止添加新文件到队列中');
                    return false;
                }
                that._uploader.reset();//单个上传重置队列，防止队列不断增大
                return true;
            });
             that._uploader.on('fileQueued', function (file) {
                that._lastUploadFile = file;
                 that._uploader.option("formData", {
                    uploadId: WebUploader.Base.guid()
                });
            });
             that._uploader.on('startUpload', function (file) {
                 if (!isNullOrBlank(that.settings.loadingId))
                     $_loading.show(that.settings.loadingId, '正在上传中...');
            });
             that._uploader.on('uploadStart', function (file) {
                //console.log('uploadStart.');
            });
             that._uploader.on('uploadProgress', function (file, percentage) {
                //console.log('进度:' + percentage);
            });
            //当某个文件的分块在发送前触发，主要用来询问是否要添加附带参数，大文件在开起分片上传的前提下此事件可能会触发多次
            that._uploader.on("uploadBeforeSend", function (object, data, headers) {
                if (that.settings.chunked === true)
                    data.chunkPerSize = that.settings.chunkSize;
                if (that.settings.uploadBeforeSend)
                    that.settings.uploadBeforeSend(object, data, headers);
            });
            //当某个文件上传到服务端响应后，会派送此事件来询问服务端响应是否有效。
            that._uploader.on("uploadAccept", function (object, response) {
                if (!handleResponse(response)) {
                    if (response.code) {
                        if (response.code === '0' && response.data) {
                            //分片后续处理
                            if (response.data.needFlow === true) {
                                that._uploader.options.formData.fastdfsGroup = response.data.fastdfsGroup;
                                that._uploader.options.formData.fastdfsPath = response.data.fastdfsPath;
                            }
                            return true;
                        } else {
                            if (object && object.file && object.file.name)
                                S_dialog.error(object.file.name + " 上传失败(#01)，" + response.msg);
                            else
                                S_dialog.error("上传失败(#02)，" + response.msg);
                        }
                    }
                }
                return false;
            });
            //上传成功
             that._uploader.on('uploadSuccess', function (file, response) {
                //console.log('uploadSuccess');
                //console.log(response);
                 if (!isNullOrBlank(that.settings.loadingId))
                     $_loading.close(that.settings.loadingId);

                 if (!handleResponse(response)) {
                     if (response.code === '0') {
                         if (that.settings.uploadSuccessCallback)
                             that.settings.uploadSuccessCallback(file, response);
                     }
                     else {
                         S_dialog.error(response.msg);
                     }
                 }
            });
            //当所有文件上传结束时触发
             that._uploader.on("uploadFinished", function () {
                //console.log("uploadFinished");
            });
            //上传失败
             that._uploader.on('uploadError', function (file, reason) {
                 if (!isNullOrBlank(that.settings.loadingId))
                     $_loading.close(that.settings.loadingId);
                that._onError(file, "上传失败，" + reason);
            });
             that._uploader.on('error', function (handler) {
                var content;
                switch (handler) {
                    case 'F_EXCEED_SIZE':
                        content = '文件大小超出范围';
                        break;
                    case 'Q_EXCEED_NUM_LIMIT':
                        content = '已超最大的文件上传数';
                        break;
                    case 'Q_TYPE_DENIED':
                        content = '文件类型不正确，请上传png、jpg、bmp、jpeg格式的图像文件';
                        break;
                    case 'F_DUPLICATE':
                        content = '文件已经添加';
                        break;
                    default:
                        content = '文件添加失败';
                        break;
                }
                that._onError(that._lastUploadFile, content);
            });
        },
        _onError: function (file, msg) {
            //showMsg
            //为了可以重试，设置为错误状态
            if (file !== void 0 && file !== null)
                file.setStatus('error');
            S_dialog.error(msg);
        }
    });

    /*
     1.一般初始化（缓存单例）： $('#id').pluginName(initOptions);
     2.强制初始化（无视缓存）： $('#id').pluginName(initOptions,true);
     3.调用方法： $('#id').pluginName('methodName',args);
     */
    $.fn[pluginName] = function (options, args) {
        var instance;
        var funcResult;
        var jqObj = this.each(function () {

            //从缓存获取实例
            instance = $.data(this, "plugin_" + pluginName);

            if (options === undefined || options === null || typeof options === "object") {

                var opts = $.extend(true, {}, defaults, options);

                //options作为初始化参数，若args===true则强制重新初始化，否则根据缓存判断是否需要初始化
                if (args === true) {
                    instance = new Plugin(this, opts);
                } else {
                    if (instance === undefined || instance === null)
                        instance = new Plugin(this, opts);
                }

                //写入缓存
                $.data(this, "plugin_" + pluginName, instance);
            }
            else if (typeof options === "string" && typeof instance[options] === "function") {

                //options作为方法名，args则作为方法要调用的参数
                //如果方法没有返回值，funcReuslt为undefined
                funcResult = instance[options].call(instance, args);
            }
        });

        return funcResult === undefined ? jqObj : funcResult;
    };

})(jQuery, window, document);

/**
 * 项目归档
 * Created by wrb on 2017/12/13.
 */
;(function ($, window, document, undefined) {

    "use strict";

    var pluginName = "m_projectArchiving",
        defaults = {
            $projectId: '',
            $projectName:null
        };

    function Plugin(element, options) {
        this.element = element;
        this.settings = options;
        this._defaults = defaults;
        this._name = pluginName;
        this._selectedNodeObj = null;//当前选中节点对象
        this._fileItems = [];
        this._uploadmgrContainer = null;
        this._btnNewDir = null;
        this._btnUpload = null;
        this._fileListItemsContainer = null;
        this._breadcrumbContainer = null;
        this._breadcrumb = {
            allowOperate: false,
            curDirId: null,
            lastDirId: null,
            items: [{dirId: null, text: '根目录'}]
        };

        this._companyId = window.currentCompanyId;
        if (_.isBlank(this._companyId)) {
            S_dialog.error('无法获取团队Id');
            return;
        }

        this.init();
    }

    $.extend(Plugin.prototype, {
        init: function () {
            var that = this;
            that.renderHtml();


        },
        renderHtml: function () {
            var that = this;

            var html = template('m_docmgr/m_projectArchiving', {
                projectName:that.settings.$projectName
            });
            $(that.element).html(html);

            that.initDocmgrTree();
            that.treeBoxHeightResize();
            $(window).resize(function () {
                var t = setTimeout(function () {
                    that.treeBoxHeightResize();
                    clearTimeout(t);
                });
            });
            $(that.element).find('select[name="selectSearchBy"]').select2({
                allowClear: false,
                language: "zh-CN",
                minimumResultsForSearch: -1
            });
            $(that.element).find('select[name="selectSearchBy"]').on("change", function (e) {
                var val = $(this).val();
                if(val==0){
                    $(that.element).find('input[name="projectName"]').attr('placeholder','请输入项目名称关键字');
                }else{
                    $(that.element).find('input[name="projectName"]').attr('placeholder','请输入文件名称关键字');
                }

            });

        }
        //初始化组织树
        , initDocmgrTree: function () {
            var that = this;
            var keyword = '',selectBy=$(that.element).find('select[name="selectSearchBy"]').val();
            if(selectBy==0){
                keyword = $.trim($(that.element).find('input[name="projectName"]').val());
            }
            var $tree = $('#documentDirectoryTree');
            $tree.jstree({
                'core': {
                    'check_callback': true,
                    'data':function (node, callback) {
                        var option = {};
                        option.async = false;
                        option.postData = {};
                        var jsonStr='[]';
                        var jsonArray = eval('('+jsonStr+')');
                        if(node.id === '#'){
                            option.url = restApi.url_getProjectsDocuments;
                            option.postData.projectName = keyword;
                            m_ajax.postJson(option, function (response) {
                                if (response.code == '0') {
                                    var arrays= response.data.tableDTOS;
                                    for(var i=0 ; i<arrays.length; i++){
                                        var arr = {
                                            'id':arrays[i].id,
                                            'children':arrays[i].childId,
                                            'text':arrays[i].projectName,
                                            'pid':null,
                                            'taskId':arrays[i].taskId,
                                            'type':arrays[i].type,
                                            'haveNoticeRight':arrays[i].haveNoticeRight,
                                            'uploadFlag':response.data.uploadFlag
                                        };
                                        jsonArray.push(arr);
                                    }
                                } else {
                                    S_dialog.error(response.info);
                                }
                            });
                            callback.call(this, jsonArray);
                        }else{
                            option.url = restApi.url_getMyProjectSkyDriveByParam;
                            if(node.original.projectId!=null){//存在此字段
                                option.postData.projectId = node.original.projectId;
                                option.postData.pid = node.id;
                            }else{
                                option.postData.projectId = node.id;
                            }
                            option.postData.type = that._selectedNodeObj.type;
                            m_ajax.postJson(option, function (response) {
                                if (response.code == '0') {
                                    var arrays= response.data.list;
                                    if(arrays!=null && arrays.length>0){
                                        for(var i=0 ; i<arrays.length; i++){
                                            var arr = {
                                                'id':arrays[i].id,
                                                'pid':node.id,
                                                'children':arrays[i].childId,
                                                'text':arrays[i].fileName,
                                                'projectId':arrays[i].projectId,
                                                'taskId':arrays[i].taskId,
                                                'type':arrays[i].type,
                                                'haveNoticeRight':arrays[i].haveNoticeRight,
                                                'uploadFlag':response.data.uploadFlag
                                            };
                                            jsonArray.push(arr);
                                        }
                                    }
                                } else {
                                    S_dialog.error(response.info);
                                }
                            });
                            callback.call(this, jsonArray);
                        }
                    }
                },
                'plugins': ['noclose', 'types', 'wholerow'],
                'types': {
                    'default': {
                        'icon': 'fa fa-folder'
                    },
                    '1': {   //文件
                        'icon': 'fa fa-file'
                    },
                    '50': {   //归档文件
                        'icon': 'fa fa-steam-square'
                    }
                }
            }).on('select_node.jstree', function (e, data) {

                that._selectedNodeObj = data.node.original;
                that.getFileItemsList();

            }).on('ready.jstree', function (e, data) {//loaded.jstree

                if(selectBy==0){
                    var tree = $('#documentDirectoryTree').jstree(true);
                    var firstId = $(that.element).find('li:first').attr('id');
                    tree.select_node('#'+firstId);
                    that.bindActionClick();
                }

            }).on('load_node.jstree', function (e, data) {//load_node.jstree

                that.treeBoxHeightResize();
            });
        }
        //获取文件列表
        , getFileItemsList:function () {
            var that = this;
            var projectId = that._selectedNodeObj.pid==null?that._selectedNodeObj.id:that._selectedNodeObj.projectId;
            var pid = that._selectedNodeObj.id;
            var options = {};
            //options.$url = restApi.url_getMyProjectSkyDriveByParam;
            options.$type = 1;
            options.$projectId = projectId;
            if(projectId!=pid){//不是根目录
                options.$pid = pid;
            }
            options.$selectedNodeObj = that._selectedNodeObj;
            options.$requestCallBack = function (data) {
                that.hideBtnAction(data);
                that.initContextMenu(data.uploadFlag);
            };
            options.$refreshDataCallBack = function () {
                that.getFileItemsList();
                var tree = $('#documentDirectoryTree').jstree(true),
                    sel = tree.get_selected();
                tree.refresh_node('#'+sel);
            };
            options.$renderCallBack = function () {
                that.fileItemsBoxHeightResize();
                $(window).resize(function () {
                    var t1 = setTimeout(function () {
                        that.fileItemsBoxHeightResize();
                        clearTimeout(t1);
                    });
                });
                $(that.element).find('.m-pagination').hide();
            };
            $(that.element).find('#fileItems').m_docmgr_fileItems_list(options,true);

        }
        //获取文件列表
        , getFileItemsListBySearch:function (keyword) {
            var that = this;
            var options = {};
            options.$type = 1;
            options.$isBySearch = true;
            options.$keywordBySearch = keyword;
            options.$renderCallBack = function (data) {
                data.uploadFlag = 0;
                that.hideBtnAction(data);
                that.initContextMenu(data.uploadFlag);
                $(that.element).find('.m-pagination').show();
            };
            $(that.element).find('#fileItems').m_docmgr_fileItems_list(options,true);

        }
        //初始化右键菜单
        ,initContextMenu:function (flag) {
            var that = this;
            var items = [];
            if(flag==1){
                items.push({
                    content: "上传文件",
                    action: function (e, item) {
                        that.uploadFile();
                    }
                });
                items.push({
                    content: "新建文件夹",
                    action: function (e, item) {
                        that.createFolder();
                    }
                });
            }
            if(that._selectedNodeObj.taskId!=null && that._selectedNodeObj.type==40){
                items.push({
                    content: "发送归档通知",
                    action: function (e, item) {
                        that.sendArchiveNotice();
                    }
                });
            }
            if(items.length>0){
                var menu = new contextMenu({
                    target: document.getElementById('fileItems'),//开启自定义右键菜单的目标,
                    hasIcon: false,//是否需要图标
                    hasTitle: false,//是否需要标题
                    autoHide:false,//是否自动隐藏右键菜单
                    menuClass:'outContentMenu',
                    menu: {//菜单数据配置
                        items: items
                    },
                    beforeShow:function () {
                        $('.contextMenuBox').hide();
                    },
                    afterShow:function () {
                        console.log(1);
                    }
                });
            }
        }
        //隐藏按钮
        ,hideBtnAction:function (data) {
            var that = this;
            if(data.uploadFlag==0){
                $(that.element).find('a.btn-flag').hide();
            }else{
                $(that.element).find('a.btn-flag').show();
            }
            if(that._selectedNodeObj.taskId!=null && that._selectedNodeObj.type==40 && data.haveNoticeRight==true){
                $(that.element).find('a[data-action="sendArchiveNotice"]').show();
            }else{
                $(that.element).find('a[data-action="sendArchiveNotice"]').hide();
            }

        }
        //树菜单高度自适应
        , treeBoxHeightResize:function () {
            var that = this;
            var pageWrapperH = $('#page-wrapper').css('min-height');
            $(that.element).find('#documentTreeBox').css('height',pageWrapperH);
        }
        //fileItems元素高度自适应
        , fileItemsBoxHeightResize:function () {
            var that = this;
            var itemsListHeight = $(that.element).find('#fileItems table').height();
            var pageWrapperH = $('#page-wrapper').css('min-height');
            if(parseInt(pageWrapperH)>itemsListHeight+50){
                $(that.element).find('#fileItems').css('height',(parseInt(pageWrapperH)-50)+'px');
            }else{
                $(that.element).find('#fileItems').css('height','auto');
            }
        }
        //创建文件夹
        ,createFolder:function () {
            var that = this,options = {};
            options.$selectedNodeObj = that._selectedNodeObj;
            options.$saveCallBack = function () {
                that.getFileItemsList();
                var tree = $('#documentDirectoryTree').jstree(true),
                    sel = tree.get_selected();
                tree.refresh_node('#'+sel);
            };
            $('body').m_docmgr_createFolder(options);
        }
        //上传文件
        ,uploadFile:function () {
            var that = this,options = {};
            options.$selectedNodeObj = that._selectedNodeObj;
            options.$saveCallBack = function () {
                that.getFileItemsList();
            };
            $('body').m_docmgr_fileUpload(options);
        }
        //发送归档通知
        ,sendArchiveNotice:function () {
            var that = this,options = {};
            options.$selectedNodeObj = that._selectedNodeObj;
            options.$saveCallBack = function () {
                that.getFileItemsList();
                var tree = $('#documentDirectoryTree').jstree(true),
                    sel = tree.get_selected();
                tree.refresh_node('#'+sel);
            };
            $('body').m_docmgr_sendArchiveNotice(options);
        }
        //绑定事件
        , bindActionClick:function () {
            var that = this;
            $(that.element).find('a[data-action],button[data-action]').off('click').on('click',function () {
                var $this = $(this);
                var dataAction = $this.attr('data-action');
                switch (dataAction){
                    case 'createFolder'://创建文件夹
                        that.createFolder();
                        break;
                    case 'uploadFile'://上传文件
                        that.uploadFile();
                        break;
                    case 'searchByProjectName'://搜索

                        var selectVal = $(that.element).find('select[name="selectSearchBy"]').val();
                        var keyword = $(that.element).find('input[name="projectName"]').val();
                        $('#documentDirectoryTree').jstree().destroy ();
                        that.initDocmgrTree();
                        if(selectVal==1){
                            if(keyword!=undefined && $.trim(keyword)!=''){
                                that.getFileItemsListBySearch($.trim(keyword));
                            }
                        }
                        break;
                    case 'sendArchiveNotice'://发送归档通知
                        that.sendArchiveNotice();
                    case 'keywordSearch'://发送归档通知
                        var keyword = $(that.element).find('input[name="keyword"]').val();
                        if(keyword!=undefined && $.trim(keyword)!=''){
                            that.getFileItemsListBySearch($.trim(keyword));
                        }
                        break;
                }
            });

        }
    });

    /*
     1.一般初始化（缓存单例）： $('#id').pluginName(initOptions);
     2.强制初始化（无视缓存）： $('#id').pluginName(initOptions,true);
     3.调用方法： $('#id').pluginName('methodName',args);
     */
    $.fn[pluginName] = function (options, args) {
        var instance;
        var funcResult;
        var jqObj = this.each(function () {

            //从缓存获取实例
            instance = $.data(this, "plugin_" + pluginName);

            if (options === undefined || options === null || typeof options === "object") {

                var opts = $.extend(true, {}, defaults, options);

                //options作为初始化参数，若args===true则强制重新初始化，否则根据缓存判断是否需要初始化
                if (args === true) {
                    instance = new Plugin(this, opts);
                } else {
                    if (instance === undefined || instance === null)
                        instance = new Plugin(this, opts);
                }

                //写入缓存
                $.data(this, "plugin_" + pluginName, instance);
            }
            else if (typeof options === "string" && typeof instance[options] === "function") {

                //options作为方法名，args则作为方法要调用的参数
                //如果方法没有返回值，funcReuslt为undefined
                funcResult = instance[options].call(instance, args);
            }
        });

        return funcResult === undefined ? jqObj : funcResult;
    };

})(jQuery, window, document);

;(function ($, window, document, undefined) {
    "use strict";
    var pluginName = "m_uploadmgr",
        defaults = {
            server: null,
            auto: false,//选择文件后是否自动开始上传
            chunked: true,//是否分块上传，需要后台配合
            chunkSize: 5 * 1024 * 1024,
            chunkRetry: 3,
            /*fileExts: 'pdf,zip,rar,gif,jpg,jpeg,bmp,png',*/
            fileExts: '*',
            fileSingleSizeLimit: null,
            btnPickId: null,
            btnPickText: '上传',
            formData: {},
            closeIfFinished: false,
            uploadBeforeSend: null,
            beforeFileQueued: null,
            uploadSuccessCallback: null,
            ifCloseItemFinished:false,//是否关闭上传完成后的列表
            isShowBtnClose: true,//是否显示关闭按钮
            boxClass:null//uploadmgr元素样式

        };

    // The actual plugin constructor
    function Plugin(element, options) {
        this.element = element;
        this.settings = options;

        this._defaults = defaults;
        this._name = pluginName;
        this._uploader = null;
        this._currentDialogEle = '';//当前弹窗元素
        this.init();
    }

    // Avoid Plugin.prototype conflicts
    $.extend(Plugin.prototype, {
        init: function () {
            var that = this;
            that.initWebUploader();
        }
        ,initWebUploader: function () {
            var that = this;

            var html = template('m_docmgr/m_uploadmgr', {
                boxClass:that.settings.boxClass,
                isShowBtnClose:that.settings.isShowBtnClose
            });
            $(that.element).html(html);

            that._uploader = WebUploader.create({
                fileSingleSizeLimit: that.settings.fileSingleSizeLimit,
                compress: false,// 不压缩image
                auto: that.settings.auto,
                swf: window.rootPath + '/assets/lib/webuploader/Uploader.swf',
                server: that.settings.server,
                //timeout: 600000,
                pick: {
                    id: '.btn-select:eq(0)',
                    innerHTML: that.settings.btnPickText || null,
                    multiple: true
                },
                duplicate: false,//是否可重复选择同一文件
                resize: false,
                chunked: that.settings.chunked,
                chunkSize: that.settings.chunkSize,
                chunkRetry: that.settings.chunkRetry,
                formData: that.settings.formData,
                accept: that.settings.accept || {
                    extensions: that.settings.fileExts
                },
                threads: 1,
                disableGlobalDnd: true
            });

            //文件队列
            that._uploader.on('beforeFileQueued', function (file) {

                if(_.isBlank(file.ext)) {
                    that.alertError(file.name + ' 缺少扩展名，无法加入上传队列',file.id);
                    return false;
                }

                /*if(getStringLength(file.name)>42) {
                     that.alertError(file.name+' 文件名超出长度限制');
                     return false;
                }

                if (that._uploader.isInProgress()) {
                    that.alertError('当前正在上传，禁止添加新文件到队列中');
                    return false;
                }*/

                if (that.settings.beforeFileQueued && typeof that.settings.beforeFileQueued === 'function') {
                    if (that.settings.beforeFileQueued(file, that) === false)
                        return false;
                }

                //that._uploader.reset();//单个上传重置队列，防止队列不断增大
                return true;
            });
            that._uploader.on('filesQueued', function (files) {

                /*that._uploader.option("formData", {
                    uploadId: WebUploader.Base.guid()
                 });*/

                if (files && files.length > 0) {

                    $.each(files, function (index, file) {

                        //添加上传文件列表
                        var html = template('m_docmgr/m_uploadmgr_uploadItem', {file: file});
                        $(that.element).find('.upload-item-list:eq(0)').append(html);
                        that.bindItemAction(file,null);
                        that.showStatusText(file);
                    });
                    //that.startUpload();//开始上传
                }
            });
            that._uploader.on('startUpload', function (file) {

                //console.log('startUpload');

            });
            that._uploader.on('uploadStart', function (file) {
                //console.log('uploadStart');
                that.showStatusText(file)
            });
            //进度
            that._uploader.on('uploadProgress', function (file, percentage) {

                var pc = (percentage * 100).toFixed(2);
                if (percentage >= 1)
                    pc = 100;
                var $uploadItem = $(that.element).find('.uploadItem_' + file.id + ':eq(0)');
                $uploadItem.find('.span_progress:eq(0)').html(pc + '%');
                $uploadItem.find('.progress-bar:eq(0)').attr('aria-valuenow', pc).css('width', pc + '%');
                that.showStatusText(file);

            });
            //当某个文件的分块在发送前触发，主要用来询问是否要添加附带参数，大文件在开起分片上传的前提下此事件可能会触发多次
            that._uploader.on("uploadBeforeSend", function (object, data, headers) {

                //console.log('uploadBeforeSend');

                if (that.settings.chunked === true)
                    data.chunkPerSize = that.settings.chunkSize;
                if (that.settings.uploadBeforeSend)
                    that.settings.uploadBeforeSend(object, data, headers);

            });
            //当某个文件上传到服务端响应后，会派送此事件来询问服务端响应是否有效。
            that._uploader.on("uploadAccept", function (object, response) {

                //console.log('uploadAccept');

                if (!handleResponse(response)) {
                    if (response.code) {
                        if (response.code === '0' && response.data) {
                            //分片后续处理
                            if (response.data.needFlow === true) {
                                that._uploader.options.formData.fastdfsGroup = response.data.fastdfsGroup;
                                that._uploader.options.formData.fastdfsPath = response.data.fastdfsPath;
                            }
                            return true;
                        } else {
                            if (object && object.file && object.file.name){
                                that.alertError(object.file.name + " 上传失败(#01)，" + response.msg,object.file.id);
                                that.bindItemAction(object.file,response);//重新绑定事件
                            }else{
                                that.alertError("上传失败(#02)，" + response.msg);
                            }
                        }

                    }
                }
                return false;
            });
            //上传成功
            that._uploader.on('uploadSuccess', function (file, res) {
                //还要判断response
                if (!handleResponse(res)) {

                    var $uploadItem = $(that.element).find('.uploadItem_' + file.id + ':eq(0)');

                    if (res.code == 0) {

                        that.showStatusText(file);

                        if(that.settings.ifCloseItemFinished)
                            $uploadItem.find('a[data-action="removeFile"]').click();

                        if (that.settings.uploadSuccessCallback)
                            that.settings.uploadSuccessCallback(file, res);

                        $('.alertmgr div[data-id="'+file.id+'"]').remove();//删除相关提示


                    } else if (res.code === '1') {

                        S_dialog.error(res.msg);
                        file.setStatus('error');
                        that.showStatusText(file);

                    } else {

                        file.setStatus('error');
                        that.showStatusText(file);
                    }
                }
            });
            //当所有文件上传结束时触发
            that._uploader.on("uploadFinished", function () {

                if (that.settings.closeIfFinished) {
                    var t = setTimeout(function () {
                        $(that.element).find('a.btn-close').click();
                        clearTimeout(t);
                    }, 500);
                }
            });
            //上传失败
            that._uploader.on('uploadError', function (file, reason) {

                var $uploadItem = $(that.element).find('.uploadItem_' + file.id + ':eq(0)');
                if ($uploadItem.length > 0) {
                    if (!!reason) {
                        //$uploadItem.find('.span_status:eq(0)').html('上传失败（' + reason + '）');
                        that.showStatusText(file);
                    }
                    else {
                        //$uploadItem.find('.span_status:eq(0)').html('上传失败');
                        that.showStatusText(file);
                    }
                }
            });
            that._uploader.on('error', function (handler,file) {
                var content;
                switch (handler) {
                    case 'F_EXCEED_SIZE':
                        content = '文件大小超出范围';
                        break;
                    case 'Q_EXCEED_NUM_LIMIT':
                        content = '已超最大的文件上传数';
                        break;
                    case 'Q_TYPE_DENIED':
                        if(file!=null && file.size==0){
                            content = '不支持上传空文件';
                        }else{
                            content = '仅支持上传如下类型文件：' + that.settings.fileExts;
                        }
                        break;
                    case 'F_DUPLICATE':
                        content = '文件已经添加';
                        break;
                    default:
                        content = '文件添加失败';
                        break;
                }

                that.alertError(content,file.id);
            });

            that._uploader.on('all', function(type){
                //console.log('============================'+type);
            });

            that.bindAction();
        }

        //开始上传
        ,startUpload:function () {
            var that = this;
            var start = function () {
                var server = that._uploader.option('server');
                if (server === null) {
                    that.alertError('上传路径没有正确配置');
                    return false;
                }

                var files = that._uploader.getFiles();
                if (!files || files.length == 0) {
                    that.alertError('请先选择要上传的文件');
                    return false;
                }

                var errorFiles = [];
                var interruptFiles = [];
                $.each(files, function (index, file) {

                    var fileStatus = file.getStatus();

                    if (fileStatus === 'error') {

                        errorFiles.push(file);
                        that._uploader.retry(file);

                    } else if (fileStatus === 'interrupt') {

                        interruptFiles.push(file);
                        that._uploader.upload(file);
                    }
                });
                if (errorFiles.length + interruptFiles.length > 0) {

                    $.each(interruptFiles, function (index, file) {
                        file.setStatus('error');
                    });
                    that._uploader.retry();
                }
                else
                    that._uploader.upload();
            };

            var option = {
                ignoreError: true,
                url: restApi.url_getCompanyDiskInfo,
                postData: {
                    companyId: window.currentCompanyId
                }
            };
            m_ajax.postJson(option, function (res) {
                if (res.code === '0') {
                    var freeSize = parseFloat(res.data.freeSize);
                    if (freeSize <= 0) {
                        S_toastr.warning("当前组织网盘空间不足，无法上传，请联系客服")
                    } else {
                        start();
                    }
                }
            });
            return false;
        }

        /**
         * inited 初始状态
         * queued 已经进入队列, 等待上传
         * progress 上传中
         * complete 上传完成。
         * error 上传出错，可重试
         * interrupt 上传中断，可续传。
         * invalid 文件不合格，不能重试上传。会自动从队列中移除。
         * cancelled 文件被移除。
         * @param status
         */
        ,showStatusText:function (file) {
            var that = this,statusText = '';
            var $uploadItem = $(that.element).find('.uploadItem_' + file.id + ':eq(0)');
            var status = file.getStatus();
            //console.log('status=='+status);
            switch (status){
                case 'inited':
                case 'queued':
                    statusText = '待上传';
                    $uploadItem.find('a[data-action="pauseUpload"],a[data-action="continueUpload"]').hide();
                    break;
                case 'progress':
                    statusText = '正在上传';
                    $uploadItem.find('a[data-action="pauseUpload"]').show();
                    $uploadItem.find('a[data-action="continueUpload"]').hide();
                    break;
                case 'complete':
                    statusText = '上传成功';
                    $uploadItem.find('a[data-action="pauseUpload"],a[data-action="continueUpload"]').hide();
                    break;
                case 'error':
                    statusText = '上传失败';
                    $uploadItem.find('a[data-action="pauseUpload"]').hide();
                    $uploadItem.find('a[data-action="continueUpload"]').show();
                    break;
                case 'interrupt':
                    statusText = '已暂停';
                    $uploadItem.find('a[data-action="pauseUpload"]').hide();
                    $uploadItem.find('a[data-action="continueUpload"]').show();
                    break;
                default :
                    statusText = '';
                    $uploadItem.find('a[data-action="pauseUpload"],a[data-action="continueUpload"]').hide();
                    break;
            }
            $uploadItem.find('.span_status:eq(0)').html(statusText);
        }
        //绑定队列按钮事件
        ,bindItemAction:function (file,res) {
            var that = this;
            var className = 'uploadItem_' + file.id;
            var $uploadItem = $(that.element).find('.uploadItem_' + file.id + ':eq(0)');

            $uploadItem.find('a[data-action]').off('click').on('click',function () {

                var $this = $(this);
                var dataAction = $this.attr('data-action');

                switch (dataAction){
                    case 'removeFile'://停止上传并删除队列

                        $uploadItem.fadeOut('slow',function () {
                            that._uploader.removeFile($uploadItem.attr('data-fileId'),true);
                            $uploadItem.remove();
                            var queryFiles = that._uploader.getFiles('inited','queued','progress','error','interrupt');
                            if(queryFiles.length==0){
                                $(that.element).find('.btn-start:eq(0)').hide();
                            }
                        });
                        return false;
                        break;

                    case 'pauseUpload'://暂停上传

                        if (file.getStatus() === 'progress'){

                            try {
                                that._uploader.stop(file);
                                that.showStatusText(file);
                            } catch (ex) {

                            }
                        }

                        break;

                    case 'continueUpload'://继续上传

                        if(res!=null && res.code=='1'){//重命名

                            S_dialog.dialog({
                                title: '继续上传',
                                contentEle: 'dialogOBox',
                                lock: 3,
                                width: '300',
                                height: '100',
                                tPadding: '0px',
                                url: rootPath+'/assets/module/m_common/m_dialog.html',
                                cancelText:'关闭',
                                cancel:function () {

                                }
                            },function(d){//加载html后触发

                                var $dialogEle = $('div[id="content:'+d.id+'"] .dialogOBox');
                                $dialogEle.html('<div style="padding: 35px 80px;"><a class="btn btn-primary btn-sm " data-action="rename" style="margin-right: 20px;">重命名</a><a class="btn btn-primary btn-sm " data-action="cover">覆盖</a></div>');

                                //重命名按钮事件
                                $dialogEle.find('a[data-action="rename"]').click(function () {

                                    S_dialog.close($dialogEle);//关闭弹窗
                                    that.renameDialog(file);

                                });
                                //覆盖按钮事件
                                $dialogEle.find('a[data-action="cover"]').click(function () {

                                    S_dialog.close($dialogEle);//关闭弹窗

                                    $('.alertmgr div[data-id="'+file.id+'"]').remove();//删除相关提示

                                    file.id = res.data.netFileId;
                                    //进度条元素属性更换
                                    $uploadItem.attr('data-fileid',file.id);
                                    $uploadItem.removeClass(className).addClass('uploadItem_' + file.id);
                                    that._uploader.retry(file);
                                });

                            });

                        }else{
                            that._uploader.upload(file);
                        }

                        break;
                }
            });
        }
        //绑定按钮
        ,bindAction: function () {
            var that = this;

            $(that.element).find('.btn-start:eq(0)').click(function () {

                var start = function () {
                    var server = that._uploader.option('server');
                    if (server === null) {
                        that.alertError('上传路径没有正确配置');
                        return false;
                    }

                    var files = that._uploader.getFiles();
                    if (!files || files.length == 0) {
                        that.alertError('请先选择要上传的文件');
                        return false;
                    }

                    var i = 0;
                    $('.upload-item-list .span_status').each(function () {
                        var text = $(this).text();
                        if(text=='已暂停'){
                            $(this).text('待上传');
                            i++;
                        }
                    });
                    if(i>0){
                        $(that.element).find('.btn-start:eq(0)').hide();
                        $(that.element).find('.btn-pause:eq(0)').show();
                    }

                    var errorFiles = [];
                    var interruptFiles = [];
                    $.each(files, function (index, file) {

                        var fileStatus = file.getStatus();

                        if (fileStatus === 'error') {

                            errorFiles.push(file);
                            that._uploader.retry(file);

                        } else if (fileStatus === 'interrupt') {

                            interruptFiles.push(file);
                            that._uploader.upload(file);
                        }
                    });
                    if (errorFiles.length + interruptFiles.length > 0) {

                        $.each(interruptFiles, function (index, file) {
                            file.setStatus('error');
                        });
                        that._uploader.retry();
                    }
                    else
                        that._uploader.upload();
                };

                var option = {
                    ignoreError: true,
                    url: restApi.url_getCompanyDiskInfo,
                    postData: {
                        companyId: window.currentCompanyId
                    }
                };
                m_ajax.postJson(option, function (res) {
                    if (res.code === '0') {
                        var freeSize = parseFloat(res.data.freeSize);
                        if (freeSize <= 0) {
                            S_toastr.warning("当前组织网盘空间不足，无法上传，请联系客服")
                        } else {
                            start();
                        }
                    }
                });


                return false;
            });

            //停止
            $(that.element).find('.btn-pause:eq(0)').click(function () {
                var files = that._uploader.getFiles();
                if (files && files.length > 0) {
                    $.each(files, function (index, file) {
                        if (file.getStatus() === 'progress');
                        {
                            try {
                                that._uploader.stop(file);
                            } catch (ex) {

                            }
                            if (file.getStatus() === 'interrupt') {
                                var $uploadItem = $(that.element).find('.uploadItem_' + file.id + ':eq(0)');
                                $uploadItem.find('.span_status:eq(0)').html('已暂停');
                                that.bindContinueUpload(file);
                            }
                        }
                    });
                }
                $(that.element).find('.btn-pause:eq(0)').hide();
                $(that.element).find('.btn-start:eq(0)').show();
            });

            //关闭
            $(that.element).find('.btn-close:eq(0)').click(function () {
                if (that._uploader.isInProgress()) {
                    that.alertError("当前正在上传，无法关闭")
                } else {
                    var files = that._uploader.getFiles();
                    if (files && files.length > 0) {
                        $.each(function (index, file) {
                            that._uploader.removeFile(file, true);
                        });
                    }
                    that._uploader.destroy();
                    $(that.element).html('');
                }
                return false;
            });
        }
        //重命名输入并上传
        ,renameDialog:function (file) {
            var that = this;
            var $uploadItem = $(that.element).find('.uploadItem_' + file.id + ':eq(0)');
            S_dialog.dialog({
                title: '继续上传',
                contentEle: 'dialogOBox',
                lock: 3,
                width: '300',
                height: '100',
                tPadding: '0px',
                url: rootPath+'/assets/module/m_common/m_dialog.html',
                cancel:function () {
                    that._currentDialogEle = '';//清除弹窗元素记录
                },
                ok:function () {
                    if($(that._currentDialogEle).find('form').valid()){//验证

                        var name = $(that._currentDialogEle).find('input[name="rename"]').val();

                        //没有后缀则补上
                        if(name.lastIndexOf('.'+file.ext)>0){
                            file.name = name ;
                        }else{
                            file.name = name +'.' + file.ext;
                        }
                        $uploadItem.find('.file-name').html(file.name);
                        that._uploader.upload(file);
                        $('.alertmgr div[data-id="'+file.id+'"]').remove();//删除相关提示

                    }else{
                        return false;
                    }
                }
            },function(d){//加载html后触发

                that._currentDialogEle = 'div[id="content:'+d.id+'"] .dialogOBox';//记录弹窗元素
                $(that._currentDialogEle).html('<form style="padding: 30px 50px 0;"><input class="form-control" type="text" name="rename"></form>');

                that.rename_validate($(that._currentDialogEle));//初始化验证

            });
        }
        //重命名不为空验证
        ,rename_validate:function ($ele) {
            $ele.find('form').validate({
                rules: {
                    rename:{
                        required:true
                    }
                },
                messages: {
                    rename:{
                        required:'请输入名称!'
                    }
                },
                errorPlacement:function(error,element){
                    error.appendTo(element.parent());
                }
            });
        }
        //暂时未用
        ,onError: function (file, msg) {
            //showMsg
            //为了可以重试，设置为错误状态
            file.setStatus('error');
            var that = this;
            that.alertError(file.name + ' ' + msg);
        }
        //错误提示
        ,alertError: function (content, alertId) {
            var that = this;
            var html = template('m_alert/m_alert_error', {content: content, id: alertId});
            $(that.element).find('.alertmgr:eq(0)').append(html);
        }
        //获取WebUploader实例
        ,getUploader: function () {
            var that = this;
            return that._uploader;
        }
    });

    /*
     1.一般初始化（缓存单例）： $('#id').pluginName(initOptions);
     2.强制初始化（无视缓存）： $('#id').pluginName(initOptions,true);
     3.调用方法： $('#id').pluginName('methodName',args);
     */
    $.fn[pluginName] = function (options, args) {
        var instance;
        var funcResult;
        var jqObj = this.each(function () {

            //从缓存获取实例
            instance = $.data(this, "plugin_" + pluginName);

            if (options === undefined || options === null || typeof options === "object") {

                var opts = $.extend(true, {}, defaults, options);

                //options作为初始化参数，若args===true则强制重新初始化，否则根据缓存判断是否需要初始化
                if (args === true) {
                    instance = new Plugin(this, opts);
                } else {
                    if (instance === undefined || instance === null)
                        instance = new Plugin(this, opts);
                }

                //写入缓存
                $.data(this, "plugin_" + pluginName, instance);
            }
            else if (typeof options === "string" && typeof instance[options] === "function") {

                //options作为方法名，args则作为方法要调用的参数
                //如果方法没有返回值，funcReuslt为undefined
                funcResult = instance[options].call(instance, args);
            }
        });

        return funcResult === undefined ? jqObj : funcResult;
    };

})(jQuery, window, document);

/**
 * Created by Wuwq on 2017/3/6.
 */
;(function ($, window, document, undefined) {

    "use strict";
    var pluginName = "m_filterableField",
        defaults = {
            filterTagContainer: null, /*存储过滤标签的元素*/
            field: null,
            fieldDisplayName: null,
            filterType: null,
            customProcess: function (popoverOptions, m_filterableField) {
            },
            selectLocalData:null,
            onChanged: null
        };

    function Plugin(element, options) {
        this.element = element;

        this.settings = options;
        this._defaults = defaults;
        this._name = pluginName;

        this.init();
    }

    $.extend(Plugin.prototype, {
        init: function () {
            var that = this;
            that._render();
            that._bindClick();
        }
        , _render: function () {
            var that = this;
            var $el = $(that.element);
            $el.addClass('field-filterable');
            $el.append('<span class="field-filter-indicator"></span>');
        }
        , _bindClick: function () {
            var that = this;
            var $el = $(that.element);

            $el.find('.field-filter-indicator').click(function (e) {
                var popoverOptions = {};
                switch (that.settings.filterType) {
                    case 'custom':
                        that.settings.customProcess(popoverOptions, that);
                        break;
                    case 'contain':
                        popoverOptions.placement = 'left';
                        popoverOptions.content = template('m_filterableField/m_filterType_contain');
                        popoverOptions.onShown = function ($popover) {
                            //恢复浮动窗口里的值
                            var filter = $(that.settings.filterTagContainer).m_filterTag('getFilter', that.settings.field);
                            if (filter && filter !== null) {
                                $popover.find('input:first').val(filter.filterValue)
                            }
                        };
                        popoverOptions.onSave = function ($popover) {
                            var filter = {
                                field: that.settings.field,
                                fieldDisplayName: that.settings.fieldDisplayName,
                                filterType: that.settings.filterType,
                                filterValue: $popover.find('input:first').val()
                            };
                            $(that.settings.filterTagContainer).m_filterTag('saveFilter', filter);

                            if (that.settings.onChanged && that.settings.onChanged !== null)
                                that.settings.onChanged(filter);
                        };
                        break;
                    case 'select_local_data':
                        var selectLocalData = that.settings.selectLocalData;
                        popoverOptions.popoverStyle = 'width:296px;min-width:296px';
                        popoverOptions.placement = 'left';
                        popoverOptions.content = template('m_filterableField/m_filterType_select_local_data');
                        popoverOptions.onShown = function ($popover) {
                            var $select = $popover.find('select[name="filter_select"]:first').select2({
                                allowClear: false,
                                language: "zh-CN",
                                minimumResultsForSearch: Infinity,
                                data: selectLocalData
                            });

                            //恢复浮动窗口里的值
                            var filter = $(that.settings.filterTagContainer).m_filterTag('getFilter', that.settings.field);
                            if (filter && filter !== null) {
                                $popover.find('select[name="filter_select"]:first').val(filter.filterValue);
                                $select.trigger('change');
                            }
                        };
                        popoverOptions.onSave = function ($popover) {
                            var filterValue = $popover.find('select[name="filter_select"]:first').find('option:selected').val();
                            var filterValueDisplayName = _.find(selectLocalData, function (o) {
                                return o.id == filterValue
                            }).text;
                            var filter = {
                                field: that.settings.field,
                                fieldDisplayName: that.settings.fieldDisplayName,
                                filterType: that.settings.filterType,
                                filterValue: filterValue,
                                filterValueDisplayName: filterValueDisplayName
                            };
                            $(that.settings.filterTagContainer).m_filterTag('saveFilter', filter);

                            if (that.settings.onChanged && that.settings.onChanged !== null)
                                that.settings.onChanged(filter);
                        };
                        break;
                    case 'select':
                        popoverOptions.placement = 'left';
                        popoverOptions.content = template('m_filterableField/m_filterType_select');
                        popoverOptions.onShown = function ($popover) {
                            //恢复浮动窗口里的值
                            var filter = $(that.settings.filterTagContainer).m_filterTag('getFilter', that.settings.field);
                            if (filter && filter !== null) {

                            }
                        };
                        popoverOptions.onSave = function ($popover) {
                            var filter = {
                                field: that.settings.field,
                                fieldDisplayName: that.settings.fieldDisplayName,
                                filterType: that.settings.filterType,
                                filterValue: null
                            };
                            $(that.settings.filterTagContainer).m_filterTag('saveFilter', filter);

                            if (that.settings.onChanged && that.settings.onChanged !== null)
                                that.settings.onChanged(filter);
                        };
                        break;
                    case 'dateRange':
                        popoverOptions.popoverStyle = 'width:335px;min-width:335px';
                        popoverOptions.placement = 'left';
                        popoverOptions.content = template('m_filterableField/m_filterType_dateRange');
                        popoverOptions.onClear = function ($popover) {
                            var $input = $popover.find('form input');
                            if ($input.length > 0)
                                $input.val('');
                        };
                        popoverOptions.onShown = function ($popover) {
                            //恢复浮动窗口里的值
                            var filter = $(that.settings.filterTagContainer).m_filterTag('getFilter', that.settings.field);

                            $popover.find('.input-group-addon').on('click',function(e){
                                $(this).prev('input').focus();
                                stopPropagation(e);
                            });
                            if (filter && filter !== null) {
                                var split = filter.filterValue.split(',');
                                $popover.find('input[name="filter_startDate"]').val(split[0]);
                                $popover.find('input[name="filter_endDate"]').val(split[1]);
                            }else{ return false};
                        };
                        popoverOptions.onSave = function ($popover) {
                            var startDate = $popover.find('input[name="filter_startDate"]').val();
                            var endDate = $popover.find('input[name="filter_endDate"]').val();
                            var filterValue = startDate + ',' + endDate;
                            if ($.trim(filterValue) == ',') {
                                filterValue = '';
                            }
                            var filter = {
                                field: that.settings.field,
                                fieldDisplayName: that.settings.fieldDisplayName,
                                filterType: that.settings.filterType,
                                filterValue: filterValue
                            };
                            $(that.settings.filterTagContainer).m_filterTag('saveFilter', filter);

                            if (that.settings.onChanged && that.settings.onChanged !== null){
                                that.settings.onChanged(filter);
                            }else{
                                return false
                            }

                        };
                        break;
                }

                $(this).m_popover_filter(popoverOptions, true);

                stopPropagation(e);
                return false;
            });
        }
    });

    /*
     1.一般初始化（缓存单例）： $('#id').pluginName(initOptions);
     2.强制初始化（无视缓存）： $('#id').pluginName(initOptions,true);
     3.调用方法： $('#id').pluginName('methodName',args);
     */
    $.fn[pluginName] = function (options, args) {
        var instance;
        var funcResult;
        var jqObj = this.each(function () {

            //从缓存获取实例
            instance = $.data(this, "plugin_" + pluginName);

            if (options === undefined || options === null || typeof options === "object") {

                var opts = $.extend(true, {}, defaults, options);

                //options作为初始化参数，若args===true则强制重新初始化，否则根据缓存判断是否需要初始化
                if (args === true) {
                    instance = new Plugin(this, opts);
                } else {
                    if (instance === undefined || instance === null)
                        instance = new Plugin(this, opts);
                }

                //写入缓存
                $.data(this, "plugin_" + pluginName, instance);
            }
            else if (typeof options === "string" && typeof instance[options] === "function") {

                //options作为方法名，args则作为方法要调用的参数
                //如果方法没有返回值，funcReuslt为undefined
                funcResult = instance[options].call(instance, args);
            }
        });

        return funcResult === undefined ? jqObj : funcResult;
    };

})(jQuery, window, document);

/**
 * Created by Wuwq on 2017/1/5.
 */
;(function ($, window, document, undefined) {

    "use strict";
    var pluginName = "m_filterTag",
        defaults = {
            filters: [],
            onRemoved: null
        };

    function Plugin(element, options) {
        this.element = element;

        this.settings = options;
        this._defaults = defaults;
        this._name = pluginName;
        this.init();
    }

    $.extend(Plugin.prototype, {
        init: function () {
            var that = this;
            that._render();
        }
        , _render: function () {
            var that = this;
            var html = template('m_filterableField/m_filterTag', {filters: that.settings.filters});
            $(that.element).html(html);
            that._bindBtnRemove();
        }
        , _bindBtnRemove: function () {
            var that = this;
            $(that.element).find('.filter-tag-remove').each(function (i, o) {
                $(o).click(function () {
                    var field = $(this).closest('.filter-tag').attr('data-field');
                    var filters = _.reject(that.settings.filters, function (o) {
                        return field === o.field;
                    });
                    that.settings.filters = filters;
                    if (that.settings.onRemoved)
                        that.settings.onRemoved();
                    that._render();
                });
            });
        }
        , saveFilter: function (f) {

            var that = this;

            //判断过滤值是否为空，如果为空值则去掉过滤
            if (f.filterValue !== null && !_.isBlank(f.filterValue)) {
                var m = _.find(that.settings.filters, function (o) {
                    return f.field === o.field;
                });
                //判断是否已存在过滤标签
                if (m && m !== null) {
                    m.filterValue = f.filterValue;
                    m.filterValueDisplayName = f.filterValueDisplayName;
                } else {
                    that.settings.filters.push(f);
                }
            } else {
                var filters = _.reject(that.settings.filters, function (o) {
                    return f.field === o.field;
                });
                that.settings.filters = filters;
            }

            that._render();
        }
        , getFilters: function () {
            var that = this;
            return that.settings.filters;
        }
        , getFilter: function (field) {
            var that = this;
            var filter = _.find(that.settings.filters, function (f) {
                return f.field === field;
            });
            return filter || null;
        }
    });

    /*
     1.一般初始化（缓存单例）： $('#id').pluginName(initOptions);
     2.强制初始化（无视缓存）： $('#id').pluginName(initOptions,true);
     3.调用方法： $('#id').pluginName('methodName',args);
     */
    $.fn[pluginName] = function (options, args) {
        var instance;
        var funcResult;
        var jqObj = this.each(function () {

            //从缓存获取实例
            instance = $.data(this, "plugin_" + pluginName);

            if (options === undefined || options === null || typeof options === "object") {

                var opts = $.extend(true, {}, defaults, options);

                //options作为初始化参数，若args===true则强制重新初始化，否则根据缓存判断是否需要初始化
                if (args === true) {
                    instance = new Plugin(this, opts);
                } else {
                    if (instance === undefined || instance === null)
                        instance = new Plugin(this, opts);
                }

                //写入缓存
                $.data(this, "plugin_" + pluginName, instance);
            }
            else if (typeof options === "string" && typeof instance[options] === "function") {

                //options作为方法名，args则作为方法要调用的参数
                //如果方法没有返回值，funcReuslt为undefined
                funcResult = instance[options].call(instance, args);
            }
        });

        return funcResult === undefined ? jqObj : funcResult;
    };

})(jQuery, window, document);
/**
 * select下拉筛选-双重循环选择
 * Created by wrb on 2018/8/15.
 */
;(function ($, window, document, undefined) {

    "use strict";
    var pluginName = "m_filter_checkbox_select",
        defaults = {
            eleId:null,//元素ID
            align:null,//浮窗位置
            colClass:null,//列class
            boxStyle:null,//样式
            dialogWidth:null,//弹窗宽度
            isParentCheck:false,//是否父级可以check
            selectArr:null,//筛选的数据(list对象,selectArr:[{id: "XX1", name: "XX2"}]
            selectedArr:null,//当前选中项（checkbox时多个,[id1,id2]）
            selectedCallBack:null//选择回调
        };

    function Plugin(element, options) {
        this.element = element;

        this.settings = options;
        this._defaults = defaults;
        this._name = pluginName;
        this._selectedArr = this.settings.selectedArr;
        this._selectedStr = '';

        if(this._selectedArr!=null && this._selectedArr.length>0)
            this._selectedStr = this._selectedArr.join(',');　　//转为字符串

        this.init();
    }

    $.extend(Plugin.prototype, {
        init: function () {
            var that = this;
            that.render();
        }
        , render: function () {
            var that = this;
            var selectList = [];

            if(that.settings.selectArr!=null && that.settings.selectArr.length>0){
                $.each(that.settings.selectArr, function (i, item) {
                    var isSelected = false;
                    if(that._selectedStr.indexOf(item.id)>-1){
                        isSelected = true;
                    }
                    var childList = [];
                    if(item.childList!=null && item.childList.length>0){
                        $.each(item.childList,function (subI,subItem) {
                            var subSelected = false;
                            if(that._selectedStr.indexOf(subItem.id)>-1){
                                subSelected = true;
                            }
                            childList.push({id:subItem.id,name:subItem.name,isSelected:subSelected});
                        });
                    }
                    selectList.push({id: item.id, name: item.name,isSelected:isSelected,childList:childList});
                });
            }
            if(that.settings.selectedArr!=null && that.settings.selectedArr.length>0){
                $(that.element).find('i').addClass('fc-v1-blue');
            }

            var iHtml = template('m_filterableField/m_filter_checkbox_select',{
                selectList:selectList,
                colClass:that.settings.colClass,
                boxStyle:that.settings.boxStyle,
                isParentCheck:that.settings.isParentCheck
            });
            var iTextObj = iHtml.getTextWH();
            var iWHObj = setDialogWH(iTextObj.width,iTextObj.height);

            $(that.element).off('click').on('click',function (e) {
                S_dialog.dialog({
                    contentEle: 'dialogOBox',
                    ele:that.settings.eleId,
                    lock: 2,
                    align: that.settings.align||'bottom right',
                    quickClose:true,
                    noTriangle:true,
                    width: that.settings.dialogWidth || iWHObj.width+20,
                    height:iWHObj.height+10,
                    tPadding: '0px',
                    url: rootPath+'/assets/module/m_common/m_dialog.html'

                },function(d){//加载html后触发

                    var dialogEle = 'div[id="content:'+d.id+'"] .dialogOBox';
                    $(dialogEle).html(iHtml);
                    $(dialogEle).css('overflow-x','hidden');

                    that.initICheck($(dialogEle));
                    //滚动事件
                    $(dialogEle).scroll(function() {
                        if($(this).scrollTop()>50){
                            $(dialogEle).find('.check-box-title').addClass('check-box-title-fixed');
                        }else{
                            $(dialogEle).find('.check-box-title').removeClass('check-box-title-fixed');
                        }
                    });
                });
                e.stopPropagation();
                return false;
            });
        }
        //初始化iCheck
        ,initICheck:function ($ele) {
            var that = this;
            var ifChecked = function (e) {
                var id = $(this).val();
                if(id==''){//选择的是全部-全选
                    $ele.find('input[name="itemCk"]').prop('checked',true);
                    $ele.find('input[name="itemCk"]').iCheck('update');
                }
                that.dealAllCheck($ele);
                that.getSelectedData($ele);
            };
            var ifUnchecked = function (e) {
                var id = $(this).val();
                if(id==''){//选择的是全部-全选
                    $ele.find('input[name="itemCk"]').prop('checked',false);
                    $ele.find('input[name="itemCk"]').iCheck('update');
                }
                that.dealAllCheck($ele);
                that.getSelectedData($ele);
            };
            $ele.find('input[name="itemCk"]').iCheck({
                checkboxClass: 'icheckbox_minimal-green',
                radioClass: 'iradio_minimal-green'
            }).on('ifUnchecked.s', ifUnchecked).on('ifChecked.s', ifChecked);
        }
        //判断是否全选
        ,dealAllCheck:function ($ele) {
            var that = this;
            var allLen = $ele.find('input[name="itemCk"][value!=""]').length;
            var allCkLen = $ele.find('input[name="itemCk"][value!=""]:checked').length;

            if(allCkLen==allLen){
                $ele.find('input[name="itemCk"][value=""]').prop('checked',true);
                $ele.find('input[name="itemCk"][value=""]').iCheck('update');
            }else{
                $ele.find('input[name="itemCk"][value=""]').prop('checked',false);
                $ele.find('input[name="itemCk"][value=""]').iCheck('update');
            }
        }
        //获取选中的数据
        ,getSelectedData :function ($ele) {
            var that = this;
            var selectedArr = [];
            $ele.find('input[name="itemCk"][value!=""]:checked').each(function () {
                selectedArr.push($(this).val());
            });
            if(that.settings.selectedCallBack)
                that.settings.selectedCallBack(selectedArr);
        }

    });

    /*
     1.一般初始化（缓存单例）： $('#id').pluginName(initOptions);
     2.强制初始化（无视缓存）： $('#id').pluginName(initOptions,true);
     3.调用方法： $('#id').pluginName('methodName',args);
     */
    $.fn[pluginName] = function (options, args) {
        var instance;
        var funcResult;
        var jqObj = this.each(function () {

            //从缓存获取实例
            instance = $.data(this, "plugin_" + pluginName);

            if (options === undefined || options === null || typeof options === "object") {

                var opts = $.extend(true, {}, defaults, options);

                //options作为初始化参数，若args===true则强制重新初始化，否则根据缓存判断是否需要初始化
                if (args === true) {
                    instance = new Plugin(this, opts);
                } else {
                    if (instance === undefined || instance === null)
                        instance = new Plugin(this, opts);
                }

                //写入缓存
                $.data(this, "plugin_" + pluginName, instance);
            }
            else if (typeof options === "string" && typeof instance[options] === "function") {

                //options作为方法名，args则作为方法要调用的参数
                //如果方法没有返回值，funcReuslt为undefined
                funcResult = instance[options].call(instance, args);
            }
        });

        return funcResult === undefined ? jqObj : funcResult;
    };

})(jQuery, window, document);

/**
 * select下拉筛选
 * Created by wrb on 2018/8/15.
 */
;(function ($, window, document, undefined) {

    "use strict";
    var pluginName = "m_filter_select",
        defaults = {
            eleId:null,//元素ID
            align:null,//浮窗位置
            isMultiple:false,//是否多选，是，开放checkbox
            selectArr:null,//筛选的数据(list对象,selectArr:[{id: "XX1", name: "XX2"}]
            selectedArr:null,//当前选中项（checkbox时多个,[id1,id2]）
            selectedCallBack:null//选择回调
        };

    function Plugin(element, options) {
        this.element = element;

        this.settings = options;
        this._defaults = defaults;
        this._name = pluginName;
        this._selectedArr = this.settings.selectedArr;
        this._selectedStr = '';

        if(this._selectedArr!=null && this._selectedArr.length>0)
            this._selectedStr = this._selectedArr.join(',');　　//转为字符串

        this.init();
    }

    $.extend(Plugin.prototype, {
        init: function () {
            var that = this;
            that.render();
        }
        , render: function () {
            var that = this;
            var selectList = [];
            selectList.push({name:'全部',id:''});
            /*if(that.settings.selectArr!=null && Object.getOwnPropertyNames(that.settings.selectArr).length>0){
                $.each(that.settings.selectArr, function (key, value) {
                    var isSelected = false;
                    if(that._selectedStr.indexOf(key)>-1){
                        isSelected = true;
                    }
                    selectList.push({fieldValue: key, fieldName: value,isSelected:isSelected});
                });
            }*/
            if(that.settings.selectArr!=null && that.settings.selectArr.length>0){
                $.each(that.settings.selectArr, function (i, item) {
                    var isSelected = false;
                    if(that._selectedStr.indexOf(item.id)>-1){
                        isSelected = true;
                    }
                    selectList.push({id: item.id, name: item.name,isSelected:isSelected});
                });
            }
            if(that.settings.selectedArr!=null && that.settings.selectedArr.length>0){
                $(that.element).find('i').addClass('fc-v1-blue');
            }

            var iHtml = template('m_filterableField/m_filter_select1',{
                selectList:selectList,
                isMultiple:that.settings.isMultiple
            });
            var iTextObj = iHtml.getTextWH();
            var iWHObj = setDialogWH(iTextObj.width,iTextObj.height);

            $(that.element).on('click',function (e) {
                S_dialog.dialog({
                    contentEle: 'dialogOBox',
                    ele:that.settings.eleId,
                    lock: 2,
                    align: that.settings.align||'bottom right',
                    quickClose:true,
                    noTriangle:true,
                    width: iWHObj.width+20,
                    height:iWHObj.height,
                    tPadding: '0px',
                    url: rootPath+'/assets/module/m_common/m_dialog.html'

                },function(d){//加载html后触发

                    var dialogEle = 'div[id="content:'+d.id+'"] .dialogOBox';
                    $(dialogEle).html(iHtml);
                    $(dialogEle).css('overflow-x','hidden');

                    if(that.settings.isMultiple)
                        that.initICheck($(dialogEle));

                    $(dialogEle).find('.dropdown-menu a').on('click',function () {

                        var val = $(this).attr('data-state-no');
                        var selectedArr = [];
                        if(val!='')
                            selectedArr.push(val);

                        if(that.settings.selectedCallBack)
                            that.settings.selectedCallBack(selectedArr);

                        S_dialog.close($(dialogEle));
                    });

                });
                e.stopPropagation();
                return false;
            });
        }
        //初始化iCheck
        ,initICheck:function ($ele) {
            var that = this;
            var ifChecked = function (e) {
                var id = $(this).val();
                if(id==''){//选择的是全部-全选
                    $ele.find('input[name="itemCk"]').prop('checked',true);
                    $ele.find('input[name="itemCk"]').iCheck('update');
                }
                that.dealAllCheck($ele);
                that.getSelectedData($ele);
            };
            var ifUnchecked = function (e) {
                var id = $(this).val();
                if(id==''){//选择的是全部-全选
                    $ele.find('input[name="itemCk"]').prop('checked',false);
                    $ele.find('input[name="itemCk"]').iCheck('update');
                }
                that.dealAllCheck($ele);
                that.getSelectedData($ele);
            };
            $ele.find('input[name="itemCk"]').iCheck({
                checkboxClass: 'icheckbox_minimal-green',
                radioClass: 'iradio_minimal-green'
            }).on('ifUnchecked.s', ifUnchecked).on('ifChecked.s', ifChecked);
        }
        //判断是否全选
        ,dealAllCheck:function ($ele) {
            var that = this;
            var allLen = $ele.find('input[name="itemCk"][value!=""]').length;
            var allCkLen = $ele.find('input[name="itemCk"][value!=""]:checked').length;

            if(allCkLen==allLen){
                $ele.find('input[name="itemCk"][value=""]').prop('checked',true);
                $ele.find('input[name="itemCk"][value=""]').iCheck('update');
            }else{
                $ele.find('input[name="itemCk"][value=""]').prop('checked',false);
                $ele.find('input[name="itemCk"][value=""]').iCheck('update');
            }
        }
        //获取选中的数据
        ,getSelectedData :function ($ele) {
            var that = this;
            var selectedArr = [];
            $ele.find('input[name="itemCk"][value!=""]:checked').each(function () {
                selectedArr.push($(this).val());
            });
            if(that.settings.selectedCallBack)
                that.settings.selectedCallBack(selectedArr);

        }

    });

    /*
     1.一般初始化（缓存单例）： $('#id').pluginName(initOptions);
     2.强制初始化（无视缓存）： $('#id').pluginName(initOptions,true);
     3.调用方法： $('#id').pluginName('methodName',args);
     */
    $.fn[pluginName] = function (options, args) {
        var instance;
        var funcResult;
        var jqObj = this.each(function () {

            //从缓存获取实例
            instance = $.data(this, "plugin_" + pluginName);

            if (options === undefined || options === null || typeof options === "object") {

                var opts = $.extend(true, {}, defaults, options);

                //options作为初始化参数，若args===true则强制重新初始化，否则根据缓存判断是否需要初始化
                if (args === true) {
                    instance = new Plugin(this, opts);
                } else {
                    if (instance === undefined || instance === null)
                        instance = new Plugin(this, opts);
                }

                //写入缓存
                $.data(this, "plugin_" + pluginName, instance);
            }
            else if (typeof options === "string" && typeof instance[options] === "function") {

                //options作为方法名，args则作为方法要调用的参数
                //如果方法没有返回值，funcReuslt为undefined
                funcResult = instance[options].call(instance, args);
            }
        });

        return funcResult === undefined ? jqObj : funcResult;
    };

})(jQuery, window, document);

/**
 * 时间组合筛选
 * Created by wrb on 2018/8/14.
 */
;(function ($, window, document, undefined) {

    "use strict";
    var pluginName = "m_filter_timeCombination",
        defaults = {
            selectTimeCallBack:null//时间选择回调
        };

    function Plugin(element, options) {
        this.element = element;

        this.settings = options;
        this._defaults = defaults;
        this._name = pluginName;
        this._timeData = {
            startTime:'',
            endTime:''
        };//选择的时间
        this.init();
    }

    $.extend(Plugin.prototype, {
        init: function () {
            var that = this;
            that.render();
        }
        ,render:function () {
            var that = this;
            var html = template('m_filterableField/m_filter_timeCombination',{});
            $(that.element).html(html);
            that.bindSetTime();
            that.bindChoseTime();
        }
        //快捷时间
        , bindSetTime: function () {
            var that = this;
            $(that.element).find('a[data-action="setTime"]').click(function () {
                var days = $(this).attr('data-days');
                var endTime = getNowDate();
                var startTime = '';//moment(endTime).subtract(days, 'days').format('YYYY-MM-DD');

                if (endTime != null && endTime.indexOf('-') > -1) {

                    var month = endTime.substring(5, 7) - 0;//当前月份

                    if (days == 30) {//一个月

                        startTime = endTime.substring(0, 8) + '01';

                    } else if (days == 90) {//一季度

                        if (month >= 1 && month <= 3) {//第一季度
                            startTime = endTime.substring(0, 5) + '01-01';
                        } else if (month >= 4 && month <= 6) {//第二季度
                            startTime = endTime.substring(0, 5) + '04-01';
                        } else if (month >= 7 && month <= 9) {//第三季度
                            startTime = endTime.substring(0, 5) + '07-01';
                        } else if (month >= 10 && month <= 12) {//第四季度
                            startTime = endTime.substring(0, 5) + '10-01';
                        }

                    } else if (days == 180) {//半年

                        if (month >= 1 && month <= 6) {//前半年
                            startTime = endTime.substring(0, 5) + '01-01';
                        } else if (month >= 7 && month <= 12) {//后半年
                            startTime = endTime.substring(0, 5) + '07-01';
                        }

                    } else if (days == 360) {//一年

                        startTime = endTime.substring(0, 5) + '01-01';
                    }
                }
                that.getDateTime(startTime,endTime);

                $(this).blur();
            });

        }
        //时间绑定事件
        , bindChoseTime:function () {
            var that = this;
            var currDate = getNowDate();
            $(that.element).find('input[name="startTime"]').off('click').on('click',function () {

                var endTime = $(that.element).find('input[name="endTime"]').val();
                var onpicked =function(dp){

                    that._timeData.startTime = dp.cal.getNewDateStr();
                    that._timeData.endTime = endTime;
                    if(that.settings.selectTimeCallBack)
                        that.settings.selectTimeCallBack(that._timeData);

                };
                WdatePicker({el:this,maxDate:endTime,onpicked:onpicked});
            });
            $(that.element).find('input[name="endTime"]').off('click').on('click',function () {

                var startTime = $(that.element).find('input[name="startTime"]').val();
                var onpicked =function(dp){

                    that._timeData.startTime = startTime;
                    that._timeData.endTime = dp.cal.getNewDateStr();
                    if(that.settings.selectTimeCallBack)
                        that.settings.selectTimeCallBack(that._timeData);

                };
                WdatePicker({el:this,minDate:startTime,onpicked:onpicked});
            });
            $(that.element).find('i.fa-calendar').off('click').on('click',function () {
                $(this).closest('.input-group').find('input').click();
            });

            $(that.element).find('input[name="ipt_year"]').click(function () {

                var onpicked =function(dp){

                    var year = dp.cal.getNewDateStr();
                    year  = year.substring(0,4);

                    var endTime = year+'-12-31';
                    var startTime = year+'-01-01';

                    var currYear = new Date().getFullYear();
                    if(year==currYear){//今年
                        endTime  = getNowDate();
                    }

                    that.initMonthSelect();

                    that.getDateTime(startTime,endTime);
                };
                WdatePicker({el:this,dateFmt:'yyyy年',maxDate:currDate,onpicked:onpicked});
            });

        }
        //渲染收票方
        ,initMonthSelect:function () {
            var that = this;
            var currYear = new Date().getFullYear();
            var year = $(that.element).find('input[name="ipt_year"]').val();
            year  = year.substring(0,4);
            var month = new Date().getMonth();
            var monthLen = 12;
            if(year==currYear){//今年
                monthLen = month+1;
            }
            var staffArr = [{id:'',text:'请选择月份'}];
            for(var i=0;i<monthLen;i++){

                var m = i+1;
                if(m.length<2){
                    m = '0' + m;
                }

                staffArr.push({id:m,text:(i+1)+'月'});
            }
            $(that.element).find('select[name="ipt_month"]').select2({
                tags:false,
                allowClear: false,
                placeholder: "请选择月份",
                containerCssClass:'select-sm',
                minimumResultsForSearch: -1,
                language: "zh-CN",
                data: staffArr
            });
            $(that.element).find('select[name="ipt_month"]').on("change", function (e) {

                var currYear = new Date().getFullYear();
                var year = $(that.element).find('input[name="ipt_year"]').val();
                year  = year.substring(0,4);
                var month = $(that.element).find('select[name="ipt_month"]').val();
                var lastDay = (new Date((new Date(year,month,1)).getTime()-1000*60*60*24)).getDate();
                var endTime = year+'-'+month+'-'+lastDay;
                var startTime = year+'-'+month+'-01';
                if(month==''){
                    endTime  =  year+'-12-31';
                    startTime = year+'-01-01';
                }
                if(year==currYear && month==new Date().getMonth()+1){//今年
                    endTime  = getNowDate();
                }
                that.getDateTime(startTime,endTime);
            })
        }

        ,getDateTime:function (startTime,endTime) {
            var that = this;

            $(that.element).find('#ipt_startTime').val(startTime);
            $(that.element).find('#ipt_endTime').val(endTime);

            that._timeData.startTime = startTime;
            that._timeData.endTime = endTime;

            if(that.settings.selectTimeCallBack)
                that.settings.selectTimeCallBack(that._timeData);
        }
    });

    /*
     1.一般初始化（缓存单例）： $('#id').pluginName(initOptions);
     2.强制初始化（无视缓存）： $('#id').pluginName(initOptions,true);
     3.调用方法： $('#id').pluginName('methodName',args);
     */
    $.fn[pluginName] = function (options, args) {
        var instance;
        var funcResult;
        var jqObj = this.each(function () {

            //从缓存获取实例
            instance = $.data(this, "plugin_" + pluginName);

            if (options === undefined || options === null || typeof options === "object") {

                var opts = $.extend(true, {}, defaults, options);

                //options作为初始化参数，若args===true则强制重新初始化，否则根据缓存判断是否需要初始化
                if (args === true) {
                    instance = new Plugin(this, opts);
                } else {
                    if (instance === undefined || instance === null)
                        instance = new Plugin(this, opts);
                }

                //写入缓存
                $.data(this, "plugin_" + pluginName, instance);
            }
            else if (typeof options === "string" && typeof instance[options] === "function") {

                //options作为方法名，args则作为方法要调用的参数
                //如果方法没有返回值，funcReuslt为undefined
                funcResult = instance[options].call(instance, args);
            }
        });

        return funcResult === undefined ? jqObj : funcResult;
    };

})(jQuery, window, document);

;(function ($, window, document, undefined) {

    "use strict";
    var pluginName = "m_popover_filter",
        defaults = {
            titleHtml: null,
            popoverStyle: '',
            content: null,
            placement: null,//浮窗是在哪个位置展开：‘left’,‘right’,‘top’,‘bottom’,空值则默认为top
            onShown: null,
            onSave: null,
            onClear: null,
            template: 'm_filterableField/m_popover_filter'
        };

    // The actual plugin constructor
    function Plugin(element, options) {
        this.element = element;

        this.settings = options;
        this._defaults = defaults;
        this._name = pluginName;
        this.init();
    }

    // Avoid Plugin.prototype conflicts
    $.extend(Plugin.prototype, {
        init: function () {
            var that = this;

            //清掉其他列的Popover
            var $table = $(that.element).closest('.table');
            if ($table.length > 0) {
                $table.find('.popover-filter').each(function (i, o) {
                    $(o).remove();
                });
            }

            var html = template(that.settings.template, {
                titleHtml: that.settings.titleHtml,
                popoverStyle: that.settings.popoverStyle
            });
            $(html).insertAfter(that.element);
            var $popover = $(that.element).next('.popover-filter');
            $popover.find('.popover-content').html(that.settings.content);

            //回车键
            $popover.find('.popover-content input').keydown(function (e) {
                if (event.keyCode == 13) {
                    stopPropagation(e);
                    preventDefault(e);
                    return false;
                }
            });

            //防止冒泡
            $popover.off('click.popover-filter').on('click.popover-filter', function (e) {
                stopPropagation(e);
                return false;
            });

            if (that.settings.onShown && that.settings.onShown !== null)
                that.settings.onShown($popover);

            setTimeout(function () {
                that.setPosition();
                that.bindBtnClick();
                that.bindPopoverClickedOut();
            }, 50);
        },
        //当鼠标点击的焦点不在浮窗内时，关闭浮窗
        bindPopoverClickedOut: function () {
            var that = this;
            $(document).on('click.popover-filter', function (e) {
                //console.log('document.clicked');
                var flag = $(e.target).parents('.select2-container').length > 0 || $(e.target).is('.select2-container');
                //防止select2搜索框点击触发关闭
                if ($(e.target).closest('.select2-search__field').length > 0 || flag)
                    return false;

                that.closeFilter();
            });
        },
        setPosition: function () {
            var that = this;
            var $popover = $(that.element).next('.popover-filter');
            if ($popover.length > 0) {
                var p_p = that.settings.placement ? that.settings.placement : 'top';//浮窗的展示位置
                var a_ptop = $(that.element).position().top;//a标签的top值
                var a_width = $(that.element).width();//a标签的width值
                var a_height = $(that.element).height();//a标签的height值
                var a_pleft = $(that.element).position().left;//a标签的left值
                var p_width = $popover.width();//浮窗的宽度
                var p_height = $popover.height();//浮窗的高度
                var p_top = 0;//浮窗的top值
                var p_left = 0;//浮窗的left值
                switch (p_p) {
                    case 'top':
                        p_top = (a_ptop - p_height);
                        p_left = a_pleft + a_width / 2 - p_width / 2;
                        break;
                    case 'bottom':
                        p_top = (a_ptop + a_height);
                        p_left = a_pleft + a_width / 2 - p_width / 2;
                        break;
                    case 'left':
                        p_top = (a_ptop - p_height / 2 + 5);
                        p_left = a_pleft - p_width - 10;
                        break;
                    case 'right':
                        p_top = (a_ptop - p_height / 2 + 7);
                        p_left = a_pleft + a_width;
                        break;
                }

                $popover.removeClass('top').addClass(p_p);
                if (p_p.indexOf('left') > -1 || p_p.indexOf('right') > -1) {
                    $popover.find('.arrow').css({'top': '50%', 'left': ''});
                }

                $popover.css({
                    display: 'inline-block',
                    position: 'absolute',
                    top: p_top,
                    left: p_left
                });


                //自动调整左右超出浏览器窗口的情况
                var left = $popover.offset().left;
                var winWidth = $(window).width();
                var pWidth = $popover.width();
                if (left < 0) {
                    $popover.offset({left: 0});
                }
                else if (left + pWidth > winWidth) {
                    var left = winWidth - pWidth;
                    if (left > 0)
                        $popover.offset({left: left});
                }
            }
        },
        bindBtnClick: function () {
            var that = this;
            var $popover = $(that.element).next('.popover-filter');
            if ($popover.length > 0) {

                var $btnSubmit = $popover.find('.filter-submit');
                if ($btnSubmit.length > 0) {
                    $btnSubmit.click(function (e) {

                        if (that.settings.onSave && that.settings.onSave !== null)
                            that.settings.onSave($popover);

                        that.closeFilter();

                        stopPropagation(e);
                        return false;
                    });
                }

                var $btnClear = $popover.find('.filter-clear');
                if ($btnClear.length > 0) {
                    $btnClear.click(function (e) {

                        //如果没有自定义清除函数，则使用默认
                        if (that.settings.onClear && that.settings.onClear !== null)
                            that.settings.onClear($popover);
                        else {
                            //查找第一个input清空
                            var $input = $(this).closest('form').find('input:first');
                            if ($input.length > 0)
                                $input.val('');
                        }

                        stopPropagation(e);
                        return false;
                    });
                }

                var $btnClose = $popover.find('.filter-close');
                if ($btnClose.length > 0) {
                    $btnClose.click(function (e) {

                        that.closeFilter();

                        stopPropagation(e);
                        return false;
                    });
                }
            }
        },
        closeFilter: function () {
            var that = this;
            $(that.element).siblings('.popover-filter').each(function (i, o) {
                $(o).remove();
            });
            $(document).off('click.popover-filter');
        }
    });

    /*
     1.一般初始化（缓存单例）： $('#id').pluginName(initOptions);
     2.强制初始化（无视缓存）： $('#id').pluginName(initOptions,true);
     3.调用方法： $('#id').pluginName('methodName',args);
     */
    $.fn[pluginName] = function (options, args) {
        var instance;
        var funcResult;
        var jqObj = this.each(function () {

            //从缓存获取实例
            instance = $.data(this, "plugin_" + pluginName);

            if (options === undefined || options === null || typeof options === "object") {

                var opts = $.extend(true, {}, defaults, options);

                //options作为初始化参数，若args===true则强制重新初始化，否则根据缓存判断是否需要初始化
                if (args === true) {
                    instance = new Plugin(this, opts);
                } else {
                    if (instance === undefined || instance === null)
                        instance = new Plugin(this, opts);
                }

                //写入缓存
                $.data(this, "plugin_" + pluginName, instance);
            }
            else if (typeof options === "string" && typeof instance[options] === "function") {

                //options作为方法名，args则作为方法要调用的参数
                //如果方法没有返回值，funcReuslt为undefined
                funcResult = instance[options].call(instance, args);
            }
        });

        return funcResult === undefined ? jqObj : funcResult;
    };

})(jQuery, window, document);



/**
 * 报销条目
 * Created by wrb on 2016/12/7.
 */
;(function ($, window, document, undefined) {

    "use strict";
    var pluginName = "m_addExpDetailTr",
        defaults = {
            tableId:'',
            detailLen:0,
            callBack1:null,//传送expTypeData条目的方法
            // callBack2:null//当编辑报销明细时，打开弹窗生成明细后调用的方法
        };

    // The actual plugin constructor
    function Plugin(element, options) {
        this.element = element;
        this.settings = $.extend({}, defaults, options);
        this._defaults = defaults;
        this._name = pluginName;
        this.init();
    }

    // Avoid Plugin.prototype conflicts
    $.extend(Plugin.prototype, {
        init: function () {
            var that = this;
            that.getAddExpData();
        }
        //给删除按钮添加事件
        ,bindDeleteClickFun:function(pTarget){
            var that = this;
            var a = $(that.settings.tableId).find(pTarget);
            a.find('a[data-action="deleteDetail"]').bind('click',function(event){
                var $_target = $(this).closest('tr');
                $_target.remove();
                stopPropagation(event);
            });
        }
        //添加报销明细
        ,getAddExpData: function () {
            var that = this;
            var $data = {};
            var len = $(that.settings.tableId +' tbody tr').length-2;//现有的报销明细条数
            /************获取关联项目列表************/
            var option  = {};
            option.url = restApi.url_getExpBaseData;
            // option.postData={};
            m_ajax.get(option,function (response) {
                if(response.code=='0'){
                    $data.detail = that.settings.detailLen>0?that.settings.detailLen-0+1:1;;
                    $data.projectList = response.data.projectList;
                    var html = template('m_finance/m_addExpDetailTr',$data);
                    $('#toExpApplication .call-action-v1-boxed').closest('tr').before(html);
                    /************加载报销类别表单************/
                    var options = {};
                    options.delButtonType = 1;
                    options.parentTarget = 'tr[target="target'+(that.settings.detailLen-0+1)+'"]';
                    options.callBack1 = that.settings.callBack1;
                    $('#reimburseTable').m_expTypeSelect(options);
                    if($('#reimburseTable tbody tr').eq(0).find('a[data-action="deleteDetail"]').length>0){

                        $('#reimburseTable tbody tr').eq(0).find('a[data-action="deleteDetail"]').remove();
                    }
                    that.bindDeleteClickFun(options.parentTarget);
                    that.bindMouseBlur(options.parentTarget);
                }else {
                    S_dialog.error(response.info);
                }

            });
        }
        //给输入金额绑定鼠标移除事件
        ,bindMouseBlur:function(pTarget){
            var that = this;
            $(pTarget+' input#expAmount').bind('blur',function(){
                var $this = $(this);
                that.numberFilterFun($this);
            });
            $(pTarget+' input#expAmount').focus(function(){
                var $this = $(this);
                var $el = $this.next('#moneyError');
                if($el.length>0) {return $el.remove();}
            });
        }
        //当光标移除金额时判断输入金额是否为0-9数字，如不是则清空
        ,numberFilterFun:function(obj){
            var reg = new RegExp(/^\d+(\.\d+)?$/);
            var val = obj.val();
            var len = val.substr(val.indexOf('.'),val.length-1).length;
            if((!reg.test(val)) || len>3){
                obj.val('');
                var iHtml = '<div id="moneyError" style="color:red;">请输入小数点不超过两位的数字金额!</div>';
                if(obj.next('#moneyError').length<1){
                    obj.after(iHtml);
                }
                return false;
            }
        }



    });

    $.fn[pluginName] = function (options) {
        return this.each(function () {
            // if (!$.data(this, "plugin_" + pluginName)) {
                $.data(this, "plugin_" +
                    pluginName, new Plugin(this, options));
            // }
        });
    };

})(jQuery, window, document);

/**
 * 费用均摊项设置
 * Created by wrb on 2018/05/30.
 */
;(function ($, window, document, undefined) {

    "use strict";
    var pluginName = "m_costSharing_settings",
        defaults = {
        };

    // The actual plugin constructor
    function Plugin(element, options) {
        this.element = element;

        this.settings = $.extend({}, defaults, options);
        this._defaults = defaults;
        this._name = pluginName;
        this._currentExpFixedData = null;//当前费用数据
        this._currentSelectedOrg = null;//当前选中组织
        this.init();
    }

    // Avoid Plugin.prototype conflicts
    $.extend(Plugin.prototype, {
        init: function () {
            var that = this;
            var html = template('m_finance/m_costSharing_settings',{});
            $(that.element).html(html);
            that.initOrgTree();
            that.leftBoxHeightResize();
            $(window).resize(function () {
                var t = setTimeout(function () {
                    that.leftBoxHeightResize();
                    clearTimeout(t);
                });
            });
        }
        //初始化组织树
        , initOrgTree: function () {
            var that = this;
            var options = {};
            options.isDialog = false;
            options.isGetUserList = false;
            options.treeUrl = restApi.url_getRelationTypeIsThree;
            options.currentCompanyId = window.currentCompanyId;
            options.treeIconObj = {
                'default': {
                    'icon': 'iconfont rounded icon-zuzhijiagou'
                },
                'independent': {   //独立经营图标
                    'icon': 'fa fa-users'
                },
                'partner': {       //事业合伙人图标
                    'icon': 'iconfont rounded icon-cooperation'
                },
                'partnerContainer': {       //事业合伙人容器图标
                    'icon': 'iconfont rounded icon-cooperation'
                },
                'subCompany': {       //分支机构图标
                    'icon': 'iconfont rounded icon-2fengongsi1'
                },
                'subCompanyContainer': {       //分支机构容器图标
                    'icon': 'iconfont rounded icon-2fengongsi1'
                },
                'company': {         //根节点图标
                    'icon': 'iconfont rounded icon-2fengongsi'
                }
            };
            options.afterOpenCallBack = function (data) {

                that.dealTreeIconColorFun(data.node.id);
            };
            options.selectNodeCallBack = function (data,type) {
                console.log(data);
                that._currentSelectedOrg = data;
                that.renderContent();
            };
            $(that.element).find('#organization_treeH').m_orgByTree(options);
        }
        //树icon颜色处理
        , dealTreeIconColorFun:function (id) {
            $('#organization_treeH').find('li[id="'+id+'"]>ul>li').each(function () {
                var $this = $(this);
                var relationType = $this.attr('relationtype');
                if(relationType==1){
                    $this.find('a.jstree-anchor i.jstree-icon').addClass('color-blue');
                }else if(relationType==2){
                    $this.find('a.jstree-anchor i.jstree-icon').addClass('color-green');
                }else if(relationType==3){
                    $this.find('a.jstree-anchor i.jstree-icon').addClass('color-red');
                }
            });
        }
        //树菜单高度自适应
        , leftBoxHeightResize:function () {
            var that = this;
            var pageWrapperH = $('#page-wrapper').css('min-height');
            $(that.element).find('#left-box').css('min-height',pageWrapperH);
        }

        //渲染右边内容
        , renderContent:function () {
            var that = this;
            var categoryType = $(that.element).find('select[name="categoryType"]').val();
            if(categoryType==''){
                categoryType = null;
            }
            var option  = {};
            option.classId= '#content-box';
            option.url = restApi.url_getExpShareTypeList;
            option.postData = {
                companyId : that._currentSelectedOrg.id
            };
            m_ajax.postJson(option,function (response) {
                if(response.code=='0'){

                    var feeEntryFieldList = response.data;
                    var html = template('m_finance/m_costSharing_settings_content',{feeEntryFieldList:feeEntryFieldList});
                    $(that.element).find('#right-box').html(html);
                    that.initItemICheck();
                    that.bindAddFeeFieldBtn();
                    that.dealPidCheck();

                }else {
                    S_dialog.error(response.info);
                }
            });

        }
        //初始ICheck
        ,initItemICheck:function () {
            var that = this;
            var ifChecked = function (e) {
                var dataId = $(this).attr('data-id');
                var dataPid = $(this).attr('data-pid');

                if(dataPid==''){//根目录
                    $(that.element).find('input[name="itemCk"][data-pid="'+dataId+'"]').prop('checked',true);
                    $(that.element).find('input[name="itemCk"][data-pid="'+dataId+'"]').iCheck('update');

                }else{
                    var childLen = $(that.element).find('input[name="itemCk"][data-pid="'+dataPid+'"]').length;
                    var childCheckedLen = $(that.element).find('input[name="itemCk"][data-pid="'+dataPid+'"]:checked').length;
                    if(childLen==childCheckedLen){
                        $(that.element).find('input[name="itemCk"][data-id="'+dataPid+'"]').prop('checked',true);
                        $(that.element).find('input[name="itemCk"][data-id="'+dataPid+'"]').iCheck('update');
                    }else{
                        $(that.element).find('input[name="itemCk"][data-id="'+dataPid+'"]').prop('checked',false);
                        $(that.element).find('input[name="itemCk"][data-id="'+dataPid+'"]').iCheck('update');
                    }
                }
                that.bindSaveFeeField();
            };
            var ifUnchecked = function (e) {
                var dataId = $(this).attr('data-id');
                var dataPid = $(this).attr('data-pid');

                if(dataPid==''){//根目录
                    $(that.element).find('input[name="itemCk"][data-pid="'+dataId+'"]').prop('checked',false);
                    $(that.element).find('input[name="itemCk"][data-pid="'+dataId+'"]').iCheck('update');
                }else{

                    $(that.element).find('input[name="itemCk"][data-id="'+dataPid+'"]').prop('checked',false);
                    $(that.element).find('input[name="itemCk"][data-id="'+dataPid+'"]').iCheck('update');
                }
                that.bindSaveFeeField();
            };
            $(that.element).find('input[name="itemCk"]').iCheck({
                checkboxClass: 'icheckbox_minimal-green',
                radioClass: 'iradio_minimal-green'
            }).on('ifUnchecked.s', ifUnchecked).on('ifChecked.s', ifChecked);
        }
        //子项全选，父项选中
        , dealPidCheck:function () {
            var that = this;
            $(that.element).find('input[name="itemCk"][data-pid=""]').each(function () {
                var dataId = $(this).attr('data-id');
                var childCheckedLen = $(that.element).find('input[name="itemCk"][data-pid="'+dataId+'"]:checked').length;
                var childLen = $(that.element).find('input[name="itemCk"][data-pid="'+dataId+'"]').length;
                if(childCheckedLen==childLen){
                    $(this).prop('checked',true);
                    $(this).iCheck('update');
                }
            });
        }
        //添加费用类型
        , bindAddFeeFieldBtn:function () {
            var that = this;
            $(that.element).find('button[data-action="addFeeField"]').off('click').on('click',function (e) {
                var $this = $(this);
                S_dialog.dialog({
                    title: '新增费用类型',
                    contentEle: 'dialogOBox',
                    lock: 3,
                    width: '350',
                    height:'100',
                    tPadding:'0',
                    url: rootPath+'/assets/module/m_common/m_dialog.html',
                    ok:function(){

                        if ($('form.addFeeFieldForm').valid()) {

                            var feeField = $('form.addFeeFieldForm input[name="feeField"]').val();
                            var categoryType = $('form.addFeeFieldForm select[name="categoryType"]').val();
                            var option  = {};
                            option.url = restApi.url_saveExpFixCategory;
                            option.postData = {
                                pid:$this.attr('data-id'),
                                //categoryType:categoryType,
                                name:feeField
                            };
                            m_ajax.postJson(option,function (response) {
                                if(response.code=='0'){
                                    S_toastr.success('操作成功');
                                    that.renderContent();
                                }else {
                                    S_dialog.error(response.info);
                                }
                            });

                        } else {
                            return false;
                        }

                    },
                    cancelText:'取消',
                    cancel:function(){

                    }
                },function(d){//加载html后触发

                    var $dialogEle = $('div[id="content:'+d.id+'"] .dialogOBox');
                    var html = template('m_finance/m_feeEntry_settings_add',{editType:'costSharing'});
                    $dialogEle.html(html);
                    $dialogEle.find('select[name="categoryType"]').select2({
                        allowClear: false,
                        language: "zh-CN",
                        minimumResultsForSearch: -1
                    });
                    $dialogEle.find('select[name="categoryType"]').val(2).trigger('change');
                    $dialogEle.find('select[name="categoryType"]').prop('disabled',true);
                    that.saveFeeField_validate();

                });
                e.stopPropagation();
                return false;
            });
        }
        , bindSaveFeeField:function () {
            var that = this;
            var checkedList = [];
            $(that.element).find('input[name="itemCk"]:checked').each(function () {
                var dataId = $(this).attr('data-id');
                var dataPid = $(this).attr('data-pid');
                if(dataPid!=undefined && dataPid!=''){
                    checkedList.push(dataId);
                }
            });

            var option  = {};
            option.url = restApi.url_saveExpShareTypeShowStatus;
            option.postData = {
                categoryType:3,
                companyId : that._currentSelectedOrg.id,
                idList:checkedList
            };
            m_ajax.postJson(option,function (response) {
                if(response.code=='0'){
                    S_toastr.success('保存成功！');
                }else {
                    S_dialog.error(response.info);
                }
            });

        }
        //类型不为空判断
        , saveFeeField_validate: function () {
            var that = this;
            $('form.addFeeFieldForm').validate({
                rules: {
                    feeField: {
                        required: true,
                        maxlength: 50
                    }
                },
                messages: {
                    feeField: {
                        required: '请输入类型名称！',
                        maxlength: '请控制在50字符以内！'
                    }
                }
            });
        }
    });

    $.fn[pluginName] = function (options) {
        return this.each(function () {
            // if (!$.data(this, "plugin_" + pluginName)) {
            $.data(this, "plugin_" +
                pluginName, new Plugin(this, options));
            // }
        });
    };

})(jQuery, window, document);

/**
 * 费用汇总
 * Created by wrb on 2017/12/25.
 */
;(function ($, window, document, undefined) {

    "use strict";
    var pluginName = "m_costSummary",
        defaults = {
            expSumFilterData: {}//盛装报销汇总查询条件
        };

    // The actual plugin constructor
    function Plugin(element, options) {
        this.element = element;

        this.settings = $.extend({}, defaults, options);
        this._defaults = defaults;
        this._name = pluginName;
        this._companyListBySelect = null;//筛选组织
        this.init();
    }

    // Avoid Plugin.prototype conflicts
    $.extend(Plugin.prototype, {
        init: function () {
            var that = this;
            var html = template('m_finance/m_costSummary', {});
            $(that.element).html(html);
            that.getData(0);
        }

        //加载基本数据
        , getData: function (type) {
            var that = this;
            var option = {};
            option.classId = 'mySummaryListBox';
            option.param = {};
            option.param.type = 2;
            if (type === 0) {
                option.param.expName = '';
                option.param.expPName = '';
                option.param.expAllName = '';
                option.param.expType = '';
                option.param.expParentType = '';
                option.param.expNo = '';
            } else {

                option.param.startDate = $('input[name="myExpStartDate"]').val();
                option.param.endDate = $('input[name="myExpEndDate"]').val();
                option.param.expNo = $.trim($('input[name="expNo"]').val());
                //option.param.type = $.trim($('input[name="expType"]').val());

                option.param.approveStartDate = $('input[name="approveStartDate"]').val();
                option.param.approveEndDate = $('input[name="approveEndDate"]').val();

                option.param.applyUserName = $('input[name="approveUserName"]').val();
                option.param.allocationStatus = $('input[name="allocationStatus"]').val();
                option.param.allocationStartDate = $('input[name="allocationStartDate"]').val();
                option.param.allocationEndDate = $('input[name="allocationEndDate"]').val();

                option.param.applyCompanyName = $('input[name="applyCompanyName"]').val();

                option.param.allocationOrder = $('input[name="sortAllocationDate"]').val();
            }
            paginationFun({
                eleId: '#mySummary-pagination-container',
                loadingId: '#mySummaryListData',
                url: restApi.url_getExpMainPageForSummary,
                params: option.param
            }, function (response) {
                // data为ajax返回数据
                if (response.code == '0') {

                    that._companyListBySelect = response.data.companyList;
                    var $data = {};
                    $data.myDataList = response.data.data;
                    $data.expSumAmount = response.data.expSumAmount;
                    $data.financialAllocationSumAmount = response.data.financialAllocationSumAmount;
                    $data.rootPath = window.rootPath;
                    if(type!=1 && !($data.myDataList && $data.myDataList.length>0)){
                        $(that.element).find('#summary .mySummaryFilterBox').html('');
                    }
                    $data.pageIndex=$("#mySummary-pagination-container").pagination('getPageIndex');
                    $data.isFinance = window.currentRoleCodes.indexOf('project_charge_manage')>-1?1:0;
                    var html = template('m_finance/m_costSummary_list', $data);
                    $('#mySummaryListData').html(html);
                    rolesControl();
                    that.bindClickOpenShowExp($data.myDataList);
                    that.bindActionClick();
                    that.filterHover();
                    that.sortActionClick();

                    return false;
                } else {
                    S_dialog.error(response.info);
                }
            });

        }
        //打开查看报销详情
        , bindClickOpenShowExp: function (data) {//openShowExp
            var that = this;
            $('#mySummaryListData').find('tr[data-action="openShowExp"]').each(function () {
                $(this).bind('click', function (event) {
                    var i = $(this).attr('i');
                    var options = {};
                    options.title = '费用详情';
                    options.expDetail = data[i];
                    options.type = 2;
                    $(this).m_showExpDetailDialog(options);
                    event.stopPropagation();
                    return false;
                });
            });
        }
        //筛选hover事件
        ,filterHover:function () {
            var that =  this;

            $(that.element).find('.mySummaryListBox  th').hover(function () {
                if( $(this).find(' .icon-filter i').hasClass('icon-shaixuan') && !$(this).find(' .icon-filter i').hasClass('fc-v1-blue')){
                    $(this).find(' .icon-filter').show();
                }
            },function () {
                if( $(this).find(' .icon-filter i').hasClass('icon-shaixuan') && !$(this).find(' .icon-filter i').hasClass('fc-v1-blue')) {
                    $(this).find(' .icon-filter').hide();
                }
            });
        }
        //绑定拨款事件
        , bindActionClick:function () {
            var that = this;
            $('#mySummaryListData').find('a[data-action]').on('click',function (e) {

                var $this = $(this);
                var dataAction = $this.attr('data-action');
                switch (dataAction){
                    case 'agreeToGrant'://拨款
                        S_dialog.dialog({
                            title: '请选择时间',
                            contentEle: 'dialogOBox',
                            lock: 3,
                            width: '200',
                            height:'50',
                            url: rootPath+'/assets/module/m_common/m_dialog.html',
                            ok:function(){

                                if ($('form.agreeToGrantForm').valid()) {

                                    var financialDate = $('form.agreeToGrantForm input[name="allocationDate"]').val();
                                    //financialDate = moment(financialDate).format('YYYY/MM/DD');
                                    var option  = {};
                                    option.url = restApi.url_financialAllocation;
                                    option.postData = {
                                        id:$this.attr('data-id'),
                                        financialDate:financialDate
                                    };
                                    m_ajax.postJson(option,function (response) {
                                        if(response.code=='0'){
                                            S_toastr.success('操作成功');
                                            //that.init();
                                            $this.parents('td').html(moment(financialDate).format('YYYY/MM/DD'));
                                        }else {
                                            S_dialog.error(response.info);
                                        }
                                    });

                                } else {
                                    return false;
                                }
                            },
                            cancelText:'取消',
                            cancel:function(){
                            }
                        },function(d){//加载html后触发

                            var $dialogEle = $('div[id="content:'+d.id+'"] .dialogOBox');
                            var currDate = getNowDate();
                            $dialogEle.html('<form class="agreeToGrantForm"><div class="form-group text-center col-md-12 "><input class="form-control" type="text" name="allocationDate" onclick="WdatePicker()" value="'+currDate+'" readonly></div></form>');
                            that.saveAgreeToGrant_validate();
                        });
                        e.stopPropagation();
                        return false;
                        break;
                    case 'sendBack'://退回

                        S_dialog.dialog({
                            title: '退回原因',
                            contentEle: 'dialogOBox',
                            lock: 3,
                            width: '300',
                            height:'100',
                            tPadding:'0',
                            url: rootPath+'/assets/module/m_common/m_dialog.html',
                            ok:function(){

                                if ($('form.sendBackForm').valid()) {

                                    var sendBackReason = $('form.sendBackForm textarea[name="sendBackReason"]').val();
                                    var option  = {};
                                    option.url = restApi.url_financialRecallExpMain;
                                    option.postData = {
                                        id:$this.attr('data-id'),
                                        reason:sendBackReason
                                    };
                                    m_ajax.postJson(option,function (response) {
                                        if(response.code=='0'){
                                            S_toastr.success('操作成功');
                                            //that.init();
                                            $this.parents('TR').remove();
                                        }else {
                                            S_dialog.error(response.info);
                                        }
                                    });

                                } else {
                                    return false;
                                }
                            },
                            cancelText:'取消',
                            cancel:function(){
                            }
                        },function(d){//加载html后触发

                            var $dialogEle = $('div[id="content:'+d.id+'"] .dialogOBox');
                            $dialogEle.html('<form class="sendBackForm"><div class=" m-t-md col-md-12 "><textarea class="form-control" name="sendBackReason"></textarea></div></form>');
                            that.saveSendBack_validate();
                        });
                        e.stopPropagation();
                        return false;
                        break;
                }


            });
            //筛选事件
            $(that.element).find('a.icon-filter').each(function () {

                var $this = $(this);
                var id = $this.attr('id');
                switch (id){
                    case 'filterApproveUserName'://审批人
                    case 'filterExpNo': //项目编号
                        var txtVal = '',placeholder='';
                        if(id=='filterApproveUserName'){
                            txtVal = $('input[name="approveUserName"]').val();
                            placeholder = '申请人';
                        }else{
                            txtVal = $('input[name="expNo"]').val();
                            placeholder = '报销编号';
                        }

                        if(txtVal!=''){
                            $this.closest('th').find('.icon-filter i').addClass('fc-v1-blue');
                            $this.closest('th').find('.icon-filter').show();
                        }
                        $this.on('click',function () {
                            S_dialog.dialog({
                                contentEle: 'dialogOBox',
                                ele:id,
                                lock: 2,
                                align: 'bottom right',
                                quickClose:true,
                                noTriangle:true,
                                width: '220',
                                minHeight:'100',
                                tPadding: '0px',
                                url: rootPath+'/assets/module/m_common/m_dialog.html'


                            },function(d){//加载html后触发

                                var dialogEle = 'div[id="content:'+d.id+'"] .dialogOBox';


                                var iHtml = template('m_filterableField/m_filter_input',{
                                    txtVal:txtVal,
                                    placeholder:placeholder
                                });

                                $(dialogEle).html(iHtml);
                                $(dialogEle).find('button[data-action="sureFilter"]').on('click',function () {
                                    var val = $(dialogEle).find('input[name="txtVal"]').val();

                                    if(id=='filterApproveUserName'){
                                        $(that.element).find('input[name="approveUserName"]').val(val);
                                    }else{
                                        $(that.element).find('input[name="expNo"]').val(val);
                                    }

                                    that.getData(1);

                                    S_dialog.close($(dialogEle));
                                });

                            });
                        });

                        break;
                    case 'filterApproveDate'://审批时间
                    case 'filterAllocationDate'://拨款时间
                    case 'filterExpDate': //申请时间

                        var startTime = '';
                        var endTime = '';
                        if(id=='filterApproveDate'){
                            startTime = $(that.element).find('input[name="approveStartDate"]').val();
                            endTime = $(that.element).find('input[name="approveEndDate"]').val();
                        }else if(id=='filterAllocationDate'){
                            startTime = $(that.element).find('input[name="allocationStartDate"]').val();
                            endTime = $(that.element).find('input[name="allocationEndDate"]').val();
                        }else{
                            startTime = $(that.element).find('input[name="myExpStartDate"]').val();
                            endTime = $(that.element).find('input[name="myExpEndDate"]').val();
                        }
                        if(startTime!='' || endTime!=''){
                            $this.closest('th').find('.icon-filter i').addClass('fc-v1-blue');
                            $this.closest('th').find('.icon-filter').show();
                        }
                        $this.on('click',function () {
                            S_dialog.dialog({
                                contentEle: 'dialogOBox',
                                ele:id,
                                lock: 2,
                                align: 'bottom right',
                                quickClose:true,
                                noTriangle:true,
                                width: '220',
                                minHeight:'100',
                                tPadding: '0px',
                                url: rootPath+'/assets/module/m_common/m_dialog.html'


                            },function(d){//加载html后触发

                                var dialogEle = 'div[id="content:'+d.id+'"] .dialogOBox';

                                var iHtml = template('m_filterableField/m_filter_time',{
                                    startTime:startTime,
                                    endTime:endTime
                                });

                                $(dialogEle).html(iHtml);
                                $(dialogEle).find('button[data-action="sureTimeFilter"]').off('click').on('click',function () {

                                    var startTime = $(dialogEle).find('input[name="startTime"]').val();
                                    var endTime = $(dialogEle).find('input[name="endTime"]').val();

                                    if(id=='filterApproveDate'){
                                        $(that.element).find('input[name="approveStartDate"]').val(startTime);
                                        $(that.element).find('input[name="approveEndDate"]').val(endTime);
                                    }else if(id=='filterAllocationDate'){
                                        $(that.element).find('input[name="allocationStartDate"]').val(startTime);
                                        $(that.element).find('input[name="allocationEndDate"]').val(endTime);
                                    }else{
                                        $(that.element).find('input[name="myExpStartDate"]').val(startTime);
                                        $(that.element).find('input[name="myExpEndDate"]').val(endTime);
                                    }

                                    that.getData(1);

                                    S_dialog.close($(dialogEle));
                                });
                                $(dialogEle).find('button[data-action="clearTimeInput"]').off('click').on('click',function () {
                                    $(dialogEle).find('input').val('');
                                });
                                $(dialogEle).find('i.fa-calendar').off('click').on('click',function () {
                                    $(this).closest('.input-group').find('input').focus();
                                });

                            });
                        });

                        break;
                    case 'filterApproveStatus': //状态
                    case 'filterAllocationStatus': //拨款情况
                    case 'filterExpType': //报销类型
                    case 'filterTheOrg'://所在组织

                        var currCheckValue = '',selectList = [];
                        if(id=='filterApproveStatus'){
                            currCheckValue = $(that.element).find('input[name="approveStatus"]').val()
                            selectList = [
                                {fieldName:'全部',fieldValue:''},
                                {fieldName:'待审批',fieldValue:'0'},
                                {fieldName:'审批中',fieldValue:'5'},
                                {fieldName:'已完成',fieldValue:'1'},
                                {fieldName:'已退回',fieldValue:'2'}
                            ]
                        }else if(id=='filterAllocationStatus'){
                            currCheckValue = $(that.element).find('input[name="allocationStatus"]').val()
                            selectList = [
                                {fieldName:'全部',fieldValue:''},
                                {fieldName:'未拨款',fieldValue:'0'},
                                {fieldName:'已拨款',fieldValue:'1'}
                            ]
                        }else if(id=='filterExpType'){
                            currCheckValue = $(that.element).find('input[name="expType"]').val()
                            selectList = [
                                {fieldName:'全部',fieldValue:''},
                                {fieldName:'费用申请',fieldValue:'2'},
                                {fieldName:'报销申请',fieldValue:'1'}
                            ]
                        }else if(id=='filterTheOrg'){
                            currCheckValue = $(that.element).find('input[name="applyCompanyName"]').val();
                            selectList.push({fieldName:'全部',fieldValue:''});

                            if(that._companyListBySelect!=null && that._companyListBySelect.length>0){
                                $.each(that._companyListBySelect, function (i, item) {
                                    selectList.push({fieldValue: item.companyName, fieldName: item.companyName});
                                });
                            }
                        }
                        if(currCheckValue!=''){
                            $this.closest('th').find('.icon-filter i').addClass('fc-v1-blue');
                            $this.closest('th').find('.icon-filter').show();
                        }

                        var iHtml = template('m_filterableField/m_filter_select',{
                            currCheckValue:currCheckValue,
                            selectList:selectList
                        });
                        var iTextObj = iHtml.getTextWH();
                        var iWHObj = setDialogWH(iTextObj.width,iTextObj.height);

                        $this.on('click',function () {
                            S_dialog.dialog({
                                contentEle: 'dialogOBox',
                                ele:id,
                                lock: 2,
                                align: 'bottom right',
                                quickClose:true,
                                noTriangle:true,
                                width: iWHObj.width,
                                height:iWHObj.height,
                                tPadding: '0px',
                                url: rootPath+'/assets/module/m_common/m_dialog.html'

                            },function(d){//加载html后触发

                                var dialogEle = 'div[id="content:'+d.id+'"] .dialogOBox';
                                $(dialogEle).html(iHtml);

                                $(dialogEle).find('.dropdown-menu a').on('click',function () {

                                    var val = $(this).attr('data-state-no');
                                    if(id=='filterApproveStatus'){
                                        $(that.element).find('input[name="approveStatus"]').val(val);
                                    }else if(id=='filterAllocationStatus'){
                                        $(that.element).find('input[name="allocationStatus"]').val(val);
                                    }else if(id=='filterExpType'){
                                        $(that.element).find('input[name="expType"]').val(val);
                                    }else if(id=='filterTheOrg'){
                                        $(that.element).find('input[name="applyCompanyName"]').val(val);
                                    }

                                    that.getData(1);
                                    S_dialog.close($(dialogEle));
                                });
                            });
                        });

                        break;
                }

            });
        }
        //排序
        , sortActionClick:function () {
            var that = this;
            $(that.element).find('th[data-action="sort"]').each(function () {

                var $this = $(this);
                var sortType = $this.attr('data-sort-type');

                switch(sortType){
                    case 'allocationDate'://立项时间
                        var sortAllocationDate = $(that.element).find('input[name="sortAllocationDate"]').val();
                        var sortClass = '';
                        if(sortAllocationDate=='0'){
                            sortClass = 'sorting_asc';
                        }else if(sortAllocationDate=='1'){
                            sortClass = 'sorting_desc';
                        }else{
                            sortClass = 'sorting';
                        }
                        $this.removeClass().addClass(sortClass);
                        $this.off('click').on('click',function (e) {
                            if($this.hasClass('sorting')||$this.hasClass('sorting_asc')){
                                $(that.element).find('input[name="sortAllocationDate"]').val('1');
                            }
                            else if($this.hasClass('sorting_desc')){
                                $(that.element).find('input[name="sortAllocationDate"]').val('0');
                            }
                            that.getData(1);
                            e.stopPropagation();
                            return false;
                        });
                        break;

                }

            });
        }
        //时间验证
        , saveAgreeToGrant_validate: function () {
            var that = this;
            $('form.agreeToGrantForm').validate({
                rules: {
                    allocationDate: 'required'
                },
                messages: {
                    allocationDate: '请选择时间！'
                }
            });
        }
        //原因不为空验证
        , saveSendBack_validate: function () {
            var that = this;
            $('form.sendBackForm').validate({
                rules: {
                    sendBackReason: 'required'
                },
                messages: {
                    sendBackReason: '请输入退回原因！'
                }
            });
        }
    });

    $.fn[pluginName] = function (options) {
        return this.each(function () {
            // if (!$.data(this, "plugin_" + pluginName)) {
            $.data(this, "plugin_" +
                pluginName, new Plugin(this, options));
            // }
        });
    };

})(jQuery, window, document);

/**
 * 报销类别选择
 * Created by wrb on 2016/12/7.
 */
;(function ($, window, document, undefined) {

    "use strict";
    var pluginName = "m_expTypeSelect",
        defaults = {
            delButtonType:0,//当有默认delButtonType==1时，则把清除按钮去掉
            parentTarget:'',//当有默认targetP时，则主要用于我的报销
            expTypeThis:null,//当有expTypeName时
            callBack1:null
        };

    // The actual plugin constructor
    function Plugin(element, options) {
        this.element = element;
        this.settings = $.extend({}, defaults, options);
        this._defaults = defaults;
        this._name = pluginName;
        this.init();
    }

    // Avoid Plugin.prototype conflicts
    $.extend(Plugin.prototype, {
        init: function () {
            var that = this;
            that.getExpData();
        }
        //加载基本数据
        ,getExpData: function () {
            var that=this;
            var option  = {};
            option.url = restApi.url_getExpTypeList;
            option.postData={};
            m_ajax.postJson(option,function (response) {
                if(response.code=='0'){
                    var targetP = $('.expTypeTd');
                    if(that.settings.parentTarget!=null && that.settings.parentTarget!=''){
                        targetP = $(that.settings.parentTarget + ' .expTypeTd');//当有默认targetP时，则给加上targetP选择器
                    }else{
                        targetP = $('.expTypeTd');
                    }
                    var html = template('m_finance/m_expTypeSelect',{expTypeList:response.data});
                    targetP.html(html);
                    if(that.settings.delButtonType==1){//当有默认delButtonType==1时，则把清除按钮去掉
                        $('.typeNameArea').find('a[data-action="deleteAll"]').remove();
                        targetP.find('.thumbnail').find('a[data-action="firstItem"]').addClass('no-hover');
                    }
                    if(that.settings.expTypeThis){//当有默认expTypeName时，则让表单默认为expTypeName
                        var attrObj = that.settings.expTypeThis;
                        attrObj.i = targetP.parents('tr').attr('target');
                        targetP.find('input').val(that.settings.expTypeThis.expTypeName);
                        that.settings.callBack2 (attrObj,that.settings.expSumFilterData);
                    }
                    that.bindClickFun(targetP);
                }else {
                    S_dialog.error(response.info);
                }
            });
        }
        //给select表单里的所有可点击按钮添加点击事件
        ,bindClickFun:function(targetP){
            var that = this;
            //给类别的input表单添加点击事件
            targetP.find('input[data-action="collectExpType"]').bind('click',function(event){
                var $this = $(this);
                $('.typeNameArea').each(function(){
                    if($(this).prev('input')[0]!=$this[0]){
                        $(this).addClass($(this).is('.hide')?'':'hide');
                    }
                });
                if($(this).next('.typeNameArea').is('.hide')){
                    $(this).next('.typeNameArea').removeClass('hide');
                }else{
                    $(this).next('.typeNameArea').addClass('hide');
                }
                stopPropagation(event);
            });
            //给类别的下拉选项添加选择事件
            targetP.find('.typeNameArea a[data-action]').each(function(){
                var action = $(this).attr('data-action');
                $(this).bind('click',function(event){
                    var attrObj = {};
                    if(action=='deleteAll'){//清除按钮
                        $(this).parents('.expTypeTd').find('input[data-action="collectExpType"]').val('');
                        attrObj.expName = '';
                        attrObj.expPName = '';
                        attrObj.expAllName = '';
                        attrObj.expType = '';
                        attrObj.expParentType = '';
                    }
                    else if(action=='firstItem' && !(that.settings.parentTarget==''||that.settings.parentTarget==null)){//父类别不可选择时：我的报销页面里
                        return false;
                    }
                    else if(action=='firstItem'){//选择父类别
                        attrObj.expName = '';
                        attrObj.expPName = $(this).attr('name');
                        attrObj.expAllName = '';
                        attrObj.expType = '';
                        attrObj.expParentType = $(this).attr('id');
                        $(this).parents('.expTypeTd').find('input[data-action="collectExpType"]').val(attrObj.expPName);
                    }
                    else{//选择子类别
                        attrObj.expName = $(this).attr('name');
                        attrObj.expPName = '';
                        attrObj.expAllName = $(this).attr('parent-name')+'-'+$(this).attr('name');
                        attrObj.expType = $(this).attr('id');
                        attrObj.expParentType = '';
                        var expTypeName = $(this).attr('parent-name')+'('+$(this).attr('name')+')';
                        $(this).parents('.expTypeTd').find('input[data-action="collectExpType"]').val(expTypeName);
                    }
                    $(this).parents('.typeNameArea').addClass('hide');
                    if(that.settings.callBack1!=null){
                        attrObj.i = $(this).parents('tr').attr('target');
                        return that.settings.callBack1 (attrObj,that.settings.expSumFilterData);
                    }
                    event.stopPropagation();
                });

            });

        }


    });

    $.fn[pluginName] = function (options) {
        return this.each(function () {
            // if (!$.data(this, "plugin_" + pluginName)) {
                $.data(this, "plugin_" +
                    pluginName, new Plugin(this, options));
            // }
        });
    };

})(jQuery, window, document);

/**
 * 财务类别设置
 * Created by wrb on 2016/12/7.
 */
;(function ($, window, document, undefined) {

    "use strict";
    var pluginName = "m_expTypeSetting",
        defaults = {
        };

    // The actual plugin constructor
    function Plugin(element, options) {
        this.element = element;

        this.settings = $.extend({}, defaults, options);
        this._defaults = defaults;
        this._name = pluginName;
        this.init();
    }

    // Avoid Plugin.prototype conflicts
    $.extend(Plugin.prototype, {
        init: function () {
            var that = this;
            that.initCategoryList();
        }
        //获取数据并生成页面
        ,initCategoryList: function () {
            var that = this;
            var option = {};
            option.url = restApi.url_expCategory;
            m_ajax.get(option,function (response) {
                if(response.code=='0'){
                    var expTypeList = response.data.expTypeList;
                    var html = template('m_finance/m_expTypeSetting',{expTypeList:expTypeList});
                    $(that.element).html(html);
                    that.addActionClick(expTypeList);
                }else {
                    S_dialog.error(response.info);
                }

            });
        }
        //添加点击事件
        ,addActionClick:function(expTypeList){
            var that=this;
            $('a.editExpButton').each(function(){
                var action = $(this).attr('data-action');
                $(this).bind('click',function(event){
                    var options = {};
                    var i = action.substr(action.length-1,1);
                    options.expTypeList = expTypeList;
                    options.expTypeData = expTypeList[i];
                    $(that.element).m_expTypeSetting_edit(options);
                    return false;
                });
            });

        }


    });

    $.fn[pluginName] = function (options) {
        return this.each(function () {
            // if (!$.data(this, "plugin_" + pluginName)) {
                $.data(this, "plugin_" +
                    pluginName, new Plugin(this, options));
            // }
        });
    };

})(jQuery, window, document);

/**
 * 财务类别设置-编辑
 * Created by wrb on 2016/12/7.
 */
;(function ($, window, document, undefined) {

    "use strict";
    var pluginName = "m_expTypeSetting_edit",
        defaults = {
            expTypeData:null,
            expTypeList:null
        };

    // The actual plugin constructor
    function Plugin(element, options) {
        this.element = element;

        this.settings = $.extend({}, defaults, options);
        this._defaults = defaults;
        this._name = pluginName;
        this.init();
    }

    // Avoid Plugin.prototype conflicts
    $.extend(Plugin.prototype, {
        init: function () {
            var that = this;
            that.initThisCategoryList();
        }
        //获取数据并生成编辑页面
        ,initThisCategoryList: function () {
            var that = this;
            var $data = {};
            $data.expTypeData = that.settings.expTypeData;
            var html = template('m_finance/m_expTypeSetting_edit',$data);
            $('#expTypeSetting #expTypeMainContent').html(html);
            that.bindClickFun($data.expTypeData);

        }
        //刷新页面
        ,refeshPage:function () {
            var that = this;
            $('#content-right #content-box').m_expTypeSetting();
        }
        //给按钮绑定事件
        ,bindClickFun:function(data){
            var that = this;
            var deleteExpTypeList = [];
            $(that.element).find('a[data-action]').each(function(){
                var action = $(this).attr('data-action');
                $(this).off('click').bind('click',function(){

                    switch (action){
                        case 'categoryDelete'://删除按钮
                            var id = $(this).parents('tr').attr('id');
                            if($(this).closest('tbody').find('tr.categoryInput').length==1){
                                return S_toastr.warning('类别不能少于一条！');
                            }
                            $.each(data.child,function(i,item){
                                if(item.id!='' && item.id!=null && item.id == id){
                                    deleteExpTypeList.push(item);
                                }
                            });
                            $.each(deleteExpTypeList,function(j,items){
                                if(items.id!='' && items.id!=null && items.id == id) {
                                    data.child.splice(data.child.indexOf(items), 1);
                                }
                            });
                            $(this).parents('.categoryInput[id="'+id+'"]').remove();
                            return false;
                            break;
                        case 'cancelEditType'://取消按钮
                            that.refeshPage();
                            return false;
                            break;
                        case 'saveEditType'://保存按钮
                            var newTr = $('.categorySettingOBox tbody').find('tr[id]');
                            newTr.each(function(){
                                var newobj = {};
                                var $this = $(this);
                                var id = $(this).attr('id');
                                if(data.child && data.child.length>0){
                                    $.each(data.child,function(j,item){
                                        if(item.id==id){
                                            data.child[j].name = $this.find('input[name="categoryName"]').val();
                                            data.child[j].expTypeMemo = $this.find('input[name="categoryMemo"]').val();
                                        }
                                    })
                                }
                                if(id=='newTr'){
                                    var check = true;
                                    newobj.id=null;
                                    newobj.name = $this.find('input[name="categoryName"]').val();
                                    newobj.expTypeMemo = $this.find('input[name="categoryMemo"]').val();
                                    $.each(data.child,function(i,item){
                                        if((item.name==newobj.name)||newobj.name==''){
                                            return check = false;
                                        }
                                    });

                                    if(check){
                                        data.child.push(newobj);
                                    }
                                }
                            });
                            var option  = {};
                            option.url = restApi.url_expCategory;

                            var ExpTypeOutDTO={};
                            var expTypeList=that.settings.expTypeList;
                            expTypeList[expTypeList.indexOf(that.settings.expTypeData)]=data;
                            ExpTypeOutDTO.deleteExpTypeList=deleteExpTypeList;
                            ExpTypeOutDTO.expTypeDTOList=expTypeList;
                            option.postData=ExpTypeOutDTO;
                            if(that.validateCategoryName(data)){
                                m_ajax.postJson(option,function (response) {
                                    if(response.code=='0'){
                                        S_toastr.success('保存成功');
                                        that.refeshPage();
                                    }else {
                                        S_dialog.error(response.info);
                                    }

                                })
                            }
                            return false;
                            break;
                    }

                });
            });

            $('div[data-action="addList"]').bind('click',function(){
                var i = $('.categorySettingOBox tbody tr').length;
                var a = $('.categorySettingOBox tbody').find('tr').eq(i-2).clone(true);

                a.find('input[name="categoryName"]').val('');
                a.find('input[name="categoryMemo"]').val('');
                a.attr('id','newTr');
                $('.addList').before(a);
            });
        }
        //验证类别名称
        ,validateCategoryName:function(data){
            var errors = [];
            $('.categorySettingOBox tr.categoryInput input[name="categoryName"]').each(function(){
                var categoryName = $(this).val();
                var j = $(this).parents('tr.categoryInput').prevAll().length;
                if(categoryName=='' || categoryName==null){
                    errors.push('类别名称不能为空！');
                }
                if(data.child && data.child.length>0){
                    $.each(data.child,function(i,item){
                        if(i!=j){
                            if(item.name == categoryName){
                                errors.push('类别名称不能重复！');
                                return ;
                            }
                        }
                    });
                }
            });
            if(errors.length>0){
                S_toastr.warning(errors[0]);
                return false;
            }else{
                return true;
            }
        }
    });

    $.fn[pluginName] = function (options) {
        return this.each(function () {
            // if (!$.data(this, "plugin_" + pluginName)) {
                $.data(this, "plugin_" +
                    pluginName, new Plugin(this, options));
            // }
        });
    };

})(jQuery, window, document);

/**
 * 费用录入
 * Created by wrb on 2017/11/29.
 */
;(function ($, window, document, undefined) {

    "use strict";
    var pluginName = "m_feeEntry",
        defaults = {
        };

    // The actual plugin constructor
    function Plugin(element, options) {
        this.element = element;

        this.settings = $.extend({}, defaults, options);
        this._defaults = defaults;
        this._name = pluginName;
        this._currentExpFixedData = null;//当前费用数据
        this._selectedOrg = null;//当前组织筛选-选中组织对象
        this.init();
    }

    // Avoid Plugin.prototype conflicts
    $.extend(Plugin.prototype, {
        init: function () {
            var that = this;
            var html = template('m_finance/m_feeEntry',{});
            $(that.element).html(html);
            var option = {};
            option.$type = 1;
            option.$selectedCallBack = function (data) {
                that._selectedOrg = data;
                that.renderMonthList(null);
            };
            option.$renderCallBack = function () {
            };
            $(that.element).find('#selectOrg').m_org_chose_byTree(option);

        }
        //根据月份渲染费用数据
        , renderFeeEntry:function (expDate) {
            var that = this;
            var option  = {};
            if(expDate==''){
                var dateStr = getNowDate();
                expDate = moment(dateStr).format('YYYY/MM');
            }
            var companyId = that._selectedOrg.id;
            option.url = restApi.url_getExpFixedByExpDate+'/'+expDate+'/'+companyId;
            m_ajax.get(option,function (response) {
                if(response.code=='0'){
                    that._currentExpFixedData = response.data;
                    var html = template('m_finance/m_feeEntry_content',{expFixedData:response.data});
                    $(that.element).find('#right-box').html(html);
                    that.bindSaveExpFixed();
                    that.saveFee_validate();
                    that.leftBoxHeightResize();
                    $(window).resize(function () {
                        var t = setTimeout(function () {
                            that.leftBoxHeightResize();
                            clearTimeout(t);
                        });
                    });
                }else {
                    S_dialog.error(response.info);
                }
            });

            //WdatePicker({eCont:'div1',dateFmt:'yyyy',onpicked:function(dp){alert('你选择的日期是:'+dp.cal.getDateStr())}})
        }
        //渲染月份
        , renderMonthList:function (year,expDate) {
            var that = this;
            var option  = {};
            var dateStr = new Date().getFullYear();
            if(year==null){
                year = dateStr;
            }
            var companyId = that._selectedOrg.id;
            option.url = restApi.url_getExpAmountByYear+'/'+year+'/'+companyId;
            m_ajax.get(option,function (response) {
                if(response.code=='0'){

                    if(expDate==null && response.data!=null && response.data.length>0){
                        expDate = response.data[0].expDate;
                    }
                    var html = template('m_finance/m_feeEntry_monthList',{
                        monthList:response.data,
                        currentYear :dateStr,
                        currentExpDate:expDate,
                        selectedYear:year
                    });
                    $(that.element).find('#left-box').html(html);
                    that.renderFeeEntry(expDate);
                    that.bindGetExpFixed();
                    that.bindYearSwitch();


                }else {
                    S_dialog.error(response.info);
                }
            });
        }
        //树菜单高度自适应
        , leftBoxHeightResize:function () {
            var that = this;
            var pageWrapperMH = $('#page-wrapper').css('min-height');
            var pageWrapperH = $('#page-wrapper').height();
            if(pageWrapperH-110>parseInt(pageWrapperMH)){
                $(that.element).find('#left-box').css('height',(pageWrapperH-110)+'px');
            }else{
                $(that.element).find('#left-box').css('height',pageWrapperMH);
            }

        }
        // 绑定保存费用金额
        , bindSaveExpFixed:function () {
            var that = this;
            $(that.element).find('#right-box').find('a[data-action="saveExpFixed"]').off('click').on('click',function () {


                var flag = $(that.element).find('form#expFixedForm').valid();
                if (!flag) {
                    return false;
                }else {
                    var option  = {};
                    option.classId = '#content-right';
                    option.postData = {};
                    option.postData.expDate = that._currentExpFixedData.expDate;
                    option.postData.fixedList = [];

                    $(that.element).find('#right-box').find('input[name="expAmount"]').each(function () {

                        var $this = $(this);
                        var id = $this.attr('id');
                        var expType = $this.attr('data-exptype');
                        var val = $this.val();
                        option.postData.fixedList.push({
                            id:id==''?null:id,
                            expType:expType,
                            expAmount:val,
                            expTypeParentName:$this.attr('data-parent-name'),
                            expTypeName:$this.attr('data-name'),
                            seq:$this.attr('data-seq')
                        })

                    });
                    option.postData.companyId = that._selectedOrg.id;
                    option.url = restApi.url_saveExpFixedByExpDate;
                    m_ajax.postJson(option,function (response) {
                        if(response.code=='0'){
                            S_toastr.success('保存成功');

                            var year = that._currentExpFixedData.expDate;
                            year = year.substring(0,4);
                            that.renderMonthList(year,that._currentExpFixedData.expDate);
                        }else {
                            S_dialog.error(response.info);
                        }
                    });
                }
            });
        }
        //根据月份查费用数据
        , bindGetExpFixed:function () {

            var that = this;
            $(that.element).find('#left-box div[data-action="getExpFixed"]').on('click',function () {
                var expDate = $(this).attr('data-expdate');

                that.renderFeeEntry(expDate);
                $(this).addClass('active').siblings('div').removeClass('active');

            });
        }
        //年份切换事件
        , bindYearSwitch:function () {
            var that = this;
            $(that.element).find('#left-box a[data-action]').off('click').on('click',function () {
                var $this = $(this);
                var dataAction = $this.attr('data-action');
                var selectedYear = $this.closest('DIV').find('span[data-type="selectedYear"]').text();
                switch (dataAction){
                    case 'prevYear':
                        that.renderMonthList(selectedYear-0-1);
                        break;
                    case 'nextYear':
                        that.renderMonthList(selectedYear-0+1);
                        break;
                }
            })
        }
        //金额比例验证
        , saveFee_validate:function(){
            var that = this;
            $(that.element).find('form#expFixedForm').validate({
                rules: {
                    expAmount:{
                        number:true,
                        ckFee:true,//验证数字
                        over10:true//整数部分是否超过32位
                    }
                },
                messages: {
                    expAmount:{
                        number:'请输入有效数字',
                        minNumber:'请输入大于0的数字!',
                        over10:'对不起，您的操作超出了系统允许的范围。合同总金额的单位为“万元”',
                        ckFee:'请保留小数点后两位!'
                    }
                },
                errorPlacement: function (error, element) { //指定错误信息位置

                    error.appendTo(element.closest('td'));
                }
            });
            $.validator.addMethod('ckFee', function(value, element) {
                var isOk = true;
                if(value!='' && !regularExpressions.numberWithPoints_2.test(value)){
                    isOk = false;
                }
                return  isOk;

            }, '请保留小数点后两位!');
            $.validator.addMethod('over10', function(value, element) {
                value = $.trim(value);
                var isOk = true;
                if(parseInt(value).toString().length>32){
                    isOk = false;
                }
                return  isOk;

            }, '对不起，您的操作超出了系统允许的范围。合同总金额的单位为“元”');
        }

    });

    $.fn[pluginName] = function (options) {
        return this.each(function () {
            // if (!$.data(this, "plugin_" + pluginName)) {
            $.data(this, "plugin_" +
                pluginName, new Plugin(this, options));
            // }
        });
    };

})(jQuery, window, document);

/**
 * 收支类别设置
 * Created by wrb on 2017/11/29.
 */
;(function ($, window, document, undefined) {

    "use strict";
    var pluginName = "m_feeEntry_settings",
        defaults = {
        };

    // The actual plugin constructor
    function Plugin(element, options) {
        this.element = element;

        this.settings = $.extend({}, defaults, options);
        this._defaults = defaults;
        this._name = pluginName;
        this._currentExpFixedData = null;//当前费用数据
        this._selectedOrg = null;//当前选中组织
        this.init();
    }

    // Avoid Plugin.prototype conflicts
    $.extend(Plugin.prototype, {
        init: function () {
            var that = this;
            var html = template('m_finance/m_feeEntry_settings',{});
            $(that.element).html(html);

            var option = {};
            option.$type = 1;
            option.$selectedCallBack = function (data) {
                that._selectedOrg = data;
                that.renderContent();
            };
            option.$renderCallBack = function () {
                that.initSelect2();
            };
            $(that.element).find('#selectOrg').m_org_chose_byTree(option);

        }
        , initSelect2:function () {
            var that = this;
            $(that.element).find('select[name="payType"]').select2({
                allowClear: false,
                language: "zh-CN",
                minimumResultsForSearch: -1
            });
            $(that.element).find('select[name="payType"]').on("change", function (e) {
                that.renderContent();
            })
        }
        //渲染右边内容
        , renderContent:function () {
            var that = this;
            var payType = $(that.element).find('select[name="payType"]').val();
            if(payType==''){
                payType = null;
            }
            var option  = {};
            option.classId= '#content-box';
            option.url = restApi.url_getExpFixTypeList;
            option.postData = {
                companyId : that._selectedOrg.id,
                payType: payType
            };
            m_ajax.postJson(option,function (response) {
                if(response.code=='0'){

                    /*var feeEntryFieldList = [
                        {
                            "id": "c0946ad1713244f1a4736462989223b3",
                            "token": null,
                            "appOrgId": null,
                            "accountId": null,
                            "currentCompanyId": null,
                            "name": "其他业务收入",
                            "child": [
                                {
                                    "code": "ztfy",
                                    "companyId": "d18bda5241da402c965923aca6554fb0",
                                    "expTypeMemo": "效果图设计制作费，多媒体制作费，动画制作费，绘图打印费",
                                    "id": "1b033e48b5004682932954dfccb4530e",
                                    "name": "制图费用",
                                    "pid": "c0946ad1713244f1a4736462989223b3"
                                }
                            ]
                        },
                        {
                            "id": "c0946ad1713244f1a4736462989223b1",
                            "token": null,
                            "appOrgId": null,
                            "accountId": null,
                            "currentCompanyId": null,
                            "name": "直接人工成本",
                            "child": [
                                {
                                    "code": "ztfy",
                                    "companyId": "d18bda5241da402c965923aca6554fb0",
                                    "expTypeMemo": "11",
                                    "id": "1b033e48b5004682932954dfccb45311",
                                    "name": "员工工资",
                                    "pid": "c0946ad1713244f1a4736462989223b1"
                                },
                                {
                                    "code": "ztfy",
                                    "companyId": "d18bda5241da402c965923aca6554fb0",
                                    "expTypeMemo": "22",
                                    "id": "1b033e48b5004682932954dfccb45322",
                                    "name": "五险一金",
                                    "pid": "c0946ad1713244f1a4736462989223b1"
                                },
                                {
                                    "code": "ztfy",
                                    "companyId": "d18bda5241da402c965923aca6554fb0",
                                    "expTypeMemo": "33",
                                    "id": "1b033e48b5004682932954dfccb45333",
                                    "name": "员工奖金",
                                    "pid": "c0946ad1713244f1a4736462989223b1"
                                }
                            ]
                        }
                    ];*/
                    var feeEntryFieldList = response.data;
                    var html = template('m_finance/m_feeEntry_settings_content',{feeEntryFieldList:feeEntryFieldList});
                    $(that.element).find('#right-box').html(html);

                    that.dealPidCheck();
                    that.initItemICheck();
                    that.initBtnHover();
                    that.bindActionClick();

                }else {
                    S_dialog.error(response.info);
                }
            });

        }
        //初始ICheck
        , initItemICheck:function () {
            var that = this;
            var ifChecked = function (e) {
                var dataId = $(this).attr('data-id');
                var dataPid = $(this).attr('data-pid');

                if(dataPid==''){//根目录
                    $(that.element).find('input[name="itemCk"][data-pid="'+dataId+'"]').not(':disabled').prop('checked',true);
                    $(that.element).find('input[name="itemCk"][data-pid="'+dataId+'"]').not(':disabled').iCheck('update');

                }else{
                    var childLen = $(that.element).find('input[name="itemCk"][data-pid="'+dataPid+'"]').not(':disabled').length;
                    var childCheckedLen = $(that.element).find('input[name="itemCk"][data-pid="'+dataPid+'"]:not(:disabled):checked').length;
                    if(childLen==childCheckedLen && childLen!=0){
                        $(that.element).find('input[name="itemCk"][data-id="'+dataPid+'"]').not(':disabled').prop('checked',true);
                        $(that.element).find('input[name="itemCk"][data-id="'+dataPid+'"]').not(':disabled').iCheck('update');
                    }else{
                        $(that.element).find('input[name="itemCk"][data-id="'+dataPid+'"]').not(':disabled').prop('checked',false);
                        $(that.element).find('input[name="itemCk"][data-id="'+dataPid+'"]').not(':disabled').iCheck('update');
                    }
                }
                that.bindSaveFeeField();
            };
            var ifUnchecked = function (e) {
                var dataId = $(this).attr('data-id');
                var dataPid = $(this).attr('data-pid');

                if(dataPid==''){//根目录
                    $(that.element).find('input[name="itemCk"][data-pid="'+dataId+'"]').not(':disabled').prop('checked',false);
                    $(that.element).find('input[name="itemCk"][data-pid="'+dataId+'"]').not(':disabled').iCheck('update');
                }else{

                    $(that.element).find('input[name="itemCk"][data-id="'+dataPid+'"]').not(':disabled').prop('checked',false);
                    $(that.element).find('input[name="itemCk"][data-id="'+dataPid+'"]').not(':disabled').iCheck('update');
                }
                that.bindSaveFeeField();
            };
            $(that.element).find('input[name="itemCk"]').iCheck({
                checkboxClass: 'icheckbox_minimal-green',
                radioClass: 'iradio_minimal-green'
            }).on('ifUnchecked.s', ifUnchecked).on('ifChecked.s', ifChecked);
        }
        //子项全选，父项选中
        , dealPidCheck:function () {
            var that = this;
            $(that.element).find('input[name="itemCk"][data-pid=""]').each(function () {
                var dataId = $(this).attr('data-id');

                var childDisableLen = $(that.element).find('input[name="itemCk"][data-pid="'+dataId+'"]:disabled:checked').length;
                var childCheckedLen = $(that.element).find('input[name="itemCk"][data-pid="'+dataId+'"]:not(:disabled):checked').length;
                var childLen = $(that.element).find('input[name="itemCk"][data-pid="'+dataId+'"]').not(':disabled').length;
                var allChildLen = $(that.element).find('input[name="itemCk"][data-pid="'+dataId+'"]').length;

                if(childCheckedLen==childLen && childLen!=0){
                    $(this).prop('checked',true);
                    $(this).iCheck('update');
                }
                if(childLen == 0 || allChildLen==0){
                    $(this).attr('disabled','disabled');
                }
            });

        }
        , bindSaveFeeField:function () {
            var that = this;
            var checkedList = [];
            $(that.element).find('input[name="itemCk"]:checked').each(function () {
                var dataId = $(this).attr('data-id');
                var dataPid = $(this).attr('data-pid');
                if(dataPid!=undefined && dataPid!=''){
                    checkedList.push(dataId);
                }
            });

            var option  = {};
            option.url = restApi.url_saveExpTypeShowStatus;
            option.postData = {
                payType:$(that.element).find('select[name="payType"]').val(),
                companyId : that._selectedOrg.id,
                idList:checkedList
            };
            m_ajax.postJson(option,function (response) {
                if(response.code=='0'){
                    S_toastr.success('保存成功！');
                }else {
                    S_dialog.error(response.info);
                }
            });

        }
        //编辑按钮
        , initBtnHover:function () {
            var that = this;
            $(that.element).find('a[data-action="editName"],a[data-action="delFeeField"]').each(function () {
                var $this = $(this);
                $this.closest('td').hover(function () {
                    $this.show();
                },function () {
                    $this.hide();
                });
            });
        }
        //事件绑定
        , bindActionClick:function () {
            var that = this;
            $(that.element).find('a[data-action]').off('click').on('click',function (e) {
                var $this = $(this),dataAction = $this.attr('data-action');
                var dataId = $this.attr('data-id');
                var dataPid = $this.attr('data-pid');
                var dataName = $this.attr('data-name');
                var dataCategoryType = $this.attr('data-category-type');
                switch (dataAction){
                    case 'editName'://编辑费用类型
                        S_dialog.dialog({
                            title: '编辑费用类型',
                            contentEle: 'dialogOBox',
                            lock: 3,
                            width: '350',
                            height:'90',
                            tPadding:'0',
                            url: rootPath+'/assets/module/m_common/m_dialog.html',
                            ok:function(){

                                if ($('form.addFeeFieldForm').valid()) {

                                    var feeField = $('form.addFeeFieldForm input[name="feeField"]').val();
                                    //var categoryType = $('form.addFeeFieldForm select[name="categoryType"]').val();
                                    var option  = {};
                                    option.url = restApi.url_saveExpFixCategory;
                                    option.postData = {
                                        pid:dataPid,
                                        id:dataId,
                                        //categoryType:categoryType,
                                        name:feeField
                                    };
                                    m_ajax.postJson(option,function (response) {
                                        if(response.code=='0'){
                                            S_toastr.success('操作成功');
                                            that.renderContent();
                                        }else {
                                            S_dialog.error(response.info);
                                        }
                                    });

                                } else {
                                    return false;
                                }

                            },
                            cancelText:'取消',
                            cancel:function(){
                                //$('form.addFeeFieldForm select[name="categoryType"]').select2('destroy');
                            }
                        },function(d){//加载html后触发

                            var $dialogEle = $('div[id="content:'+d.id+'"] .dialogOBox');
                            var html = template('m_finance/m_feeEntry_settings_add',{});
                            $dialogEle.html(html);

                            /*$dialogEle.find('select[name="categoryType"]').select2({
                                allowClear: false,
                                language: "zh-CN",
                                minimumResultsForSearch: -1
                            });*/

                            $('form.addFeeFieldForm input[name="feeField"]').val(dataName);
                            //$('form.addFeeFieldForm select[name="categoryType"]').val(dataCategoryType).trigger('change');

                            that.saveFeeField_validate();
                        });
                        e.stopPropagation();
                        return false;
                        break;
                    case 'addFeeField'://新增费用类型
                        S_dialog.dialog({
                            title: '新增费用类型',
                            contentEle: 'dialogOBox',
                            lock: 3,
                            width: '350',
                            height:'90',
                            tPadding:'0',
                            url: rootPath+'/assets/module/m_common/m_dialog.html',
                            ok:function(){

                                if ($('form.addFeeFieldForm').valid()) {

                                    var feeField = $('form.addFeeFieldForm input[name="feeField"]').val();
                                    //var categoryType = $('form.addFeeFieldForm select[name="categoryType"]').val();
                                    var option  = {};
                                    option.url = restApi.url_saveExpFixCategory;
                                    option.postData = {
                                        pid:$this.attr('data-id'),
                                        //categoryType:categoryType,
                                        name:feeField
                                    };
                                    m_ajax.postJson(option,function (response) {
                                        if(response.code=='0'){
                                            S_toastr.success('操作成功');
                                            that.renderContent();
                                        }else {
                                            S_dialog.error(response.info);
                                        }
                                    });

                                } else {
                                    return false;
                                }
                            },
                            cancelText:'取消',
                            cancel:function(){
                                //$('form.addFeeFieldForm select[name="categoryType"]').select2('destroy');
                            }
                        },function(d){//加载html后触发

                            var $dialogEle = $('div[id="content:'+d.id+'"] .dialogOBox');
                            var html = template('m_finance/m_feeEntry_settings_add',{});
                            $dialogEle.html(html);

                            /*$dialogEle.find('select[name="categoryType"]').select2({
                                allowClear: false,
                                language: "zh-CN",
                                minimumResultsForSearch: -1
                            });*/
                            that.saveFeeField_validate();
                        });
                        e.stopPropagation();
                        return false;
                        break;
                    case 'delFeeField'://删除费用类型

                        S_swal.confirm({
                            title:'确定删除该分类子项?',
                            text:'删除后将不能恢复，确定吗？',
                            callBack:function () {
                                var option = {};
                                option.url = restApi.url_deleteExpCategory;
                                option.postData = {};
                                option.postData.id = dataId;
                                m_ajax.postJson(option, function (response) {
                                    if (response.code == '0') {
                                        S_swal.sure({
                                            title:'已删除',
                                            text:'该分类子项删除成功。',
                                            callBack:function () {
                                                that.renderContent();
                                            }
                                        });
                                    } else {
                                        S_dialog.error(response.info);
                                    }
                                });
                            }
                        });
                        break;
                }

            });
        }
        //类型不为空判断
        , saveFeeField_validate: function () {
            var that = this;
            $('form.addFeeFieldForm').validate({
                rules: {
                    feeField: {
                        required: true,
                        maxlength: 50
                    }/*,
                    categoryType:{
                        isSelected:true
                    }*/
                },
                messages: {
                    feeField: {
                        required: '请输入类型名称！',
                        maxlength: '请控制在50字符以内！'
                    }/*,
                    categoryType:{
                        isSelected:'请选择数据来源！'
                    }*/
                },
                errorPlacement: function (error, element) { //指定错误信息位置
                    error.appendTo(element.closest('.col-md-9'));
                }
            });
            $.validator.addMethod('isSelected', function(value, element) {
                var isOk = true;
                if( value==''){
                    isOk = false;
                }
                return  isOk;
            }, '请选择数据来源！');
        }
    });

    $.fn[pluginName] = function (options) {
        return this.each(function () {
            // if (!$.data(this, "plugin_" + pluginName)) {
            $.data(this, "plugin_" +
                pluginName, new Plugin(this, options));
            // }
        });
    };

})(jQuery, window, document);

/**
 * 财务设置－团队基础财务数据设置
 * Created by wrb on 2018/5/23.
 */
;(function ($, window, document, undefined) {

    "use strict";
    var pluginName = "m_finance_basic_settings",
        defaults = {
            $contentEle:null,
            $isFirstEnter:false//是否是第一次進來
        };

    // The actual plugin constructor
    function Plugin(element, options) {
        this.element = element;

        this.settings = $.extend({}, defaults, options);
        this._defaults = defaults;
        this._name = pluginName;
        this.init();
    }

    // Avoid Plugin.prototype conflicts
    $.extend(Plugin.prototype, {
        init: function () {
            var that = this;
            that.renderPage();
        }
        //初始化数据并加载模板
        ,renderPage:function () {
            var that = this;

            var option  = {};
            option.classId= '#content-box';
            option.url = restApi.url_getCompanyBalance;
            option.postData = {

            };
            m_ajax.postJson(option,function (response) {
                if(response.code=='0'){

                    var html = template('m_finance/m_finance_basic_settings',{companyDataList:response.data});
                    $(that.element).html(html);
                    that.bindEditable();

                }else {
                    S_dialog.error(response.info);
                }
            });
        }
        , bindEditable:function () {
            var that = this;
            $(that.element).find('a[data-action="xEditable"]').each(function () {
                var $this = $(this);
                var $i = $this.closest('TR').attr('data-i');
                var companyId = $this.closest('TR').attr('data-company-id');
                var dataActionType = $this.attr('data-action-type');
                var dataValue= $this.attr('data-value');
                $this.editable({//编辑
                    type: 'text',
                    mode: 'inline',
                    emptytext:'',
                    savenochange:true,
                    placeholder: '金额',
                    value: dataValue,
                    success: function(response, newValue) {
                        var $data = {};
                        $data.companyId = companyId;
                        $data.type = dataActionType;
                        $data[dataActionType] = newValue;
                        if(that.saveCompanyBalance($data)){
                            return false;
                        }
                    },
                    display: function(value, sourceData) {},
                    validate: function(value) {
                        var errTips = '';
                        var number = regularExpressions.number;
                        var numberWithPoints = regularExpressions.numberWithPoints_2;
                        if(value!=''){
                            if(!number.test(value)){
                                errTips = '请输入有效数字!';
                            }else if(!numberWithPoints.test(value)){
                                errTips = '请保留小数点后两位!';
                            }else if(parseInt(value).toString().length>32){
                                errTips = '对不起，您的操作超出了系统允许的范围。'
                            }
                        }
                        return errTips;
                    }
                });
            });
            $(that.element).find('a[data-action="editDate"]').off('click').on('click',function () {
                var $this = $(this);
                var $i = $this.closest('TR').attr('data-i');
                var companyId = $this.closest('TR').attr('data-company-id');
                var options = {};
                options.$title = '设置余额初始日期';
                options.$placement = 'right';
                options.$eleId = 'a[data-action="editDate"][data-action-type="'+$i+'"]';
                options.$isClear = false;
                options.$okCallBack = function (data) {
                    if(data==null){
                        data = '';
                    }
                    var $data = {};
                    $data.companyId = companyId;
                    $data.type = 'setBalanceDate';
                    $data.setBalanceDate = data;
                    if(that.saveCompanyBalance($data)){
                        return false;
                    }
                };
                $this.m_quickDatePicker(options);
            });
        }
        //保存
        , saveCompanyBalance:function ($data) {
            var that = this;
            var option  = {},isError = false;
            option.classId= '#content-box';
            option.async = false;
            option.url = restApi.url_saveCompanyBalance;
            option.postData = $data;
            m_ajax.postJson(option,function (response) {
                if(response.code=='0'){
                    S_toastr.success('保存成功');
                    that.renderPage();

                }else {
                    S_dialog.error(response.info);
                    isError = true;
                }
            });
            return isError;
        }


    });

    $.fn[pluginName] = function (options) {
        return this.each(function () {

            //if (!$.data(this, "plugin_" + pluginName)) {
            $.data(this, "plugin_" +
                pluginName, new Plugin(this, options));
            //}
        });
    };

})(jQuery, window, document);

/**
 * 财务设置－TAB菜单
 * Created by wrb on 2018/5/22.
 */
;(function ($, window, document, undefined) {

    "use strict";
    var pluginName = "m_finance_settings_menu",
        defaults = {
            $contentEle:null,
            $isFirstEnter:false//是否是第一次進來
        };

    // The actual plugin constructor
    function Plugin(element, options) {
        this.element = element;

        this.settings = $.extend({}, defaults, options);
        this._defaults = defaults;
        this._name = pluginName;
        this.init();
    }

    // Avoid Plugin.prototype conflicts
    $.extend(Plugin.prototype, {
        init: function () {
            var that = this;
            that.initHtmlData();
        }
        //初始化数据并加载模板
        ,initHtmlData:function () {
            var that = this;

            var option = {};
            option.classId = '#content-box';
            option.url = restApi.url_getPermissionOperator;
            option.postData = {};
            m_ajax.postJson(option,function (response) {
               if(response.code=='0'){

                   var html = template('m_finance/m_finance_settings_menu',{role:response.data});
                   $(that.element).html(html);

                   var dataAction = $(that.element).find('ul.secondary-menu-ul li:eq(0)').attr('id');
                   $(that.element).find('ul.secondary-menu-ul li[id="'+dataAction+'"]').addClass('active').siblings().removeClass('active');
                   var menuName = $(that.element).find('ul.secondary-menu-ul li[id="'+dataAction+'"] a').text();
                   $(that.element).find('ol.breadcrumb li.active strong').html(menuName);
                   that.switchPage(dataAction);
                   that.menuClickFun();

               } else{
                   S_dialog.error(response.info)
               }
            });
        }
        //菜单点击事件
        , menuClickFun:function () {
            var that = this;
            $(that.element).find('.secondary-menu-ul li').on('click',function () {
                var id = $(this).attr('id');
                $(this).addClass('active').siblings().removeClass('active');
                that.switchPage(id);
                var menuName = $(that.element).find('ul.secondary-menu-ul li[id="'+id+'"] a').text();
                $(that.element).find('.breadcrumb li.active strong').html(menuName);
            });
        }
        //切换页面
        , switchPage: function (dataAction) {
            var that = this;
            switch (dataAction) {
                case 'financeSettings'://财务类别设置
                    that.financeSettings();
                    break;
                case 'feeEntrySettings'://费用录入设置
                    that.feeEntrySettings();
                    break;
                case 'financeBasicSettings'://团队基础财务数据设置
                    that.financeBasicSettings();
                    break;
                case 'costSharingSettings'://费用均摊项设置
                    that.costSharingSettings();
                    break;
                default:
                    dataAction = 'financeSettings';
                    that.feeEntrySettings();
                    break;
            }
        }
        //财务类别设置
        , financeSettings:function () {
            var that = this;
            $(that.element).find('#content-box').m_expTypeSetting();
        }
        //费用录入设置
        , feeEntrySettings:function () {
            var that = this;
            $(that.element).find('#content-box').m_feeEntry_settings();
        }
        //团队基础财务数据设置
        , financeBasicSettings:function () {
            var that = this;
            $(that.element).find('#content-box').m_finance_basic_settings();
        }
        //团队基础财务数据设置
        , costSharingSettings:function () {
            var that = this;
            $(that.element).find('#content-box').m_costSharing_settings();
        }

    });

    $.fn[pluginName] = function (options) {
        return this.each(function () {

            //if (!$.data(this, "plugin_" + pluginName)) {
            $.data(this, "plugin_" +
                pluginName, new Plugin(this, options));
            //}
        });
    };

})(jQuery, window, document);

/**
 * 报销统计
 * Created by wrb on 2016/12/7.
 */
;(function ($, window, document, undefined) {

    "use strict";
    var pluginName = "m_reimbursementSummary",
        defaults = {
            expSumFilterData: {}//盛装报销汇总查询条件
        };

    // The actual plugin constructor
    function Plugin(element, options) {
        this.element = element;

        this.settings = $.extend({}, defaults, options);
        this._defaults = defaults;
        this._name = pluginName;
        this._companyListBySelect = null;//筛选组织
        this.init();
    }

    // Avoid Plugin.prototype conflicts
    $.extend(Plugin.prototype, {
        init: function () {
            var that = this;
            var html = template('m_finance/m_reimbursementSummary', {});
            $(that.element).html(html);
            that.getData(0);
            $('#btnCreate').off('click.createExp').on('click.createExp',function(){
                $(that.element).m_reimbursement_add();
            });
        }

        //加载基本数据
        , getData: function (type) {
            var that = this;
            var option = {};
            option.classId = 'mySummaryListBox';
            option.param = {};
            option.param.type = 1;
            if (type === 0) {
                option.param.expName = '';
                option.param.expPName = '';
                option.param.expAllName = '';
                option.param.expType = '';
                option.param.expParentType = '';
                option.param.expNo = '';
                //option.param.userId = window.currentCompanyUserId;
            } else {
                //option.param.userId = param.userId;
                //option.param.userName = param.userName;
                //option.param.departId = '';

                //option.param.approveStatus = $('input[name="approveStatus"]').val();
                option.param.startDate = $('input[name="myExpStartDate"]').val();
                option.param.endDate = $('input[name="myExpEndDate"]').val();
                option.param.expNo = $.trim($('input[name="expNo"]').val());
                //option.param.type = $.trim($('input[name="expType"]').val());

                option.param.approveStartDate = $('input[name="approveStartDate"]').val();
                option.param.approveEndDate = $('input[name="approveEndDate"]').val();

                option.param.applyUserName = $('input[name="approveUserName"]').val();
                option.param.allocationStatus = $('input[name="allocationStatus"]').val();
                option.param.allocationStartDate = $('input[name="allocationStartDate"]').val();
                option.param.allocationEndDate = $('input[name="allocationEndDate"]').val();
                option.param.applyCompanyName = $('input[name="applayCompanyName"]').val();

                option.param.allocationOrder = $('input[name="sortAllocationDate"]').val();
            }

            paginationFun({
                eleId: '#mySummary-pagination-container',
                loadingId: '#mySummaryListData',
                url: restApi.url_getExpMainPageForSummary,
                params: option.param
            }, function (response) {
                // data为ajax返回数据
                if (response.code == '0') {

                    that._companyListBySelect = response.data.companyList;
                    var $data = {};
                    $data.myDataList = response.data.data;
                    $data.expSumAmount = response.data.expSumAmount;
                    $data.financialAllocationSumAmount = response.data.financialAllocationSumAmount;
                    $data.rootPath = window.rootPath;
                    if(type!=1 && !($data.myDataList && $data.myDataList.length>0)){
                        $(that.element).find('#summary .mySummaryFilterBox').html('');
                    }
                    $data.pageIndex=$("#mySummary-pagination-container").pagination('getPageIndex');
                    $data.isFinance = window.currentRoleCodes.indexOf('project_charge_manage')>-1?1:0;
                    var html = template('m_finance/m_reimbursementSummary_list', $data);
                    $('#mySummaryListData').html(html);
                    rolesControl();
                    that.bindClickOpenShowExp($data.myDataList);
                    that.bindActionClick();
                    that.filterHover();
                    that.sortActionClick();

                    return false;
                } else {
                    S_dialog.error(response.info);
                }
            });

        }
        //打开查看报销详情
        , bindClickOpenShowExp: function (data) {//openShowExp
            var that = this;
            $('#mySummaryListData').find('tr[data-action="openShowExp"]').each(function () {
                $(this).bind('click', function (event) {
                    var i = $(this).attr('i');
                    var options = {};
                    options.expDetail = data[i];
                    options.type = 1;
                    $(this).m_showExpDetailDialog(options);
                    event.stopPropagation();
                    return false;
                });
            });
        }
        //筛选hover事件
        ,filterHover:function () {
            var that =  this;

            $(that.element).find('.mySummaryListBox  th').hover(function () {
                if( $(this).find(' .icon-filter i').hasClass('icon-shaixuan') && !$(this).find(' .icon-filter i').hasClass('fc-v1-blue')){
                    $(this).find(' .icon-filter').show();
                }
            },function () {
                if( $(this).find(' .icon-filter i').hasClass('icon-shaixuan') && !$(this).find(' .icon-filter i').hasClass('fc-v1-blue')) {
                    $(this).find(' .icon-filter').hide();
                }
            });
        }
        //绑定事件
        , bindActionClick:function () {
            var that = this;
            $('#mySummaryListData').find('a[data-action]').on('click',function (e) {

                var $this = $(this);
                var dataAction = $this.attr('data-action');
                switch (dataAction){
                    case 'agreeToGrant'://拨款
                        S_dialog.dialog({
                            title: '请选择时间',
                            contentEle: 'dialogOBox',
                            lock: 3,
                            width: '200',
                            height:'50',
                            url: rootPath+'/assets/module/m_common/m_dialog.html',
                            ok:function(){

                                if ($('form.agreeToGrantForm').valid()) {

                                    var financialDate = $('form.agreeToGrantForm input[name="allocationDate"]').val();
                                    //financialDate = moment(financialDate).format('YYYY/MM/DD');
                                    var option  = {};
                                    option.url = restApi.url_financialAllocation;
                                    option.postData = {
                                        id:$this.attr('data-id'),
                                        financialDate:financialDate
                                    };
                                    m_ajax.postJson(option,function (response) {
                                        if(response.code=='0'){
                                            S_toastr.success('操作成功');
                                            //that.init();
                                            $this.parents('td').html(moment(financialDate).format('YYYY/MM/DD'));

                                        }else {
                                            S_dialog.error(response.info);
                                        }
                                    });

                                } else {
                                    return false;
                                }
                            },
                            cancelText:'取消',
                            cancel:function(){
                            }
                        },function(d){//加载html后触发

                            var $dialogEle = $('div[id="content:'+d.id+'"] .dialogOBox');
                            var currDate = getNowDate();
                            $dialogEle.html('<form class="agreeToGrantForm"><div class="form-group text-center col-md-12 "><input class="form-control" type="text" name="allocationDate" onclick="WdatePicker()" value="'+currDate+'" readonly></div></form>');
                            that.saveAgreeToGrant_validate();
                        });
                        e.stopPropagation();
                        return false;
                        break;
                    case 'sendBack'://退回

                        S_dialog.dialog({
                            title: '退回原因',
                            contentEle: 'dialogOBox',
                            lock: 3,
                            width: '300',
                            height:'100',
                            tPadding:'0',
                            url: rootPath+'/assets/module/m_common/m_dialog.html',
                            ok:function(){

                                if ($('form.sendBackForm').valid()) {

                                    var sendBackReason = $('form.sendBackForm textarea[name="sendBackReason"]').val();
                                    var option  = {};
                                    option.url = restApi.url_financialRecallExpMain;
                                    option.postData = {
                                        id:$this.attr('data-id'),
                                        reason:sendBackReason
                                    };
                                    m_ajax.postJson(option,function (response) {
                                        if(response.code=='0'){
                                            S_toastr.success('操作成功');
                                            //that.init();
                                            $this.parents('TR').remove();
                                        }else {
                                            S_dialog.error(response.info);
                                        }
                                    });

                                } else {
                                    return false;
                                }
                            },
                            cancelText:'取消',
                            cancel:function(){
                            }
                        },function(d){//加载html后触发

                            var $dialogEle = $('div[id="content:'+d.id+'"] .dialogOBox');
                            $dialogEle.html('<form class="sendBackForm"><div class=" m-t-md col-md-12 "><textarea class="form-control" name="sendBackReason"></textarea></div></form>');
                            that.saveSendBack_validate();
                        });
                        e.stopPropagation();
                        return false;
                        break;
                }

            });
            //筛选事件
            $(that.element).find('a.icon-filter').each(function () {

                var $this = $(this);
                var id = $this.attr('id');
                switch (id){
                    case 'filterApproveUserName'://审批人
                    case 'filterExpNo': //项目编号
                        var txtVal = '',placeholder='';
                        if(id=='filterApproveUserName'){
                            txtVal = $('input[name="approveUserName"]').val();
                            placeholder = '申请人';
                        }else{
                            txtVal = $('input[name="expNo"]').val();
                            placeholder = '报销编号';
                        }

                        if(txtVal!=''){
                            $this.closest('th').find('.icon-filter i').addClass('fc-v1-blue');
                            $this.closest('th').find('.icon-filter').show();
                        }
                        $this.on('click',function () {
                            S_dialog.dialog({
                                contentEle: 'dialogOBox',
                                ele:id,
                                lock: 2,
                                align: 'bottom right',
                                quickClose:true,
                                noTriangle:true,
                                width: '220',
                                minHeight:'100',
                                tPadding: '0px',
                                url: rootPath+'/assets/module/m_common/m_dialog.html'


                            },function(d){//加载html后触发

                                var dialogEle = 'div[id="content:'+d.id+'"] .dialogOBox';


                                var iHtml = template('m_filterableField/m_filter_input',{
                                    txtVal:txtVal,
                                    placeholder:placeholder
                                });

                                $(dialogEle).html(iHtml);
                                $(dialogEle).find('button[data-action="sureFilter"]').on('click',function () {
                                    var val = $(dialogEle).find('input[name="txtVal"]').val();

                                    if(id=='filterApproveUserName'){
                                        $(that.element).find('input[name="approveUserName"]').val(val);
                                    }else{
                                        $(that.element).find('input[name="expNo"]').val(val);
                                    }

                                    that.getData(1);

                                    S_dialog.close($(dialogEle));
                                });

                            });
                        });

                        break;
                    case 'filterApproveDate'://审批时间
                    case 'filterAllocationDate'://拨款时间
                    case 'filterExpDate': //申请时间

                        var startTime = '';
                        var endTime = '';
                        if(id=='filterApproveDate'){
                            startTime = $(that.element).find('input[name="approveStartDate"]').val();
                            endTime = $(that.element).find('input[name="approveEndDate"]').val();
                        }else if(id=='filterAllocationDate'){
                            startTime = $(that.element).find('input[name="allocationStartDate"]').val();
                            endTime = $(that.element).find('input[name="allocationEndDate"]').val();
                        }else{
                            startTime = $(that.element).find('input[name="myExpStartDate"]').val();
                            endTime = $(that.element).find('input[name="myExpEndDate"]').val();
                        }
                        if(startTime!='' || endTime!=''){
                            $this.closest('th').find('.icon-filter i').addClass('fc-v1-blue');
                            $this.closest('th').find('.icon-filter').show();
                        }
                        $this.on('click',function () {
                            S_dialog.dialog({
                                contentEle: 'dialogOBox',
                                ele:id,
                                lock: 2,
                                align: 'bottom right',
                                quickClose:true,
                                noTriangle:true,
                                width: '220',
                                minHeight:'100',
                                tPadding: '0px',
                                url: rootPath+'/assets/module/m_common/m_dialog.html'


                            },function(d){//加载html后触发

                                var dialogEle = 'div[id="content:'+d.id+'"] .dialogOBox';

                                var iHtml = template('m_filterableField/m_filter_time',{
                                    startTime:startTime,
                                    endTime:endTime
                                });

                                $(dialogEle).html(iHtml);
                                $(dialogEle).find('button[data-action="sureTimeFilter"]').off('click').on('click',function () {

                                    var startTime = $(dialogEle).find('input[name="startTime"]').val();
                                    var endTime = $(dialogEle).find('input[name="endTime"]').val();

                                    if(id=='filterApproveDate'){
                                        $(that.element).find('input[name="approveStartDate"]').val(startTime);
                                        $(that.element).find('input[name="approveEndDate"]').val(endTime);
                                    }else if(id=='filterAllocationDate'){
                                        $(that.element).find('input[name="allocationStartDate"]').val(startTime);
                                        $(that.element).find('input[name="allocationEndDate"]').val(endTime);
                                    }else{
                                        $(that.element).find('input[name="myExpStartDate"]').val(startTime);
                                        $(that.element).find('input[name="myExpEndDate"]').val(endTime);
                                    }

                                    that.getData(1);

                                    S_dialog.close($(dialogEle));
                                });
                                $(dialogEle).find('button[data-action="clearTimeInput"]').off('click').on('click',function () {
                                    $(dialogEle).find('input').val('');
                                });
                                $(dialogEle).find('i.fa-calendar').off('click').on('click',function () {
                                    $(this).closest('.input-group').find('input').focus();
                                });

                            });
                        });

                        break;
                    case 'filterApproveStatus': //状态
                    case 'filterAllocationStatus': //拨款情况
                    case 'filterExpType': //报销类型
                    case 'filterTheOrg'://所在组织

                        var currCheckValue = '',selectList = [];
                        if(id=='filterApproveStatus'){
                            currCheckValue = $(that.element).find('input[name="approveStatus"]').val()
                            selectList = [
                                {fieldName:'全部',fieldValue:''},
                                {fieldName:'待审批',fieldValue:'0'},
                                {fieldName:'审批中',fieldValue:'5'},
                                {fieldName:'已完成',fieldValue:'1'},
                                {fieldName:'已退回',fieldValue:'2'}
                            ]
                        }else if(id=='filterAllocationStatus'){
                            currCheckValue = $(that.element).find('input[name="allocationStatus"]').val()
                            selectList = [
                                {fieldName:'全部',fieldValue:''},
                                {fieldName:'未拨款',fieldValue:'0'},
                                {fieldName:'已拨款',fieldValue:'1'}
                            ]
                        }else if(id=='filterExpType'){
                            currCheckValue = $(that.element).find('input[name="expType"]').val()
                            selectList = [
                                {fieldName:'全部',fieldValue:''},
                                {fieldName:'费用申请',fieldValue:'2'},
                                {fieldName:'报销申请',fieldValue:'1'}
                            ]
                        }else if(id=='filterTheOrg'){
                            currCheckValue = $(that.element).find('input[name="applayCompanyName"]').val();
                            selectList.push({fieldName:'全部',fieldValue:''});

                            if(that._companyListBySelect!=null && that._companyListBySelect.length>0){
                                $.each(that._companyListBySelect, function (i, item) {
                                    selectList.push({fieldValue: item.companyName, fieldName: item.companyName});
                                });
                            }
                        }
                        if(currCheckValue!=''){
                            $this.closest('th').find('.icon-filter i').addClass('fc-v1-blue');
                            $this.closest('th').find('.icon-filter').show();
                        }

                        var iHtml = template('m_filterableField/m_filter_select',{
                            currCheckValue:currCheckValue,
                            selectList:selectList
                        });
                        var iTextObj = iHtml.getTextWH();
                        var iWHObj = setDialogWH(iTextObj.width,iTextObj.height);

                        $this.on('click',function () {
                            S_dialog.dialog({
                                contentEle: 'dialogOBox',
                                ele:id,
                                lock: 2,
                                align: 'bottom right',
                                quickClose:true,
                                noTriangle:true,
                                width: iWHObj.width,
                                height:iWHObj.height,
                                tPadding: '0px',
                                url: rootPath+'/assets/module/m_common/m_dialog.html'

                            },function(d){//加载html后触发

                                var dialogEle = 'div[id="content:'+d.id+'"] .dialogOBox';
                                $(dialogEle).html(iHtml);

                                $(dialogEle).find('.dropdown-menu a').on('click',function () {

                                    var val = $(this).attr('data-state-no');
                                    if(id=='filterApproveStatus'){
                                        $(that.element).find('input[name="approveStatus"]').val(val);
                                    }else if(id=='filterAllocationStatus'){
                                        $(that.element).find('input[name="allocationStatus"]').val(val);
                                    }else if(id=='filterExpType'){
                                        $(that.element).find('input[name="expType"]').val(val);
                                    }else if(id=='filterTheOrg'){
                                        $(that.element).find('input[name="applayCompanyName"]').val(val);
                                    }

                                    that.getData(1);
                                    S_dialog.close($(dialogEle));
                                });
                            });
                        });

                        break;
                }

            });
        }
        //排序
        , sortActionClick:function () {
            var that = this;
            $(that.element).find('th[data-action="sort"]').each(function () {

                var $this = $(this);
                var sortType = $this.attr('data-sort-type');

                switch(sortType){
                    case 'allocationDate'://立项时间
                        var sortAllocationDate = $(that.element).find('input[name="sortAllocationDate"]').val();
                        var sortClass = '';
                        if(sortAllocationDate=='0'){
                            sortClass = 'sorting_asc';
                        }else if(sortAllocationDate=='1'){
                            sortClass = 'sorting_desc';
                        }else{
                            sortClass = 'sorting';
                        }
                        $this.removeClass().addClass(sortClass);
                        $this.off('click').on('click',function (e) {
                            if($this.hasClass('sorting')||$this.hasClass('sorting_asc')){
                                $(that.element).find('input[name="sortAllocationDate"]').val('1');
                            }
                            else if($this.hasClass('sorting_desc')){
                                $(that.element).find('input[name="sortAllocationDate"]').val('0');
                            }
                            that.getData(1);
                            e.stopPropagation();
                            return false;
                        });
                        break;

                }

            });
        }

        //时间验证
        , saveAgreeToGrant_validate: function () {
            var that = this;
            $('form.agreeToGrantForm').validate({
                rules: {
                    allocationDate: 'required'
                },
                messages: {
                    allocationDate: '请选择时间！'
                }
            });
        }
        //原因不为空验证
        , saveSendBack_validate: function () {
            var that = this;
            $('form.sendBackForm').validate({
                rules: {
                    sendBackReason: 'required'
                },
                messages: {
                    sendBackReason: '请输入退回原因！'
                }
            });
        }

    });

    $.fn[pluginName] = function (options) {
        return this.each(function () {
            // if (!$.data(this, "plugin_" + pluginName)) {
            $.data(this, "plugin_" +
                pluginName, new Plugin(this, options));
            // }
        });
    };

})(jQuery, window, document);

/**
 * 添加报销
 * Created by wrb on 2016/12/7.
 */
;(function ($, window, document, undefined) {

    "use strict";
    var pluginName = "m_reimbursement_add",
        defaults = {
            buttonType: 0,
            reimburseObj: {}
        };

    // The actual plugin constructor
    function Plugin(element, options) {
        this.element = element;

        this.settings = $.extend({}, defaults, options);
        this._defaults = defaults;
        this._name = pluginName;
        this._uploadFileList = [];
        this._detailLen = 0;//报销条目的tr的target值，用于辨认tr
        this._uploadmgrContainer = null;
        this._maxExpNo = null;
        this._uuid = UUID.genV4().hexNoDelim;
        this.init();
    }

    // Avoid Plugin.prototype conflicts
    $.extend(Plugin.prototype, {
        init: function () {
            var that = this;
            that.getData();
            $('body').bind('click', function (event) {
                that.closeExpTypeSquare(event);
            });
        }
        //进入页面获取报销编号
        , getMaxExpNo: function (callback) {
            var that = this;
            var options = {};
            options.postData = {};
            options.url = restApi.url_getMaxExpNo;
            options.postData.companyId = window.currentCompanyId;
            m_ajax.postJson(options, function (response) {
                if (response.code == "0") {
                    that._maxExpNo = response.data.maxExpNo;
                    if (callback) return callback(response.data.maxExpNo);
                } else {
                    S_dialog.error(response.info);
                }
            });
        }
        //加载基本数据
        , getData: function () {
            var that = this;
            var expTypeData = {};
            var html = template('m_finance/m_reimbursement_add', {reimburseObj: that.settings.reimburseObj});
            $(that.element).html(html);

            /************首次打开，添加一条报销明细************/
            var options = {};
            options.tableId = '#reimburseTable';
            options.detailLen = that._detailLen;
            options.callBack1 = function (expTypeData) {
                var $obj = $('#reimburseTable tbody tr[target="' + expTypeData.i + '"]');
                $obj.attr('expName', expTypeData.expName);
                $obj.attr('expPName', expTypeData.expPName);
                $obj.attr('expAllName', expTypeData.expAllName);
                $obj.attr('expType', expTypeData.expType);
                $obj.attr('expParentType', expTypeData.expParentType);
            };
            $('#reimburseTable').m_addExpDetailTr(options);

            /************是否添加返回，保存按钮************/
            if (that.settings.buttonType == 0) {
                var bHtml = '<a type="button" class="btn btn-white getClickFun rounded m-r-xs" data-action="backToLast" >返回</a>';
                bHtml += '<a type="button" class="btn btn-primary getClickFun rounded" data-action="saveApplyExp" >保存</a>';
                $('#toExpApplication').find('div.footTools').prepend(bHtml).css('text-align', 'right');
            }
            that.addActionClick(expTypeData);
            that.updateAmount();
        }
        //收起报销类型选择框
        , closeExpTypeSquare: function (event) {
            if ($(event).parents('.typeNameArea').length == 0) {
                $('.typeNameArea').each(function () {
                    if (!($(this).is('.hide'))) {
                        $(this).addClass('hide');
                    }
                });
            }
        }
        //添加点击事件
        , addActionClick: function () {
            var that = this;
            $('#toExpApplication .getClickFun').each(function () {
                var action = $(this).attr('data-action');
                $(this).bind('click', function (event) {
                    if (action == 'auditPerson') {//点击选择审核人
                        var options = {};
                        var $this = $(this);
                        options.treeUrl = restApi.url_getOrgTreeForSearch;
                        var userId = $(this).attr('userId');
                        if (userId != null && userId != '') {
                            options.selectedUserList = [{
                                id: userId,
                                userName: $(this).val()
                            }];
                        }
                        options.selectUserCallback = function (data, event) {
                            S_dialog.close($(event));
                            $('#toExpApplication').find('#auditPerson').attr('userId', data.companyUserId);
                            $('#toExpApplication').find('#auditPerson').val(data.userName);
                        };
                        options.saveCallback = function (data) {
                            if (data == null || data.selectedUserList == null || data.selectedUserList.length == 0) {
                                $this.attr('userId', '');
                                $this.val('');
                            }
                        };
                        $(that.element).m_orgByTree(options);

                    } else if (action == "fileUpload") {
                        var option = {};
                        that._uploadmgrContainer = $(that.element).find('.uploadmgrContainer:eq(0)');
                        option.server = restApi.url_attachment_uploadExpenseAttach;
                        option.accept={
                            title: '请选择图片',
                            extensions: 'jpg,jpeg,png,bmp',
                            mimeTypes: 'image/jpg,image/jpeg,image/png,image/bmp'
                        };
                        option.closeIfFinished = true;
                        option.uploadBeforeSend = function (object, data, headers) {
                            data.companyId = window.currentCompanyId;
                            data.accountId = window.currentUserId;
                            data.targetId = that._uuid;
                        };
                        option.uploadSuccessCallback = function (file, response) {
                            console.log(response);
                            var fileData = {
                                netFileId: response.data.netFileId,
                                fileName: response.data.fileName,
                                fullPath: window.fastdfsUrl + response.data.fastdfsGroup + '/' + response.data.fastdfsPath
                            };
                            var $uploadItem = that._uploadmgrContainer.find('.uploadItem_' + file.id + ':eq(0)');
                            if (!isNullOrBlank(fileData.netFileId)) {
                                $uploadItem.find('.span_status:eq(0)').html('上传成功');
                                var html = template('m_common/m_attach', fileData);
                                $('#showFileLoading').append(html);
                                var obj = 'a[data-net-file-id="' + fileData.netFileId + '"]';
                                that.bindAttachAction();
                            } else {
                                $uploadItem.find('.span_status:eq(0)').html('上传失败');
                            }

                        };
                        that._uploadmgrContainer.m_uploadmgr(option, true);
                    }
                    else if (action == 'addExpItem') {//点击添加报销明细
                        that._detailLen++;
                        var len = $('#reimburseTable tbody tr').length - 2;
                        if (len >= 4) {
                            S_toastr.warning('报销明细不能超过4条！');
                            return;
                        }
                        var i = len;
                        var options = {};
                        options.tableId = '#reimburseTable';
                        options.detailLen = that._detailLen;
                        options.callBack1 = function (expTypeData) {
                            var $obj = $('#reimburseTable tbody tr[target="' + expTypeData.i + '"]');
                            $obj.attr('expName', expTypeData.expName);
                            $obj.attr('expPName', expTypeData.expPName);
                            $obj.attr('expAllName', expTypeData.expAllName);
                            $obj.attr('expType', expTypeData.expType);
                            $obj.attr('expParentType', expTypeData.expParentType);
                        };
                        $('#reimburseTable').m_addExpDetailTr(options);
                        that.closeExpTypeSquare(event);
                    } else if (action == 'backToLast') {

                    }
                    else if (action == 'saveApplyExp') {
                        var $data = {};
                        $data.detailList = [];
                        $('table#reimburseTable tbody tr[target]').each(function () {
                            var $this = $(this), expItem = {};
                            expItem.expAmount = $this.find('input#expAmount').val();
                            expItem.expUse = $this.find('input#expUse').val();
                            expItem.projectId = $this.find('select#projectId').val();
                            expItem.expName = $this.attr('expName') ? $this.attr('expName') : '';
                            expItem.expPName = $this.attr('expPName') ? $this.attr('expPName') : '';
                            expItem.expAllName = $this.attr('expAllName') ? $this.attr('expAllName') : '';
                            expItem.expType = $this.attr('expType') ? $this.attr('expType') : '';
                            expItem.expParentType = $this.attr('expParentType') ? $this.attr('expParentType') : '';
                            $data.detailList.push(expItem);
                        });
                        $data.type = $(that.element).find('#receiptType').val();
                        $data.auditPersonName = $('form.tessExpenseBox input[data-action="auditPerson"]').val();
                        $data.auditPerson = $('form.tessExpenseBox input[data-action="auditPerson"]').attr('userid');
                        $data.remark = $("form.tessExpenseBox input#remark").val();
                        $data.userId = window.currentCompanyUserId;
                        $data.expNo = that._maxExpNo;
                        $data.targetId = that._uuid;

                        var option = {};
                        option.url = restApi.url_saveOrUpdateExpMainAndDetail;
                        option.postData = $data;
                        if ($data.auditPersonName == '' || $data.auditPersonName == null) {
                            S_toastr.warning('请选择审批人');
                            return;
                        }
                        var errors = [];
                        $('tr[target]').each(function () {
                            if ($(this).find('input#expAmount').val() == '') {
                                errors.push('请输入报销金额');
                                return;
                            }
                            if ($(this).find('input#collectExpType').val() == '') {
                                errors.push('请选择报销类别');
                                return;
                            }
                            if ($(this).find('input#expUse').val() == '') {
                                errors.push('请输入用途说明');
                                return;
                            }
                        });
                        if (errors.length > 0) {
                            S_toastr.warning(errors[0]);
                            return;
                        }
                        m_ajax.postJson(option, function (response) {
                            if (response.code == '0') {
                                S_toastr.success('操作成功');
                                that.refreshMyExpense();
                            } else {
                                S_dialog.error(response.info);
                            }
                        });
                    }
                    event.stopPropagation();
                });
            });
        }
        , bindAttachAction: function () {
            var that = this;
            that.bindAttachPreview();
            that.bindAttachDelele();
        }
        , bindAttachPreview: function () {
            $.each($('#showFileLoading').find('a[data-action="preview"]'), function (i, o) {
                $(o).off('click.preview').on('click.preview', function () {
                    var $a = $(this);
                    var pic = [];
                    pic.push({
                        alt: $a.attr('data-name'),
                        pid: $a.attr('data-net-file-id'),
                        src: $a.attr('data-src')
                    });
                    $.each($('#showFileLoading').find('a[data-action="preview"]'), function (j, p) {
                        var $p = $(p);
                        if ($p.attr('data-net-file-id') !== $a.attr('data-net-file-id')) {
                            pic.push({
                                alt: $p.attr('data-name'),
                                pid: $p.attr('data-net-file-id'),
                                src: $p.attr('data-src')
                            })
                        }
                    });
                    var photos={
                            title: '报销附件',
                            id: 1,
                            start: 0,
                            data: pic
                        }
                    ;
                    layer.photos({
                        photos: photos,
                        shift: 5
                    });
                })
            });
        }
        , bindAttachDelele: function () {
            $.each($('#showFileLoading').find('a[data-action="deleteAttach"]'), function (i, o) {
                $(o).off('click.deleteAttach').on('click.deleteAttach', function () {
                    var netFileId = $(this).attr('data-net-file-id');

                    var ajaxDelete = function () {
                        var ajaxOption = {};
                        ajaxOption.classId = '.file-list:eq(0)';
                        ajaxOption.url = restApi.url_attachment_delete;
                        ajaxOption.postData = {
                            id: netFileId,
                            accountId: window.currentUserId
                        };
                        m_ajax.postJson(ajaxOption, function (res) {
                            if (res.code === '0') {
                                S_toastr.success("删除成功");
                            } else if (res.code === '1') {
                                S_dialog.error(res.msg);
                            }
                        });
                    };
                    ajaxDelete();

                    $(this).closest('span').remove();
                })
            });
        }
        //获取部门,项目列表
        , getBaseDetail: function (list) {
            var that = this;
            var option = {};
            option.url = restApi.url_getExpBaseData;
            m_ajax.get(option, function (response) {
                if (response.code == '0') {
                    list = response.data.projectList;
                } else {
                    S_dialog.error(response.info);
                }
            });
        }
        //刷新总计数据
        , updateAmount: function () {
            var time = setInterval(function () {
                var amount = 0;
                $('input#expAmount').each(function () {
                    amount += parseFloat($(this).val());
                });
                amount = amount ? amount.toFixed(2) : '';
                amount = expNumberFilter(amount);
                $('span#expAmount').html(amount);
                $('div.footTools a[data-action="saveApplyExp"]').bind('click', function () {
                    clearInterval(time);
                });
            }, 100);
        }
        //返回报销列表
        ,refreshMyExpense:function () {

            $('ul.nav-second-level li a[id="myExpense"]').click();
        }
    });

    $.fn[pluginName] = function (options) {
        return this.each(function () {
            // if (!$.data(this, "plugin_" + pluginName)) {
            $.data(this, "plugin_" +
                pluginName, new Plugin(this, options));
            // }
        });
    };

})(jQuery, window, document);

/**
 * 报销详情
 * Created by wrb on 2016/12/7.
 */
;(function ($, window, document, undefined) {

    "use strict";
    var pluginName = "m_showExpDetailDialog",
        defaults = {
            title:null,//弹窗标题
            url:null,//请求地址
            type:1,//1=报销,2=费用
            expDetail:null
        };

    // The actual plugin constructor
    function Plugin(element, options) {
        this.element = element;

        this.settings = $.extend({}, defaults, options);
        this._defaults = defaults;
        this._name = pluginName;
        this._typeStr = this.settings.type==1?'报销':'费用';
        this.init();
    }

    // Avoid Plugin.prototype conflicts
    $.extend(Plugin.prototype, {
        init: function () {
            var that = this;
            that.getData();
        }
        //加载弹窗
        ,getData: function () {
            var that = this;
            S_dialog.dialog({
                title: that.settings.title||'报销详情',
                contentEle: 'TConsentOBox',
                lock: 3,
                width: '800',
                minHeight: '450',
                tPadding: '0px',
                url: rootPath+'/assets/module/m_common/m_dialog.html',
                cancelText:'关闭',
                cancel:function () {

                }
            },function(d){//加载html后触发
                that.getExpData(d);


            });
        }
        //加载
        ,getExpData:function(d){
            var that = this;
            var option = {};
            if(that.settings.url!=null){
                option.url=that.settings.url;
            }else{
                option.url=restApi.url_getExpMainDetail+'/'+that.settings.expDetail.id;
            }

            m_ajax.post(option,function (response) {
                if(response.code=='0'){
                    var $data={};
                    $data.myExpDetails = response.data;
                    $data.expNo = that.settings.expDetail.expNo;
                    $data.fastdfsUrl = window.fastdfsUrl;
                    $.each($data.myExpDetails.auditList,function(i,item){
                        if(item.expDate!=null&&item.expDate!=''){
                            item.expDate=moment(item.expDate).format('YYYY-MM-DD');
                        }
                    });
                    $.each($data.myExpDetails.detailList,function(i,item){
                        item.expAmount = expNumberFilter(item.expAmount);
                    });
                    $data.myExpDetails.totalExpAmount = expNumberFilter($data.myExpDetails.totalExpAmount);
                    $data.type = that.settings.type;
                    $data.typeStr = that._typeStr;
                    var html = template('m_finance/m_showExpDetailDialog',$data);
                    $('div[id="content:'+d.id+'"] .dialogOBox').html(html);
                }else {
                    S_dialog.error(response.info);
                }

            })
        }

    });

    $.fn[pluginName] = function (options) {
        return this.each(function () {
            //if (!$.data(this, "plugin_" + pluginName)) {
                $.data(this, "plugin_" +
                    pluginName, new Plugin(this, options));
            //}
        });
    };

})(jQuery, window, document);

/**
 * Created by Wuwq on 2017/1/5.
 */
;(function ($, window, document, undefined) {

    "use strict";
    var pluginName = "m_historyData",
        defaults = {};

    function Plugin(element, options) {
        this.element = element;

        this.settings = options;
        this._defaults = defaults;
        this._name = pluginName;
        this._creatorOrgId = null;
        this.init();
    }

    $.extend(Plugin.prototype, {
        init: function () {
            var that = this;
            that._render();
        }
        , _renderSelectOrg: function ($select) {
            var option = {
                url: restApi.url_listCompanyAndChildren
            };
            m_ajax.getJson(option, function (res) {
                if (res.code === '0') {
                    var data = [];
                    $.each(res.data, function (i, o) {
                        data.push({id: o.id, text: o.companyName});
                    });
                    $select.select2({
                        width: '200px',
                        allowClear: false,
                        language: "zh-CN",
                        minimumResultsForSearch: Infinity,
                        data: data
                    });
                } else
                    S_toastr.error(res.info);
            });
        }
        , _render: function () {
            var that = this;
            var html = template('m_historyData/m_historyData', {});
            $(that.element).html(html);

            that._renderSelectOrg($(that.element).find('#selectOrg'));

            $(that.element).find('button[data-action="downloadTemplate"]').click(function () {
                $('#iframeDown').attr('src', window.cdnUrl+'/cs/tpl/importProject.xlsx');
            });

            /*$(that.element).find('button[data-action="uploadFile"]').click(function () {
                S_toastr.success('文件上传成功，正在生成预览...');
                setTimeout(function () {
                    that._renderStep2();
                }, 2000);
            });
            return;*/

            $(that.element).find('button[data-action="uploadFile"]').m_fileUploader({
                server: restApi.url_historyData_importProjects,
                fileExts: 'xls,xlsx',
                fileSingleSizeLimit: 20 * 1024 * 1024,
                formData: {},
                innerHTML: '上传文件',
                loadingId: '#content-box .ibox',
                uploadBeforeSend: function (object, data, headers) {
                    data.creatorOrgId = $(that.element).find('#selectOrg').val();
                    that._creatorOrgId = data.creatorOrgId;
                },
                uploadSuccessCallback: function (file, res) {
                    if (res.code === '0') {
                        S_toastr.success('文件上传成功，正在生成预览...');
                        setTimeout(function () {
                            that._renderStep2(res.data);
                        }, 2000);
                    } else {
                        S_toastr.error(res.info);
                    }
                }
            }, true);
        }
        , _renderStep2: function (data) {
            var that = this;

            var list = [];
            var index = 0;
            if (data.invalidCount && data.invalidCount > 0) {
                $.each(data.invalidList, function (i, o) {
                    list.push(o);
                    o.valid = false;
                    o.index = index;
                    index += 1;
                });
            }
            if (data.validCount && data.validCount > 0) {
                $.each(data.validList, function (i, o) {
                    list.push(o);
                    o.valid = true;
                    o.index = index;
                    index += 1;
                });
            }

            var showSubmit = false;
            var msg = '';
            if (data.validCount > 0) {
                showSubmit = true;
                msg = '已上传文档里发现 有效数据：' + data.validCount + ' 项';
                if (data.invalidCount > 0)
                    msg += '，无效数据：' + data.invalidCount + ' 项';
            }
            else
                msg = '已上传文档里找不到任何有效数据';

            var html = template('m_historyData/m_historyData_step2', {list: list, msg: msg, showSubmit: showSubmit});
            $(that.element).find('.step-container').html(html);
            $(that.element).find('div[data-step="1"]').removeClass('active').addClass('done');
            $(that.element).find('div[data-step="2"]').addClass('active');
            $(that.element).find('.footable').footable();
            $(that.element).find('.footable a[data-toggle="tooltip"]').tooltip();

            $(that.element).find('button[data-action="submit"]').click(function () {
                S_swal.confirm({
                    title: '你确定要提交吗?',
                    closeOnConfirm: true,
                    callBack: function () {
                        var option = {
                            url: restApi.url_historyData_createProjects,
                            loadingEl: '',
                            postData: {
                                creatorOrgId: that._creatorOrgId,
                                validList:data.validList
                            }
                        };
                        m_ajax.postJson(option, function (res) {
                            if (res.code === '0') {
                                that._renderStep3();
                            } else {
                                S_toastr.error(res.info);
                            }
                        });
                    }
                });
            });
            $(that.element).find('a[data-action="reImport"]').click(function () {

                that._render();
                return false;
            });
        }
        , _renderStep3: function () {
            var that = this;
            var html = template('m_historyData/m_historyData_step3', {});
            $(that.element).find('.step-container').html(html);
            $(that.element).find('div[data-step="2"]').removeClass('active').addClass('done');
            $(that.element).find('div[data-step="3"]').addClass('active');
        }
    });

    /*
     1.一般初始化（缓存单例）： $('#id').pluginName(initOptions);
     2.强制初始化（无视缓存）： $('#id').pluginName(initOptions,true);
     3.调用方法： $('#id').pluginName('methodName',args);
     */
    $.fn[pluginName] = function (options, args) {
        var instance;
        var funcResult;
        var jqObj = this.each(function () {

            //从缓存获取实例
            instance = $.data(this, "plugin_" + pluginName);

            if (options === undefined || options === null || typeof options === "object") {

                var opts = $.extend(true, {}, defaults, options);

                //options作为初始化参数，若args===true则强制重新初始化，否则根据缓存判断是否需要初始化
                if (args === true) {
                    instance = new Plugin(this, opts);
                } else {
                    if (instance === undefined || instance === null)
                        instance = new Plugin(this, opts);
                }

                //写入缓存
                $.data(this, "plugin_" + pluginName, instance);
            }
            else if (typeof options === "string" && typeof instance[options] === "function") {

                //options作为方法名，args则作为方法要调用的参数
                //如果方法没有返回值，funcReuslt为undefined
                funcResult = instance[options].call(instance, args);
            }
        });

        return funcResult === undefined ? jqObj : funcResult;
    };

})(jQuery, window, document);
/**
 * 工作台菜单
 * Created by wrb on 2017/10/11.
 */
;(function ($, window, document, undefined) {

    "use strict";
    var pluginName = "m_metismenu",
        defaults = {
            $contentEle:null,//
            $projectId:null,
            $projectName:null,
            $type:null
        };

    // The actual plugin constructor
    function Plugin(element, options) {
        this.element = element;

        this.settings = $.extend({}, defaults, options);
        this._defaults = defaults;
        this._name = pluginName;
        this.cookieStr = 'home_workbench_dataAction';
        this.init();
    }

    // Avoid Plugin.prototype conflicts
    $.extend(Plugin.prototype, {
        init: function () {
            var that = this;


            that.initHtmlTemplate();
        }
        , initHtmlTemplate:function () {
            var that = this;
            var html = template('m_home/m_metismenu',{});
            $(that.element).html(html);
            // Minimalize menu
            /*$('.navbar-minimalize').on('click', function () {
                $("body").toggleClass("mini-navbar");
                SmoothlyMenu();
            });*/
            rolesControl();
            that.menuClickFun();
            that.menuHoverFun();
            that.initRoute();
            that.removeNoMenuUl();

        }
        //路由
        , initRoute:function () {
            var that = this;
            Router.route('/', function() {//项目列表
                that.projectList();
            });
            Router.route('/addProject', function() {//项目立项
                that.addProject();
            });

            /**********************************我的任务--开始*****************************/
            Router.route('/myTask', function() {//我的任务
                that.myTask();
            });
            Router.route('/myTask/taskIssue', function(query) {//我的任务-任务签发
                that.taskIssueByMyTask(query);
            });
            Router.route('/myTask/production', function(query) {//我的任务-生产安排
                that.productionByMyTask(query);
            });
            Router.route('/myTask/designReview', function(query) {//我的任务-设、校、审
                that.designReviewByMyTask(query);
            });
            Router.route('/myTask/approved', function(query) {//我的任务-审批
                that.approvedByMyTask(query);
            });
            Router.route('/myTask/cost', function(query) {//我的任务-收支管理
                that.incomeExpenditureByMyTask(query);
            });

            /**********************************我的任务--结束*****************************/


            /**********************************项目详情--开始*****************************/
            Router.route('/projectDetails/basicInfo', function(query) {
                that.projectDetails(query,'basicInfo');
            });
            Router.route('/projectDetails/taskIssue', function(query) {
                that.projectDetails(query,'taskIssue');
            });
            Router.route('/projectDetails/productionArrangement', function(query) {
                that.projectDetails(query,'productionArrangement');
            });
            Router.route('/projectDetails/incomeExpenditure', function(query) {
                that.projectDetails(query,'incomeExpenditure');
            });
            Router.route('/projectDetails/projectDocumentLib', function(query) {
                that.projectDetails(query,'projectDocumentLib');
            });
            Router.route('/projectDetails/projectMember', function(query) {
                that.projectDetails(query,'projectMember');
            });
            Router.route('/projectDetails/externalCooperation', function(query) {
                that.projectDetails(query,'externalCooperation');
            });
            Router.route('/projectDetails/cost', function(query) {
                that.projectDetails(query,'cost');
            });

            /**********************************项目详情--结束*****************************/

            Router.route('/paymentsDetail', function() {//收支明细
                that.paymentsDetail();
            });

            Router.route('/paymentsStatistics', function() {//分类统计
                that.paymentsStatistics();
            });

            Router.route('/profitStatement', function() {//利润报表
                that.profitStatement();
            });

            Router.route('/financeSettings', function() {//财务类别设置
                that.financeSettings();
            });
            Router.route('/feeEntry', function() {//费用录入
                that.feeEntry();
            });

            Router.route('/projectCost', function() {//项目收支
                that.projectCost();
            });
            Router.route('/invoiceSummary', function() {//发票汇总
                that.invoiceSummary();
            });
            Router.route('/reimbursementSummary', function() {//报销汇总
                that.reimbursementSummary();
            });
            Router.route('/costSummary', function() {//费用汇总
                that.costSummary();
            });

            Router.route('/leaveSummary', function() {//请假汇总
                that.leaveSummary();
            });

            Router.route('/businessSummary', function() {//出差汇总
                that.businessSummary();
            });
            Router.route('/workingHoursSummary', function() {//工时汇总
                that.workingHoursSummary();
            });
            Router.route('/workingHoursSummary/detail', function(query) {//工时汇总详情
                that.workingHoursSummaryDetail(query);
            });
            Router.route('/orgInfomationShow', function() {//组织信息
                that.orgInfomationShow();
            });
            Router.route('/addressBook', function() {//通讯录
                that.addressBook();
            });
            Router.route('/projectArchiving', function() {//项目文档
                that.projectArchiving();
            });


            /**********************************后台管理--开始*****************************/
            Router.route('/backstageMgt/orgInfo', function() {//组织信息
                that.backstageMgt('orgInfo');
                that.menuShowOrHide(0);
            });
            Router.route('/backstageMgt/organizational', function() {//组织架构
                that.backstageMgt('organizational');
                that.menuShowOrHide(0);
            });
            Router.route('/backstageMgt/permissionSettings', function() {//权限设置
                that.backstageMgt('permissionSettings');
                that.menuShowOrHide(0);
            });
            Router.route('/backstageMgt/enterpriseCertification', function() {//企业认证
                that.backstageMgt('enterpriseCertification');
                that.menuShowOrHide(0);
            });
            Router.route('/backstageMgt/historicalDataImport', function() {//历史数据导入
                that.backstageMgt('historicalDataImport');
                that.menuShowOrHide(0);
            });
            Router.route('/backstageMgt/financeSettingProcess', function(query) {//项目收支流程设置
                that.backstageMgt('financeSettingProcess',query);
                that.menuShowOrHide(0);
            });
            Router.route('/backstageMgt/approvalMgt', function() {//审批管理
                that.backstageMgt('approvalMgt');
                that.menuShowOrHide(0);
            });

            /**********************************后台管理--结束*****************************/

            /******************************* 头部操作路由-开始 *************************************/

            Router.route('/personalSettings', function() {//个人设置
                that.personalSettings();
                that.menuShowOrHide(0);
            });
            Router.route('/announcement', function() {//公告
                that.announcement();
                that.menuShowOrHide(0);
            });
            Router.route('/announcement/send', function() {//发送公告
                that.announcementSend();
                that.menuShowOrHide(0);
            });
            Router.route('/announcement/detail', function(query) {//发送公告
                that.announcementDetail(query);
                that.menuShowOrHide(0);
            });
            Router.route('/createOrg', function() {//创建组织
                that.createOrg();
                that.menuShowOrHide(1);
            });
            Router.route('/messageCenter', function() {//消息中心
                that.messageCenter();
                that.menuShowOrHide(0);
            });

            /******************************* 头部操作路由-结束 *************************************/

            Router.afterCallback(function () {
                console.log(Router.currentUrl);
                if(Router.currentUrl!='/createOrg'){
                    $('#page-wrapper').removeClass('m-l-none');
                    $('#left-menu-box').show();
                }
                that.menuDealFun(Router.currentUrl);
            });

        }

        //菜单点击事件
        , menuClickFun:function () {
            var that = this;
            $(that.element).find('.metismenu li a').on('click',function () {

                var $this = $(this);
                var id = $this.attr('id');

                if($this.parent().find('ul').length>0 && !$this.parent().hasClass('project-menu-box')){

                    if($this.parent().hasClass('chosed')){
                        $this.parent().removeClass('chosed');
                    }else{
                        $this.parent().addClass('chosed');//.siblings().removeClass('chosed');
                    }
                }else{
                    $(that.element).find('ul.nav-second-level>li').removeClass('active');
                    if($this.parents('.nav-second-level').length>0){
                        $(that.element).find('ul.metismenu>li').removeClass('active');
                        $this.parents('.nav-second-level').parent().siblings().removeClass('chosed');
                    }
                    $this.parent().addClass('active').siblings().removeClass('active chosed');
                    if($(that.element).find('.project-menu-box ul').length>0){
                        $(that.element).find('.project-menu-box ul').remove();//清除最近浏览的项目详情
                    }
                }
            });
        }
        //菜单hover事件
        , menuHoverFun:function () {
            var that = this;
            $(that.element).find('.metismenu li a').hover(function () {
                $(this).find('object').contents().find('svg text[fill],svg path[fill],svg polygon[fill]').attr('fill','#4765a1')
            },function () {
                $(this).find('object').contents().find('svg text[fill],svg path[fill],svg polygon[fill]').attr('fill','#666666')
            });
        }
        , menuDealFun:function (dataAction) {
            var that = this;
            var currentEle = $(that.element).find('.metismenu li a[href="#'+dataAction+'"]');
            var dataActionArr = dataAction.split('/');
            if(currentEle.length==0){
                var  newDataAction = '/'+dataActionArr[1];
                currentEle = $(that.element).find('.metismenu li a[href="#'+newDataAction+'"]');
            }
            if(currentEle.length>0){
                if(currentEle.parents('.nav-second-level').length>0){//定位在子菜单中
                    currentEle.parents('.nav-second-level').parent().addClass('chosed');
                }
                currentEle.parent().addClass('active').siblings().removeClass('active');
            }
            if(!(dataAction.indexOf('/projectDetails/')>-1)){//当前不是项目详情
                if($(that.element).find('.project-menu-box ul').length>0){
                    $(that.element).find('.project-menu-box ul').remove();//清除最近浏览的项目详情
                    $(that.element).find('.project-menu-box').removeClass('chosed');
                }
            }
        }
        //控制菜单显示与否
        , menuShowOrHide:function (t) {
            if(t==1){
                $('#page-wrapper').addClass('m-l-none');
                $('#left-menu-box').hide();
            }else{
                $('#page-wrapper').removeClass('m-l-none');
                $('#left-menu-box').show();
                //折叠左菜单
                $('#left-menu-box').find('li').removeClass('active chosed');
            }
        }
        //二级菜单没有就删除父菜单
        , removeNoMenuUl:function () {
            var that = this;
            $(that.element).find('ul.nav-second-level').each(function () {
                var len = $(this).find('li').length;
                if(len==0){
                    $(this).parents('li').remove();
                }
            })
        }
        //我的项目
        , projectList:function () {
            var options = {}, that = this;
            /*options.isAllProject = true;
            $(that.settings.$contentEle).m_projectList(options, true);*/
            $(that.settings.$contentEle).m_projectList_menu();
        }

        //通讯录
        , addressBook:function () {
            var that = this;
            $(that.settings.$contentEle).m_addressBook();
        }
        //组织信息(可查看)
        , orgInfomationShow: function () {
            var that = this;
            $(that.settings.$contentEle).m_orgInfomation({$type:0});
        }
        , addProject:function () {
            var that = this;
            $(that.settings.$contentEle).m_projectAdd({}, true);
        }
        //后台管理
        , backstageMgt: function (dataAction,query) {
            var that = this;
            $(that.settings.$contentEle).m_org_menu({
                $dataAction:dataAction,
                $query:query
            });
        }
        //项目详情
        , projectDetails:function (query,dataAction) {
            var that = this;
            var option = {};
            option.$projectId = query.id;
            option.$projectName = decodeURI(query.projectName);
            option.$projectId = query.id;
            option.$type = query.type;
            option.$dataAction = dataAction;
            $('.m_metismenu .project-menu-box').m_projectMenu(option);
        }
        //消息中心
        , messageCenter:function () {
            var that = this;
            var option = {};
            $(that.settings.$contentEle).m_message(option,true);
        }
        //个人设置
        , personalSettings:function () {
            //获取用户信息数据
            var option = {};
            option.url = restApi.url_userInfo;
            m_ajax.get(option, function (response) {
                if (response.code == '0') {
                    $('#content-right').m_userInfo({userDto: response.data});
                } else {
                    S_dialog.error(response.info);
                }
            });
        }
        //通知公告
        , announcement:function () {
            var that = this;
            var option = {};
            $(that.settings.$contentEle).m_notice(option,true)
        }
        , announcementSend:function () {
            var that = this;
            //$(that.settings.$contentEle).m_publishPublicNotice();
            $(that.settings.$contentEle).m_notice_publish();
        }
        , announcementDetail:function (query) {
            var options = {};
            options.noticeId = query.id;
            $('#content-right').m_showNoticeDetail(options);
        }
        , myTask:function () {
            var that = this;
            $(that.settings.$contentEle).m_myTask({}, true);
        }
        //财务类别设置
        , financeSettings:function () {
            var that = this;
            //$(that.settings.$contentEle).m_expTypeSetting();
            $(that.settings.$contentEle).m_finance_settings_menu();
        }
        //报销汇总
        , reimbursementSummary:function () {
            var that = this;
            $(that.settings.$contentEle).m_reimbursementSummary()
        }
        //费用录入
        , feeEntry:function () {
            var that = this;
            $(that.settings.$contentEle).m_feeEntry();
        }
        //收支总览
        , paymentsDetail:function () {
            var that = this;
            $(that.settings.$contentEle).m_payments_detail_menu();
        }
        //分类统计
        , paymentsStatistics:function () {
            var that = this;
            $(that.settings.$contentEle).m_payments_statistics();
        }
        //利润报表
        , profitStatement:function () {
            var that = this;
            $(that.settings.$contentEle).m_payments_profitStatement();
        }
        //项目归档
        , projectArchiving:function () {
            var that = this;
            $(that.settings.$contentEle).m_projectArchiving({},true);
        }
        //费用汇总
        , costSummary:function () {
            var that = this;
            $(that.settings.$contentEle).m_costSummary();
        }
        //请假汇总
        , leaveSummary:function () {
            var that = this;
            $(that.settings.$contentEle).m_leaveSummary();
        }
        //出差汇总
        , businessSummary:function () {
            var that = this;
            var option = {};
            option.$type = 4;
            $(that.settings.$contentEle).m_leaveSummary(option);
        }
        //工时汇总
        , workingHoursSummary:function () {
            var that = this;
            var option = {};
            $(that.settings.$contentEle).m_summary_workingHours(option);
        }
        //工时汇总详情
        , workingHoursSummaryDetail:function (query) {
            var option = {};
            option.$projectId = query.projectId;
            option.$projectName = decodeURI(query.projectName);
            $('#content-right').m_summary_workingHours_detail(option);
        }
        //项目总览
        , projectOverview:function () {
            var options = {}, that = this;
            options.isAllProject = true;
            $(that.settings.$contentEle).m_projectList(options, true);
        }
        //创建组织
        , createOrg:function () {
            var options = {};
            options.saveOrgCallback = function (data) {
                var url = '/iWork/home/workbench';
                window.location.href = window.rootPath + url;
            };
            $('#content-right').m_createOrg(options);
        }
        //我的任务-任务签发
        , taskIssueByMyTask:function (query) {
            var option = {};
            option.$projectId = query.projectId;
            option.$projectName = decodeURI(query.projectName);
            $('#content-right').m_myTask_taskIssue(option);
        }
        //我的任务-生产安排
        , productionByMyTask:function (query) {
            var option = {};
            option.$projectId = query.projectId;
            option.$projectName = decodeURI(query.projectName);
            $('#content-right').m_myTask_production(option);
        }
        //我的任务-设、校、审
        , designReviewByMyTask:function (query) {
            var option = {};
            option.$projectId = query.projectId;
            option.$projectName = decodeURI(query.projectName);
            option.$enterType = 'designer';
            $('#content-right').m_myTask_production(option);
        }
        //我的任务-审批
        , approvedByMyTask:function (query) {
            var option = {};
            option.$projectId = query.projectId;
            option.$projectName = decodeURI(query.projectName);
            option.$enterType = 'approved';
            $('#content-right').m_myTask_production(option);
        }
        //我的任务-收支管理
        , incomeExpenditureByMyTask:function (query) {
            var option = {};
            option.projectId = query.projectId;
            option.projectName = decodeURI(query.projectName);
            option.dataAction = query.dataType;
            option.myTaskId = query.myTaskId;
            $('#content-right').m_cost_menu(option,true);
        }

        //项目收支
        ,projectCost:function () {
            var options = {}, that = this;
            $(that.settings.$contentEle).m_payments_projectCost(options, true);
        }
        //发票汇总
        ,invoiceSummary:function () {
            var options = {}, that = this;
            $(that.settings.$contentEle).m_summary_invoice(options, true);
        }

    });

    $.fn[pluginName] = function (options) {
        return this.each(function () {

            //if (!$.data(this, "plugin_" + pluginName)) {
            $.data(this, "plugin_" +
                pluginName, new Plugin(this, options));
            //}
        });
    };

})(jQuery, window, document);

/**
 * 图片裁剪
 */
;(function ($, window, document, undefined) {

    "use strict";
    var pluginName = "m_imgCropper",
        defaults = {
            title: "设置头像",
            showDialog: true,
            croppedCallback: null,
            zoomWidth: 0,//剪切后的缩放宽度
            zoomHeight: 0,//剪切后的缩放高度
            originalFileGroup: null,//
            originalFilePath: null,//
            originalFileName: null,//
            cut_deletePath:null,//剪切后的要删除的（一般指上一个头像之类）
            cropper:{
                options:{
                    aspectRatio: 1 / 1,
                    preview: '.img-preview',
                    zoomable: false,
                    minCropBoxWidth: 50,
                    minCropBoxHeight: 50
                }
            }
        };

    function Plugin(element, options) {
        this.element = element;

        this.settings = $.extend({}, defaults, options);
        this._defaults = defaults;
        this._name = pluginName;

        this._x = 0;
        this._y = 0;
        this._width = 0;
        this._height = 0;

        this._originalFileGroup = '';
        this._originalFilePath = '';
        this._originalFileName = '';

        this.init();
    }

    $.extend(Plugin.prototype, {
        init: function () {
            var that = this;
            that.renderHtml();
        },
        //渲染界面
        renderHtml: function () {
            var that = this;
            if (that.settings.showDialog) {//以弹窗编辑
                S_dialog.dialog({
                    title: that.settings.title,
                    contentEle: 'dialogOBox',
                    lock: 3,
                    width: '600',
                    minHeight: '300',
                    tPadding: '0px',
                    url: window.rootPath + '/assets/module/m_common/m_dialog.html',
                    cancel: function () {

                    },
                    okText: '保存',
                    ok: function () {
                        var imgSrc = $('.setArea .thumbnail img.img-responsive').attr('src');
                        if(imgSrc && imgSrc!=null && imgSrc!=''){
                            that._saveCroppedImage();
                        }else{
                            S_toastr.warning('上传图片不能为空！');
                            return false;
                        }

                    }
                }, function (d) {//加载html后触发
                    that.element = 'div[id="content:' + d.id+'"] .dialogOBox';
                    that._renderTemplate();
                    that.renderPic();
                });
            } else {//不以弹窗编辑
                that._renderTemplate();
                that.renderPic();
            }
        },
        _renderTemplate: function () {
            var that = this;
            var html = template('m_imgCropper/m_imgCropper', {});
            $(that.element).html(html);
            // that._bindUploadOrinalImage();
        }
        //渲染图片
        ,renderPic:function(){
            var that = this;
            var originalFileGroup = that.settings.originalFileGroup;
            var originalFilePath = that.settings.originalFilePath;
            $('.m_imgCropper .img-container').attr('src', window.fastdfsUrl + originalFileGroup + '/' + originalFilePath);

            $(that.element).find('.title:eq(0)').addClass('hide');
            $(that.element).find('.setArea:eq(0)').removeClass('hide');

            setTimeout(function () {
                that._setImage();
            }, 500);
        }
        //上传原图
        , _bindUploadOrinalImage: function () {
            var that = this;
            $('.m_imgCropper .btnFilePicker').m_imgUploader({
                server: window.fileCenterUrl + "/fastUploadImage",
                formData: {
                    cut_deleteGroup:that.settings.cut_deleteGroup,
                    cut_deletePath:that.settings.cut_deletePath
                },
                innerHTML: '<i class="fa fa-upload fa-fixed"></i>',
                uploadSuccessCallback: function (file, response) {
                    that._originalFileGroup = response.data.fastdfsGroup;
                    that._originalFilePath = response.data.fastdfsPath;
                    that._originalFileName = response.data.fileName;

                    //渲染图片
                    $('.m_imgCropper .img-container').attr('src', window.fastdfsUrl + that._originalFileGroup + '/' + that._originalFilePath);

                    $(that.element).find('.title:eq(0)').addClass('hide');
                    $(that.element).find('.setArea:eq(0)').removeClass('hide');

                    setTimeout(function () {
                        that._setImage();
                    }, 500);

                    S_toastr.success(response.info);
                }
            },true);
        }
        //保存裁切过的图片并替换Fastdfs上原图
        , _saveCroppedImage: function () {
            var that = this;
            var cutPostData = {
                x: that._x,
                y: that._y,
                width: that._width,
                height: that._height,
                zoomWidth: that.settings.zoomWidth,
                zoomHeight: that.settings.zoomHeight,
                group: that.settings.originalFileGroup,
                path: that.settings.originalFilePath,
                fileName: that.settings.originalFileName
            };
            var option = {};
            option.url = window.fileCenterUrl + "/fastCutImage";
            option.postData = cutPostData;
            m_ajax.postJson(option, function (response) {
                if (response.code === '0') {
                    if (that.settings.croppedCallback !== null) {
                        return that.settings.croppedCallback(response.data);
                    }
                } else {
                    S_dialog.error(response.info);
                }
            });
        }
        //初始化cropping插件
        , _setImage: function () {
            var that = this;
            var $image = $('.m_imgCropper .img-container');
            /*var options = {
                aspectRatio: 1 / 1,
                preview: '.img-preview',
                zoomable: false,
                minCropBoxWidth: 50,
                minCropBoxHeight: 50,
                crop: function (e) {
                    that._x = e.x;
                    that._y = e.y;
                    that._width = e.width;
                    that._height = e.height;
                }
            };*/

            that.settings.cropper.options.crop=function(e){
                that._x = e.x;
                that._y = e.y;
                that._width = e.width;
                that._height = e.height;
            };

            $image.on({
                'build.cropper': function (e) {

                },
                'built.cropper': function (e) {

                },
                'cropstart.cropper': function (e) {

                },
                'cropmove.cropper': function (e) {

                },
                'cropend.cropper': function (e) {

                },
                'crop.cropper': function (e) {
                    that._x = e.x;
                    that._y = e.y;
                    that._width = e.width;
                    that._height = e.height;
                },
                'zoom.cropper': function (e) {

                }
            }).cropper(that.settings.cropper.options);
        }

    });

    $.fn[pluginName] = function (options) {
        return this.each(function () {
            //if (!$.data(this, "plugin_" + pluginName)) {
            //$.data(this, "plugin_" +
                //pluginName, new Plugin(this, options));
            //}
            new Plugin(this, options);
        });
    };

})(jQuery, window, document);

/**
 * Created by Wuwq on 2017/1/5.
 */
;(function ($, window, document, undefined) {

    "use strict";
    var pluginName = "m_inviteBPartner",
        defaults = {
            a_companyName: null,
            a_systemManager: null,
            cellphone: null,
            userId: null
        };

    function Plugin(element, options) {
        this.element = element;

        this.settings = options;
        this._defaults = defaults;
        this._name = pluginName;
        this.init();
    }

    $.extend(Plugin.prototype, {
        init: function () {
            var that = this;
            that._render();
        }
        //渲染首屏
        , _render: function () {
            var that = this;

            var option = {};
            option.url = restApi.url_getCompanyByInviteUrl + '/' + $('#invitedId').val();
            option.classId = '.div-invite-bPaner';
            option.postData = {};
            m_ajax.postJson(option, function (response) {
                if (response.code == '0') {

                    that.settings.a_companyName = response.data.companyName;
                    that.settings.a_systemManager = response.data.systemManager;

                    var data = {};
                    data.companyName = response.data.companyName;
                    data.systemManager = response.data.systemManager;
                    data.cellphone = response.data.cellphone;
                    data.filePath = response.data.filePath;
                    var html = template('m_inviteBPartner/m_inviteBPartner', data);
                    $(that.element).html(html);
                    that._bindKeyDownEnter();
                    that._bindAction();
                } else {
                    S_dialog.tips(response.info);
                }
            });
        }
        //回车键
        , _bindKeyDownEnter: function () {
            var that = this;
            $('#cellphone').keydown(function (e) {
                if (event.keyCode == 13) {
                    that._verify();
                    stopPropagation(e);
                    preventDefault(e);
                    return false;
                }
            });
        }
        , _bindAction: function () {
            var that = this;
            $(that.element).find('.btn-ok:eq(0)').click(function () {
                that._verify();
            });
        }
        //验证手机号
        , _verify: function () {
            var that = this;
            var invitedId = $('#invitedId').val();
            that.settings.cellphone = $('#cellphone').val();

            var option = {};
            option.url = restApi.url_verifyIdentityForBPartner;
            option.classId = '.div-invite-bPaner';
            option.postData = {id: invitedId, cellphone: that.settings.cellphone};
            m_ajax.postJson(option, function (response) {
                if (response.code === '0') {
                    that._renderOrg();
                } else {
                    S_dialog.tips(response.info);
                }
            });
        }
        //渲染团队选择页面
        , _renderOrg: function () {
            var that = this;

            var invitedId = $('#invitedId').val();

            var option = {};
            option.url = restApi.url_getCompanyPrincipal;
            option.classId = '.div-invite-bPaner';
            option.postData = {id: invitedId, cellphone: that.settings.cellphone};
            m_ajax.postJson(option, function (response) {
                if (response.code === '0') {
                    if (response.data.companyList) {
                        if (response.data.companyList.length > 0) {
                            var html = template('m_inviteBPartner/m_inviteBPartner_org', {companyList: response.data.companyList,a_companyName:that.settings.a_companyName});
                            $(that.element).html(html);
                            that._bindCreateOrg(response.data);
                            that._bindSelectOrg();
                        } else {
                            var html = template('m_inviteBPartner/m_inviteBPartner_org_hasNo', {});
                            $(that.element).html(html);
                            that._bindCreateOrg(response.data);
                        }
                    }
                } else {
                    S_dialog.tips(response.info);
                }
            });
        }
        //创建团队
        , _bindCreateOrg: function (data) {
            var that = this;
            $(that.element).find('a[data-action="createOrg"]').click(function (e) {
                if (data.userId === void 0 || data.userId === null) {
                    var html = template('m_inviteBPartner/m_inviteBPartner_create_hasNo', {a_companyName:that.settings.a_companyName});
                    $(that.element).html(html);
                    that._bindCreateOrgAndAccountSubmit();
                    that.createOrgOBox_validate();
                } else {
                    that.settings.userId = data.userId;
                    var html = template('m_inviteBPartner/m_inviteBPartner_create_has', {a_companyName:that.settings.a_companyName});
                    $(that.element).html(html);
                    that._bindCreateOrgSubmit();
                }
            });
        }
        , _bindCreateOrgSubmit: function () {
            var that = this;
            var invitedId = $('#invitedId').val();
            $(that.element).find('a[data-action="createOrgSubmit"]').click(function (e) {
                var companyName = $(that.element).find('input[name="companyName"]:eq(0)').val();
                var option = {};
                if($(that.element).find("form.createOrgOBox").valid()) {
                    option.url = restApi.url_createBusinessPartner;
                    option.classId = 'body';
                    option.postData = {
                        userId: that.settings.userId,
                        inviteId: invitedId,
                        cellphone: that.settings.cellphone,
                        companyName: companyName
                    };
                    m_ajax.postJson(option, function (response) {
                        if (response.code === '0') {
                            var html = template('m_inviteBPartner/m_inviteBPartner_success', {
                                companyName: companyName,
                                a_companyName: that.settings.a_companyName
                            });
                            $(that.element).html(html);
                        } else {
                            S_dialog.tips(response.info);
                        }
                    });
                }
            });
        },
        createOrgOBox_validate: function () {//注册的表单验证
            var that = this;
            $(that.element).find("form.createOrgOBox").validate({
                rules: {
                    userName: "required",
                    adminPassword: {
                        required: true,
                        rangelength: [6, 12],
                        checkSpace: true
                    },
                    companyName:"required"

                },
                messages: {
                    userName: "请输入姓名！",
                    adminPassword: {
                        required: '请输入密码！',
                        rangelength: "密码为6-12位！",
                        checkSpace: "密码不应含有空格!"
                    },
                    companyName:"请输入组织名称！"

                },
                errorElement: 'label'
            });
            //密码验证
            $.validator.addMethod("checkSpace", function (value, element) {
                var pattern = /^\S+$/gi;
                return this.optional(element) || pattern.test(value);
            }, "密码不应含有空格!");
        }
        , _bindCreateOrgAndAccountSubmit: function () {
            var that = this;
            var invitedId = $('#invitedId').val();
            $(that.element).find('a[data-action="createOrgAndAccountSubmit"]').click(function (e) {

                var userName = $(that.element).find('input[name="userName"]:eq(0)').val();
                var adminPassword = $(that.element).find('input[name="adminPassword"]:eq(0)').val();
                var companyName = $(that.element).find('input[name="companyName"]:eq(0)').val();

                var option = {};

                if($(that.element).find("form.createOrgOBox").valid()){
                    option.url = restApi.url_createBusinessPartner;
                    option.classId = 'body';
                    option.postData = {
                        inviteId: invitedId,
                        companyName: companyName,
                        cellphone: that.settings.cellphone,
                        userName: userName,
                        adminPassword: adminPassword
                    };
                    m_ajax.postJson(option, function (response) {
                        if (response.code === '0') {
                            S_dialog.tips("操作成功");
                            var html = template('m_inviteBPartner/m_inviteBPartner_success', {
                                companyName: companyName,
                                a_companyName: that.settings.a_companyName
                            });
                            $(that.element).html(html);
                        } else {
                            S_dialog.tips(response.info);
                        }
                    });
                }

            });
        }
        , _bindSelectOrg: function () {
            var that = this;
            var invitedId = $('#invitedId').val();

            $(that.element).find('li[data-action="selectOrg"]').click(function (e) {
                S_dialog.tips('选择无效，该组织'+$(this).attr('data-memo'));
            });

            $(that.element).find('li[data-action="selectOrgApply"]').click(function (e) {
                var companyId = $(this).attr('data-company-id');
                var companyName=$(this).attr('data-company-name');
                $(this).m_popover({
                    placement: 'top',
                    content: template('m_common/m_popover_confirm', {confirmMsg: '确定选择该组织来建立事业合伙人关系吗?'}),
                    onSave: function ($popover) {
                        var option = {};
                        option.url = restApi.url_applayBusinessPartner;
                        option.classId = 'body';
                        option.postData = {
                            inviteId: invitedId,
                            cellphone: that.settings.cellphone,
                            companyId: companyId
                        };
                        m_ajax.postJson(option, function (response) {
                            if (response.code === '0') {
                                S_dialog.tips("操作成功");
                                var html = template('m_inviteBPartner/m_inviteBPartner_success', {
                                    companyName: companyName,
                                    a_companyName: that.settings.a_companyName
                                });
                                $(that.element).html(html);
                            } else {
                                S_dialog.tips(response.info);
                            }
                        });
                    }
                }, true);
            });
        }
    });

    /*
     1.一般初始化（缓存单例）： $('#id').pluginName(initOptions);
     2.强制初始化（无视缓存）： $('#id').pluginName(initOptions,true);
     3.调用方法： $('#id').pluginName('methodName',args);
     */
    $.fn[pluginName] = function (options, args) {
        var instance;
        var funcResult;
        var jqObj = this.each(function () {

            //从缓存获取实例
            instance = $.data(this, "plugin_" + pluginName);

            if (options === undefined || options === null || typeof options === "object") {

                var opts = $.extend(true, {}, defaults, options);

                //options作为初始化参数，若args===true则强制重新初始化，否则根据缓存判断是否需要初始化
                if (args === true) {
                    instance = new Plugin(this, opts);
                } else {
                    if (instance === undefined || instance === null)
                        instance = new Plugin(this, opts);
                }

                //写入缓存
                $.data(this, "plugin_" + pluginName, instance);
            }
            else if (typeof options === "string" && typeof instance[options] === "function") {

                //options作为方法名，args则作为方法要调用的参数
                //如果方法没有返回值，funcReuslt为undefined
                funcResult = instance[options].call(instance, args);
            }
        });

        return funcResult === undefined ? jqObj : funcResult;
    };

})(jQuery, window, document);
/**
 * Created by Wuwq on 2017/1/5.
 */
;(function ($, window, document, undefined) {

    "use strict";
    var pluginName = "m_inviteBranch",
        defaults = {
            a_companyName: null,
            a_systemManager: null,
            cellphone: null,
            userId: null
        };

    function Plugin(element, options) {
        this.element = element;

        this.settings = options;
        this._defaults = defaults;
        this._name = pluginName;
        this.init();
    }

    $.extend(Plugin.prototype, {
        init: function () {
            var that = this;
            that._render();
        }
        //渲染首屏
        , _render: function () {
            var that = this;

            var option = {};
            option.url = restApi.url_getCompanyByInviteUrl + '/' + $('#invitedId').val();
            option.classId = '.div-invite-bPaner';
            option.postData = {};
            m_ajax.postJson(option, function (response) {
                if (response.code == '0') {

                    that.settings.a_companyName = response.data.companyName;
                    that.settings.a_systemManager = response.data.systemManager;

                    var data = {};
                    data.companyName = response.data.companyName;
                    data.systemManager = response.data.systemManager;
                    data.cellphone = response.data.cellphone;
                    data.filePath = response.data.filePath;
                    var html = template('m_inviteBranch/m_inviteBranch', data);
                    $(that.element).html(html);
                    that._bindKeyDownEnter();
                    that._bindAction();
                } else {
                    S_dialog.tips(response.info);
                }
            });
        }
        //回车键
        , _bindKeyDownEnter: function () {
            var that = this;
            $('#cellphone').keydown(function (e) {
                if (event.keyCode == 13) {
                    that._verify();
                    stopPropagation(e);
                    preventDefault(e);
                    return false;
                }
            });
        }
        , _bindAction: function () {
            var that = this;
            $(that.element).find('.btn-ok:eq(0)').click(function () {
                that._verify();
            });
        }
        //验证手机号
        , _verify: function () {
            var that = this;
            var invitedId = $('#invitedId').val();
            that.settings.cellphone = $('#cellphone').val();

            var option = {};
            option.url = restApi.url_verifyIdentityForBPartner;
            option.classId = '.div-invite-bPaner';
            option.postData = {id: invitedId, cellphone: that.settings.cellphone};
            m_ajax.postJson(option, function (response) {
                if (response.code === '0') {
                    that._renderOrg();
                } else {
                    S_dialog.tips(response.info);
                }
            });
        }
        //渲染团队选择页面
        , _renderOrg: function () {
            var that = this;

            var invitedId = $('#invitedId').val();

            var option = {};
            option.url = restApi.url_getCompanyPrincipal;
            option.classId = '.div-invite-bPaner';
            option.postData = {id: invitedId, cellphone: that.settings.cellphone};
            m_ajax.postJson(option, function (response) {
                if (response.code === '0') {
                    if (response.data.companyList) {
                        if (response.data.companyList.length > 0) {
                            var html = template('m_inviteBranch/m_inviteBranch_org', {companyList: response.data.companyList,a_companyName:that.settings.a_companyName});
                            $(that.element).html(html);
                            that._bindCreateOrg(response.data);
                            that._bindSelectOrg();
                        } else {
                            var html = template('m_inviteBranch/m_inviteBranch_org_hasNo', {});
                            $(that.element).html(html);
                            that._bindCreateOrg(response.data);
                        }
                    }
                } else {
                    S_dialog.tips(response.info);
                }
            });
        }
        //创建团队
        , _bindCreateOrg: function (data) {
            var that = this;
            $(that.element).find('a[data-action="createOrg"]').click(function (e) {
                if (data.userId === void 0 || data.userId === null) {
                    var html = template('m_inviteBranch/m_inviteBranch_create_hasNo', {a_companyName:that.settings.a_companyName});
                    $(that.element).html(html);
                    that._bindCreateOrgAndAccountSubmit();
                } else {
                    that.settings.userId = data.userId;
                    var html = template('m_inviteBranch/m_inviteBranch_create_has', {a_companyName:that.settings.a_companyName});
                    $(that.element).html(html);
                    that._bindCreateOrgSubmit();
                }
                that.createOrgOBox_validate();
            });
        }
        , _bindCreateOrgSubmit: function () {
            var that = this;
            var invitedId = $('#invitedId').val();
            $(that.element).find('a[data-action="createOrgSubmit"]').click(function (e) {
                var companyName = $(that.element).find('input[name="companyName"]:eq(0)').val();
                var option = {};
                if($(that.element).find("form.createOrgOBox").valid()) {
                    option.url = restApi.url_createBusinessPartner;
                    option.classId = 'body';
                    option.postData = {
                        userId: that.settings.userId,
                        inviteId: invitedId,
                        cellphone: that.settings.cellphone,
                        companyName: companyName
                    };
                    m_ajax.postJson(option, function (response) {
                        if (response.code === '0') {
                            var html = template('m_inviteBranch/m_inviteBranch_success', {
                                companyName: companyName,
                                a_companyName: that.settings.a_companyName
                            });
                            $(that.element).html(html);
                        } else {
                            S_dialog.tips(response.info);
                        }
                    });
                }
            });
        }
        , _bindCreateOrgAndAccountSubmit: function () {
            var that = this;
            var invitedId = $('#invitedId').val();
            $(that.element).find('a[data-action="createOrgAndAccountSubmit"]').click(function (e) {

                var userName = $(that.element).find('input[name="userName"]:eq(0)').val();
                var adminPassword = $(that.element).find('input[name="adminPassword"]:eq(0)').val();
                var companyName = $(that.element).find('input[name="companyName"]:eq(0)').val();

                var option = {};
                if($(that.element).find("form.createOrgOBox").valid()){
                    option.url = restApi.url_createBusinessPartner;
                    option.classId = 'body';
                    option.postData = {
                        inviteId: invitedId,
                        companyName: companyName,
                        cellphone: that.settings.cellphone,
                        userName: userName,
                        adminPassword: adminPassword
                    };
                    m_ajax.postJson(option, function (response) {
                        if (response.code === '0') {
                            S_dialog.tips("操作成功");
                            var html = template('m_inviteBranch/m_inviteBranch_success', {
                                companyName: companyName,
                                a_companyName: that.settings.a_companyName
                            });
                            $(that.element).html(html);
                        } else {
                            S_dialog.tips(response.info);
                        }
                    });
                }
            });
        }

        ,createOrgOBox_validate: function () {//注册的表单验证
            var that = this;
            $(that.element).find("form.createOrgOBox").validate({
                rules: {
                    userName: "required",
                    adminPassword: {
                        required: true,
                        rangelength: [6, 12],
                        checkSpace: true
                    },
                    companyName:"required"

                },
                messages: {
                    userName: "请输入姓名！",
                    adminPassword: {
                        required: '请输入密码！',
                        rangelength: "密码为6-12位！",
                        checkSpace: "密码不应含有空格!"
                    },
                    companyName:"请输入组织名称！"

                },
                errorElement: 'label'
            });
            //密码验证
            $.validator.addMethod("checkSpace", function (value, element) {
                var pattern = /^\S+$/gi;
                return this.optional(element) || pattern.test(value);
            }, "密码不应含有空格!");
        }
        , _bindSelectOrg: function () {
            var that = this;
            var invitedId = $('#invitedId').val();

            $(that.element).find('li[data-action="selectOrg"]').click(function (e) {
                S_dialog.tips('选择无效，该组织'+$(this).attr('data-memo'));
            });

            $(that.element).find('li[data-action="selectOrgApply"]').click(function (e) {
                var companyId = $(this).attr('data-company-id');
                var companyName=$(this).attr('data-company-name');
                $(this).m_popover({
                    placement: 'top',
                    content: template('m_common/m_popover_confirm', {confirmMsg: '确定选择该组织来建立分支机构关系吗?'}),
                    onSave: function ($popover) {
                        var option = {};
                        option.url = restApi.url_applayBusinessPartner;
                        option.classId = 'body';
                        option.postData = {
                            inviteId: invitedId,
                            cellphone: that.settings.cellphone,
                            companyId: companyId
                        };
                        m_ajax.postJson(option, function (response) {
                            if (response.code === '0') {
                                S_dialog.tips("操作成功");
                                var html = template('m_inviteBranch/m_inviteBranch_success', {
                                    companyName: companyName,
                                    a_companyName: that.settings.a_companyName
                                });
                                $(that.element).html(html);
                            } else {
                                S_dialog.tips(response.info);
                            }
                        });
                    }
                }, true);
            });
        }
    });

    /*
     1.一般初始化（缓存单例）： $('#id').pluginName(initOptions);
     2.强制初始化（无视缓存）： $('#id').pluginName(initOptions,true);
     3.调用方法： $('#id').pluginName('methodName',args);
     */
    $.fn[pluginName] = function (options, args) {
        var instance;
        var funcResult;
        var jqObj = this.each(function () {

            //从缓存获取实例
            instance = $.data(this, "plugin_" + pluginName);

            if (options === undefined || options === null || typeof options === "object") {

                var opts = $.extend(true, {}, defaults, options);

                //options作为初始化参数，若args===true则强制重新初始化，否则根据缓存判断是否需要初始化
                if (args === true) {
                    instance = new Plugin(this, opts);
                } else {
                    if (instance === undefined || instance === null)
                        instance = new Plugin(this, opts);
                }

                //写入缓存
                $.data(this, "plugin_" + pluginName, instance);
            }
            else if (typeof options === "string" && typeof instance[options] === "function") {

                //options作为方法名，args则作为方法要调用的参数
                //如果方法没有返回值，funcReuslt为undefined
                funcResult = instance[options].call(instance, args);
            }
        });

        return funcResult === undefined ? jqObj : funcResult;
    };

})(jQuery, window, document);
/**
 * Created by veata on 2016/12/28
 * it applies in changing password when users forgets it
 */
;(function ($, window, document, undefined) {

    "use strict";
    var pluginName = "m_forgetPWD",
        defaults = {
            companyName:null,
            nextStepUrl:null,
            toSuccessUrl:null,
            companyId:null,
            userId:null,
            getCodeUrl:null,
            saveUrl:null
        };

    // The actual plugin constructor
    function Plugin(element, options) {
        this.element = element;

        this.settings = $.extend({}, defaults, options);
        this._defaults = defaults;
        this._cellphone = null;
        this._name = pluginName;
        this.init();
    }

    // Avoid Plugin.prototype conflicts
    $.extend(Plugin.prototype, {
        init: function () {
            var that  = this;
            that._initHtmlData();
        }
        //初始化数据
        ,_initHtmlData:function (callBack) {
            var that = this;
            var $data = {};
            $data.title = that.settings.title||'重置用户密码';
            $data.rootPath = window.rootPath;
            var html = template('m_login/m_forgetPWDStep1',$data);
            $(that.element).html(html);
            that.forgetStep1_validate();
            that.bindStep1ClickAction();
            that.bindKeyDownEnter();

        },
        bindKeyDownEnter: function () {
            var that = this;
            $('body').keydown(function () {
                if (event.keyCode == 13)
                    that.forgetStep2();
            });
        },
        bindStep1ClickAction:function(){//给按钮添加绑定事件
            var that = this;
            $(that.element).find('form.forgetStep1OBox').find('a[data-action],input[data-action]').bind('click',function(){
                var action = $(this).attr('data-action');
                if($(this).attr('disabled')=='disabled'){
                    return false;
                }
                if(action == "getCode"){
                    if (that.receiveCode_validate()) {
                        $('#getCode').attr('disabled', 'disabled');
                        that.receiveCode();
                    }
                }
                if(action == "nextStep"){
                    that.forgetStep1();
                }
            });
        },
        bindStep2ClickAction:function(){//给按钮添加绑定事件
            var that = this;
            $(that.element).find('form.forgetStep2OBox').find('a[data-action],input[data-action]').bind('click',function(){
                var action = $(this).attr('data-action');
                 if(action == 'completeChange'){//点击完成
                    that.forgetStep2();
                }
            });

            $('#password').keydown(function () {
                if (event.keyCode == 13){
                    that.forgetStep2();
                    return false;
                }
            });
        },
        receiveCode:function(){//点击获取验证码
            var clock = 0;
            var that = this;
            that.getCode(clock);
            var option = {};
                option.classId='forgetOBox';
                var userId = that.settings.userId;
                if(userId && userId!==void 0 && userId!='null'){
                    option.url=that.settings.getCodeUrl+'/'+$('#userId').val()+'/'+$('#cellphone').val();
                    option.postData={};
                }else{
                    option.url=that.settings.getCodeUrl;
                    option.postData={};
                    option.postData.cellphone = $('#cellphone').val();
                }
                /* option.postData.userId=$('#userId').val();
                 option.postData.cellphone=$('#cellphone').val();*/
                m_ajax.postJson(option,function (response) {
                    if (response.code == 0) {
                    }
                    else {
                        S_dialog.error(response.info);
                        clock = 0;
                        window.clearInterval(timer);
                        window.timer=null;
                        $('#getCode').removeClass('startCode').addClass('endCode');
                        $('#getCode').removeAttr('disabled');
                        $('#getCode').html('获取验证码');
                    }
                });
        },
        getCode:function(c,type){
            c = 60;
            $('#getCode').html(c);
            window.timer=setInterval(function() {
                if(c>0)
                {
                    c = c-1;
                    $('#getCode').removeClass('endCode').addClass('startCode').attr('disabled','disabled');

                    $('#getCode').html(c);
                }else{
                    if("undefined" != typeof timer){
                        window.clearInterval(timer);
                    }
                    $('#getCode').removeClass('endCode').addClass('startCode').removeAttr('disabled');
                    $('#getCode').removeClass('startCode').addClass('endCode');
                    $('#getCode').html('获取验证码');
                }
            }, 1000);
        },
        receiveCode_validate:function() {//step1的表单验证
            var error = [];
            var cellphone = $('#cellphone').val();
            var mobile = /^(13[0-9]{9})|(18[0-9]{9})|(14[0-9]{9})|(17[0-9]{9})|(15[0-9]{9})$/;
            if (cellphone == '' || cellphone == null) {
                error.push('请输入手机号码');
            } else if (!mobile.test(cellphone)) {
                error.push('请正确填写您的手机号码');
            }
            if (error.length > 0) {
                var html = '<label id="cellphone-error" class="error" for="cellphone">';
                html+=error[0];
                html+='</label>';
                if($('#cellphone').parent().find('#cellphone-error').length<1){
                    $('#cellphone').after(html);
                }
                return false;
            }else{
                return true;
            }
        },
        forgetStep1:function(){//点击进入下一步
            var that = this;
            if ($(that.element).find("form.forgetStep1OBox").valid()) {
                var that = this;
                var option = {};
                option.classId='forgetOBox';
                option.url=that.settings.nextStepUrl;
                option.postData={};
                that._cellphone=$('#cellphone').val();
                option.postData.cellphone=$('#cellphone').val();
                option.postData.code=$('input[name="verifcationCode"]').val();
                m_ajax.postJson(option,function (response) {
                    if (response.code == 0) {
                        var cellphone = $('#forgetStepOBox form.forgetStep1OBox').find('#cellphone').val();
                        $('#forgetStepOBox').html('');
                        var $data = {};
                        $data.title = that.settings.title||'重置用户密码';
                        $data.cellphone = cellphone;
                        var html = template('m_login/m_forgetPWDStep2',$data);
                        $('#forgetStepOBox').html(html);
                        that.forgetStep2_validate();
                        that.bindStep2ClickAction();
                    }
                    else {
                        S_dialog.error(response.info);
                    }
                })
            }
            return false;
        },
        forgetStep2:function(){//点击完成重置密码
            var that = this;
            if ($(that.element).find("form.forgetStep2OBox").valid()) {
                var option = {};
                option.url = that.settings.saveUrl;
                option.async = false;
                option.postData = {};
                if(that.settings.userId && that.settings.companyId) {
                    option.postData.userId = that.settings.userId;
                    option.postData.companyId = that.settings.companyId;
                    option.postData.cellphone = that._cellphone;
                    option.postData.adminPassword = $('#password').val();
                }else{
                    option.postData.cellphone = that._cellphone;
                    option.postData.password = $('#password').val();
                }

                m_ajax.postJson(option, function (response) {
                    if (response.code == 0) {
                        /*S_toastr.success('修改成功！确定跳转请重新登录。');
                        setTimeout(function(){
                            var url = that.settings.toSuccessUrl||'/iWork/sys/login';
                            if (response.data != null && response.data != '')
                                url = response.data;
                            window.location.href = window.rootPath + url;
                        },1500);*/
                        S_swal.sure({
                            title:'修改成功！',
                            text:'确定跳转请重新登录。',
                            callBack:function () {
                                var url = that.settings.toSuccessUrl||'/iWork/sys/login';
                                if (response.data != null && response.data != '')
                                    url = response.data;
                                window.location.href = window.rootPath + url;
                                return false;
                            }
                        });
                    }
                    else {
                        S_dialog.error(response.info);
                    }
                })
            }
            return false;
        },
        forgetStep1_validate:function(){//step1的表单验证
            var that = this;
            $(that.element).find("form.forgetStep1OBox").validate({
                rules: {
                    cellphone: {
                        required: true,
                        minlength: true,
                        isMobile: true
                    },
                    verifcationCode: "required"
                },
                messages: {
                    cellphone: {
                        required: "请输入手机号码",
                        minlength: "确认手机不能小于6个字符",
                        isMobile: "请正确填写您的手机号码"
                    },
                    verifcationCode: "请输入验证码"
                },

                errorElement:'label',
                errorPlacement:function(error,element){
                    error.appendTo(element.closest('.form-group'));
                    error.addClass('input_error');
                }
            });
            // 手机号码验证
            jQuery.validator.addMethod("isMobile", function(value, element) {
                var length = value.length;
                var mobile = /^(13[0-9]{9})|(18[0-9]{9})|(14[0-9]{9})|(17[0-9]{9})|(15[0-9]{9})$/;
                return this.optional(element) || (length == 11 && mobile.test(value));
            }, "请正确填写您的手机号码");
        },
        forgetStep2_validate:function(){//step1的表单验证
            var that = this;
            $(that.element).find("form.forgetStep2OBox").validate({
                rules: {
                    userName: "required",
                    password: {
                        required: true,
                        rangelength:[6,12],
                        checkSpace:true
                    }
                },
                messages: {
                    userName: "请输入姓名！",
                    password: {
                        required:'请输入密码！',
                        rangelength: "密码为6-12位！",
                        checkSpace: "密码不应含有空格!"
                    }

                },
                errorElement:'label',
                errorPlacement:function(error,element){
                    error.appendTo(element.closest('.form-group'));
                    error.addClass('input_error');
                }
            });
            $.validator.addMethod("checkSpace", function(value, element) {
                var pattern=/^\S+$/gi;
                return this.optional(element) || pattern.test( value ) ;
            }, "密码不应含有空格!");
        }


    });

    $.fn[pluginName] = function (options) {
        return this.each(function () {

            //if (!$.data(this, "plugin_" + pluginName)) {
            $.data(this, "plugin_" +
                pluginName, new Plugin(this, options));
            //}
        });
    };

})(jQuery, window, document);

/**
 *
 * Created by veata on 2016/12/22.
 */
;(function ($, window, document, undefined) {

    "use strict";
    var pluginName = "m_login",
        defaults = {

        };

    // The actual plugin constructor
    function Plugin(element, options) {
        this.element = element;

        this.settings = $.extend({}, defaults, options);
        this._defaults = defaults;
        this._name = pluginName;
        this.init();
    }

    // Avoid Plugin.prototype conflicts
    $.extend(Plugin.prototype, {
        init:function(){
            var that=this;
            that.initHtmlData(function(){
                that.login_validate();
                that.bindKeyDownEnter();
                that.bindOkLogin()
            });

        },
        initHtmlData:function(callback){
            var that = this;
            var rootPath = window.rootPath;
            var html = template('m_login/m_login',{rootPath:rootPath});
            $(that.element).html(html);
            if(callback) return callback();
        },
        bindKeyDownEnter: function () {
            var that = this;
            $('#password').keydown(function () {
                if (event.keyCode == 13)
                    that.login();
            });
        },
        bindOkLogin: function(){
            var that = this;
            $(that.element).find('#btnLogin').on('click',function(event){
                that.login();
            });
        },
        login: function () {
            if ($("#loginForm").valid()) {
                var option = {};
                option.classId = '.login-form';
                option.url = restApi.url_homeLogin;
                option.postData = {};
                option.postData.cellphone = $('#cellphone').val();
                option.postData.password = $('#password').val();
                m_ajax.postJson(option, function (response) {
                    if (response.code == 0) {

                        Cookies.remove('projectList_cookiesData');

                        var url = '/iWork/home/workbench/1';
                        window.location.href = window.rootPath + url;
                    }
                    else {
                        S_dialog.error(response.info);
                    }
                });
            }
            return false;
        },
        login_validate: function () {//点击登录时进行密码验证
            $("#loginForm").validate({
                rules: {
                    cellphone: "required",
                    password: "required"
                },
                messages: {
                    cellphone: "请输入手机号码",
                    password: "请输入账号密码"
                },
                highlight: function (element, errorClass, validClass) {
                    $(element).removeClass("valid-success").addClass("valid-error");
                },
                unhighlight: function (element, errorClass, validClass) {
                    $(element).tooltip('destroy');
                    $(element).removeClass("valid-error");
                    //$(element).removeClass("valid-error").addClass("valid-success");
                },
                success: function (element, errorClass, validClass) {
                    $(element).tooltip('destroy');
                    $(element).removeClass("valid-error");
                    //$(element).removeClass("valid-error").addClass("valid-success");
                },
                /*errorElement:"span",*/
                errorPlacement: function (label, element) {
                    /* $(element).appendTo(r.is(":radio")||r.is(":checkbox")?r.parent().parent().parent():r.parent());*/
                    $(element).attr('title', $(label).text()).tooltip({placement: 'left'}).tooltip('show');
                }
            });
        }



    });

    $.fn[pluginName] = function (options) {
        return this.each(function () {

            //if (!$.data(this, "plugin_" + pluginName)) {
            $.data(this, "plugin_" +
                pluginName, new Plugin(this, options));
            //}
        });
    };

})(jQuery, window, document);

/**
 *
 * Created by veata on 2016/12/22.
 */
;(function ($, window, document, undefined) {

    "use strict";
    var pluginName = "m_register",
        defaults = {
            cellphone: null
        };

    // The actual plugin constructor
    function Plugin(element, options) {
        this.element = element;

        this.settings = $.extend({}, defaults, options);
        this._defaults = defaults;
        this._cellphone = '';
        this._name = pluginName;
        this.init();
    }

    // Avoid Plugin.prototype conflicts
    $.extend(Plugin.prototype, {
        init: function () {
            var that = this;
            that.getRegisterHtml(function () {
                that.bindClickFun();
                that.bindKeyDownEnter();
                that.registerOBox_validate();
            });
        },
        //敲打回车enter键提交请求
        bindKeyDownEnter: function () {
            var that = this;
            $(that.element).find('input').keydown(function () {
                if (event.keyCode == 13)
                    that.toRegister();
            });
        },
        getRegisterHtml: function (callback) {
            var that = this;
            var $data = {};
            $data.rootPath = window.rootPath;
            $data.cdnUrl = window.cdnUrl;
            var html = template('m_login/m_register', $data);
            $(that.element).html(html);
            if (callback) {
                return callback();
            }
        },
        bindClickFun: function () {
            var that = this;
            $(that.element).find('a[data-action]').on('click', function (event) {
                var action = $(this).attr('data-action');
                if ($(this).attr('disabled') == 'disabled') {
                    return false;
                }
                if (action == "getCode") {
                    if (that.receiveCode_validate()) {
                        $('#getCode').attr('disabled', 'disabled');
                        that.receiveCode();
                    }
                }
                if (action == "nextStep") {
                    that.step1();
                }
                if (action == "submitRegister") {
                    that.toRegister();
                }
                stopPropagation(event);
            })
        },
        //点击获取验证码
        receiveCode: function () {
            var that = this;
            var clock = 0;
            that.getCode(clock);
            var option = {};
            option.classId = 'registerOBox';
            option.url = restApi.url_homeRegister_securityCode;
            option.postData = {};
            option.postData.cellphone = $('#cellphone').val();
            m_ajax.postJson(option, function (response) {
                if (response.code == 0) {
                }
                else {
                    S_dialog.error(response.info);
                    clock = 0;
                    window.clearInterval(timer);
                    window.timer=null;
                    $('#getCode').removeClass('startCode').addClass('endCode');
                    $('#getCode').removeAttr('disabled');
                    $('#getCode').html('获取验证码');
                }
            });

        },
        //验证码
        getCode: function (c) {
            c = 60;
            $('#getCode').html(c);
            window.timer = setInterval(function () {
                if (c > 0) {
                    c = c - 1;
                    $('#getCode').removeClass('endCode').addClass('startCode').attr('disabled', 'disabled');

                    $('#getCode').html(c);
                } else {
                    if ("undefined" != typeof timer) {
                        window.clearInterval(timer);
                    }
                    $('#getCode').removeClass('endCode').addClass('startCode').removeAttr('disabled');
                    $('#getCode').removeClass('startCode').addClass('endCode');
                    $('#getCode').html('获取验证码');
                }
            }, 1000);
        },
        toRegister: function () {//点击完成注册
            var that = this;
            if ($(that.element).find("form.registerOBox").valid()) {
                var option = {};
                option.classId = 'registerOBox';
                option.url = restApi.url_homeRegister_register;
                option.postData = {};
                option.postData.cellphone = $('#cellphone').val();
                option.postData.code = $('#verifcationCode').val();
                option.postData.userName = $('#userName').val();
                option.postData.password = $('#password').val();
                m_ajax.postJson(option, function (response) {
                    if (response.code == 0) {
                        S_toastr.success('注册成功，欢迎进入卯丁！');
                        setTimeout(function () {
                            var url = '/iWork/home/workbench';//默认
                            /*if (response.data != null && response.data != '')
                                url = response.data;*/
                            window.location.href = rootPath + url;
                        }, 1500);
                    }
                    else {
                        S_dialog.error(response.info);
                    }
                });
            }
            return false;
        },
        //验证是否手机号填写格式正确
        receiveCode_validate: function () {//step1的表单验证
            var error = [];
            var cellphone = $('#cellphone').val();
            var mobile = /^(13[0-9]{9})|(18[0-9]{9})|(14[0-9]{9})|(17[0-9]{9})|(15[0-9]{9})$/;
            if (cellphone == '' || cellphone == null) {
                error.push('请输入手机号码');
            } else if (!mobile.test(cellphone)) {
                error.push('请正确填写您的手机号码');
            }
            if (error.length > 0) {
                var html = '<label id="cellphone-error" class="error" for="cellphone">';
                html += error[0];
                html += '</label>';
                if ($('#cellphone').parent().find('#cellphone-error').length < 1) {
                    $('#cellphone').after(html);
                }
                return false;
            } else {
                return true;
            }
        },
        registerOBox_validate: function () {//注册的表单验证
            var that = this;
            $(that.element).find("form.registerOBox").validate({
                rules: {
                    cellphone: {
                        required: true,
                        minlength: 11,
                        isMobile: true
                    },
                    verifcationCode: "required",
                    userName: "required",
                    password: {
                        required: true,
                        rangelength: [6, 32],
                        checkSpace: true
                    },
                    serviceTerm:{checkServiceTerm:true}
                },
                messages: {
                    cellphone: {
                        required: "请输入手机号码",
                        minlength: "确认手机不能小于11个字符",
                        isMobile: "请正确填写您的手机号码"
                    },
                    verifcationCode: "请输入验证码",
                    userName: "请输入姓名！",
                    password: {
                        required: '请输入卯丁账号密码！',
                        rangelength: "登录密码请设定六位数或六位数以上！",
                        checkSpace: "密码不应含有空格!"
                    },
                    serviceTerm:{checkServiceTerm:"请先同意服务条款"}

                },
                errorElement: 'label',
                errorPlacement: function (error, element) {
                    error.appendTo(element.closest('.form-group'));
                    error.addClass('input_error');
                }
            });
            // 手机号码验证
            jQuery.validator.addMethod("isMobile", function (value, element) {
                var length = value.length;
                var mobile = /^(13[0-9]{9})|(18[0-9]{9})|(14[0-9]{9})|(17[0-9]{9})|(15[0-9]{9})$/;
                return this.optional(element) || (length == 11 && mobile.test(value));
            }, "请正确填写您的手机号码");
            //密码验证
            $.validator.addMethod("checkSpace", function (value, element) {
                var pattern = /^\S+$/gi;
                return this.optional(element) || pattern.test(value);
            }, "密码不应含有空格!");
            //服务条款
            $.validator.addMethod("checkServiceTerm", function (value, element) {
               return $(element).prop('checked');
            }, "请先同意服务条款");
        }


    });

    $.fn[pluginName] = function (options) {
        return this.each(function () {

            //if (!$.data(this, "plugin_" + pluginName)) {
            $.data(this, "plugin_" +
                pluginName, new Plugin(this, options));
            //}
        });
    };

})(jQuery, window, document);

/**
 * Created by Wuwq on 2017/3/4.
 */
;(function ($, window, document, undefined) {

    "use strict";
    var pluginName = "m_message",
        defaults = {
            $isFirstEnter:false//是否是第一次进来
        };

    function Plugin(element, options) {
        this.element = element;

        this.settings = options;
        this._defaults = defaults;
        this._name = pluginName;
        this.init();
    }

    $.extend(Plugin.prototype, {
        init: function () {
            var that = this;

            var html = template('m_message/m_message', {});
            $(that.element).html(html);
            that._bindPage();
            that._bindActionClick();
        },
        _renderHtml: function (data) {
            var that = this;
            var $container = $(that.element).find('.messageList:first');
            $.each(data.messageList, function (i, o) {
                var $ul = $container.find('div[data-createDate="' + dateSpecShortFormat(o.createDate) + '"]');
                if ($ul.length === 0) {
                    var group = template('m_message/m_message_group', {createDate: o.createDate});
                    $container.append(group);
                    $ul = $container.find('div[data-createDate="' + dateSpecShortFormat(o.createDate) + '"]');
                }
                var item = template('m_message/m_message_single', o);
                $ul.append(item);
            });
        }
        , _renderEmptyHtml: function (data) {
            var that = this;

            var iHtml = template('m_message/m_message_empty', {rootPath: window.rootPath});
            $(that.element).find('.messageList').html(iHtml);

        }
        //绑定事件
        ,_bindActionClick:function () {
            var that = this;

            $(that.element).find('a[data-action]').on('click',function () {
                var $this = $(this);
                var action = $this.attr('data-action');
                switch(action){
                    case 'refreshMsg'://刷新
                        that.init();
                        break;
                }
                return false;
            });
        }
        //瀑布加载（分页原理）
        , _bindPage: function () {

            var that = this;
            var postData = {};

            var $page = $(that.element).find('.m-page:first');
            $page.m_page({
                loadingId: '.messageList',
                pageSize: 20,
                remote: {
                    url: restApi.url_getMessage,
                    params: postData,
                    success: function (response) {
                        if (response.code == '0') {
                            var data = {};

                            data.messageList = response.data.data;
                            data.total = response.data.total;
                            data.pageIndex = $page.pagination('getPageIndex');
                            data.pageSize = $page.pagination('getPageSize');

                            if (!data.messageList || data.messageList.length < 1) {
                                //暂无数据时
                                that._renderEmptyHtml();
                            } else {

                                //渲染页面
                                that._renderHtml(data);

                                that._bindBtnHandle();
                                that._bindBtnPageNext(data);
                            }

                        } else {
                            S_dialog.error(response.info);
                        }
                    }
                }
            });
        }
        , _bindBtnHandle: function () {
            var that = this;
            $(that.element).find('.msg-content a').click(function () {
                var $this = $(this);
                var messageType = $this.closest('.feed-element').attr('data-messageType');
                var companyId = $this.closest('.feed-element').attr('data-companyId');
                var projectId = $this.closest('.feed-element').attr('data-projectId');
                var targetId = $this.closest('.feed-element').attr('data-targetId');
                var expNo = $this.closest('.feed-element').attr('data-expNo');
                var projectName = $this.closest('.feed-element').attr('data-project-name');
                var status = $this.closest('.feed-element').attr('data-status');

                //跳转页面
                var gotoPage = function (url) {

                    if(status!=undefined && status=='1'){
                        S_dialog.alert('当前项目已不存在！');
                        return false;
                    }

                    var option  = {};
                    option.url = restApi.url_isUserInOrg+'/'+window.currentUserId+'/'+companyId;
                    m_ajax.get(option,function (response) {
                        if(response.code=='0'){

                            if(response.data!=null && response.data.isUserInOrg){
                                if (companyId !== window.currentCompanyId) {
                                    S_dialog.confirm('该消息不属于当前团队，查看会自动切换团队，仍要继续吗？',function () {

                                        var option = {};
                                        option.url = restApi.url_switchCompany + '/' + companyId;
                                        m_ajax.getJson(option, function (response) {
                                            if (response.code == '0') {
                                                window.location.reload();
                                                location.href = url;
                                            } else {
                                                S_dialog.error(response.info);
                                            }
                                        })
                                    },function () {
                                    });
                                }
                                else {
                                    window.location.href = url;
                                }
                            }else{
                                S_toastr.warning('不好意思，你不在此组织，暂不能查看！');
                            }


                        }else {
                            S_dialog.error(response.info);
                        }
                    });


                };

                var url;
                switch (messageType) {
                    case '3':
                    case '301':
                    case '302':
                    case '303':
                    case '305':
                        //url = _.sprintf('%s/iWork/home/workbench#/projectDetails/basicInfo?id=%s&projectName=%s', window.rootPath,projectId,encodeURI(projectName));
                        url = _.sprintf('%s/iWork/home/workbench#/projectDetails/taskIssue?id=%s&projectName=%s', window.rootPath,projectId,encodeURI(projectName));
                        gotoPage(url);
                        break;
                    case '401':
                    case '402':
                        url = _.sprintf('%s/iWork/home/workbench#/projectDetails/productionArrangement?id=%s&projectName=%s', window.rootPath,projectId,encodeURI(projectName));
                        gotoPage(url);
                        break;
                    case '403':
                    case '404':
                    case '501':
                    case '502':
                        url = _.sprintf('%s/iWork/home/workbench#/myTask/production?projectId=%s&projectName=%s', window.rootPath,projectId,encodeURI(projectName));
                        gotoPage(url);
                        break;
                    case '801':
                    case '802':
                    case '803':
                        url = _.sprintf('%s/iWork/home/workbench#/personalSettings', window.rootPath);
                        gotoPage(url);
                        break;
                }

            });
        }
        //下一页
        , _bindBtnPageNext: function (data) {
            var that = this;
            var $page = $(that.element).find('.m-page:first');

            var $btnPageNext = $(that.element).parent().find('.btnPageNext');
            if ((data.pageIndex + 1) * data.pageSize >= data.total) {
                $btnPageNext.hide();
            } else {
                $btnPageNext.blur().show().off('click.btnPageNext').on('click.btnPageNext', function () {
                    $page.pagination('setPageIndex', data.pageIndex + 1).pagination('remote');
                });
            }
        }
    });

    /*
     1.一般初始化（缓存单例）： $('#id').pluginName(initOptions);
     2.强制初始化（无视缓存）： $('#id').pluginName(initOptions,true);
     3.调用方法： $('#id').pluginName('methodName',args);
     */
    $.fn[pluginName] = function (options, args) {
        var instance;
        var funcResult;
        var jqObj = this.each(function () {

            //从缓存获取实例
            instance = $.data(this, "plugin_" + pluginName);

            if (options === undefined || options === null || typeof options === "object") {

                var opts = $.extend(true, {}, defaults, options);

                //options作为初始化参数，若args===true则强制重新初始化，否则根据缓存判断是否需要初始化
                if (args === true) {
                    instance = new Plugin(this, opts);
                } else {
                    if (instance === undefined || instance === null)
                        instance = new Plugin(this, opts);
                }

                //写入缓存
                $.data(this, "plugin_" + pluginName, instance);
            }
            else if (typeof options === "string" && typeof instance[options] === "function") {

                //options作为方法名，args则作为方法要调用的参数
                //如果方法没有返回值，funcReuslt为undefined
                funcResult = instance[options].call(instance, args);
            }
        });

        return funcResult === undefined ? jqObj : funcResult;
    };

})(jQuery, window, document);

/**
 * Created by Wuwq on 2017/3/4.
 */
;(function ($, window, document, undefined) {

    "use strict";
    var pluginName = "m_message_old",
        defaults = {};

    function Plugin(element, options) {
        this.element = element;

        this.settings = options;
        this._defaults = defaults;
        this._name = pluginName;
        this.init();
    }

    $.extend(Plugin.prototype, {
        init: function () {
            var that = this;

            var html = template('m_message/m_message', {});
            $(that.element).html(html);
            that._bindPage();
        },
        _renderHtml: function (data) {
            var that = this;
            var $container = $(that.element).find('.messageList:first');
            $.each(data.messageList, function (i, o) {
                var $ul = $container.find('ul[data-createDate="' + dateSpecShortFormat(o.createDate) + '"]');
                if ($ul.length === 0) {
                    var group = template('m_message/m_message_group', {createDate: o.createDate});
                    $container.append(group);
                    $ul = $container.find('ul[data-createDate="' + dateSpecShortFormat(o.createDate) + '"]');
                }

                var item = template('m_message/m_message_single', o);
                $ul.append(item);
            });
        }
        , _renderEmptyHtml: function (data) {
            var that = this;

            var iHtml = template('m_message/m_message_empty', {rootPath: window.rootPath});
            $(that.element).find('.messageList').html(iHtml);

        }
        //瀑布加载（分页原理）
        , _bindPage: function () {

            var that = this;
            var postData = {};

            var $page = $(that.element).find('.m-page:first');
            $page.m_page({
                loadingId: '.messageList',
                pageSize: 20,
                remote: {
                    url: restApi.url_getMessage,
                    params: postData,
                    success: function (response) {
                        if (response.code == '0') {
                            var data = {};

                            data.messageList = response.data.data;
                            data.total = response.data.total;
                            data.pageIndex = $page.pagination('getPageIndex');
                            data.pageSize = $page.pagination('getPageSize');

                            if (!data.messageList || data.messageList.length < 1) {
                                //暂无数据时
                                that._renderEmptyHtml();
                            } else {

                                //渲染页面
                                that._renderHtml(data);

                                //that._bindBtnHandle();
                                that._bindBtnPageNext(data);
                            }

                        } else {
                            S_dialog.error(response.info);
                        }
                    }
                }
            });
        }
        , _bindBtnHandle: function () {
            var that = this;
            $('.btn-handle-msg').click(function () {
                var $btn = $(this);
                var messageType = $btn.attr('data-messageType');
                var companyId = $btn.attr('data-companyId');
                var projectId = $btn.attr('data-projectId');
                var targetId = $btn.attr('data-targetId');
                var expNo = $btn.attr('data-expNo');

                //跳转页面
                var gotoPage = function (url, url_sc) {

                    var option  = {};
                    option.url = restApi.url_isUserInOrg+'/'+window.currentUserId+'/'+companyId;
                    m_ajax.get(option,function (response) {
                        if(response.code=='0'){

                            if(response.data!=null && response.data.isUserInOrg){
                                if (companyId !== window.currentCompanyId) {
                                    $btn.m_popover({
                                        placement: 'top',
                                        content: template('m_common/m_popover_confirm', {confirmMsg: '该消息不属于当前团队，查看会自动切换团队，仍要继续吗？'}),
                                        onSave: function ($popover) {
                                            window.location.href = url_sc;
                                        }
                                    }, true);
                                }
                                else {
                                    window.location.href = url;
                                }
                            }else{
                                S_toastr.warning('不好意思，你不在此组织，暂不能查看！');
                            }


                        }else {
                            S_dialog.error(response.info);
                        }
                    });


                };

                var url;
                var url_sc;
                switch (messageType) {
                    case '1'://被设置为乙方经营负责人
                    case '2'://被设置为乙方项目负责人
                        url = _.sprintf(restApi.url_projectInformation + '/%s/1', projectId);
                        url_sc = _.sprintf(restApi.url_companyProjectInformation + '/%s/%s/1', companyId, projectId);
                        gotoPage(url, url_sc);
                        break;
                    case '3'://被设置为经营负责人
                    case '5'://被设置为合作方的经营负责人
                        url = _.sprintf(restApi.url_projectInformation + '/%s/2', projectId);
                        url_sc = _.sprintf(restApi.url_companyProjectInformation + '/%s/%s/2', companyId, projectId);
                        gotoPage(url, url_sc);
                        break;
                    case '4'://被设置为设计负责人
                    case '6'://被设置为合作方的设计负责人
                    case '7'://被设置为任务负责人
                    case '8'://通知乙方项目负责人，xxx被设置为设、校、审
                    case '9'://通知父节点任务负责人，任务已经完成
                    case '10'://被设置为设、校、审
                        url = _.sprintf(restApi.url_projectInformation + '/%s/3', projectId);
                        url_sc = _.sprintf(restApi.url_companyProjectInformation + '/%s/%s/3', companyId, projectId);
                        gotoPage(url, url_sc);
                        break;
                    case '11'://技术审查费-确认付款任务
                        url = _.sprintf(restApi.url_taskList + '/4', projectId);
                        url_sc = _.sprintf(restApi.url_taskList + '/%s/4', companyId);
                        gotoPage(url, url_sc);
                        break;
                    case '12'://技术审查费
                    case '13'://技术审查费
                    case '23'://技术审查费
                    case '27'://技术审查费
                        url = _.sprintf(restApi.url_projectInformation + '/%s/5', projectId);
                        url_sc = _.sprintf(restApi.url_companyProjectInformation + '/%s/%s/5', companyId, projectId);
                        gotoPage(url, url_sc);
                        break;
                    case '24'://技术审查费
                        url = _.sprintf(restApi.url_taskList + '/5', projectId);
                        url_sc = _.sprintf(restApi.url_taskList + '/%s/5', companyId);
                        gotoPage(url, url_sc);
                        break;
                    case '25'://合作设计费
                        url = _.sprintf(restApi.url_taskList + '/4', projectId);
                        url_sc = _.sprintf(restApi.url_taskList + '/%s/4', companyId);
                        gotoPage(url, url_sc);
                        break;
                    case '14'://合作设计费-确认付款任务
                        url = _.sprintf(restApi.url_taskList + '/4', projectId);
                        url_sc = _.sprintf(restApi.url_taskList + '/%s/4', companyId);
                        gotoPage(url, url_sc);
                        break;
                    case '15'://合作设计费
                    case '16'://合作设计费
                    case '26'://合作设计费
                    case '30'://合作设计费
                        url = _.sprintf(restApi.url_projectInformation + '/%s/6', projectId);
                        url_sc = _.sprintf(restApi.url_companyProjectInformation + '/%s/%s/6', companyId, projectId);
                        gotoPage(url, url_sc);
                        break;
                    case '17'://合同回款-确认到账任务
                        url = _.sprintf(restApi.url_taskList + '/5', projectId);
                        url_sc = _.sprintf(restApi.url_taskList + '/%s/5', companyId);
                        gotoPage(url, url_sc);
                        break;
                    case '18'://合同回款
                        url = _.sprintf(restApi.url_projectInformation + '/%s/4', projectId);
                        url_sc = _.sprintf(restApi.url_companyProjectInformation + '/%s/%s/4', companyId, projectId);
                        gotoPage(url, url_sc);
                        break;
                    case '19': //审批报销
                        url = _.sprintf(restApi.url_toMyChecking + '/%s', expNo);
                        url_sc = _.sprintf(restApi.url_toCompanyMyChecking + '/%s/%s', companyId, expNo);
                        gotoPage(url, url_sc);
                        break;
                    case '20': //我的报销
                        url = _.sprintf(restApi.url_toMyExpense + '/%s', expNo);
                        url_sc = _.sprintf(restApi.url_toCompanyMyExpense + '/%s/%s', companyId, expNo);
                        gotoPage(url, url_sc);
                        break;
                    case '21': //所有子任务已经完成，跳生产安排
                        url = _.sprintf(restApi.url_projectInformation + '/%s/3', projectId);
                        url_sc = _.sprintf(restApi.url_companyProjectInformation + '/%s/%s/3', companyId, projectId);
                        gotoPage(url, url_sc);
                        break;
                }

            });
        }
        //下一页
        , _bindBtnPageNext: function (data) {
            var that = this;
            var $page = $(that.element).find('.m-page:first');

            var $btnPageNext = $(that.element).parent().find('.btnPageNext');
            if ((data.pageIndex + 1) * data.pageSize >= data.total) {
                $btnPageNext.hide();
            } else {
                $btnPageNext.blur().show().off('click.btnPageNext').on('click.btnPageNext', function () {
                    $page.pagination('setPageIndex', data.pageIndex + 1).pagination('remote');
                });
            }
        }
    });

    /*
     1.一般初始化（缓存单例）： $('#id').pluginName(initOptions);
     2.强制初始化（无视缓存）： $('#id').pluginName(initOptions,true);
     3.调用方法： $('#id').pluginName('methodName',args);
     */
    $.fn[pluginName] = function (options, args) {
        var instance;
        var funcResult;
        var jqObj = this.each(function () {

            //从缓存获取实例
            instance = $.data(this, "plugin_" + pluginName);

            if (options === undefined || options === null || typeof options === "object") {

                var opts = $.extend(true, {}, defaults, options);

                //options作为初始化参数，若args===true则强制重新初始化，否则根据缓存判断是否需要初始化
                if (args === true) {
                    instance = new Plugin(this, opts);
                } else {
                    if (instance === undefined || instance === null)
                        instance = new Plugin(this, opts);
                }

                //写入缓存
                $.data(this, "plugin_" + pluginName, instance);
            }
            else if (typeof options === "string" && typeof instance[options] === "function") {

                //options作为方法名，args则作为方法要调用的参数
                //如果方法没有返回值，funcReuslt为undefined
                funcResult = instance[options].call(instance, args);
            }
        });

        return funcResult === undefined ? jqObj : funcResult;
    };

})(jQuery, window, document);

/**
 * 我的任务
 * Created by wrb on 2017/11/9.
 */
;(function ($, window, document, undefined) {

    "use strict";
    var pluginName = "m_myTask",
        defaults = {
        };

    function Plugin(element, options) {
        this.element = element;

        this.settings = options;
        this._defaults = defaults;
        this._name = pluginName;
        this._taskList = null;//任务列表
        this.init();
    }

    $.extend(Plugin.prototype, {
        init: function () {
            var that = this;
            var html = template('m_myTask/m_myTask', {});
            $(that.element).html(html);
            $(that.element).find('select[name="searchByState"]').select2({
                allowClear: false,
                containerCssClass:'select-sm',
                language: "zh-CN",
                minimumResultsForSearch: -1
            });
            $(that.element).find('select[name="searchByState"]').on("change", function (e) {
                that.renderTaskList();
            });
            that.renderTaskList();
        }

        ,renderTaskList:function () {

            var that = this;
            var url = restApi.url_getMyTaskList4;
            var params = {};
            var status = $(that.element).find('select[name="searchByState"]').val();
            if(status!=undefined && status!=''){
                params.status = status;
            }
            paginationFun({
                eleId: '#pagination-container',
                loadingId: '.my-task-list',
                url: url,
                params: params
            }, function (response) {

                var html = template('m_myTask/m_myTask_list', {
                    myDataList:response.data.data,
                    pageIndex:$("#pagination-container").pagination('getPageIndex')
                });
                $(that.element).find('.my-task-list').html(html);
                that.goToTaskDetail();

            });

        }

        //跳转到任务详细界面
        ,goToTaskDetail:function () {
            var that = this;
            $(that.element).find('tr').on('click',function () {
                var $this = $(this);
                var dataType = $this.attr('data-type');
                var projectId = $this.attr('data-project-id');
                var projectName = $this.find('span[data-type="projectName"]').text();
                var  targetId = $this.attr('data-target-id');
                var  id = $this.attr('id');
                switch (dataType){
                    case '1'://任务签发

                        location.hash = '/myTask/taskIssue?projectId='+projectId+'&projectName='+encodeURI(projectName);
                        break;
                    case '12'://生产安排
                    case '22':

                        location.hash = '/myTask/production?projectId='+projectId+'&projectName='+encodeURI(projectName);
                        break;
                    case '3'://设、校、审

                        location.hash = '/myTask/designReview?projectId='+projectId+'&projectName='+encodeURI(projectName);
                        break;
                    case '13'://任务负责人审核

                        location.hash = '/myTask/approved?projectId='+projectId+'&projectName='+encodeURI(projectName);
                        break;
                    case '4'://收支管理-付款
                    //case '5':
                    case '6':
                    //case '7':
                    case '16':
                    case '18':
                    case '20':
                    case '30':
                    case '32':
                        location.hash = '/myTask/cost?dataType=paymentPlan&projectId='+projectId+'&myTaskId='+id+'&projectName='+encodeURI(projectName);
                        break;
                    case '19'://收支管理-收款
                    case '8':
                    case '9':
                    case '10':
                    case '17':
                    case '21':
                    case '29'://发票
                    case '31':
                    case '33':
                        location.hash = '/myTask/cost?dataType=collectionPlan&projectId='+projectId+'&myTaskId='+id+'&projectName='+encodeURI(projectName);
                        break;
                    case '11'://报销审批
                        var options = {};
                        options.expDetail = {
                            id:targetId
                        };
                        $('body').m_myTask_expDetail(options);
                        break;

                }
            });
        }


    });


    /*
     1.一般初始化（缓存单例）： $('#id').pluginName(initOptions);
     2.强制初始化（无视缓存）： $('#id').pluginName(initOptions,true);
     3.调用方法： $('#id').pluginName('methodName',args);
     */
    $.fn[pluginName] = function (options, args) {
        var instance;
        var funcResult;
        var jqObj = this.each(function () {

            //从缓存获取实例
            instance = $.data(this, "plugin_" + pluginName);

            if (options === undefined || options === null || typeof options === "object") {

                var opts = $.extend(true, {}, defaults, options);

                //options作为初始化参数，若args===true则强制重新初始化，否则根据缓存判断是否需要初始化
                if (args === true) {
                    instance = new Plugin(this, opts);
                } else {
                    if (instance === undefined || instance === null)
                        instance = new Plugin(this, opts);
                }

                //写入缓存
                $.data(this, "plugin_" + pluginName, instance);
            }
            else if (typeof options === "string" && typeof instance[options] === "function") {

                //options作为方法名，args则作为方法要调用的参数
                //如果方法没有返回值，funcReuslt为undefined
                funcResult = instance[options].call(instance, args);
            }
        });

        return funcResult === undefined ? jqObj : funcResult;
    };

})(jQuery, window, document);
/**
 * Created by wrb on 2016/12/7.
 */
;(function ($, window, document, undefined) {

    "use strict";
    var pluginName = "m_myTask_expDetail",
        defaults = {
            expDetail:null
        };

    // The actual plugin constructor
    function Plugin(element, options) {
        this.element = element;

        this.settings = $.extend({}, defaults, options);
        this._defaults = defaults;
        this._name = pluginName;
        this._versionNum = null;
        this.init();
    }

    // Avoid Plugin.prototype conflicts
    $.extend(Plugin.prototype, {
        init: function () {
            var that = this;
            that.getData();
        }
        //加载弹窗
        ,getData: function () {
            var that = this;
            S_dialog.dialog({
                title: '报销明细',
                contentEle: 'TConsentOBox',
                lock: 3,
                width: '800',
                minHeight: '450',
                tPadding: '0px',
                url: rootPath+'/assets/module/m_common/m_dialog.html'

            },function(d){//加载html后触发

                that.element = 'div[id="content:'+d.id+'"] .dialogOBox';

                that.getExpData(d);


            });
        }
        //加载
        ,getExpData:function(d){
            var that = this;
            var option = {};
            option.url=restApi.url_getExpMainDetail+'/'+that.settings.expDetail.id;
            m_ajax.post(option,function (response) {
                if(response.code=='0'){

                    that._versionNum = response.data.versionNum;

                    var $data={};
                    $data.myExpDetails = response.data;
                    $data.expNo = response.data.expNo;
                    $data.fastdfsUrl = window.fastdfsUrl;
                    $.each($data.myExpDetails.auditList,function(i,item){
                        if(item.expDate!=null&&item.expDate!=''){
                            item.expDate=moment(item.expDate).format('YYYY-MM-DD');
                        }
                    });
                    $.each($data.myExpDetails.detailList,function(i,item){
                        item.expAmount = expNumberFilter(item.expAmount);
                    });
                    $data.myExpDetails.totalExpAmount = expNumberFilter($data.myExpDetails.totalExpAmount);
                    var html = template('m_myTask/m_myTask_expDetail',$data);
                    $(that.element).html(html);
                    that.bindActionClick();
                }else {
                    S_dialog.error(response.info);
                }

            })
        }
        //事件绑定
        ,bindActionClick:function () {

            var that = this;
            $(that.element).find('a[data-action]').on('click',function (event) {
                var $this = $(this);
                var dataAction = $this.attr('data-action');

                switch (dataAction){
                    case 'cancel':
                        S_dialog.close($this);
                        break;
                    case 'agreeAndDone':
                        var options = {};
                        var id = that.settings.expDetail.id;
                        var versionNum = that.settings.myExamineData.versionNum;
                        options.postData={id:id,versionNum:versionNum};
                        options.url=restApi.url_agreeExpMain+'/'+id+'/'+versionNum;
                        S_dialog.close($this);
                        m_ajax.postJson(options,function (response) {
                            if(response.code=='0'){
                                S_dialog.close($(event));
                                S_toastr.success('操作成功');
                                that.refreshMyChecking();
                            }else {
                                S_dialog.error(response.info);
                            }

                        });
                        break;
                    case 'agreeAndToNext':

                        var options = {};
                        options.url = restApi.url_getOrgTree;
                        S_dialog.close($this);
                        options.selectUserCallback = function (data,event) {

                            var options = {};
                            var id = that.settings.expDetail.id;
                            var versionNum = that._versionNum;
                            options.url=restApi.url_agreeAndTransAuditPerExpMain+'/'+id+'/'+data.companyUserId+'/'+versionNum;
                            m_ajax.postJson(options,function (response) {
                                if(response.code=='0'){
                                    S_dialog.close($(event));
                                    S_toastr.success('操作成功');
                                    that.refreshMyChecking();
                                }else {
                                    S_dialog.error(response.info);
                                }
                            });
                        };

                        $('body').m_orgByTree(options);
                        break;
                }

            });
        }
        //加载我任务的页面
        , refreshMyChecking: function () {
            $('ul.metismenu li a[id="myTask"]').click();
        }

    });

    $.fn[pluginName] = function (options) {
        return this.each(function () {
            //if (!$.data(this, "plugin_" + pluginName)) {
                $.data(this, "plugin_" +
                    pluginName, new Plugin(this, options));
            //}
        });
    };

})(jQuery, window, document);

/**
 * 我的任务－设校审
 * Created by wrb on 2017/11/10.
 */
;(function ($, window, document, undefined) {

    "use strict";
    var pluginName = "m_myTask_incomeExpenditure",
        defaults = {
            $projectId:null,
            $myTaskId:null,
            $projectName:null,
            $type:null
        };

    // The actual plugin constructor
    function Plugin(element, options) {
        this.element = element;

        this.settings = $.extend({}, defaults, options);
        this._defaults = defaults;
        this._name = pluginName;
        this._currentCompanyId = window.currentCompanyId;//当前组织ID
        this.init();
    }

    // Avoid Plugin.prototype conflicts
    $.extend(Plugin.prototype, {
        init: function () {
            var that = this;
            that.initHtml();
        },
        //初始化数据,生成html
        initHtml:function () {

            var that = this;
            var html = template('m_myTask/m_myTask_incomeExpenditure',{
                projectName:that.settings.$projectName
            });
            $(that.element).html(html);
            that.renderPage();
        }
        //加载收支界面
        ,renderPage:function () {

            var that = this;
            var type = that.settings.$type;
            switch (type){

                case '10':
                    var option = {};
                    option.$projectId = that.settings.$projectId;
                    option.$myTaskId =  that.settings.$myTaskId;
                    $(that.element).find('#incomeExpenditureBox').m_contractPayment(option,true);
                    break;
                case '4':
                case '5':
                case '8':
                case '16':
                case '17':
                    var option = {};
                    option.$projectId = that.settings.$projectId;
                    option.$myTaskId =  that.settings.$myTaskId;
                    $(that.element).find('#incomeExpenditureBox').m_technicalReviewFee(option,true);
                    break;
                case '6':
                case '7':
                case '9':
                case '18':
                case '19':
                    var option = {};
                    option.$projectId = that.settings.$projectId;
                    option.$myTaskId =  that.settings.$myTaskId;
                    $(that.element).find('#incomeExpenditureBox').m_cooperativeDesignFee(option,true);
                    break;
                case '20':
                case '21':
                    var option = {};
                    option.$projectId = that.settings.$projectId;
                    option.$myTaskId =  that.settings.$myTaskId;
                    $(that.element).find('#incomeExpenditureBox').m_otherFee(option,true);
                    break;
            }

        }



    });

    $.fn[pluginName] = function (options) {
        return this.each(function () {

            //if (!$.data(this, "plugin_" + pluginName)) {
            $.data(this, "plugin_" +
                pluginName, new Plugin(this, options));
            //}
        });
    };

})(jQuery, window, document);

/**
 * 我的任务－生产安排
 * Created by wrb on 2017/11/9.
 */
;(function ($, window, document, undefined) {

    "use strict";
    var pluginName = "m_myTask_production",
        defaults = {
            $projectId:null,
            $projectName:null,
            $enterType:null//'approved'=任务负责人审核
        };

    // The actual plugin constructor
    function Plugin(element, options) {
        this.element = element;

        this.settings = $.extend({}, defaults, options);
        this._defaults = defaults;
        this._name = pluginName;
        this._currentCompanyId = window.currentCompanyId;//当前组织ID
        this._currentCompanyUserId = window.currentCompanyUserId;//当前组织人员ID
        this._currentUserId = window.currentUserId;//当前用户ID
        this._currentTaskIssueType = 0;//0=当前组织签发，1=总览
        this._taskIssueOptionData = null;//签发列表数据
        this._optionDataByPartnerships = null;//签发组织关系数据
        this.init();
    }

    // Avoid Plugin.prototype conflicts
    $.extend(Plugin.prototype, {
        init: function () {
            var that = this;
            that.initHtml();

        },
        //初始化数据,生成html
        initHtml:function () {

            var that = this;
            var options={};
            options.classId = '#project_detail';
            options.url=restApi.url_getDesignTaskList;
            options.postData = {};
            options.postData.projectId = that.settings.$projectId;
            options.postData.type=2;
            m_ajax.postJson(options,function (response) {

                if(response.code=='0'){

                    var currentManagerObj = {};//当前设计负责人、助理
                    currentManagerObj.projectManager = response.data.projectManager;
                    currentManagerObj.assistant = response.data.assistant;

                    var html = template('m_myTask/m_myTask_production',{
                        projectName:that.settings.$projectName,
                        orgList:response.data.orgList,
                        dataCompanyId:response.data.dataCompanyId,
                        currentCompanyId:that._currentCompanyId,
                        currentManagerObj:currentManagerObj,
                        currentCompanyUserId:window.currentCompanyUserId
                    });
                    $(that.element).html(html);
                    var option = {};
                    option.$projectId = that.settings.$projectId;
                    option.$taskIssueOrgList = response.data.projectManagerDataDTOList;
                    option.$projectCreateBy = response.data.projectCreateBy;
                    option.$projectCompanyId = response.data.projectCompanyId;
                    option.$partB = response.data.partB;
                    option.$productionList = response.data.projectDesignContentShowList;
                    option.$projectName = that.settings.$projectName;

                    if(that.settings.$scrollCallBack!=null){
                        option.$scrollCallBack = that.settings.$scrollCallBack;
                    }

                    option.$pageEntrance = 'myProductionTask';

                    $(that.element).find('#productionList').m_production_list(option);

                }else {
                    S_dialog.error(response.info);
                }
            })
        }

    });

    $.fn[pluginName] = function (options) {
        return this.each(function () {

            //if (!$.data(this, "plugin_" + pluginName)) {
            $.data(this, "plugin_" +
                pluginName, new Plugin(this, options));
            //}
        });
    };

})(jQuery, window, document);

/**
 * 我的任务－任务签发
 * Created by wrb on 2017/11/9.
 */
;(function ($, window, document, undefined) {

    "use strict";
    var pluginName = "m_myTask_taskIssue",
        defaults = {
            $projectId:null,
            $projectName:null
        };

    // The actual plugin constructor
    function Plugin(element, options) {
        this.element = element;

        this.settings = $.extend({}, defaults, options);
        this._defaults = defaults;
        this._name = pluginName;
        this._currentCompanyId = window.currentCompanyId;//当前组织ID
        this._currentTaskIssueType = 0;//0=当前组织签发，1=总览
        this._taskIssueOptionData = null;//签发列表数据
        this._optionDataByPartnerships = null;//签发组织关系数据
        this.init();
    }

    // Avoid Plugin.prototype conflicts
    $.extend(Plugin.prototype, {
        init: function () {
            var that = this;
            that.initHtml();
        },
        //初始化数据,生成html
        initHtml:function () {

            var that = this;
            var options={};
            options.classId = '#project_content';
            options.url=restApi.url_getIssueInfo;
            options.postData={
                projectId:that.settings.$projectId
            };

            m_ajax.postJson(options,function (response) {

                if(response.code=='0'){

                    var currentManagerObj = {};//当前经营负责人、助理
                    currentManagerObj.projectManager = response.data.projectManager;
                    currentManagerObj.assistant = response.data.assistant;

                    var html = template('m_myTask/m_myTask_taskIssue',{
                        projectName:that.settings.$projectName,
                        orgList:response.data.orgList,
                        dataCompanyId:response.data.dataCompanyId,
                        currentCompanyId:that._currentCompanyId,
                        currentManagerObj:currentManagerObj,
                        currentCompanyUserId:window.currentCompanyUserId
                    });
                    $(that.element).html(html);
                    var option = {};
                    option.$projectId = that.settings.$projectId;
                    option.$projectName = that.settings.$projectName;
                    option.$projectCompanyId = response.data.companyId;
                    option.$projectCreateBy = response.data.createBy;
                    option.$projectManagerId = response.data.managerId;
                    option.$currentManagerObj = currentManagerObj;
                    option.$taskIssueList = response.data.contentTaskList;
                    option.$dataCompanyId = response.data.dataCompanyId;

                    option.$pageEntrance = 'myIssueTask';

                    $(that.element).find('#taskIssueList').m_taskIssue_list(option);

                }else {
                    S_dialog.error(response.info);
                }
            })
        }
    });

    $.fn[pluginName] = function (options) {
        return this.each(function () {

            //if (!$.data(this, "plugin_" + pluginName)) {
            $.data(this, "plugin_" +
                pluginName, new Plugin(this, options));
            //}
        });
    };

})(jQuery, window, document);

/**
 * Created by veata on 2016/12/22.
 * it applies in setting Uediter!
 */
;(function ($, window, document, undefined) {

    "use strict";
    var pluginName = "m_establishUediter",
        defaults = {
            loadingId:null,
            initialFrameWidth:"100%",
            initialFrameHeight:300
        };

    // The actual plugin constructor
    function Plugin(element, options) {
        this.element = element;

        this.settings = $.extend({}, defaults, options);
        this._defaults = defaults;
        this._name = pluginName;
        this.init();
    }

    // Avoid Plugin.prototype conflicts
    $.extend(Plugin.prototype, {
        init: function () {
            var that = this;
            that.getMainContent();

        }
        //加载页面
        ,getMainContent:function(){
            var that = this;
            var html = template('m_notice/m_establishUediter');
            $(that.settings.loadingId).html(html);
            setTimeout(function() {
                that.settingUE('myEditor2');
            },200);
        }
        //建立UE
        ,settingUE:function (editorId) {
            var that = this;
                UE.getEditor(
                    editorId,
                    {
                        toolbars: [
                            [
                                //'source', //源代码
                                //'anchor', //锚点
                                //'undo', //撤销
                                //'redo', //重做
                                'bold', //加粗
                                'italic', //斜体
                                'fontborder', //字符边框
                                'underline', //下划线
                                'strikethrough', //删除线
                                '|',
                                'forecolor', //字体颜色
                                'backcolor', //背景色
                                '|',
                                'fontfamily', //字体
                                'fontsize', //字号
                                'customstyle', //自定义标题
                                '|',
                                'link', //超链接
                                'unlink', //取消链接
                                '|',
                                //'subscript', //下标
                                //'superscript', //上标
                                //'formatmatch', //格式刷
                                //'blockquote', //引用
                                //'pasteplain', //纯文本粘贴模式
                                //'selectall', //全选
                                //'snapscreen', //截图
                                //'print', //打印
                                'horizontal', //分隔线
                                'cleardoc', //清空文档
                                'justifyleft', //居左对齐
                                'justifyright', //居右对齐
                                'justifycenter', //居中对齐
                                'justifyjustify', //两端对齐
                                '|',
                                'insertorderedlist', //有序列表
                                'insertunorderedlist', //无序列表
                                '|',
                                //'removeformat', //清除格式
                                //'time', //时间
                                //'date', //日期
                                //'inserttable', //插入表格
                                //'edittable', //表格属性
                                //'edittd', //单元格属性
                                //'insertrow', //前插入行
                                //'insertcol', //前插入列
                                //'deleterow', //删除行
                                //'deletecol', //删除列
                                //'splittorows', //拆分成行
                                //'splittocols', //拆分成列
                                //'mergeright', //右合并单元格
                                //'mergedown', //下合并单元格
                                //'mergecells', //合并多个单元格
                                //'splittocells', //完全拆分单元格
                                //'deletecaption', //删除表格标题
                                //'deletetable', //删除表格
                                //'insertparagraphbeforetable', //"表格前插入行"
                                //'inserttitle', //插入标题
                                //'insertcode', //代码语言
                                //'insertimage', //多图上传
                                //'emotion', //表情
                                //'spechars', //特殊字符
                                //'searchreplace', //查询替换
                                //'map', //Baidu地图
                                //'gmap', //Google地图
                                //'insertvideo', //视频
                                //'help', //帮助
                                //'directionalityltr', //从左向右输入
                                //'directionalityrtl', //从右向左输入
                                'indent', //首行缩进
                                'rowspacingtop', //段前距
                                'rowspacingbottom', //段后距
                                'lineheight', //行间距
                                'paragraph', //段落格式
                                //'|',
                                // 'simpleupload', //单图上传
                                //'insertframe', //插入Iframe
                                //'imagenone', //默认
                                //'imageleft', //左浮动
                                //'imageright', //右浮动
                                //'attachment', //附件
                                //'imagecenter', //居中
                                //'wordimage', //图片转存
                                //'edittip ', //编辑提示
                                //'autotypeset', //自动排版
                                //'webapp', //百度应用
                                //'touppercase', //字母大写
                                //'tolowercase', //字母小写
                                //'pagebreak', //分页
                                //'background', //背景
                                //'template', //模板
                                //'scrawl', //涂鸦
                                //'music', //音乐
                                //'drafts', // 从草稿箱加载
                                //'charts', // 图表
                                //'|',
                                //'preview', //预览
                                //'fullscreen' //全屏
                            ]
                        ],
                        autoHeightEnabled : false,
                        initialFrameWidth:that.settings.initialFrameWidth, //初始化编辑器宽度,默认500
                        initialFrameHeight:that.settings.initialFrameHeight,  //初始化编辑器高度,默认500
                        autoClearinitialContent: false,//focus时自动清空初始化时的内容
                        //关闭elementPath
                        elementPathEnabled: false
                    }
                );

                //$('.edui-for-dialogbuttondialog').remove();


        }



    });

    $.fn[pluginName] = function (options) {
        return this.each(function () {

            //if (!$.data(this, "plugin_" + pluginName)) {
            $.data(this, "plugin_" +
                pluginName, new Plugin(this, options));
            //}
        });
    };

})(jQuery, window, document);

/**
 * Created by Wuwq on 2017/3/4.
 */
;(function ($, window, document, undefined) {

    "use strict";
    var pluginName = "m_notice",
        defaults = {
            $isFirstEnter:false//是否是第一次进来
        };

    function Plugin(element, options) {
        this.element = element;

        this.settings = options;
        this._defaults = defaults;
        this._name = pluginName;
        this.init();
    }

    $.extend(Plugin.prototype, {
        init: function () {
            var that = this;

            var html = template('m_notice/m_notice', {});
            $(that.element).html(html);
            that.bindPage();
            that.bindActionClick();
            rolesControl();
        },
        renderHtml: function (data) {
            var that = this;
            var $container = $(that.element).find('.noticeList:first');
            $.each(data.noticeList, function (i, o) {
                var $ul = $container.find('div[data-createDate="' + dateSpecShortFormat(o.noticePublishdate) + '"]');
                if ($ul.length === 0) {
                    var group = template('m_notice/m_notice_group', {noticePublishdate: o.noticePublishdate});
                    $container.append(group);
                    $ul = $container.find('div[data-createDate="' + dateSpecShortFormat(o.noticePublishdate) + '"]');
                }
                var item = template('m_notice/m_notice_single', o);
                $ul.append(item);
            });
        }
        , renderEmptyHtml: function (data) {
            var that = this;

            var iHtml = template('m_notice/m_notice_empty', {rootPath: window.rootPath});
            $(that.element).find('.noticeList').html(iHtml);

        }
        //绑定事件
        ,bindActionClick:function () {
            var that = this;

            $(that.element).find('a[data-action]').on('click',function () {
                var $this = $(this);
                var action = $this.attr('data-action');
                switch(action){
                    case 'sendNotice'://发送公告
                        location.hash = '/announcement/send';
                        break;
                    case 'refreshNotice'://刷新公告
                        that.init();
                        break;
                    case 'attachAllRead':
                        that.attachAllRead($this);
                        break
                }
                return false;
            });
        }
        //为点击进入公告详情绑定事件
        ,bindToNoticeDetail:function(){
            var that = this;
            $(that.element).find('div[data-action="toNoticeDetail"]').on('click',function(event){
                var id = $(this).attr('data-notice-id');//data-notice-id
                location.hash = '/announcement/detail?id='+id;
                return false;

            });
        }
        //标记所有的消息为已读
        ,attachAllRead:function($obj){
            var that = this;
            $(that.element).find('input[name="noticeCk"]').prop('checked',true);
            var option = [];
            option.url = restApi.url_notice+'/'+id;
            option.postData={};
            if($obj.attr('checked')){
                option.postData.noticeStatus = '2';
            }else{
                option.postData.noticeStatus = '0';
            }
            m_ajax.postJson(option,function (response) {
                if(response.code=='0'){
                    if(response.data.noticeStatus=='2'){
                        dialog.tips('已成功标记为已读');
                    }else{
                        dialog.tips('已成功标记为未读');
                    }
                }else {
                    S_dialog.error(response.info);
                }

            });
        }
        //瀑布加载（分页原理）
        , bindPage: function () {

            var that = this;
            var postData = {};

            var $page = $(that.element).find('.m-page:first');
            $page.m_page({
                loadingId: '.noticeList',
                pageSize: 20,
                remote: {
                    url: restApi.url_getNotice,
                    params: postData,
                    success: function (response) {
                        if (response.code == '0') {

                            var data = {};
                            data.noticeList = response.data.data;
                            data.total = response.data.total;
                            data.pageIndex = $page.pagination('getPageIndex');
                            data.pageSize = $page.pagination('getPageSize');

                            if (!data.noticeList || data.noticeList.length < 1) {
                                //暂无数据时
                                that.renderEmptyHtml();
                            } else {

                                //渲染页面
                                that.renderHtml(data);

                                that.bindToNoticeDetail();
                                that.bindBtnPageNext(data);
                            }

                        } else {
                            S_dialog.error(response.info);
                        }
                    }
                }
            });
        }

        //下一页
        , bindBtnPageNext: function (data) {
            var that = this;
            var $page = $(that.element).find('.m-page:first');

            var $btnPageNext = $(that.element).parent().find('.btnPageNext');
            if ((data.pageIndex + 1) * data.pageSize >= data.total) {
                $btnPageNext.hide();
            } else {
                $btnPageNext.blur().show().off('click.btnPageNext').on('click.btnPageNext', function () {
                    $page.pagination('setPageIndex', data.pageIndex + 1).pagination('remote');
                });
            }
        }
    });

    /*
     1.一般初始化（缓存单例）： $('#id').pluginName(initOptions);
     2.强制初始化（无视缓存）： $('#id').pluginName(initOptions,true);
     3.调用方法： $('#id').pluginName('methodName',args);
     */
    $.fn[pluginName] = function (options, args) {
        var instance;
        var funcResult;
        var jqObj = this.each(function () {

            //从缓存获取实例
            instance = $.data(this, "plugin_" + pluginName);

            if (options === undefined || options === null || typeof options === "object") {

                var opts = $.extend(true, {}, defaults, options);

                //options作为初始化参数，若args===true则强制重新初始化，否则根据缓存判断是否需要初始化
                if (args === true) {
                    instance = new Plugin(this, opts);
                } else {
                    if (instance === undefined || instance === null)
                        instance = new Plugin(this, opts);
                }

                //写入缓存
                $.data(this, "plugin_" + pluginName, instance);
            }
            else if (typeof options === "string" && typeof instance[options] === "function") {

                //options作为方法名，args则作为方法要调用的参数
                //如果方法没有返回值，funcReuslt为undefined
                funcResult = instance[options].call(instance, args);
            }
        });

        return funcResult === undefined ? jqObj : funcResult;
    };

})(jQuery, window, document);

/**
 * 发布公告
 * Created by wrb on 2018/1/25.
 */
;(function ($, window, document, undefined) {

    "use strict";
    var pluginName = "m_notice_publish",
        defaults = {
            noticeId:null,
            companyName:null
        };

    // The actual plugin constructor
    function Plugin(element, options) {
        this.element = element;

        this.settings = $.extend({}, defaults, options);
        this._defaults = defaults;
        this._noticeInfo = null;
        this._name = pluginName;
        this._uuid = UUID.genV4().hexNoDelim;
        this.init();
    }

    // Avoid Plugin.prototype conflicts
    $.extend(Plugin.prototype, {
        init: function () {
            var that = this;
            that.renderPage();

        }
        ,renderPage:function () {
            var that = this;
            var html = template('m_notice/m_notice_publish', {});
            $(that.element).html(html);
            $('.summernote').summernote({
                height: 200,
                tabsize: 2,
                lang: 'zh-CN',
                toolbar: [
                    // [groupName, [list of button]]
                    ['style', ['bold', 'italic', 'underline', 'clear']],
                    ['font', ['strikethrough', 'superscript', 'subscript']],
                    ['fontsize', ['fontsize']],
                    ['color', ['color']],
                    ['para', ['ul', 'ol', 'paragraph']],
                    ['height', ['height']],
                    ['view', ['fullscreen', 'codeview']]
                ],
                callbacks: {
                    onFocus: function() {
                        //删除错误提示
                        var $summernoteError = $(that.element).find('#summernote-error');
                        if($summernoteError.length> 0){
                            $summernoteError.remove();
                        }
                    }
                }
            });
            that.bindClickFun();
            that.bindFileUplad();
        }
        , bindFileUplad:function () {
            var that =this;
            var option = {};
            that._uploadmgrContainer = $(that.element).find('.uploadmgrContainer:eq(0)');
            option.server = restApi.url_attachment_uploadNoticeAttach;
            option.accept={
                title: '上传附件',
                extensions: '*',
                mimeTypes: '*'
            };
            option.btnPickText = '<i class="fa fa-upload"></i>&nbsp;上传附件';
            option.ifCloseItemFinished = true;
            option.boxClass = 'no-borders';
            option.isShowBtnClose = false;
            option.uploadBeforeSend = function (object, data, headers) {
                data.companyId = window.currentCompanyId;
                data.accountId = window.currentUserId;
                data.targetId = that._uuid;
            };
            option.uploadSuccessCallback = function (file, response) {
                console.log(response);
                var fileData = {
                    netFileId: response.data.netFileId,
                    fileName: response.data.fileName,
                    fullPath: window.fastdfsUrl + response.data.fastdfsGroup + '/' + response.data.fastdfsPath
                };
                var $uploadItem = that._uploadmgrContainer.find('.uploadItem_' + file.id + ':eq(0)');
                if (!isNullOrBlank(fileData.netFileId)) {
                    $uploadItem.find('.span_status:eq(0)').html('上传成功');
                    var html = template('m_common/m_attach', fileData);
                    $('#showFileLoading').append(html);
                    var obj = 'a[data-net-file-id="' + fileData.netFileId + '"]';
                    that.bindAttachDelele();
                } else {
                    $uploadItem.find('.span_status:eq(0)').html('上传失败');
                }

            };
            that._uploadmgrContainer.m_uploadmgr(option, true);
        }
        , bindAttachDelele: function () {
            $.each($('#showFileLoading').find('a[data-action="deleteAttach"]'), function (i, o) {
                $(o).off('click.deleteAttach').on('click.deleteAttach', function () {
                    var netFileId = $(this).attr('data-net-file-id');

                    var ajaxDelete = function () {
                        var ajaxOption = {};
                        ajaxOption.classId = '.file-list:eq(0)';
                        ajaxOption.url = restApi.url_attachment_delete;
                        ajaxOption.postData = {
                            id: netFileId,
                            accountId: window.currentUserId
                        };
                        m_ajax.postJson(ajaxOption, function (res) {
                            if (res.code === '0') {
                                S_toastr.success("删除成功");
                            } else if (res.code === '1') {
                                S_dialog.error(res.msg);
                            }
                        });
                    };
                    ajaxDelete();

                    $(this).closest('span').remove();
                })
            });
        }
        //给选择发送范围绑定触发事件
        , bindClickFun: function () {
            var that = this;
            var ids = '';
            $('.publishPublicNoticeOBox input[name="noticeTitle"]').bind('focus', function (event) {

                //删除错误提示
                var $noticeTitleError = $(that.element).find('#noticeTitle-error');
                if($noticeTitleError.length> 0){
                    $noticeTitleError.remove();
                }
                stopPropagation(event);
            });
            $('.publishPublicNoticeOBox input[data-action="choseDepartment"]').bind('click', function (event) {
                var options = {};
                var $this = $(this);
                options.title = '选择发送范围';
                options.isExcludeOrgChoice = 1;
                options.ids = ids;
                options.CallBack = function (data) {
                    ids = data;
                    if (data && data.length > 0 && $("#choseDepartment-error").length > 0) {
                        $("#choseDepartment-error").remove();
                    } else if (!(data && data.length > 0) && $("#choseDepartment-error").length < 1) {
                        var iHtml = '<label id="choseDepartment-error" for="choseDepartment">请选择发送范围！</label>';
                        $this.after(iHtml);
                    }
                };
                $(that.element).m_onlyGetTeamByTree(options);

                //删除错误提示
                var $choseDepartmentError = $(that.element).find('#choseDepartment-error');
                if($choseDepartmentError.length> 0){
                    $choseDepartmentError.remove();
                }

                stopPropagation(event);
            });
            $(that.element).find('a[data-action]').bind('click', function (event) {

                var action = $(this).attr('data-action');
                switch (action){
                    case 'savePublish'://点击发送按钮
                        var orgList = [];
                        if (ids.indexOf('root' + ',') > -1) {
                            ids = ids.replace('root' + ',', '');
                        }
                        if (ids.lastIndexOf(',') != ids.length - 1) {
                            ids += ',';
                        }
                        if (ids.indexOf(',') > -1) {
                            ids = ids.substr(0, ids.length - 1);
                            orgList = ids.split(',');

                        }
                        var data = $('form.publishPublicNoticeOBox').serializeObject();
                        data.isSendMsg = 0;
                        if ($('input[name="ensureSendMessage"]').prop('checked')) {
                            data.isSendMsg = 1;
                        }
                        data.noticeContent = $('.summernote').summernote('code');
                        data.orgList = orgList;
                        data.companyId = window.currentCompanyId;
                        data.targetId = that._uuid;
                        var options = {};
                        options.postData = data;

                        if (that.savePublish_validate(ids)) {
                            options.url = restApi.url_notice;
                            m_ajax.postJson(options, function (response) {
                                if (response.code == '0') {
                                    S_toastr.success('发布成功！');
                                    $('.summernote').summernote('destroy');
                                    location.hash = '/announcement';
                                } else {
                                    S_dialog.error(response.info);
                                }

                            });
                        }
                        break;
                    case 'announcement'://返回公告列表
                        $('.summernote').summernote('destroy');
                        location.hash = '/announcement';
                        break;

                }
                stopPropagation(event);
            });
        }
        , savePublish_validate: function (ids) {
            var that = this;

            //验证标题　
            var $noticeTitle = $(that.element).find('input[name="noticeTitle"]');
            var noticeTitle = $noticeTitle.val();
            noticeTitle = $.trim(noticeTitle);
            if(noticeTitle=='' && $('#noticeTitle-error').length==0){
                $noticeTitle.after('<label id="noticeTitle-error" class="error" for="noticeTitle">请输入公告标题!</label>');
                return false;
            }

            //验证发送范围
            var $choseDepartment = $(that.element).find('form.publishPublicNoticeOBox input[name="choseDepartment"]');
            var range = $choseDepartment.val();

            if (!(range != "点击设置" && ids && ids.length > 0)) {
                if (!$("#choseDepartment-error").length > 0) {
                    $choseDepartment.after('<label id="choseDepartment-error" class="error" for="choseDepartment">请选择发送范围！</label>');
                }
                return false;
            }

            //发送内容，暂时只验证文字
            if ($(that.element).find('.note-editable').text() == "" && $(that.element).find('#summernote-error').length == 0) {

                $(that.element).find('.note-editor').after('<label id="summernote-error" class="error">公告内容不能为空！</label>');
                return false;
            }

            return true;
        }

        //清除公告内容验证
        , clearThisValidate: function (timer) {
            var that = this;
            $(that.element).find('label#summernote-error').remove();
            clearInterval(timer);
        }

    });

    $.fn[pluginName] = function (options) {
        return this.each(function () {

            //if (!$.data(this, "plugin_" + pluginName)) {
            $.data(this, "plugin_" +
                pluginName, new Plugin(this, options));
            //}
        });
    };

})(jQuery, window, document);

/**
 * Created by veata on 2016/12/14.
 * It only applies in choosing Team or Organization from Tree(with checkBox).
 */
;(function ($, window, document, undefined) {

    "use strict";
    var pluginName = "m_onlyGetTeamByTree",
        defaults = {
            title: null,
            treeUrl: null,
            minHeight: null,
            width: null,
            currOrgTreeObj: null,
            parentOrgObj: null,
            isExcludeOrgChoice: null,//是否暂时隐藏树里面团队里的部门
            ids: '',
            CallBack: null
        };

    // The actual plugin constructor
    function Plugin(element, options) {
        this.element = element;

        this.settings = $.extend({}, defaults, options);
        this._defaults = defaults;
        this._name = pluginName;
        this._orgData = null;
        this.init();
    }

    // Avoid Plugin.prototype conflicts
    $.extend(Plugin.prototype, {
        init: function () {

            this.initUserTreeDialog();
        }
        //任务签发弹窗
        , initUserTreeDialog: function () {
            var that = this;

            S_dialog.dialog({
                title: that.settings.title || '选择组织',
                contentEle: 'dialogOBox',
                lock: 3,
                width: that.settings.width || '600',
                minHeight: that.settings.minHeight || '400',
                tPadding: '0px',
                url: rootPath + '/assets/module/m_common/m_dialog.html',
                ok: function () {
                    var data = that.settings.ids;
                    var companyName = that.getCompanyName(that.settings.ids);
                    // console.log('确定：'+data);
                    if (data && data.length > 0) {
                        $(that.element).find('input[data-action="choseDepartment"]').val(companyName);
                    } else {
                        $(that.element).find('input[data-action="choseDepartment"]').val('点击设置');
                    }
                    return that.settings.CallBack(data);
                },
                cancel: function () {

                }
            }, function (d) {//加载html后触发
                that.initTreeData(function (data) {
                    var html = template('m_notice/m_onlyGetTeamByTree', {});
                    $('div[id="content:' + d.id + '"] .dialogOBox').html(html);

                    that.initTreeStructure(data, that.settings.ids);
                });
            });


        }
        //获取选中的组织名称
        , getCompanyName: function (ids) {
            var that = this;
            var companyNameStr = '';
            if (ids.indexOf(that._orgData.children[0].id+',') > -1) {
                companyNameStr += that._orgData.children[0].text+'，';
            }
            if(that._orgData.children && that._orgData.children.length>1){
                for(var j=0;j<that._orgData.children.length;j++){
                    if (that._orgData.children[j].children && that._orgData.children[j].children.length > 0) {
                        $.each(that._orgData.children[j].children, function (i, item) {
                            if (ids.indexOf(item.id) > -1) {
                                companyNameStr += item.text +'，';
                            }
                        });
                    }
                }
            }
            return companyNameStr.substr(0,companyNameStr.length-1);

        }

        //初始化树数据
        , initTreeData: function (callBack) {

            var that = this;
            var option = {};
            option.url = that.settings.treeUrl != null && that.settings.treeUrl != '' ? that.settings.treeUrl : restApi.url_getOrgTreeForNotice;

            m_ajax.get(option, function (response) {
                if (response.code == '0') {
                    if (callBack != null) {
                        that._orgData = response.data;
                        if (that.settings.isExcludeOrgChoice != null) {
                            that.excludeOrgChoice(response.data);
                        }
                        return callBack(response.data);
                    }
                } else {
                    S_dialog.error(response.info);
                }

            })
        }
        //是否排除团队里的部门选择（暂时去掉本部的子节点 以及分支机构与事业合伙人下的子节点分支机构与事业合伙人）
        , excludeOrgChoice: function (data) {
            $.each(data.children, function (i, child) {
                if (!(child.id.indexOf('partnerId') > -1 || child.id.indexOf('subCompanyId') > -1)) {
                    if (child.children && child.children.length > 0) {
                        child.children = [];
                    }
                } else {
                    if (child.children && child.children.length > 0) {
                        var childList1 = child.children;
                        for (var i = 0; i < childList1.length; i++) {
                            if (childList1[i].children && childList1[i].children.length > 0) {
                                childList1[i].children = [];
                            }
                        }
                    }
                }
            });
            return data;
        }
        //生成树结构
        , initTreeStructure: function (orgData, ids) {

            var that = this;

            $('#organization_treeH').jstree({
                'core': {
                    'check_callback': true,
                    'data': orgData
                },
                'plugins': ['types', 'checkbox'],
                "checkbox": {
                    "keep_selected_style": false
                },
                'types': {
                    'default': {
                        'icon': 'fa fa-users'
                    },
                    'independent': {   //独立经营图标
                        'icon': 'fa fa-trademark'
                    },
                    'partner': {       //合作伙伴图标

                        'icon': 'fa fa-share-alt'
                    },
                    'root': {         //根节点图标
                        'icon': 'fa fa-building'
                    }
                }
            }).bind('select_node.jstree', function (e, data) {
                //alert(data.node.original.realId);
                var currOrgObj = data.node.original;//获取当前树的对象
                that.settings.currOrgTreeObj = currOrgObj;

                var inst = data.instance;
                var parentOrgObj = inst.get_node(data.node.parent).original;

                if (that.settings.treeClickCallBack != null) {
                    currOrgObj.parentOrgObj = parentOrgObj;
                    return that.settings.treeClickCallBack(currOrgObj);
                }

            }).bind('click.jstree', function (event) {
                var id = '';
                var ids = that.settings.ids;
                if (event.target.nodeName != 'I' && event.target.nodeName != 'A') {
                    return;
                }
                else if (event.target.nodeName == 'I') {
                    if ($(event.target).is('.jstree-ocl')) {
                        return false;
                    } else {
                        id = $(event.target).parent().parent().attr('id');
                    }
                } else if (event.target.nodeName == 'A') {
                    id = $(event.target).parent().attr('id');
                }

                var tree = $('#organization_treeH').jstree(true);
                var getRoot = tree.get_node(id);
                var eTarget = event.target;
                var isCheck = false;
                var b_p = $(eTarget).parents('li#' + id).find('i.jstree-checkbox').css('background-position');
                if (b_p == '-228px -4px' || b_p == '-228px -36px') {//checkbox勾上时
                    isCheck = true;
                }
                if (isCheck) {
                    if (!(ids.indexOf(id + ',') > -1)) {
                        ids += id + ',';
                    }
                    if (getRoot.children_d && getRoot.children_d.length > 0) {
                        $.each(getRoot.children_d, function (i, item) {
                            if (!(ids.indexOf(item + ',') > -1)) {
                                ids += item + ',';
                            }

                        });
                    }
                    if (getRoot.parents && getRoot.parents.length > 0) {
                        $.each(getRoot.parents, function (i, item) {
                            if (item != '' && item != "#") {
                                var thisLi = $('#organization_treeH li#' + item);
                                var b_p = thisLi.find('a.jstree-anchor').eq(0).find('i.jstree-checkbox').css('background-position');
                                if ((b_p == '-228px -4px' || b_p == '-228px -36px') && !(ids.indexOf(item + ',') > -1)) {
                                    ids += item + ',';
                                }
                            }
                        });
                    }

                } else {
                    if (ids.indexOf(id + ',') > -1) {
                        ids = ids.replace(id + ',', '');
                    }
                    if (getRoot.children_d && getRoot.children_d.length > 0) {
                        $.each(getRoot.children_d, function (i, item) {
                            if (ids.indexOf(item + ',') > -1) {
                                ids = ids.replace(item + ',', '');
                            }

                        });
                    }
                    if (getRoot.parents && getRoot.parents.length > 0) {
                        $.each(getRoot.parents, function (i, item) {
                            if (item.id != '#' && ids.indexOf(item + ',') > -1) {
                                ids = ids.replace(item + ',', '');
                            }

                        });
                    }
                }
                that.settings.ids = ids;
            }).bind('ready.jstree', function (e, data) {//loaded.jstree

                var inst = data.instance;
                var obj = inst.get_node(e.target.firstChild.firstChild.lastChild);

                var currOrgObj = obj.original;//获取当前树的对象
                that.settings.currOrgTreeObj = currOrgObj;
                if (that.settings.treeClickCallBack != null) {
                    return that.settings.treeClickCallBack(currOrgObj);
                }
                var tree = $('#organization_treeH').jstree(true);
                var ids = that.settings.ids;
                if (ids != '' && ids != null) {//当初始化时有ids且不为空，即已选择发送范围时，勾上已选的checkbox
                    if (ids.lastIndexOf(',') != ids.length - 1) {
                        ids += ',';
                    }
                    var orgList = ids.split(',');
                    $.each(orgList, function (j, childId) {
                        if (!(childId.indexOf('partnerId') > -1 || childId.indexOf('subCompanyId') > -1 || childId == "")) {
                            tree.select_node(childId);
                        }
                    })
                } else {//当 初始化时无ids或ids为空时，则默认勾上公司本部
                    var thisTeamId = '';//公司本部的Id
                    $.each(obj.children, function (i, item) {
                        if (!(item.indexOf('partnerId') > -1 || item.indexOf('subCompanyId') > -1)) {
                            thisTeamId = item;
                            return;
                        }
                    });
                    tree.select_node(thisTeamId);
                    ids += thisTeamId + ',';
                }
                that.settings.ids = ids;
                // console.log(ids);
            });
        }

    });

    $.fn[pluginName] = function (options) {
        return this.each(function () {

            //if (!$.data(this, "plugin_" + pluginName)) {
            $.data(this, "plugin_" +
                pluginName, new Plugin(this, options));
            //}
        });
    };

})(jQuery, window, document);

/**
 * Created by veata on 2016/12/22.
 * it applies in showing data for showPublicNotice or showMessage!
 */
;(function ($, window, document, undefined) {

    "use strict";
    var pluginName = "m_showNoticeDetail",
        defaults = {
            noticeId:null,
            companyName:null
        };

    // The actual plugin constructor
    function Plugin(element, options) {
        this.element = element;

        this.settings = $.extend({}, defaults, options);
        this._defaults = defaults;
        this._noticeInfo = null;
        this._name = pluginName;
        this.init();
    }

    // Avoid Plugin.prototype conflicts
    $.extend(Plugin.prototype, {
        init: function () {
            var that = this;
            that.getPageData(function(){
                that.getHtml();
                that.sendNotice();
                that.backToLast();
                that.bindActionClick();
                rolesControl();
            });

        },
        //加载详情页面
        getHtml:function(){
            var that = this;
            var html = template('m_notice/m_showNoticeDetail',{notice:that._noticeInfo});
            $(that.element).html(html);
            $(that.element).find('.mail-box .mail-body').html(that._noticeInfo.noticeContent);
        },
        //返回后台，标记信息已读
        toAttachRead:function(callback){
            var that = this;
            var option = [];
            var newNoticeObj = {};
            newNoticeObj.id = that.settings.noticeId;
            newNoticeObj.noticeStatus = '2';
            option.url = restApi.url_saveNotice;
            option.postData = [];
            option.postData.push(newNoticeObj);
            m_ajax.postJson(option,function (response) {
                if(response.code=='0'){
                    if(callback){
                        return callback.call(that);
                    }
                }else {
                    S_dialog.error(response.info);
                }

            });
        },
        //绑定发送公告按钮
        sendNotice:function(){
            var that = this;
            $(that.element).find('a[data-action="sendNotice"]').on('click',function(event){
                //$(that.element).m_publishPublicNotice();
                location.hash = '/announcement/send';
            });
        },
        //绑定返回按钮事件
        backToLast:function(){
            var that = this;
            $(that.element).find('a[data-action="announcement"]').on('click',function(event){
                //通过Cookie记住最近一次定位
                //$('#content-right').m_showPublicNoticeMainContent();
                location.hash = '/announcement';
            });
        },
        //获取详情数据
        getPageData:function(callback){
            var that = this;
            var option = [];
            //option.url = restApi.url_getNoticeByNoticeid+'/'+that.settings.noticeId;
            option.url = restApi.url_notice+'/'+that.settings.noticeId;
            m_ajax.get(option,function (response) {
                if(response.code=='0'){
                    that._noticeInfo = response.data;
                    that.toAttachRead();
                    if(callback){
                        return callback.call(that);
                    }
                }else {
                    S_dialog.error(response.info);
                }

            });
        }
        //事件绑定
        ,bindActionClick:function () {

            var that = this;
            $(that.element).find('a[data-action]').on('click',function () {
                var $this = $(this);
                var dataAction = $this.attr('data-action');

                switch (dataAction){
                    case 'fileDownload'://文件下载
                        var url = restApi.url_downLoadFile+'/'+$this.attr('data-id');
                        window.open(url);
                        break;
                }

            });
        }

    });

    $.fn[pluginName] = function (options) {
        return this.each(function () {

            //if (!$.data(this, "plugin_" + pluginName)) {
            $.data(this, "plugin_" +
                pluginName, new Plugin(this, options));
            //}
        });
    };

})(jQuery, window, document);

/**
 * Created by Wuwq on 2017/1/19.
 */
;(function ($, window, document, undefined) {

    "use strict";
    var pluginName = "m_page",
        defaults = {
            loadingId: null,
            pageIndex: 0,
            pageSize: 10,
            total: 0,
            pageBtnCount: 5,
            showFirstLastBtn: false,
            firstBtnText: null,
            lastBtnText: null,
            /*prevBtnText: "&laquo;",
             nextBtnText: "&raquo;",*/
            prevBtnText: '上一页',
            nextBtnText: '下一页',
            loadFirstPage: true,
            remote: {
                url: null,
                params: null,
                pageParams: null,
                success: null,
                beforeSend: null,
                complete: null,
                pageIndexName: 'pageIndex',
                pageSizeName: 'pageSize',
                totalName: 'data.total',
                traditional: false,
                remoteWrongFormat: null
            },
            pageElementSort: ['$page', '$size', '$jump', '$info'],
            showInfo: false,
            infoFormat: '{start} ~ {end} of {total} entires',
            noInfoText: '0 entires',
            showJump: false,
            jumpBtnText: 'Go',
            showPageSizes: false,
            pageSizeItems: [5, 10, 15, 20],
            debug: false
        };

    function Plugin(element, options) {
        this.element = element;
        var remote = $.extend({}, defaults.remote, options.remote);
        this.settings = $.extend({}, defaults, options);
        this.settings.remote = remote;
        this._defaults = defaults;
        this._name = pluginName;
        this.init();
    }

    $.extend(Plugin.prototype, {
        init: function () {
            var that = this;
            if (that.settings.loadingId !== null && that.settings.remote.beforeSend === null) {
                that.settings.remote.beforeSend = function () {
                    $_loading.show(that.settings.loadingId, '正在加载中...');
                }
            }
            if (that.settings.loadingId !== null && that.settings.remote.complete === null) {
                that.settings.remote.complete = function () {
                    $_loading.close(that.settings.loadingId);
                }
            }

            if (that.settings.remote.remoteWrongFormat === null) {
                that.settings.remote.remoteWrongFormat = function (res) {
                    if (res && res.code === '500')
                        S_dialog.error('很抱歉，请求发生异常');
                }
            }

            if ($(that.element).pagination())
                $(that.element).pagination('destroy');
            $(that.element).pagination(that.settings);
        }
    });

    $.fn[pluginName] = function (options) {
        return this.each(function () {
            /*if ( !$.data( this, "plugin_" + pluginName ) ) {
             $.data( this, "plugin_" +
             pluginName, new Plugin( this, options ) );
             }*/
            new Plugin(this, options);
        });
    };

})(jQuery, window, document);
/**
 * 组织－组织架构
 * Created by wrb on 2017/2/23.
 */
;(function ($, window, document, undefined) {

    "use strict";
    var pluginName = "m_addressBook",
        defaults = {};

    // The actual plugin constructor
    function Plugin(element, options) {
        this.element = element;
        this.settings = $.extend({}, defaults, options);
        this._defaults = defaults;
        this._name = pluginName;
        this._currentCompanyId = window.currentCompanyId;
        this._currTreeObj = null;
        this._selectedCompanyId = null;
        this._treeType = 1;
        this._roleCode = null;

        this.init();
    }

    // Avoid Plugin.prototype conflicts
    $.extend(Plugin.prototype, {
        init: function () {
            var that = this;
            that._roleCode = window.currentRoleCodes;


            var that = this;
            var options={};
            options.url=restApi.url_getToAuditCompanyCount;
            m_ajax.get(options,function (response) {
                if(response.code=='0'){

                    var html = template('m_org/m_addressBook', {roleCodes:that._roleCode,toAuditEmpNum:response.data.toAuditEmpNum,rootPath:window.rootPath});
                    $(that.element).html(html);
                    rolesControl();
                    that._initOrgTree();
                    that.bindTreeSwitch();
                    //that.getCompanyCountBasicData();

                    that.treeBoxHeightResize();
                    $(window).resize(function () {
                        var t = setTimeout(function () {
                            that.treeBoxHeightResize();
                            clearTimeout(t);
                        });
                    });

                }else {
                    S_dialog.error(response.info);
                }
            })


        }
        //树菜单高度自适应
        , treeBoxHeightResize:function () {
            var that = this;
            var pageWrapperH = $('#page-wrapper').css('min-height');
            $(that.element).find('#org-tree-box').css('height',pageWrapperH);
        }
        //初始化人员列表
        , _initOrgUserList: function (orgId) {
            var options = {};
            var that = this;
            var hasHr_employee = that._roleCode.indexOf('hr_org_set')>-1;
            var isCurrentCompany = this._currTreeObj.companyId == window.currentCompanyId ? true : false;
            options.orgId = orgId;
            options.currOrgTreeObj = this._currTreeObj;
            options.isClick = false;
            $(this.element).find('#orgUserListBox').m_orgUserList(options);
        }
        //初始化组织树
        , _initOrgTree: function () {//type==1为显示完整组织树并可操作，type！=1为只显示本组织下的树
            var that = this;
            var options = {},type=that._treeType;
            options.isDialog = false;
            options.isGetUserList = false;
            options.treeUrl = type!=1?restApi.url_getOrgStructureTree:restApi.url_getOrgTreeSimple;
            // options.treeUrl = restApi.url_getOrgStructureTreeForSearch;
            options.currentCompanyId = window.currentCompanyId;
            options.treeIconObj = {
                'default': {
                    'icon': 'iconfont rounded icon-zuzhijiagou'
                },
                'independent': {   //独立经营图标
                    'icon': 'fa fa-users'
                },
                'partner': {       //事业合伙人图标
                    'icon': 'iconfont rounded icon-cooperation'
                },
                'partnerContainer': {       //事业合伙人容器图标
                    'icon': 'iconfont rounded icon-cooperation'
                },
                'subCompany': {       //分支机构图标
                    'icon': 'iconfont rounded icon-2fengongsi1'
                },
                'subCompanyContainer': {       //分支机构容器图标
                    'icon': 'iconfont rounded icon-2fengongsi1'
                },
                'company': {         //根节点图标
                    'icon': 'iconfont rounded icon-2fengongsi'
                }
            };
            options.initTreeDataCallBack = function(info){//用于判断info,如果Info为“0”表示不需要显示切换组织树，为“1”表示需要显示
                if(that._treeType ==1 && info && info!=1){
                    $('.treeSwitch a[data-action="treeSwitch"]').remove();
                }
            };
            options.afterOpenCallBack = function (data) {

                if(that._treeType !==1){
                    var html = '<i class="fa fa-flag" role="presentation" style="color: #4765a0;margin:0 5px;"></i>';
                    var id = that._selectedCompanyId;
                    if(id && !($('#organization_treeH li#'+id+'>a#'+id+'_anchor').find('i.fa-flag').length>0)){
                        $('#organization_treeH li#'+id+'>a#'+id+'_anchor').find('.icon-2fengongsi1').remove().end().prepend(html);
                    }
                }

                //that.dealTreeIconColorFun(data.node.id);
            };
            options.selectNodeCallBack = function (data,type) {
                that._currTreeObj = data;
                that._initOrgUserList(data.realId);
                $('#organization_treeH .tree-btn').remove();
                $('#organization_treeH .tooltip').remove();
                if(that._treeType!=1){
                    $(that.element).find('.headContent').hide();
                    //给我的组织加上图标标识
                    if(type &&　type == 'ready'){
                        var html = '<i class="fa fa-flag" role="presentation" style="color: #4765a0;margin:0 5px;"></i>';
                        var id = data.id;
                        that._selectedCompanyId = id;
                        if(id && !($('#organization_treeH li#'+id+'>a#'+id+'_anchor').find('i.fa-flag').length>0)) {
                            $('#organization_treeH li#' + id + '>a#' + id + '_anchor').find('.icon-2fengongsi1').remove().end().prepend(html);
                        }
                    }
                    return;
                }else{
                    $(that.element).find('.headContent').show();
                }
            };
            $(that.element).find('#organization_treeH').m_orgByTree(options);
        }
        //树icon颜色处理
        , dealTreeIconColorFun:function (id) {
            $('#organization_treeH').find('li[id="'+id+'"]>ul>li').each(function () {
                var $this = $(this);
                var relationType = $this.attr('relationtype');
                if(relationType==1){
                    $this.find('a.jstree-anchor i.jstree-icon').addClass('color-blue');
                }else if(relationType==2){
                    $this.find('a.jstree-anchor i.jstree-icon').addClass('color-green');
                }else if(relationType==3){
                    $this.find('a.jstree-anchor i.jstree-icon').addClass('color-red');
                }
            });
        }
        //绑定转换组织架构树的按钮
        ,bindTreeSwitch:function(){
            var that = this;
            $(that.element).find('.treeSwitch a[data-action="treeSwitch"]').bind('click',function(e){
                var html = '';
                if(that._treeType===1){
                    html = '<img src="'+window.rootPath+'/assets/img/my_org_framework.png" style="height: 23px;" data-toggle="tooltip" data-placement="top" title="查看我的组织架构" />';
                }else{
                    html = '<img src="'+window.rootPath+'/assets/img/whole_org_framework.png" style="height: 23px;" data-toggle="tooltip" data-placement="top" title="查看总公司组织架构" />';
                }
                $(this).html(html);
                $(this).find('img').tooltip();
                that._treeType=that._treeType===1?0:1;
                var html = '<div class="clearfix margin-bottom-10"></div><div id="organization_treeH">\
                            <ul class="sidebar-nav list-group sidebar-nav-v1">\
                            </ul>\
                            </div>';
                $(that.element).find('#organization_treeH').parent().html(html);
                that._initOrgTree(that._treeType);
                stopPropagation(e);
            });
            $(that.element).find('.treeSwitch a[data-action="treeSwitch"]>img').tooltip();
        }
        //界面文字刷新
        , dealHtmlTextRefresh: function (data) {
            $('span[data-obj="currOrgObj"][data-key]').each(function () {
                var name = $(this).attr('data-key');
                if (data[name] != null) {
                    $(this).html(data[name]);
                }
            });
        }

        ,_aliasbPartner:function($obj,data){
            $obj.find('.tree-btn a[data-action="aliasbPartner"]').on('click',function(event) {
                var $btn = $(this);
                var options = {
                    companyId:data.companyId,
                    companyOriginalName:data.treeEntity.companyName,
                    companyAlias:data.text,
                    saveCallback:function(){
                        $('#box_detail').m_organizational();
                    }
                };

                $('body').m_editAlias(options);

                return false;
            });
        }
        , _addDepart: function () {
            var that = this;
            var options = {};
            options.departObj = {};
            var selectDepart = {};
            if (that._currTreeObj.companyId != null) {
                selectDepart.id = that._currTreeObj.realId;
                selectDepart.departName = that._currTreeObj.text;
                selectDepart.pid = that._currTreeObj.treeEntity.pid;
                selectDepart.departLevel = that._currTreeObj.treeEntity.departLevel;
                selectDepart.departPath = that._currTreeObj.treeEntity.departPath;
                selectDepart.departType = that._currTreeObj.treeEntity.departType;
                selectDepart.companyId = that._currTreeObj.companyId;
                options.departObj.parentDepart = selectDepart;
                options.doType = 'add';
                options.saveCallBack = function (data) {
                    addNodeByTree(data, that._currTreeObj, that._currentCompanyId);
                };
                $('body').m_editDepart(options);
            } else {
                S_toastr.warning('请选择组织！');
            }
        }
    });

    $.fn[pluginName] = function (options) {
        return this.each(function () {

            //if (!$.data(this, "plugin_" + pluginName)) {
            $.data(this, "plugin_" +
                pluginName, new Plugin(this, options));
            //}
        });
    };

})(jQuery, window, document);

/**
 * 组织－组织架构-批量导入
 * Created by wrb on 2017/2/23.
 */
;(function ($, window, document, undefined) {

    "use strict";
    var pluginName = "m_bulkImport",
        defaults = {
            $companyInfo: null//组织信息对象
        };

    // The actual plugin constructor
    function Plugin(element, options) {
        this.element = element;

        this.settings = $.extend({}, defaults, options);
        this._defaults = defaults;
        this._name = pluginName;

        this._currentCompanyId = window.currentCompanyId;
        this._currTreeObj = null;
        this._cdnUrl = window.cdnUrl;

        this.init();
    }

    // Avoid Plugin.prototype conflicts
    $.extend(Plugin.prototype, {
        init: function () {
            var that = this;
            that._renderHtml();
            that._uploadUserFile();
            that._bindActionClick();
            that._bindBackTolast();
        }
        //渲染界面
        , _renderHtml: function () {
            var that = this;
            var html = template('m_org/m_bulkImport', {companyName: that.settings.$companyInfo.companyName});
            $(that.element).html(html);
        }
        , _uploadUserFile: function () {
            var options = {}, that = this;
            options.server = restApi.url_uploadUserFile;
            options.formData = {companyId: that.settings.$companyInfo.companyId};
            // options.id = '#filePicker';
            options.accept = {
                title: '请选择Excel文件',
                extensions: 'xlsx,xls',
                mimeTypes: '.xlsx,.xls'
            };
            options.loadingId = '#content-box .ibox';
            options.uploadProgressCallback = function (file, percentage) {
                var progressObj = $(that.element).find('.progress');
                progressObj.removeClass('hide');
                progressObj.find('.progress-bar').css('width', percentage * 100 + '%');
                if (percentage == 1) {
                    progressObj.addClass('hide');
                }
            };
            options.uploadSuccessCallback = function (file, response) {
                S_toastr.success(response.info);
                $(that.element).find('#errorListBox').html('');
                if (response.data != null && response.data.error!=null) {
                    var options = {};
                    options.$userErrorList = response.data.error;
                    $(that.element).find('#errorListBox').m_bulkImportListTips(options);
                } else {//返回组织架构
                    $(that.element).m_organizational();
                }
            };
            $(that.element).find('#filePicker').m_fileUploader(options, true);
        }
        //下载模板
        , _downLoadTemplate: function () {
            var that = this;
            window.open(that._cdnUrl+'/download/OrgImportTpl.xlsx');
        }
        //按钮事件绑定
        , _bindActionClick: function () {
            var that = this;
            $(that.element).find('a[data-action]').on('click', function () {
                var dataAction = $(this).attr('data-action');
                if (dataAction == 'downLoadTemplate') {
                    that._downLoadTemplate();
                    return false;
                }
            });
        }
        //返回按钮绑定
        , _bindBackTolast: function () {
            var that = this;
            $(that.element).find("a[data-action='backToLast']").on('click', function () {
                $(that.element).m_organizational();
            });
        }


    });

    $.fn[pluginName] = function (options) {
        return this.each(function () {

            //if (!$.data(this, "plugin_" + pluginName)) {
            $.data(this, "plugin_" +
                pluginName, new Plugin(this, options));
            //}
        });
    };

})(jQuery, window, document);

/**
 * Created by wrb on 2016/12/19.
 */
;(function ($, window, document, undefined) {

    "use strict";
    var pluginName = "m_bulkImportListTips",
        defaults = {
            $userErrorList:[]
        };

    // The actual plugin constructor
    function Plugin(element, options) {
        this.element = element;

        this.settings = $.extend({}, defaults, options);
        this._defaults = defaults;
        this._name = pluginName;
        this.init();
    }

    // Avoid Plugin.prototype conflicts
    $.extend(Plugin.prototype, {
        init: function () {
            this.initHtmlData();
        }
        //数据并加载模板
        ,initHtmlData:function () {
            var that = this;
            var $data = {};
            if(that.settings.$userErrorList!=null && that.settings.$userErrorList.length>0){
                $data.userErrorList =  that.settings.$userErrorList;
                var html = template('m_org/m_bulkImportListTips',$data);
                $(that.element).html(html);
            }

        }
        //按钮事件绑定
        ,bindActionClick:function () {
            var that = this;

        }

    });

    $.fn[pluginName] = function (options) {
        return this.each(function () {

            //if (!$.data(this, "plugin_" + pluginName)) {
            $.data(this, "plugin_" +
                pluginName, new Plugin(this, options));
            //}
        });
    };

})(jQuery, window, document);

/**
 * Created by wrb on 2016/12/15.
 */
;(function ($, window, document, undefined) {

    "use strict";
    var pluginName = "m_createOrg",
        defaults = {
            orgId: '',
            userUrl: '',
            saveOrgCallback: null
        };

    // The actual plugin constructor
    function Plugin(element, options) {
        this.element = element;

        this.settings = $.extend({}, defaults, options);
        this._defaults = defaults;
        this._name = pluginName;
        this.init();
    }

    // Avoid Plugin.prototype conflicts
    $.extend(Plugin.prototype, {
        init: function () {
            var that = this;
            that.initData(function () {
                that.bindActionClick();

                //加载省市区
                $("#citysBox").citySelect({
                    nodata: "none",
                    required: false
                });

            });

        }
        //初始化数据并加载模板
        , initData: function (callback) {
            var that = this;
            var option = {};
            option.url = restApi.url_projectType;
            option.postData = {};
            m_ajax.postJson(option, function (response) {
                if (response.code == '0') {
                    var html = template('m_org/m_createOrg', {serverTypeList: response.data});
                    $(that.element).html(html);
                    that.saveCreatOrg_validate();
                    if (callback != null) {
                        callback();
                    }
                } else {
                    S_dialog.error(response.info);
                }
            })
        }
        //保存组织
        , saveOrg: function () {
            var that = this;
            var option = {};
            option.url = restApi.url_registerCompany;
            option.postData = $('form.createOrgBox').serializeObject();
            option.postData.companyShortName=option.postData.companyName;
            var serverTypeStr = '';
            var i = 0;
            $('form.createOrgBox input[name="serverType"]:checked').each(function () {
                serverTypeStr += $(this).val() + ',';
                i++;
            });
            if (i > 0) {
                serverTypeStr = serverTypeStr.substring(0, serverTypeStr.length - 1);
            }
            option.postData.serverType = serverTypeStr;
            if ($('form.createOrgBox').valid()) {
                $(that.element).find('a[data-action="saveOrg"]').removeAttr('data-action');
                $_loading.show('form.createOrgBox');
                m_ajax.postJson(option, function (response) {
                    if (response.code == '0') {
                        $_loading.close('form.createOrgBox');
                        S_toastr.success('保存成功！');
                        if (that.settings.saveOrgCallback != null) {
                            that.settings.saveOrgCallback(response.data);
                        }
                    } else {
                        S_dialog.error(response.info);
                    }
                });
            }
        }
        //按钮事件绑定
        , bindActionClick: function () {
            var that = this;
            $('form.createOrgBox a[data-action]').on('click', function (event) {
                var dataAction = $(this).attr('data-action');
                if (dataAction == "saveOrg") {//保存组织
                    that.saveOrg();
                    return false;
                }
            });
        }
        , saveCreatOrg_validate: function () {
            var that = this;
            $('form.createOrgBox').validate({
                rules: {
                    companyName: {
                        required: true,
                        maxlength: 50,
                        isEmpty:true
                    }
                },
                messages: {
                    companyName: {
                        required: '请输入组织名称!',
                        maxlength: '组织名称不超过50位!',
                        isEmpty:'请输入组织名称!'
                    }
                }
            });
            // 名称空格验证
            jQuery.validator.addMethod("isEmpty", function (value, element) {
                if($.trim(value)==''){
                    return false;
                }else{
                    return true;
                }

            }, "请输入组织名称!");
        }
    });

    $.fn[pluginName] = function (options) {
        return this.each(function () {

            //if (!$.data(this, "plugin_" + pluginName)) {
            $.data(this, "plugin_" +
                pluginName, new Plugin(this, options));
            //}
        });
    };

})(jQuery, window, document);

/**
 * 设置别名
 * Created by wrb on 2016/12/16.
 */
;(function ($, window, document, undefined) {

    "use strict";
    var pluginName = "m_editAlias",
        defaults = {
            title:'',
            isDailog:true,
            companyId:null,
            companyOriginalName:null,
            companyAlias:null,
            relationTypeId:null,
            saveCallback:null
        };

    // The actual plugin constructor
    function Plugin(element, options) {
        this.element = element;

        this.settings = $.extend({}, defaults, options);
        this._defaults = defaults;
        this._name = pluginName;
        this.init();
    }

    // Avoid Plugin.prototype conflicts
    $.extend(Plugin.prototype, {
        init: function () {
            var that = this;
            that.initHtmlData();
        }
        //初始化数据并加载模板
        , initHtmlData:function () {
            var that = this;
            S_dialog.dialog({
                title: that.settings.title||'编辑事业合伙人',
                contentEle: 'dialogOBox',
                lock: 3,
                width: '430',
                tPadding: '0',
                url: rootPath+'/assets/module/m_common/m_dialog.html',
                ok:function(){
                    if(!$('form.editAliasForm').valid()){
                        return false;
                    }else{
                        that.submitFunction();
                    }
                },
                okText:'保存',
                cancel:function(){

                },
                cancelText:'取消'
            },function(d){//加载html后触发

                that.element = 'div[id="content:'+d.id+'"] .dialogOBox';
                var opt = {
                    companyOriginalName:that.settings.companyOriginalName,
                    companyAlias:that.settings.companyAlias,
                    relationTypeId:that.settings.relationTypeId
                };
                var html = template('m_org/m_editAlias',opt);
                $(that.element).html(html);
                that.initValidate();
                that.bindActionClick();
            });
        }
        , submitFunction:function () {
            var that = this;
            var option  = {};
            option.url = restApi.url_setBusinessPartnerNickName;
            option.postData={
                companyId : that.settings.companyId,
                companyName :  $(that.element).find('input[name="companyName"]').val(),
                relationTypeId  : $(that.element).find('input[name="roleType"]:checked').val()
            };
            m_ajax.postJson(option,function (response) {
                if(response.code=='0'){
                    S_toastr.success('保存成功！');
                    if(that.settings.saveCallback)
                        that.settings.saveCallback();
                }else {
                    S_dialog.error(response.info);
                }
            });
        }
        //按钮事件绑定
        , bindActionClick:function () {
            var that = this;
            $(that.element).find('a[data-action]').on('click',function () {
                var $this = $(this);
                var dataAction = $this.attr('data-action');
                switch (dataAction){
                    case 'roleRightsPreView':
                        var option = {};
                        option.$type = $(that.element).find('input[name="roleType"]:checked').val();
                        $('body').m_roleRightsPreview(option);
                        break;
                }
            });
        }
        ,initValidate:function(){
            var that = this;
            $('form.editAliasForm').validate({
                rules: {
                    companyName:{
                        required:true
                    }/*,
                    companyAlias:{
                        required:true
                    }*/
                },
                messages: {
                    companyName:{
                        required:'请输入组织名称!'
                    }/*,
                    companyAlias:{
                        required:'请输入别名!'
                    }*/
                },
                errorPlacement: function (error, element) {
                    error.insertAfter(element);
                }
            });
        }
    });

    $.fn[pluginName] = function (options) {
        return this.each(function () {

            //if (!$.data(this, "plugin_" + pluginName)) {
            $.data(this, "plugin_" +
                pluginName, new Plugin(this, options));
            //}
        });
    };

})(jQuery, window, document);

/**
 * 添加部门，编辑部门
 * Created by wrb on 2016/12/16.
 */
;(function ($, window, document, undefined) {

    "use strict";
    var pluginName = "m_editDepart",
        defaults = {
            title:'',
            isDailog:true,
            departObj:null,
            doType:'add',//默认添加 edit=编辑
            saveCallBack:null,//保存回滚事件
            delCallBack:null//删除回滚事件

        };

    // The actual plugin constructor
    function Plugin(element, options) {
        this.element = element;

        this.settings = $.extend({}, defaults, options);
        this._defaults = defaults;
        this._name = pluginName;
        this.init();
    }

    // Avoid Plugin.prototype conflicts
    $.extend(Plugin.prototype, {
        init: function () {
            var that = this;
            that.initHtmlData(function () {
                that.bindActionClick();
                that.saveDepart_validate();
            });
        }
        //初始化数据并加载模板
        ,initHtmlData:function (callBack) {
            var that = this;
            if(that.settings.isDailog){//以弹窗编辑
                S_dialog.dialog({
                    title: that.settings.title||'添加部门',
                    contentEle: 'dialogOBox',
                    lock: 3,
                    width: '600',
                    tPadding: '0px',
                    url: rootPath+'/assets/module/m_common/m_dialog.html'
                },function(d){//加载html后触发

                    var $data = {};
                    $data.departObj={};
                    $data.parentDepart=that.settings.departObj.parentDepart;
                    $data.isDailog=that.settings.isDailog;
                    if(that.settings.doType=='edit'){
                        $data.departObj = that.settings.departObj;
                        $data.doType = that.settings.doType;
                    }
                    var html = template('m_org/m_editDepart',$data);
                    $('div[id="content:'+d.id+'"] .dialogOBox').html(html);
                    if(callBack!=null){
                        callBack();
                    }
                });
            }else{//不以弹窗编辑
                var html = template('m_org/m_editDepart',{
                    parentDepart:that.settings.departObj.parentDepart,
                    isDailog:that.settings.isDailog
                });
                $(that.element).html(html);
                if(callBack!=null){
                    callBack();
                }
            }
        }
        //部门保存
        ,saveDepart:function (e) {
            var that = this;
            if($('form.editDepartOBox').valid()){
                var option  = {};
                option.url = restApi.url_saveOrUpdateDepart;
                if(that.settings.doType=='edit'){
                    that.settings.departObj.departName = $('.editDepartOBox input[name="departName"]').val();
                    option.postData = that.settings.departObj;
                }else{
                    var departObj = {};
                    departObj.parentDepart = that.settings.departObj.parentDepart;
                    departObj.departType='0';
                    departObj.pid = that.settings.departObj.parentDepart.id;
                    departObj.companyId = that.settings.departObj.parentDepart.companyId;
                    departObj.departName = $('.editDepartOBox input[name="departName"]').val();
                    option.postData = departObj;
                }

                // console.log(option.postData)
                m_ajax.postJson(option,function (response) {
                    if(response.code=='0'){
                        S_toastr.success('保存成功！');
                        if(that.settings.isDailog){
                            S_dialog.close(e);
                        }
                        if(that.settings.saveCallBack!=null){
                            return that.settings.saveCallBack(response.data);
                        }
                    }else {
                        S_dialog.error(response.info);
                    }
                })
            }
        }
        //删除部门
        ,delDepart:function (e) {
            var that = this;
            S_dialog.confirm('部门下包含的人员或子部门将一起删除，此操作不可恢复。确定要继续吗？',function(){
                var options = {};
                options.url = restApi.url_depart+'/'+that.settings.departObj.id;
                m_ajax.get(options,function (response) {
                    if(response.code=='0'){
                        S_toastr.success('删除成功！');
                        if(that.settings.isDailog){
                            S_dialog.close(e);
                        }
                        delNodeByTree();
                        if(that.settings.delCallBack!=null){
                            that.settings.delCallBack();
                        }
                    }else {
                        S_dialog.error(response.info);
                    }
                })
            },function(){});
        }
        //按钮事件绑定
        ,bindActionClick:function () {
            var that = this;
            $('.editDepartOBox button[data-action]').on('click',function () {
                var dataAction = $(this).attr('data-action');
                if(dataAction=='saveDepart'){//保存部门
                    that.saveDepart($(this));
                    return false;
                }else if(dataAction=='delDepart'){//删除部门
                    that.delDepart($(this));
                    return false;
                }
            });
        }
        ,saveDepart_validate:function(){
            var that = this;
            $('form.editDepartOBox').validate({
                rules: {
                    departName:{
                        required:true,
                        maxlength:50
                    }

                },
                messages: {
                    departName:{
                        required:'请输入部门名称!',
                        maxlength:'部门名称不超过50位!'
                    }
                }
            });

        }

    });

    $.fn[pluginName] = function (options) {
        return this.each(function () {

            //if (!$.data(this, "plugin_" + pluginName)) {
            $.data(this, "plugin_" +
                pluginName, new Plugin(this, options));
            //}
        });
    };

})(jQuery, window, document);

7/**
 * 创建事业合伙人
 * Created by wrb on 2016/12/17.
 */
;(function ($, window, document, undefined) {

    "use strict";
    var pluginName = "m_editPartner",
        defaults = {
            title:'',
            type:'add',//add为添加，edit为编辑
            isDailog:true,
            companyId:'',
            companyObj:null,
            saveCallBack:null

        };

    // The actual plugin constructor
    function Plugin(element, options) {
        this.element = element;

        this.settings = $.extend({}, defaults, options);
        this._defaults = defaults;
        this._name = pluginName;
        this.init();
    }

    // Avoid Plugin.prototype conflicts
    $.extend(Plugin.prototype, {
        init: function () {
            var that = this;
            that.initHtmlData(function () {
                that.bindActionClick();
                that.saveCompany_validate();
                var options = {};
                /*if(that.settings.companyObj!=null){
                    options.$province = that.settings.companyObj.province;
                    options.$city = that.settings.companyObj.city;
                    //加载省市区
                    $("#citysBox").citySelect({
                        prov:that.settings.companyObj.province,
                        city:that.settings.companyObj.city,
                        dist:that.settings.companyObj.county,
                        nodata:"none",
                        required:false
                    });
                }else{
                    //加载省市区
                    $("#citysBox").citySelect({
                        nodata:"none",
                        required:false
                    });
                }
                //$('.branchCompanyOBox #citysBox').m_choseCity(options);
                $('.branchCompanyOBox input[name="serverType"]').bind('click',function(event){
                    $(this).parents('.serviceTypeEdit').find('span[name="severType"]').html('');
                });*/


            });
        }
        //初始化数据并加载模板
        ,initHtmlData:function (callBack) {
            var that = this;
            if(that.settings.isDailog){//以弹窗编辑
                S_dialog.dialog({
                    title: that.settings.title||'创建事业合伙人',
                    contentEle: 'dialogOBox',
                    lock: 3,
                    width: '700',
                    height:'340',
                    tPadding: '0px',
                    url: rootPath+'/assets/module/m_common/m_dialog.html',
                    okText:'保存',
                    ok:function(){
                        var check_1 = $('form.branchCompanyOBox').valid();
                        //var check_2 = that.validateServerType();
                        if(!check_1){
                            return false;
                        }else{
                            that.saveCompany();
                        }
                    },
                    cancelText:'取消',
                    cancel:function(){

                    }
                },function(d){//加载html后触发

                    var $data = {};
                    $data.companyObj = {};//添加组织对象
                    $data.companyObj.editType = '1';
                    if(that.settings.companyObj!=null){
                        $data.companyObj.editType = '2';
                        $data.companyObj = that.settings.companyObj;
                    }
                    that.getProjectType(function (data) {

                        that.element = 'div[id="content:'+d.id+'"] .dialogOBox';
                        $data.currentCompanyId = window.currentCompanyId;
                        $data.serverTypeList = data;
                        var html = template('m_org/m_editPartner',$data);
                        $(that.element).html(html);
                        /*if(that.settings.companyObj!=null){
                            $('.branchCompanyOBox input[name="serverType"]').each(function () {
                                if($data.companyObj.serverType.indexOf($(this).val())>-1){
                                    $(this).attr('checked','checked');
                                }
                            });
                        }*/
                        if(callBack!=null){
                            callBack();
                        }
                    });

                });
            }else{//不以弹窗编辑
                var html = template('m_org/m_editPartner',{});
                $(that.element).html(html);
                if(callBack!=null){
                    callBack();
                }
            }
        }
        ,getProjectType:function (callBack) {
            var that = this;
            var option  = {};
            option.url = restApi.url_projectType;
            option.postData = {};
            m_ajax.postJson(option,function (response) {
                if(response.code=='0'){
                    if(callBack!=null){
                        return callBack(response.data);
                    }
                }else {
                    S_dialog.error(response.info);
                }
            })
        }
        //组织保存
        ,saveCompany:function () {
            var that = this;
            var option  = {};
            option.url = restApi.url_businessPartner;
            var $data = $("form.branchCompanyOBox").serializeObject();
            /*var serverTypeStr = '';
            var i=0;
            $('form.branchCompanyOBox input[name="serverType"]:checked').each(function(){
                serverTypeStr += $(this).val()  + ',';
                i++;
            });
            if(i>0){
                serverTypeStr = serverTypeStr.substring(0,serverTypeStr.length-1);
            }
            $data.serverType = serverTypeStr;*/
            if(that.settings.companyObj!=null){//编辑
                $data.id = that.settings.companyObj.id;
            }
            option.postData = $data;
            option.classId = '.branchCompanyOBox';
            m_ajax.postJson(option,function (response) {
                if(response.code=='0'){
                    S_toastr.success('保存成功！');
                    if(that.settings.saveCallBack!=null){
                        return that.settings.saveCallBack(response.data);
                    }
                }else {
                    S_dialog.error(response.info);
                }
            })
        }
        //删除事业合伙人事件
        ,deleteSubCompany:function(e){
            var that = this;
            var option  = {};
            option.url = restApi.url_subCompany+'/'+that.settings.companyObj.id;
            S_dialog.confirm('您确定要删除吗？',function(){
                m_ajax.get(option,function (response) {
                    if(response.code=='0'){
                        S_toastr.success('删除成功！');
                        if(that.settings.isDailog){
                            S_dialog.close(e);
                            delNodeByTree();
                        }
                    }else {
                        S_dialog.error(response.info);
                    }
                })
            },function(){})

        }
        //按钮事件绑定
        ,bindActionClick:function () {
            var that = this;
            $('.branchCompanyOBox button[data-action],.branchCompanyOBox a[data-action]').on('click',function () {
                var $this = $(this);
                var dataAction = $this.attr('data-action');
                switch (dataAction){
                    case 'saveCompany'://保存组织
                        that.saveCompany($this);
                        return false;
                        break;
                    case 'deleteSubCompany'://删除组织
                        that.deleteSubCompany($this);
                        break;
                    case 'roleRightsPreView':
                        var option = {};
                        option.$type = $(that.element).find('input[name="roleType"]:checked').val();
                        $('body').m_roleRightsPreview(option);
                        break;
                }
            });

            /*$(that.element).find('input[name="roleType"]').on('click',function () {

                $(that.element).find('a[data-action="roleRightsPreView"]').addClass('hide');
                $(this).parent().find('a[data-action="roleRightsPreView"]').removeClass('hide');

            });*/

        }
        ,saveCompany_validate:function(){
            var that = this;
            $('form.branchCompanyOBox').validate({
                rules: {
                    companyName:{
                        required:true,
                        maxlength:50
                    },
                    /*companyShortName:"required",
                    province:"required",
                    city:"required",*/
                    cellphone: {
                        required: true,
                        minlength: 11,
                        isMobile: true
                    },
                    userName:{
                        required:true,
                        isEmpty:true
                    }
                    /*,adminPassword:{
                        required: true,
                        rangelength:[6,12],
                        checkSpace:true
                    }*/


                },
                messages: {
                    companyName:{
                        required:'请输入事业合伙人名称!',
                        maxlength:'事业合伙人名称不超过50位!'
                    },
                    /*companyShortName:"请输入事业合伙人简称!",
                    province:"请选择所在地区!",
                    city:"请选择所在地区!",*/
                    cellphone: {
                        required: "请输入手机号码",
                        minlength: "确认手机不能小于11个字符",
                        isMobile: "请正确填写您的手机号码"
                    },
                    userName:{
                        required:"请输入负责人姓名!",
                        isEmpty:'请输入负责人姓名!'
                    }
                    /*,adminPassword:{
                        required:'请输入卯丁账号密码！',
                        rangelength: "密码为6-12位！",
                        checkSpace: "密码不应含有空格!"
                    }*/
                },
                errorPlacement: function (error, element) { //指定错误信息位置
                    if (element.hasClass('prov') || element.hasClass('city')) {
                        error.appendTo(element.closest('.col-md-6'));
                    } else {
                        error.insertAfter(element);
                    }
                }
            });
            // 名称空格验证
            jQuery.validator.addMethod("isEmpty", function (value, element) {
                if($.trim(value)==''){
                    return false;
                }else{
                    return true;
                }

            }, "请输入负责人姓名!");
            $.validator.addMethod("checkSpace", function(value, element) {
                var pattern=/^\S+$/gi;
                return this.optional(element) || pattern.test( value ) ;
            }, "密码不应含有空格!");
            // 手机号码验证
            jQuery.validator.addMethod("isMobile", function(value, element) {
                var length = value.length;
                var mobile = /^(13[0-9]{9})|(18[0-9]{9})|(14[0-9]{9})|(17[0-9]{9})|(15[0-9]{9})$/;
                return this.optional(element) || (length == 11 && mobile.test(value));
            }, "请正确填写您的手机号码");
        }
        //验证服务类型是否为空
        ,validateServerType:function(){
            var len = $('.branchCompanyOBox input[name="serverType"]:checked').length;
            if(len>0){
                return true;
            }else{
                var html = '<label id="severType-error" class="error" for="severType">请选择服务类型!</label>';
                $('.branchCompanyOBox span[name="severType"]').html(html)
                return false;
            }
        }

    });

    $.fn[pluginName] = function (options) {
        return this.each(function () {

            //if (!$.data(this, "plugin_" + pluginName)) {
            $.data(this, "plugin_" +
                pluginName, new Plugin(this, options));
            //}
        });
    };

})(jQuery, window, document);

7/**
 * 创建分支机构
 * Created by wrb on 2016/12/17.
 */
;(function ($, window, document, undefined) {

    "use strict";
    var pluginName = "m_editSubCompany",
        defaults = {
            title:'',
            type:'add',//add为添加，edit为编辑
            isDailog:true,
            companyId:'',
            companyObj:null,
            saveCallBack:null

        };

    // The actual plugin constructor
    function Plugin(element, options) {
        this.element = element;

        this.settings = $.extend({}, defaults, options);
        this._defaults = defaults;
        this._name = pluginName;
        this.init();
    }

    // Avoid Plugin.prototype conflicts
    $.extend(Plugin.prototype, {
        init: function () {
            var that = this;
            that.initHtmlData(function () {
                that.bindActionClick();
                that.saveCompany_validate();
                var options = {};
                /*if(that.settings.companyObj!=null){
                    options.$province = that.settings.companyObj.province;
                    options.$city = that.settings.companyObj.city;
                    //加载省市区
                    $("#citysBox").citySelect({
                        prov:that.settings.companyObj.province,
                        city:that.settings.companyObj.city,
                        dist:that.settings.companyObj.county,
                        nodata:"none",
                        required:false
                    });
                }else{
                    //加载省市区
                    $("#citysBox").citySelect({
                        nodata:"none",
                        required:false
                    });
                }
                //$('.branchCompanyOBox #citysBox').m_choseCity(options);
                $('.branchCompanyOBox input[name="serverType"]').bind('click',function(event){
                    $(this).parents('.serviceTypeEdit').find('span[name="severType"]').html('');
                });*/
            });
        }
        //初始化数据并加载模板
        ,initHtmlData:function (callBack) {
            var that = this;
            if(that.settings.isDailog){//以弹窗编辑
                S_dialog.dialog({
                    title: that.settings.title||'创建分支机构',
                    contentEle: 'dialogOBox',
                    lock: 3,
                    width: '700',
                    height:'340',
                    tPadding: '0px',
                    url: rootPath+'/assets/module/m_common/m_dialog.html',
                    okText:'保存',
                    ok:function(){
                        var check_1 = $('form.branchCompanyOBox').valid();
                        //var check_2 = that.validateServerType();
                        if(!check_1){
                            return false;
                        }else{
                            that.saveCompany();
                        }
                    },
                    cancelText:'取消',
                    cancel:function(){

                    }
                },function(d){//加载html后触发

                    var $data = {};
                    $data.companyObj = {};//添加组织对象
                    $data.companyObj.editType = '1';
                    if(that.settings.companyObj!=null){
                        $data.companyObj.editType = '2';
                        $data.companyObj = that.settings.companyObj;
                    }
                    that.getProjectType(function (data) {

                        that.element = 'div[id="content:'+d.id+'"] .dialogOBox';
                        $data.currentCompanyId = window.currentCompanyId;
                        $data.serverTypeList = data;
                        var html = template('m_org/m_editSubCompany',$data);
                        $(that.element).html(html);
                        /*if(that.settings.companyObj!=null){
                            $('.branchCompanyOBox input[name="serverType"]').each(function () {
                                if($data.companyObj.serverType.indexOf($(this).val())>-1){
                                    $(this).attr('checked','checked');
                                }
                            });
                        }*/
                        if(callBack!=null){
                            callBack();
                        }
                    });

                });
            }else{//不以弹窗编辑
                var html = template('m_org/m_editSubCompany',{});
                $(that.element).html(html);
                if(callBack!=null){
                    callBack();
                }
            }
        }
        ,getProjectType:function (callBack) {
            var that = this;
            var option  = {};
            option.url = restApi.url_projectType;
            option.postData = {};
            m_ajax.postJson(option,function (response) {
                if(response.code=='0'){
                    if(callBack!=null){
                        return callBack(response.data);
                    }
                }else {
                    S_dialog.error(response.info);
                }
            })
        }
        //组织保存
        ,saveCompany:function () {
            var that = this;
            var option  = {};
            option.url = restApi.url_subCompany;
            var $data = $("form.branchCompanyOBox").serializeObject();
            /*var serverTypeStr = '';
            var i=0;
            $('form.branchCompanyOBox input[name="serverType"]:checked').each(function(){
                serverTypeStr += $(this).val()  + ',';
                i++;
            });
            if(i>0){
                serverTypeStr = serverTypeStr.substring(0,serverTypeStr.length-1);
            }
            $data.serverType = serverTypeStr;*/

            if(that.settings.companyObj!=null){//编辑
                $data.id = that.settings.companyObj.id;
            }
            option.postData = $data;
            option.classId = '.branchCompanyOBox';
            // console.log(option.postData)
            m_ajax.postJson(option,function (response) {
                if(response.code=='0'){
                    S_toastr.success('保存成功！');
                    if(that.settings.type!='edit'){
                        response.data.isCurrentSubCompany = 1;
                    }
                    if(that.settings.saveCallBack!=null){
                        return that.settings.saveCallBack(response.data);
                    }
                }else {
                    S_dialog.error(response.info);
                }
            })
        }
        //删除分支机构事件
        ,deleteSubCompany:function(e){
            var that = this;
            var option  = {};
            option.url = restApi.url_subCompany+'/'+that.settings.companyObj.id;
            S_dialog.confirm('您确定要删除吗？',function(){
                m_ajax.get(option,function (response) {
                    if(response.code=='0'){
                        S_toastr.success('删除成功！');
                        if(that.settings.isDailog){
                            S_dialog.close(e);
                            delNodeByTree();
                        }
                    }else {
                        S_dialog.error(response.info);
                    }
                })
            },function(){})

        }
        //按钮事件绑定
        ,bindActionClick:function () {
            var that = this;
            $('.branchCompanyOBox button[data-action],.branchCompanyOBox a[data-action]').on('click',function () {
                var $this = $(this);
                var dataAction = $this.attr('data-action');
                switch (dataAction){
                    case 'saveCompany'://保存组织
                        that.saveCompany($this);
                        return false;
                        break;
                    case 'deleteSubCompany'://删除组织
                        that.deleteSubCompany($this);
                        break;
                    case 'roleRightsPreView':
                        var option = {};
                        option.$type = $(that.element).find('input[name="roleType"]:checked').val();
                        $('body').m_roleRightsPreview(option);
                        break;
                }
            });
            /*$(that.element).find('input[name="roleType"]').on('click',function () {

                $(that.element).find('a[data-action="roleRightsPreView"]').addClass('hide');
                $(this).parent().find('a[data-action="roleRightsPreView"]').removeClass('hide');

            });*/
        }
        ,saveCompany_validate:function(){
            var that = this;
            $('form.branchCompanyOBox').validate({
                rules: {
                    companyName:{
                        required:true,
                        maxlength:50
                    },
                    /*companyShortName:"required",
                    province:"required",
                    city:"required",*/
                    cellphone: {
                        required: true,
                        minlength: 11,
                        isMobile: true
                    },
                    userName:{
                        required:true,
                        isEmpty:true
                    }/*,
                    adminPassword:{
                        required: true,
                        rangelength:[6,12],
                        checkSpace:true
                    }*/
                },
                messages: {
                    companyName:{
                        required:'请输入分支机构名称!',
                        maxlength:'分支机构名称不超过50位!'
                    },
                    /*companyShortName:"请输入分支机构简称!",
                    province:"请选择所在地区!",
                    city:"请选择所在地区!",*/
                    cellphone: {
                        required: "请输入手机号码",
                        minlength: "确认手机不能小于11个字符",
                        isMobile: "请正确填写您的手机号码"
                    },
                    userName:{
                        required:"请输入负责人姓名!",
                        isEmpty:'请输入负责人姓名!'
                    }/*,
                    adminPassword:{
                        required:'请输入卯丁账号密码！',
                        rangelength: "密码为6-12位！",
                        checkSpace: "密码不应含有空格!"
                    }*/
                },
                errorPlacement: function (error, element) { //指定错误信息位置
                    if (element.hasClass('prov') || element.hasClass('city')) {
                        error.appendTo(element.closest('.col-md-6'));
                    } else {
                        error.insertAfter(element);
                    }
                }
            });
            // 名称空格验证
            jQuery.validator.addMethod("isEmpty", function (value, element) {
                if($.trim(value)==''){
                    return false;
                }else{
                    return true;
                }

            }, "请输入负责人姓名!");
            $.validator.addMethod("checkSpace", function(value, element) {
                var pattern=/^\S+$/gi;
                return this.optional(element) || pattern.test( value ) ;
            }, "密码不应含有空格!");
            // 手机号码验证
            jQuery.validator.addMethod("isMobile", function(value, element) {
                var length = value.length;
                var mobile = /^(13[0-9]{9})|(18[0-9]{9})|(14[0-9]{9})|(17[0-9]{9})|(15[0-9]{9})$/;
                return this.optional(element) || (length == 11 && mobile.test(value));
            }, "请正确填写您的手机号码");
        }
        //验证服务类型是否为空
        ,validateServerType:function(){
            var len = $('.branchCompanyOBox input[name="serverType"]:checked').length;
            if(len>0){
                return true;
            }else{
                var html = '<label id="severType-error" class="error" for="severType">请选择服务类型!</label>';
                $('.branchCompanyOBox span[name="severType"]').html(html);
                return false;
            }
        }

    });

    $.fn[pluginName] = function (options) {
        return this.each(function () {

            //if (!$.data(this, "plugin_" + pluginName)) {
            $.data(this, "plugin_" +
                pluginName, new Plugin(this, options));
            //}
        });
    };

})(jQuery, window, document);

/**
 * 添加人员，编辑人员
 * Created by wrb on 2016/12/16.
 */
;(function ($, window, document, undefined) {

    "use strict";
    var pluginName = "m_editUser",
        defaults = {
            title: '',
            isDailog: true,
            userObj: null,
            doType: 'add'//默认添加 edit=编辑
            , saveCallBack: null
            , companyId: ''
            , realId: ''
            , orgList: []
        };

    // The actual plugin constructor
    function Plugin(element, options) {
        this.element = element;

        this.settings = $.extend({}, defaults, options);
        this._defaults = defaults;
        this._name = pluginName;
        this.init();
    }

    // Avoid Plugin.prototype conflicts
    $.extend(Plugin.prototype, {
        init: function () {
            var that = this;
            that.initHtmlData(function () {
                that.bindActionClick();
                that.saveUser_validate();
            });
        }
        //初始化数据并加载模板
        , initHtmlData: function (callBack) {
            var that = this;
            if (that.settings.isDailog) {//以弹窗编辑
                S_dialog.dialog({
                    title: that.settings.title || '添加人员',
                    contentEle: 'dialogOBox',
                    lock: 3,
                    width: '800',
                    height: '450',
                    maxHeight: '550',
                    tPadding: '0px',
                    url: rootPath + '/assets/module/m_common/m_dialog.html',
                    okText: '保存',
                    ok: function () {
                        if ( !(that.saveUser_depart_validate() && $('form.editUserOBox').valid())) {
                            return false;
                        } else {
                            that.saveUser();

                        }
                    },
                    cancel: function () {

                    }
                }, function (d) {//加载html后触发

                    var $data = {};
                    $data.memberObj = {};//添加人员对象
                    that.getDepartByCompanyId(function () {

                        $data.memberObj.departList = [];
                        $data.orgList = that.settings.orgList;
                        if (that.settings.userObj != null) {//编辑
                            $data.memberObj = that.settings.userObj;
                        } else {
                            var org = {
                                "id": null,
                                "companyId": null,
                                "departId": null,
                                "cuId": null,
                                "userId": null,
                                "serverStation": null
                            };
                            $data.memberObj.departList.push(org);
                            $data.memberObj.departList[0].departId = that.settings.realId;
                        }

                        var html = template('m_org/m_editUser', $data);
                        $('div[id="content:' + d.id + '"] .dialogOBox').html(html);
                        $('form.editUserOBox a[data-action="delDepartServerStation"]').eq(0).addClass('hide');
                        if (that.settings.userObj != null) {
                            that.dealSelectDisabled();
                        }
                        if (callBack != null) {
                            callBack();
                        }
                    });

                });
            } else {//不以弹窗编辑
                var html = template('m_org/m_editUser', {});
                $(that.element).html(html);
                if (callBack != null) {
                    callBack();
                }
            }
        }
        , getDepartByCompanyId: function (callBack) {
            var that = this;
            var option = {};
            option.url = restApi.url_getDepartByCompanyId + '/' + that.settings.companyId;
            m_ajax.get(option, function (response) {
                if (response.code == '0') {
                    that.settings.orgList = response.data;
                    if (callBack != null) {
                        callBack();
                    }
                } else {
                    S_dialog.error(response.info);
                }
            })
        }
        //人员保存
        , saveUser: function (e) {
            var that = this;
            var option = {};
            option.url = restApi.url_saveCompanyUser;
            var $data = $("form.editUserOBox").serializeObject();
            $data.departList = [];

            $('form.editUserOBox .departList').each(function () {
                var obj = {};
                obj.departId = $(this).find('select[name="departIdSel"] option:selected').val();
                obj.serverStation = $(this).find('input[name="serverStation"]').val();
                if (that.settings.userObj != null) {
                    var dataDepartId = $(this).find('select[name="departIdSel"]').attr('data-depart-id');
                    if (dataDepartId != undefined && dataDepartId != '') {
                        obj.id = dataDepartId;
                    }
                    obj.userId = that.settings.userObj.userId;
                }
                $data.departList.push(obj);
            })
            $data.serverStation = null;
            $data.companyId = that.settings.companyId;
            $data.cellphone = $('.editUserOBox input[name="cellphone"]').val();
            if (that.settings.userObj != null) {
                $data.id = that.settings.userObj.id;
                $data.userId = that.settings.userObj.userId;
            }
            option.postData = $data;
            m_ajax.postJson(option, function (response) {
                if (response.code == '0') {
                    S_toastr.success('保存成功！');
                    /*if(that.settings.isDailog){
                     S_dialog.close(e);
                     }*/
                    $('#organization_treeH a.jstree-anchor.jstree-clicked').click();//刷新员工页面数据
                    if (that.settings.doType == 'add') {
                        var count_num1 = $('.panel-footer span[data-key="companyUserCount"]').text();
                        var count_num2 = $('.panel-footer span[data-key="companyUserNotActiveCount"]').text();
                        $('.panel-footer span[data-key="companyUserCount"]').text(count_num1 - 0 + 1);
                        $('.panel-footer span[data-key="companyUserNotActiveCount"]').text(count_num2 - 0 + 1);
                    }
                    if (that.settings.saveCallBack != null) {
                        return that.settings.saveCallBack(response.data);
                    }
                } else {
                    S_dialog.error(response.info);
                }
            })
        }
        //添加职位
        , addDepartServerStation: function () {
            var that = this;
            var trHtml = $('.departListTbody').eq(0).clone();
            trHtml.find('input[name="serverStation"]').val('');
            trHtml.find('select[name="departIdSel"] option').removeAttr('selected');
            trHtml.find('a[data-action="delDepartServerStation"]').removeClass('hide');
            trHtml.find('select[name="departIdSel"]').attr('data-depart-id', '');
            trHtml.find('a[data-action="delDepartServerStation"]').on('click', function () {
                $(this).closest('tr').remove();
                that.dealSelectDisabled();
            });
            trHtml.find('select[name="departIdSel"]').on('change', function () {
                that.dealSelectDisabled();
                return false;
            });

            $('.addDepartListTbody').before(trHtml);

            that.dealSelectDisabled();

            // console.log(trHtml)
        }
        //部门选择处理
        , dealSelectDisabled: function () {
            var departIds = '';
            $('select[name="departIdSel"]').each(function () {
                var id = $(this).find('option:selected').val();
                if (id != '') {
                    departIds += id + ',';
                }

            });
            $('select[name="departIdSel"]').each(function () {
                $(this).find('option').each(function () {
                    $(this).removeAttr('disabled');
                    if ($(this).val() != '' && departIds.indexOf($(this).val()) > -1) {
                        $(this).attr('disabled', 'disabled');
                    }
                });

            });
        }
        , bindSelChangeClick: function () {
            var that = this;
            $('form.editUserOBox select[name="departIdSel"]').on('change', function () {
                that.dealSelectDisabled();
                return false;
            });
            $('.editUserOBox span.input-group-addon').off('click.iconBind').bind('click.iconBind',function(e){
                $(this).prev('input').focus();
                stopPropagation(e);
            });
        }
        //按钮事件绑定
        , bindActionClick: function () {
            var that = this;
            $('.editUserOBox button[data-action],.editUserOBox a[data-action]').on('click', function () {
                var dataAction = $(this).attr('data-action');
                /*if(dataAction=='saveUser'){//保存人员
                 that.saveUser($(this));
                 return false;
                 }else*/
                if (dataAction == 'addDepartServerStation') {
                    that.addDepartServerStation();
                } else if (dataAction == 'delDepartServerStation') {
                    $(this).closest('tr').remove();
                    that.dealSelectDisabled();
                }
            });
            that.bindSelChangeClick();
        }
        , saveUser_validate: function () {
            var that = this;
            $('form.editUserOBox').validate({
                rules: {
                    userName: 'required',
                    cellphone: {
                        required: true,
                        isMobile: true
                    }
                    , email: {
                        email: true
                    }

                },
                messages: {
                    userName: '请输入姓名！',
                    cellphone: {
                        required: '请输入手机号码！',
                        isMobile: "请正确填写您的手机号码"

                    }
                    , email: {
                        email: '请输入正确的邮箱!'
                    }
                }
            });
            // 手机号码验证
            jQuery.validator.addMethod("isMobile", function (value, element) {
                var length = value.length;
                var mobile = regularExpressions.mobile;
                return this.optional(element) || (length == 11 && mobile.test(value));
            }, "请正确填写您的手机号码");

        }
        //验证所属部门不能为空
        ,saveUser_depart_validate:function(){
            var that = this;
            var error = 0;
            $('tbody.departListTbody .departList select[name="departIdSel"]').each(function(){
                var $this = $(this);
                var value = $this.find('option:selected').val();
                if(value===null || value===void 0 || $.trim(value)===''){
                    var html = '<label id="departIdSel-error" class="error" for="cellphone">';
                    html += '所属部门不能为空';
                    html += '</label>';
                    if ($this.parent().find('#departIdSel-error').length < 1) {
                        $this.after(html);
                    }
                    error+=1;
                }
            });
            if(error>0){
                return false;
            }else{
                return true;
            }
        }

    });

    $.fn[pluginName] = function (options) {
        return this.each(function () {

            //if (!$.data(this, "plugin_" + pluginName)) {
            $.data(this, "plugin_" +
                pluginName, new Plugin(this, options));
            //}
        });
    };

})(jQuery, window, document);

/**
 * 企业认证
 * Created by wrb on 2017/7/10.
 */
;(function ($, window, document, undefined) {

    "use strict";
    var pluginName = "m_enterpriseCertification",
        defaults = {
            $projectId:null
        };

    // The actual plugin constructor
    function Plugin(element, options) {
        this.element = element;

        this.settings = $.extend({}, defaults, options);
        this._defaults = defaults;
        this._name = pluginName;
        this._currentCompanyId = window.currentCompanyId;//当前组织ID
        this.businessLicensePhoto = null;//营业执照
        this.legalRepresentativePhoto = null;//法人身份证
        this.operatorPhoto = null;//经办人身份证
        this.sealPhoto = null;//授权证书
        this.init();
    }

    // Avoid Plugin.prototype conflicts
    $.extend(Plugin.prototype, {
        init: function () {
            var that = this;
            that._initHtml();
        }
        //初始化数据,生成html
        ,_initHtml:function () {

            var that = this,option = {};
            option.url = restApi.url_getAuthenticationById+'/'+this._currentCompanyId;
            m_ajax.get(option, function (response) {
                if (response.code == '0') {

                    var status = response.data.authenticationStatus;
                    var html = template('m_org/m_enterpriseCertification',{authentication:response.data});
                    $(that.element).html(html);


                    that._bindActionClick();

                    if(status!=1&&status!=2){//未认证或认证失败可以再次编辑提交

                        that._uploadFile('businessLicensePhotoUpload',8);
                        that._uploadFile('legalRepresentativePhotoUpload',9);
                        that._uploadFile('operatorPhotoUpload',10);
                        that._uploadFile('sealPhotoUpload',5);
                        that._bindRadioCheck();
                        that._applyAuthentication_validate();

                    }else {

                        $(that.element).find('a.file-upload').attr('disabled','disabled').addClass('failure');
                        $(that.element).find('input').attr('disabled','disabled');
                        $(that.element).find('a[data-action="submitReview"]').attr('disabled','disabled').off('click');
                        $(that.element).find('ins.iCheck-helper').css('cursor','not-allowed');
                    }
                    that._bindAttachPreview();
                    if(status==null || status==0){//未认证，组织名称不带过去
                        $(that.element).find('input[name="orgName"]').val('');
                    }

                } else {
                    S_dialog.error(response.info);
                }
            })

        }
        //上传营业执照
        ,_uploadFile: function (id,type) {
            var that = this;
            $('#'+id).m_fileUploader({
                server: restApi.url_attachment_uploadOrgAuthenticationAttach,
                accept:{
                    title: '请选择图片',
                    extensions: 'jpg,jpeg,png,bmp',
                    mimeTypes: 'image/jpg,image/jpeg,image/png,image/bmp'
                },
                fileSingleSizeLimit:20*1024*1024,
                formData: {},
                loadingId: '#box_detail',
                innerHTML: '选择文件',
                uploadBeforeSend: function (object, data, headers) {
                    data.companyId = window.currentCompanyId;
                    data.accountId = window.currentUserId;
                    data.type = type;
                },
                uploadSuccessCallback: function (file, response) {
                    var path = window.fastdfsUrl+response.data.fastdfsGroup+'/'+response.data.fastdfsPath;
                    if(type==8){
                        $('#businessLicensePhoto').attr('src',path);
                        $('#businessLicensePhoto-error').hide();
                    }else if(type==9){
                        $('#legalRepresentativePhoto').attr('src',path);
                        $('#legalRepresentativePhoto-error').hide();
                    }else if(type==10){
                        $('#operatorPhoto').attr('src',path);
                        $('#operatorPhoto-error').hide();
                    }else if(type==5){
                        $('#sealPhoto').attr('src',path);
                        $('#sealPhoto-error').hide();
                    }

                }
            },true);
        }
        //营业执照选择事件
        ,_bindRadioCheck:function () {
            var that = this;
            $(that.element).find('input[name="businessLicenseType"]').on('click',function () {
                var v = $(this).val();
                var $imgSrc = $('#businessLicensePhoto').attr('src');
                if(v==1){
                    $(that.element).find('.number-label-0').addClass('hide');
                    $(that.element).find('.number-label-1').removeClass('hide');
                    $(that.element).find('input[name="businessLicenseNumber"]').attr('placeholder','请输入18位统一社会信用代码');
                    if($imgSrc.indexOf('/assets/img/org')>-1){
                        $('#businessLicensePhoto').attr('src',window.rootPath+'/assets/img/org/businessLicenseTemp2.jpg');
                    }
                }else{
                    $(that.element).find('.number-label-1').addClass('hide');
                    $(that.element).find('.number-label-0').removeClass('hide');
                    $(that.element).find('input[name="businessLicenseNumber"]').attr('placeholder','请输入15位工商注册号');
                    if($imgSrc.indexOf('/assets/img/org')>-1){
                        $('#businessLicensePhoto').attr('src',window.rootPath+'/assets/img/org/businessLicenseTemp1.jpg');
                    }
                }
                that._applyAuthentication_validate_change();
            });
        }
        //提交审核
        ,_submitReview:function () {
            var that = this,option = {};

            var flag = $(that.element).find('form').valid();
            var photoError = false;
            var businessLicensePhoto = $('#businessLicensePhoto').attr('src');
            var legalRepresentativePhoto = $('#legalRepresentativePhoto').attr('src');
            var operatorPhoto = $('#operatorPhoto').attr('src');
            var sealPhoto = $('#sealPhoto').attr('src');

            if(!(businessLicensePhoto.indexOf('group')>-1)){
                $('#businessLicensePhoto-error').html('请上传营业执照!');
                photoError = true;
            }
            if(!(legalRepresentativePhoto.indexOf('group')>-1)){
                $('#legalRepresentativePhoto-error').html('请法人身份证照!');
                photoError = true;
            }
            if(!(operatorPhoto.indexOf('group')>-1)){
                $('#operatorPhoto-error').html('请经办人身份证照!');
                photoError = true;
            }
            if(!(sealPhoto.indexOf('group')>-1)){
                $('#sealPhoto-error').html('请上传认证授权书!');
                photoError = true;
            }
            if(!flag || photoError){
                $(that.element).find('label.error').show();
                return false;
            }

            option.url = restApi.url_applyAuthentication;
            option.postData = {};
            option.postData.id = that._currentCompanyId;
            option.postData.businessLicenseType = $(that.element).find('input[name="businessLicenseType"]:checked').val();
            option.postData.businessLicenseNumber = $(that.element).find('input[name="businessLicenseNumber"]').val();
            option.postData.orgName = $(that.element).find('input[name="orgName"]').val();
            option.postData.legalRepresentative = $(that.element).find('input[name="legalRepresentative"]').val();
            option.postData.operatorName = $(that.element).find('input[name="operatorName"]').val();
            m_ajax.postJson(option, function (response) {
                if (response.code == '0') {
                    S_toastr.success('提交审核成功！');
                    that._initHtml();
                } else {
                    S_dialog.error(response.info);
                }
            })
        }
        //绑定图片预览事件
        ,_bindAttachPreview: function () {
            var that = this;
            $.each($(that.element).find('img[data-action="preview"]'), function (i, o) {
                $(o).off('click.preview').on('click.preview', function () {
                    var $a = $(this);
                    var $imgSrc = $a.attr('src');
                    /*if($imgSrc.indexOf('/assets/img/org')>-1){
                        return false;
                    }*/
                    var photos={
                            title: '',
                            id: 1,
                            start: 0,
                            data: [{
                                alt: '',
                                pid: '',
                                src: $a.attr('src')
                            }]
                        }
                    ;
                    layer.photos({
                        photos: photos,
                        shift: 5
                    });
                })
            });
        }
        //事件绑定
        ,_bindActionClick:function () {
            var that = this;

            $(that.element).find('a[data-action]').on('click',function () {
                var _this = this;
                var dataAction = $(_this).attr('data-action'
                );
                switch (dataAction) {
                    case 'submitReview'://提交审核
                        that._submitReview();
                        break;
                    case 'viewBusinessLicensePhotoTemp':
                        console.log(1)
                        var $imgSrc = window.rootPath+'/assets/img/org/businessLicenseTemp1.jpg';
                        var photos={
                                title: '',
                                id: 1,
                                start: 0,
                                data: [{
                                    alt: '',
                                    pid: '',
                                    src: $imgSrc
                                }]
                            }
                        ;
                        layer.photos({
                            photos: photos,
                            shift: 5
                        });
                        break;

                    case 'sealPhotoDownLoad':

                        window.open(window.rootPath+'/assets/template/org/ddingCertificationApplication.doc');
                        break;

                    case 'maodingConvention':

                        window.open(window.rootPath+'/assets/template/org/maodingConvention.pdf');
                        break;

                    case 'maodingCertificationSpecification':

                        window.open(window.rootPath+'/assets/template/org/maodingCertificationSpecification.pdf');
                        break;
                }

            });
        }
        //营业执照切换后重置验证
        ,_applyAuthentication_validate_change:function () {
            var that = this;
            var businessLicenseType = $(that.element).find('input[name="businessLicenseType"]:checked').val();
            var eleObj = $(that.element).find('input[name="businessLicenseNumber"]');
            if(businessLicenseType==1){
                eleObj.rules("remove");
                eleObj.rules("add",{
                    required:true,
                    maxlength:18,
                    minlength:18,
                    messages:{
                        required:'请输入18位统一社会信用代码!',
                        maxlength:"社会信用代码为18位!",
                        minlength:'社会信用代码为18位!'
                    }});
            }else{
                eleObj.rules("remove");
                eleObj.rules("add",{
                    required:true,
                    maxlength:15,
                    minlength:15,
                    messages:{
                        required:'请输入15位工商注册号!',
                        maxlength:"工商注册号为15位!",
                        minlength:'工商注册号为15位!'
                    }});
            }
            $(that.element).find('#businessLicenseNumber-error').html('');

        }
        //提交审核表单验证
        ,_applyAuthentication_validate:function(){
            var that = this;
            var businessLicenseType = $(that.element).find('input[name="businessLicenseType"]:checked').val();
            var len = 15,tip = '工商注册号为15位!',requiredTip = '请输入15位工商注册号!';
            if(businessLicenseType==1){
                len = 18;
                tip = '社会信用代码为18位!';
                requiredTip = '请输入18位统一社会信用代码!';
            }
            $(that.element).find('form').validate({
                rules: {
                    businessLicenseNumber: {
                        required: true,
                        maxlength: len,
                        minlength: len
                    },
                    orgName:{
                        required: true
                    },
                    legalRepresentative:{
                        required: true
                    },
                    operatorName:{
                        required: true
                    },
                    convention:{
                        required: true
                    },
                    specification:{
                        required: true
                    }
                },
                messages: {
                    businessLicenseNumber: {
                        required: requiredTip,
                        maxlength: tip,
                        minlength: tip
                    },
                    orgName:{
                        required:'请输入营业执照上的名称!'
                    },
                    legalRepresentative:{
                        required:'请输入法人姓名!'
                    },
                    operatorName:{
                        required: '请输入经办人姓名!'
                    },
                    convention:{
                        required: '请同意《卯丁公约》!'
                    },
                    specification:{
                        required: '请同意《卯丁认证规范》!'
                    }
                },
                errorPlacement: function (error, element) { //指定错误信息位置

                    if ($(element).parents('.i-checks').length>0) {
                        error.appendTo(element.closest('.check-div'));
                    } else {
                        error.insertAfter(element);
                    }
                }
            });
        }
    });

    $.fn[pluginName] = function (options) {
        return this.each(function () {

            //if (!$.data(this, "plugin_" + pluginName)) {
            $.data(this, "plugin_" +
                pluginName, new Plugin(this, options));
            //}
        });
    };

})(jQuery, window, document);

/**
 * Created by wrb on 2016/12/15.
 */
;(function ($, window, document, undefined) {

    "use strict";
    var pluginName = "m_firstCreateOrg",
        defaults = {
            orgId: '',
            userUrl: '',
            saveOrgCallback: null,
            showPre: null
        };

    // The actual plugin constructor
    function Plugin(element, options) {
        this.element = element;

        this.settings = $.extend({}, defaults, options);
        this._defaults = defaults;
        this._name = pluginName;
        this.init();
    }

    // Avoid Plugin.prototype conflicts
    $.extend(Plugin.prototype, {
        init: function () {
            var that = this;
            if (that.settings.showPre === '1')
                that.initPre();
            else
                that.initMain();
        }
        , initPre: function () {
            var that = this;
            var html = template('m_org/m_firstCreateOrg_pre', {});
            $(that.element).html(html);
            $(that.element).find('a[data-action="startCreateOrg"]').click(function (e) {
                that.initMain();
            });
        }
        , initMain: function () {
            var that = this;
            that.initData(function () {
                that.bindActionClick();
                that.bindKeyDownEnter();
                that.bindCollapase();

                //加载省市区
                $("#citysBox").citySelect({
                    nodata: "none",
                    required: false
                });

            });
        }
        //敲打回车enter键提交请求
        ,bindKeyDownEnter: function () {
            var that = this;
            $(that.element).find('input').keydown(function () {
                if (event.keyCode == 13){
                    that.saveOrg();
                    preventDefault(event);
                }
            });
        }
        //初始化数据并加载模板
        , initData: function (callback) {
            var that = this;
            var option = {};
            option.url = restApi.url_projectType;
            option.postData = {};
            m_ajax.postJson(option, function (response) {
                if (response.code == '0') {
                    // $(that.element).swal({
                    //     title: "Welcome in Alerts",
                    //     text: "Lorem Ipsum is simply dummy text of the printing and typesetting industry."
                    // });
                    var html = template('m_org/m_firstCreateOrg', {serverTypeList: response.data});
                    $(that.element).html(html);
                    that.saveCreatOrg_validate();
                    /*that.addMask();*/
                    if (callback != null) {
                        callback();
                    }
                } else {
                    S_dialog.error(response.info);
                }
            })
        }
        //给头部可点击按钮增加遮罩层
        , addMask: function () {
            var that = this;
            var $top = $('body');
            var html = '<div style="position: fixed;top: 0;z-index: 10000;width:100%;height:100%;background: rgba(0,0,0,0.4)">';
            html += '</div>';
            $top.append(html);
        }
        //给’更多‘，’收起‘绑定事件
        , bindCollapase: function () {
            // Collapse ibox function
            $('.collapse-link').on('click', function () {
                var ibox = $(this).closest('div.ibox');
                var button = $(this).find('i');
                var content = ibox.find('div.ibox-content');
                var text = $(this).text();
                content.slideToggle(200);
                button.toggleClass('fa-chevron-down').toggleClass('fa-chevron-up');
                $(this).find('.text').text($.trim(text) == '更多' ? '收起' : '更多');
                // ibox.toggleClass('').toggleClass('border-bottom');
                setTimeout(function () {
                    ibox.resize();
                    ibox.find('[id^=map-]').resize();
                }, 50);
            });
        }
        //保存组织
        , saveOrg: function () {
            var that = this;
            var option = {};
            option.url = restApi.url_registerCompany;
            option.postData = $('form.createOrgBox').serializeObject();
            option.postData.companyShortName = option.postData.companyName;
            var serverTypeStr = '';
            var i = 0;
            $('form.createOrgBox input[name="serverType"]:checked').each(function () {
                serverTypeStr += $(this).val() + ',';
                i++;
            });
            if (i > 0) {
                serverTypeStr = serverTypeStr.substring(0, serverTypeStr.length - 1);
            }
            option.postData.serverType = serverTypeStr;

            if ($('form.createOrgBox').valid()) {
                $_loading.show('form.createOrgBox');
                m_ajax.postJson(option, function (response) {
                    if (response.code == '0') {
                        $_loading.close('form.createOrgBox');
                        S_toastr.success('保存成功！');
                        if (that.settings.saveOrgCallback != null) {
                            that.settings.saveOrgCallback(response.data);
                        }
                    } else {
                        S_dialog.error(response.info);
                    }
                });
            }
        }
        //按钮事件绑定
        , bindActionClick: function () {
            var that = this;
            $('form.createOrgBox a[data-action]').on('click', function (event) {
                var dataAction = $(this).attr('data-action');
                if (dataAction == "saveOrg") {//保存组织
                    that.saveOrg();
                    return false;
                }
            });
        }
        , saveCreatOrg_validate: function () {
            var that = this;
            $('form.createOrgBox').validate({
                rules: {
                    companyName: {
                        required: true,
                        maxlength: 50,
                        isEmpty:true
                    }
                },
                messages: {
                    companyName: {
                        required: '请输入组织名称!',
                        maxlength: '组织名称不超过50位!',
                        isEmpty:'请输入组织名称!'
                    }
                }
            });
            // 名称空格验证
            jQuery.validator.addMethod("isEmpty", function (value, element) {
                if($.trim(value)==''){
                    return false;
                }else{
                    return true;
                }

            }, "请输入组织名称!");
        }
    });

    $.fn[pluginName] = function (options) {
        return this.each(function () {

            //if (!$.data(this, "plugin_" + pluginName)) {
            $.data(this, "plugin_" +
                pluginName, new Plugin(this, options));
            //}
        });
    };

})(jQuery, window, document);

/**
 * 邀请人员
 * Created by wrb on 2016/12/17.
 */
;(function ($, window, document, undefined) {

    "use strict";
    var pluginName = "m_inviteCorp",
        defaults = {
            title: '',
            inivteUserUrl: '',
            isDailog: true,
            inviteType:1 //1：分支机构 2：事业合伙人
        };

    // The actual plugin constructor
    function Plugin(element, options) {
        this.element = element;

        this.settings = options;
        this._defaults = defaults;
        this._name = pluginName;
        this.init();
    }

    // Avoid Plugin.prototype conflicts
    $.extend(Plugin.prototype, {
        init: function () {
            var that = this;
            that.initHtmlData();
        }
        //初始化数据并加载模板
        , initHtmlData: function (callBack) {
            var that = this;
            if (that.settings.isDailog) {//以弹窗编辑
                S_dialog.dialog({
                    title: that.settings.title || that.settings.inviteType===1?'邀请分支机构':'邀请事业合伙人',
                    contentEle: 'dialogOBox',
                    lock: 3,
                    width: '460',
                    tPadding: '0px',
                    url: rootPath + '/assets/module/m_common/m_dialog.html'
                }, function (d) {//加载html后触发
                    var html = template('m_org/m_inviteCorp', {inviteType:that.settings.inviteType});
                    $('div[id="content:' + d.id + '"] .dialogOBox').html(html);
                    $('.inviteCorpBox').closest('.dialogOBox').css('overflow','inherit');
                    that.bindSendMessage();
                    /*that.bindAddCorp();*/
                });
            } else {//不以弹窗编辑
                var html = template('m_org/m_inviteCorp', {inviteType:that.settings.inviteType});
                $(that.element).html(html);
                that.bindSendMessage();
                /*that.bindAddCorp();*/
            }
        }
        //按钮事件绑定
        , bindSendMessage: function () {
            var that = this;
            $('a[data-action="sendMessage"]').click(function (e) {
                var $btn=$(this);
                var $input=$('.inviteCorpBox').find('input[name="bPartnerPhone"]:eq(0)');
                var phone=$input.val();
                var pattern = /^1\d{10}$/;
                if(isNullOrBlank(phone)||!pattern.test(phone))
                {
                    S_toastr.warning('请输入11位有效手机号码');
                    return false;
                }

                $btn.m_popover({
                    popoverStyle:'width:250px;',
                    placement: 'top',
                    content: template('m_common/m_popover_confirm', {confirmMsg: '确定要发送邀请给 <strong>'+phone+'</strong> 吗?'}),
                    onSave: function ($popover) {
                        var cellphoneList = [];
                        cellphoneList.push(phone);
                        var option = {};
                        option.url = restApi.url_inviteBPartner;
                        option.classId = '.inviteBPartnerBox';
                        option.postData = {cellphoneList: cellphoneList,type:that.settings.inviteType};
                        m_ajax.postJson(option, function (response) {
                            if (response.code == '0') {
                                S_toastr.success("邀请"+(that.settings.inviteType===1?'分支机构':'事业合伙人')+"短信已发送");
                                S_dialog.close($(e.target));
                            } else {
                                S_dialog.error(response.info);
                            }
                        });
                    }
                }, true);
            });
        }
    });

    /*
     1.一般初始化（缓存单例）： $('#id').pluginName(initOptions);
     2.强制初始化（无视缓存）： $('#id').pluginName(initOptions,true);
     3.调用方法： $('#id').pluginName('methodName',args);
     */
    $.fn[pluginName] = function (options, args) {
        var instance;
        var funcResult;
        var jqObj = this.each(function () {

            //从缓存获取实例
            instance = $.data(this, "plugin_" + pluginName);

            if (options === undefined || options === null || typeof options === "object") {

                var opts = $.extend(true, {}, defaults, options);

                //options作为初始化参数，若args===true则强制重新初始化，否则根据缓存判断是否需要初始化
                if (args === true) {
                    instance = new Plugin(this, opts);
                } else {
                    if (instance === undefined || instance === null)
                        instance = new Plugin(this, opts);
                }

                //写入缓存
                $.data(this, "plugin_" + pluginName, instance);
            }
            else if (typeof options === "string" && typeof instance[options] === "function") {

                //options作为方法名，args则作为方法要调用的参数
                //如果方法没有返回值，funcReuslt为undefined
                funcResult = instance[options].call(instance, args);
            }
        });

        return funcResult === undefined ? jqObj : funcResult;
    };

})(jQuery, window, document);

/**
 * 邀请人员
 * Created by wrb on 2016/12/17.
 */
;(function ($, window, document, undefined) {

    "use strict";
    var pluginName = "m_inviteUser",
        defaults = {
            title:'',
            inivteUserUrl:'',
            isDailog:true
        };

    // The actual plugin constructor
    function Plugin(element, options) {
        this.element = element;

        this.settings = $.extend({}, defaults, options);
        this._defaults = defaults;
        this._name = pluginName;
        this.init();
    }

    // Avoid Plugin.prototype conflicts
    $.extend(Plugin.prototype, {
        init: function () {
            var that = this;
            that.initHtmlData(function () {
                that.bindActionClick();
            });
        }
        //初始化数据并加载模板
        ,initHtmlData:function (callBack) {
            var that = this;
            if(that.settings.isDailog){//以弹窗编辑
                S_dialog.dialog({
                    title: that.settings.title||'邀请人员',
                    contentEle: 'dialogOBox',
                    lock: 3,
                    width: '460',
                    tPadding: '0px',
                    url: rootPath+'/assets/module/m_common/m_dialog.html'
                },function(d){//加载html后触发

                    var $data = {};


                    var url = window.rootPath+'/iWork/sys/shareInvitation/'+window.currentCompanyId+'/'+window.currentUserId;
                    $data.inivteUserUrl = url;

                    var html = template('m_org/m_inviteUser',$data);
                    $('div[id="content:'+d.id+'"] .dialogOBox').html(html);
                    if(callBack!=null){
                        callBack();
                    }

                });
            }else{//不以弹窗编辑
                var html = template('m_org/m_inviteUser',{});
                $(that.element).html(html);
                if(callBack!=null){
                    callBack();
                }
            }
        }
        //复制链接
        ,copyUrl:function () {
            var Url2 = $(".invitePersonelOBox #url");
            Url2.select(); // 选择对象
            document.execCommand("Copy"); // 执行浏览器复制命令
            S_toastr.success('复制成功！')
        }
        //按钮事件绑定
        ,bindActionClick:function () {
            var that = this;
            $('.invitePersonelOBox button[data-action]').on('click',function () {
                var dataAction = $(this).attr('data-action');
                if(dataAction=='copyUrl'){//复制链接
                    that.copyUrl();
                    return false;
                }
            });
        }
    });

    $.fn[pluginName] = function (options) {
        return this.each(function () {

            // if (!$.data(this, "plugin_" + pluginName)) {
            $.data(this, "plugin_" +
                pluginName, new Plugin(this, options));
            // }
        });
    };

})(jQuery, window, document);

/**
 * 组织－组织架构
 * Created by wrb on 2017/2/23.
 */
;(function ($, window, document, undefined) {

    "use strict";
    var pluginName = "m_organizational",
        defaults = {};

    // The actual plugin constructor
    function Plugin(element, options) {
        this.element = element;
        this.settings = $.extend({}, defaults, options);
        this._defaults = defaults;
        this._name = pluginName;
        this._currentCompanyId = window.currentCompanyId;
        this._currTreeObj = null;
        this._selectedCompanyId = null;
        this._treeType = 1;
        this._roleCode = null;

        this.init();
    }

    // Avoid Plugin.prototype conflicts
    $.extend(Plugin.prototype, {
        init: function () {
            var that = this;
            that._roleCode = window.currentRoleCodes;
            var that = this;
            var options={};
            options.url=restApi.url_getToAuditCompanyCount;
            m_ajax.get(options,function (response) {
                if(response.code=='0'){

                    var html = template('m_org/m_organizational', {roleCodes:that._roleCode,toAuditEmpNum:response.data.toAuditEmpNum,rootPath:window.rootPath});
                    $(that.element).html(html);
                    rolesControl();
                    that._initOrgTree();
                    that.bindTreeSwitch();
                    that._bindActionClick();
                    that.treeBoxHeightResize();
                    $(window).resize(function () {
                        var t = setTimeout(function () {
                            that.treeBoxHeightResize();
                            clearTimeout(t);
                        });
                    });
                }else {
                    S_dialog.error(response.info);
                }
            })
        }
        //树菜单高度自适应
        , treeBoxHeightResize:function () {
            var that = this;
            var pageWrapperH = $('#page-wrapper').css('min-height');
            $(that.element).find('#org-tree-box').css('height',pageWrapperH);
        }
        //初始化人员列表
        , _initOrgUserList: function (orgId) {
            var options = {};
            var that = this;
            var hasHr_employee = that._roleCode.indexOf('hr_org_set')>-1;
            var isCurrentCompany = this._currTreeObj.companyId == window.currentCompanyId ? true : false;
            options.orgId = orgId;
            options.currOrgTreeObj = this._currTreeObj;
            //options.isClick = hasHr_employee && isCurrentCompany && that._treeType===1;
            options.isClick = hasHr_employee && that._treeType===1;
            options.currOrgTreeObj = this._currTreeObj;
            $(this.element).find('#orgUserListBox').m_orgUserList(options);
        }
        //初始化组织树
        , _initOrgTree: function () {//type==1为显示完整组织树并可操作，type！=1为只显示本组织下的树
            var that = this;
            var options = {},type=that._treeType;
            options.isDialog = false;
            options.isGetUserList = false;
            options.treeUrl = type!=1?restApi.url_getOrgStructureTree:restApi.url_getOrgTreeSimple;
            // options.treeUrl = restApi.url_getOrgStructureTreeForSearch;
            options.currentCompanyId = window.currentCompanyId;
            options.treeIconObj = {
                'default': {
                    'icon': 'iconfont rounded icon-zuzhijiagou'
                },
                'independent': {   //独立经营图标
                    'icon': 'fa fa-users'
                },
                'partner': {       //事业合伙人图标
                    'icon': 'iconfont rounded icon-cooperation'
                },
                'partnerContainer': {       //事业合伙人容器图标
                    'icon': 'iconfont rounded icon-cooperation'
                },
                'subCompany': {       //分支机构图标
                    'icon': 'iconfont rounded icon-2fengongsi1'
                },
                'subCompanyContainer': {       //分支机构容器图标
                    'icon': 'iconfont rounded icon-2fengongsi1'
                },
                'company': {         //根节点图标
                    'icon': 'iconfont rounded icon-2fengongsi'
                }
            };
            options.initTreeDataCallBack = function(info){//用于判断info,如果Info为“0”表示不需要显示切换组织树，为“1”表示需要显示
                if(that._treeType ==1 && info && info!=1){
                    $('.treeSwitch a[data-action="treeSwitch"]').remove();
                }
            };
            options.afterOpenCallBack = function (data) {

                if(that._treeType !==1){
                    var html = '<i class="fa fa-flag" role="presentation" style="color: #4765a0;margin:0 5px;"></i>';
                    var id = that._selectedCompanyId;
                    if(id && !($('#organization_treeH li#'+id+'>a#'+id+'_anchor').find('i.fa-flag').length>0)){
                        $('#organization_treeH li#'+id+'>a#'+id+'_anchor').find('.icon-2fengongsi1').remove().end().prepend(html);
                    }
                }
               that.dealTreeIconColorFun(data.node.id);
            };
            options.selectNodeCallBack = function (data,type) {
                that._currTreeObj = data;
                that._initOrgUserList(data.realId);
                $('#organization_treeH .tree-btn').remove();
                $('#organization_treeH .tooltip').remove();
                if(that._treeType!=1){
                    $(that.element).find('.headContent').hide();
                    //给我的组织加上图标标识
                    if(type &&　type == 'ready'){
                        var html = '<i class="fa fa-flag" role="presentation" style="color: #4765a0;margin:0 5px;"></i>';
                        var id = data.id;
                        that._selectedCompanyId = id;
                        if(id && !($('#organization_treeH li#'+id+'>a#'+id+'_anchor').find('i.fa-flag').length>0)) {
                            $('#organization_treeH li#' + id + '>a#' + id + '_anchor').find('.icon-2fengongsi1').remove().end().prepend(html);
                        }
                    }
                    return;
                }else{
                    $(that.element).find('.headContent').show();
                }

                //先给所有操作按钮去除禁用状态，以及绑定点击事件
                $(that.element).find('.headContent a[data-action]').removeAttr('disabled');
                $(that.element).find('.headContent a[data-action="drop_down"]').attr('data-toggle','dropdown');
                that._bindActionClick();
                //当选择节点是本公司时
                if(data.companyId == window.currentCompanyId && data.type != 'depart' ){
                    $(that.element).find('.headContent a[data-action="editDepart"],.headContent a[data-action="deleteSubCompany"]').attr('disabled','disabled');
                    $(that.element).find('.headContent a[data-action="editDepart"],.headContent a[data-action="deleteSubCompany"]').off('click');
                }
                //当选择节点是本公司部门时
                else if(data.companyId == window.currentCompanyId && data.type == 'depart'){
                    if(that._roleCode.indexOf('hr_org_set')>-1){
                        $('#organization_treeH .jstree-clicked').after('<span class="tree-btn" >&nbsp;' +
                            '<a data-toggle="tooltip"data-placement="top" title="编辑部门"><i class="fa fa-pencil"></i></a></span>');
                        $('#organization_treeH .jstree-clicked').parent().find('span.tree-btn a').tooltip();
                        that.bindEditDepartment($('#organization_treeH .jstree-clicked').closest('li'));
                    }
                }
                //当选择节点是分支机构时
                else if(data.isCurrentSubCompany == 1 && data.type == 'subCompany'){
                    if(that._roleCode.indexOf('hr_org_set')>-1){
                        var toolTip='<span class="tree-btn" >&nbsp;<a data-action="deleteSubCompany" data-toggle="tooltip" data-placement="top" title="解除分支机构"><i class="fa fa-times"></i></a></span>' +
                            '<span class="tree-btn" >&nbsp;<a data-toggle="tooltip" data-action="aliasbPartner" data-placement="top" title="编辑"><i class="fa fa-pencil"></i></a></span>';
                        $('#organization_treeH .jstree-clicked').after(toolTip);
                        $('#organization_treeH .jstree-clicked').parent().find('span.tree-btn a').tooltip();
                        that._deleteSubCompany($('#organization_treeH .jstree-clicked').closest('li'),that._currTreeObj);
                        that._aliasbPartner($('#organization_treeH .jstree-clicked').closest('li'),that._currTreeObj);
                    }
                    that.childOrgBtnDisabled();
                }
                //当选择节点是事业合伙人
                else if(data.isCurrentSubCompany == 1 && data.type === 'partner'){
                    if(that._roleCode.indexOf('hr_org_set')>-1){
                        var toolTip='<span class="tree-btn" >&nbsp;<a data-toggle="tooltip" data-action="deletePartner" data-placement="top" title="解除事业合伙人"><i class="fa fa-times"></i></a></span>' +
                            '<span class="tree-btn" >&nbsp;<a data-toggle="tooltip" data-action="aliasbPartner" data-placement="top" title="编辑"><i class="fa fa-pencil"></i></a></span>';
                        $('#organization_treeH .jstree-clicked').after(toolTip);
                        $('#organization_treeH .jstree-clicked').parent().find('span.tree-btn a[data-toggle="tooltip"]').tooltip();
                        that._deletebPartner($('#organization_treeH .jstree-clicked').closest('li'),that._currTreeObj);
                        that._aliasbPartner($('#organization_treeH .jstree-clicked').closest('li'),that._currTreeObj);
                    }
                    that.childOrgBtnDisabled();
                }
                else if(data.companyId != window.currentCompanyId && data.type == 'depart'){
                    if(that._roleCode.indexOf('hr_org_set')>-1){
                        $('#organization_treeH .jstree-clicked').after('<span class="tree-btn" >&nbsp;' +
                            '<a data-toggle="tooltip"data-placement="top" title="编辑部门"><i class="fa fa-pencil"></i></a></span>');
                        $('#organization_treeH .jstree-clicked').parent().find('span.tree-btn a').tooltip();
                        that.bindEditDepartment($('#organization_treeH .jstree-clicked').closest('li'));
                    }
                    that.childOrgBtnDisabled();
                }
                else{
                    $(that.element).find('.headContent a[data-action]').attr('disabled','disabled');
                    $(that.element).find('.headContent a[data-action="drop_down"]').attr('data-toggle','');
                    $(that.element).find('.headContent a[data-action]').off('click');
                }
                rolesControl();
            };
            $(that.element).find('#organization_treeH').m_orgByTree(options);
        }
        //树icon颜色处理
        , dealTreeIconColorFun:function (id) {
            $('#organization_treeH').find('li[id="'+id+'"]>ul>li').each(function () {
                var $this = $(this);
                var relationType = $this.attr('relationtype');
                if(relationType==1){
                    $this.find('a.jstree-anchor i.jstree-icon').addClass('color-blue');
                }else if(relationType==2){
                    $this.find('a.jstree-anchor i.jstree-icon').addClass('color-green');
                }else if(relationType==3){
                    $this.find('a.jstree-anchor i.jstree-icon').addClass('color-red');
                }
            });
        }
        //选择分公司或事业合伙人禁用一些操作按钮
        ,childOrgBtnDisabled:function () {
            var that = this;
            $(that.element).find('.headContent a[data-action="toAuditUser"]').attr('disabled','disabled').off('click');//待审核人员
            $(that.element).find('.headContent a[data-action="addSubCompany"]').attr('disabled','disabled').off('click');//添加分公司
            $(that.element).find('.headContent a[data-action="inviteBranch"]').attr('disabled','disabled').off('click');//邀请分公司
            $(that.element).find('.headContent a[data-action="addPartner"]').attr('disabled','disabled').off('click');//添加事业合伙人
            $(that.element).find('.headContent a[data-action="inviteCorp"]').attr('disabled','disabled').off('click');//邀请事业合伙人
            $(that.element).find('.headContent a[data-action="drop_down"]').attr('disabled','disabled').off('click');//邀请人员下拉菜单图标
            $(that.element).find('.headContent a[data-action="drop_down"]').attr('data-toggle','').off('click');
        }
        //绑定转换组织架构树的按钮
        ,bindTreeSwitch:function(){
            var that = this;
            $(that.element).find('.treeSwitch a[data-action="treeSwitch"]').bind('click',function(e){
                var html = '';
                if(that._treeType===1){
                    html = '<img src="'+window.rootPath+'/assets/img/my_org_framework.png" style="height: 23px;" data-toggle="tooltip" data-placement="top" title="查看我的组织架构" />';
                }else{
                    html = '<img src="'+window.rootPath+'/assets/img/whole_org_framework.png" style="height: 23px;" data-toggle="tooltip" data-placement="top" title="查看总公司组织架构" />';
                }
                $(this).html(html);
                $(this).find('img').tooltip();
                that._treeType=that._treeType===1?0:1;
                var html = '<div class="clearfix margin-bottom-10"></div><div id="organization_treeH">\
                            <ul class="sidebar-nav list-group sidebar-nav-v1">\
                            </ul>\
                            </div>';
                $(that.element).find('#organization_treeH').parent().html(html);
                that._initOrgTree(that._treeType);
                stopPropagation(e);
            });
            $(that.element).find('.treeSwitch a[data-action="treeSwitch"]>img').tooltip();
        }

        //界面文字刷新
        , dealHtmlTextRefresh: function (data) {
            $('span[data-obj="currOrgObj"][data-key]').each(function () {
                var name = $(this).attr('data-key');
                if (data[name] != null) {
                    $(this).html(data[name]);
                }
            });
        }
        //给部门绑定编辑部门按钮
        ,bindEditDepartment:function($obj){
            var that = this;
            $obj.find('.tree-btn').on('click',function(event) {
                that._editDepart($obj);
            });
        }
        //给批量导入按钮绑定事件
        ,bindBulkImport:function($obj){
            var that = this;
            $obj.find('a[data-action="bulkImport"]').on('click',function(event){
               that._bulkImport();
            });
        }
        ,_editDepart: function ($obj) {

                var that = this;
                var options = {};
                options.parentDepart = {};
                var selectDepart = {};
                selectDepart.id = that._currTreeObj.realId;
                selectDepart.departName = that._currTreeObj.treeEntity.departName;
                selectDepart.pid = that._currTreeObj.treeEntity.pid;
                selectDepart.departLevel = that._currTreeObj.treeEntity.departLevel;
                selectDepart.departPath = that._currTreeObj.treeEntity.departPath;
                selectDepart.departType = that._currTreeObj.treeEntity.departType;
                selectDepart.companyId = that._currTreeObj.companyId;
                options.doType = 'edit';
                options.title = '编辑部门';
                var departObj = selectDepart;//当前对象
                var parentDepart = {};
                parentDepart.id = that._currTreeObj.parentOrgObj.realId;
                parentDepart.departName = that._currTreeObj.parentOrgObj.text;
                parentDepart.pid = that._currTreeObj.parentOrgObj.treeEntity.pid;
                parentDepart.departLevel = that._currTreeObj.parentOrgObj.treeEntity.departLevel;
                parentDepart.departPath = that._currTreeObj.parentOrgObj.treeEntity.departPath;
                departObj.parentDepart = parentDepart;
                options.departObj = departObj;
                options.saveCallBack = function (data) {
                    editNodeByTree(data);
                    that._currTreeObj.treeEntity = data.treeEntity;
                    that.dealHtmlTextRefresh(data);
                };
                options.delCallBack = function () {
                    var rel =  $('#organization_treeH').jstree(true);
                    var id = $('#organization_treeH>ul>li>a:eq(0)').attr('id');
                    rel.select_node(id);
                };
                $('body').m_editDepart(options);
        }
        //删除分支机构事件
        ,_deleteSubCompany:function($obj,data){
            var that = this;
            $obj.find('.tree-btn a[data-action="deleteSubCompany"]').on('click',function(event) {
                var $deleteTarget = $('#organization_treeH a.jstree-anchor.jstree-clicked');
                $(this).m_popover({
                    placement: 'right',
                    content: template('m_common/m_popover_confirm', {confirmMsg: '确定要删除该分支机构吗?'}),
                    onShown : function ($popover) {
                        var scrollTop = $popover.parents('#organization_treeH').parent().scrollTop();
                        if(scrollTop-0>0){
                            var $time = setTimeout(function () {
                                var nowTop = $obj.find('.m-popover').css('top');
                                $obj.find('.m-popover').css('top',(parseInt(nowTop)+scrollTop)+'px');
                                clearTimeout($time);
                            },100);
                        }
                    },
                    onSave: function ($popover) {
                        var option = {};
                        option.url = restApi.url_subCompany + '/' + data.companyId;
                        m_ajax.get(option, function (response) {
                            if (response.code == '0') {
                                S_toastr.success('删除成功！');
                                var rel =  $('#organization_treeH').jstree(true);
                                delNodeByTree();
                                var subCompanyId = window.currentCompanyId+'subCompanyId_anchor';
                                that.dealTreeIconColorFun(window.currentCompanyId+'subCompanyId');
                                if($('#organization_treeH').find('a#'+subCompanyId).next('ul').length<1){
                                    rel.delete_node(subCompanyId);
                                }
                                var id = $('#organization_treeH>ul>li>a:eq(0)').attr('id');
                                rel.select_node(id);
                            } else {
                                S_dialog.error(response.info);
                            }
                        });
                    }

                }, true);
                setTimeout(function(){
                    var $target =  $obj.closest('#organization_treeH').parent();
                    var width = $target.outerWidth()+"px";
                    $target.animate({scrollLeft: width}, {
                        duration: 600,
                        easing: 'linear'
                    });
                },100)
            });

        }
        //删除事业合伙人
        ,_deletebPartner:function($obj,data){
            var that = this;
            $obj.find('.tree-btn a[data-action="deletePartner"]').on('click',function(event) {
                var $deleteTarget = $('#organization_treeH a.jstree-anchor.jstree-clicked');
                $(this).m_popover({
                    placement: 'right',
                    content: template('m_common/m_popover_confirm', {confirmMsg: '确定要删除该事业合伙人吗?'}),
                    onShown : function ($popover) {
                        var scrollTop = $popover.parents('#organization_treeH').parent().scrollTop();
                        if(scrollTop-0>0){
                            var $time = setTimeout(function () {
                                var nowTop = $obj.find('.m-popover').css('top');
                                $obj.find('.m-popover').css('top',(parseInt(nowTop)+scrollTop)+'px');
                                clearTimeout($time);
                            },100);
                        }
                    },
                    onSave: function ($popover) {
                        var option = {};
                        option.url = restApi.url_businessPartner + '/' + data.companyId;
                        m_ajax.get(option, function (response) {
                            if (response.code == '0') {
                                S_toastr.success('删除成功！');
                                delNodeByTree();
                                var rel =  $('#organization_treeH').jstree(true);
                                var partnerId = window.currentCompanyId+'partnerId_anchor';
                                that.dealTreeIconColorFun(window.currentCompanyId+'partnerId');
                                if($('#organization_treeH').find('a#'+partnerId).next('ul').length<1){
                                    rel.delete_node(partnerId);
                                }
                                var id = $('#organization_treeH>ul>li>a:eq(0)').attr('id');
                                rel.select_node(id);
                            } else {
                                S_dialog.error(response.info);
                            }
                        });
                    }

                }, true);
                setTimeout(function(){
                    var $target =  $obj.closest('#organization_treeH').parent();
                    var width = $target.outerWidth()+"px";
                    $target.animate({scrollLeft: width}, {
                        duration: 600,
                        easing: 'linear'
                    });
                },100)
            });

        }
        ,_aliasbPartner:function($obj,data){
            $obj.find('.tree-btn a[data-action="aliasbPartner"]').on('click',function(event) {
                var $btn = $(this);
                var options = {
                    companyId:data.companyId,
                    companyOriginalName:data.treeEntity.companyName,
                    companyAlias:data.text,
                    relationTypeId:data.relationType,
                    saveCallback:function(){
                        $('#content-box').m_organizational();
                    }
                };

                $('body').m_editAlias(options);

                return false;
            });
        }
        , _addDepart: function () {
            var that = this;
            var options = {};
            options.departObj = {};
            var selectDepart = {};
            if (that._currTreeObj.companyId != null) {
                selectDepart.id = that._currTreeObj.realId;
                selectDepart.departName = that._currTreeObj.text;
                selectDepart.pid = that._currTreeObj.treeEntity.pid;
                selectDepart.departLevel = that._currTreeObj.treeEntity.departLevel;
                selectDepart.departPath = that._currTreeObj.treeEntity.departPath;
                selectDepart.departType = that._currTreeObj.treeEntity.departType;
                selectDepart.companyId = that._currTreeObj.companyId;
                options.departObj.parentDepart = selectDepart;
                options.doType = 'add';
                options.saveCallBack = function (data) {
                    addNodeByTree(data, that._currTreeObj, that._currentCompanyId);
                };
                $('body').m_editDepart(options);
            } else {
                S_toastr.warning('请选择组织！');
            }
        }
        //添加人员
        , _addUser: function () {
            var that = this;
            var options = {};
            if (that._currTreeObj.companyId != null) {
                options.companyId = that._currTreeObj.companyId;
                options.realId = that._currTreeObj.realId;
                $('body').m_editUser(options);
            } else {
                S_toastr.warning('请选择组织或部门！');
            }
        }
        //批量导入
        , _bulkImport: function () {
            var option = {}, that = this;
            if(that._currTreeObj.companyId == window.currentCompanyId && that._currTreeObj.type=='depart'){
                option.$companyInfo = {};
                option.$companyInfo.companyId = that._currTreeObj.companyId;
                $('#organization_treeH a.jstree-anchor').each(function(){
                    var id = $(this).attr('id');
                    if(id == that._currTreeObj.companyId + "_anchor"){
                        return option.$companyInfo.companyName = $(this).text();
                    }
                });
            }else{
                option.$companyInfo = {};
                option.$companyInfo.companyId = that._currTreeObj.companyId;
                option.$companyInfo.companyName = that._currTreeObj.text;
            }

            $(that.element).m_bulkImport(option);
        }
        //事件绑定
        , _bindActionClick: function () {
            var that = this;
            $(that.element).find('.headContent button[data-action],.headContent a[data-action]').off('click').on('click', function () {
                var dataAction = $(this).attr('data-action');
                // if (dataAction == 'editDepart') {//编辑部门
                //     that._editDepart();
                //     return false;
                // }
                if (dataAction == 'addDepart') {//添加部门
                    that._addDepart();
                    return false;
                }
                else if (dataAction == 'editDepart') {//编辑部门
                    that.bindEditDepartment();
                    return false;
                }
                else if (dataAction == 'addUser') {//添加人员
                    that._addUser();
                    return false;
                }
                else if (dataAction == 'inviteUser') {//邀请人员
                    $('body').m_inviteUser();
                    return false;
                }
                else if (dataAction == 'bulkImport') {//批量导入
                    that._bulkImport();
                    return false;
                }
                /* else if (dataAction == 'deleteSubCompany') {//删除分支机构
                    that._deleteSubCompany($(this));
                    return false;
                } */
                else if (dataAction == 'addSubCompany') {//创建分支机构
                    var options = {};
                    options.companyId = that._currentCompanyId;
                    options.saveCallBack = function (data) {
                        addNodeByTreeOfPartner(1,that._currentCompanyId);
                        addNodeByTreeByRoot(data,that._currentCompanyId+'subCompanyId');
                        that.dealTreeIconColorFun(that._currentCompanyId+'subCompanyId');
                        $('#m_top').m_top({});//刷新头部（存在创建事业合伙人是当前人员的手机创建时需要刷新）
                    };
                    $('body').m_editSubCompany(options);
                    return false;
                }
                else if (dataAction == 'toAuditUser') {//待审核人员
                    var options = {};
                    options.companyId = that._currentCompanyId;
                    options.$auditOrgUserCallBack = function () {
                        var toAuditEmpNumTip = $(that.element).find('#toAuditEmpNumTip');
                        var newNum = toAuditEmpNumTip.text()-0-1;
                        toAuditEmpNumTip.text(newNum);
                        if(newNum==0){
                            toAuditEmpNumTip.remove();
                        }
                    };
                    $('body').m_toAuditOrgUserList(options);
                    return false;
                }
                else if(dataAction=='addPartner'){//创建事业合伙人
                    var options = {};
                    options.companyId = that._currentCompanyId;
                    options.saveCallBack = function (data) {
                        addNodeByTreeOfPartner(2,that._currentCompanyId);
                        addNodeByTreeByRoot(data,that._currentCompanyId+'partnerId');
                        that.dealTreeIconColorFun(that._currentCompanyId+'partnerId');
                        $('#m_top').m_top({});//刷新头部（存在创建事业合伙人是当前人员的手机创建时需要刷新）
                    };
                    $('body').m_editPartner(options);
                    return false;
                }
                else if (dataAction == 'inviteBranch') {//邀请分支机构
                    $('body').m_inviteCorp({inviteType:1},true);
                    return false;
                }
                else if (dataAction == 'inviteCorp') {//邀请事业合伙人
                    $('body').m_inviteCorp({inviteType:2},true);
                    return false;
                }
                /*else if (dataAction == 'toAuditOrg') {//待审核团队
                    var options = {};
                    options.companyId = that._currentCompanyId;
                    options.$auditOrgCallBack = function () {
                        that.getToAuditCompanyCount(function (data) {
                        });
                    };
                    $('body').m_toAuditOrgTab(options);
                    return false;
                }*/
            });
        }
    });

    $.fn[pluginName] = function (options) {
        return this.each(function () {

            //if (!$.data(this, "plugin_" + pluginName)) {
            $.data(this, "plugin_" +
                pluginName, new Plugin(this, options));
            //}
        });
    };

})(jQuery, window, document);

/**
 * 组织树
 * Created by wrb on 2016/12/14.
 */
;(function ($, window, document, undefined) {

    "use strict";
    var pluginName = "m_orgByTree",
        defaults = {
              title: ''//弹窗标题
            , treeUrl: ''//获取树的url
            , selectUserCallback: null//选择人员事件
            , isDialog: true//是否弹窗，默认弹窗
            , isGetUserList: true//是否加载右边人员列表,默认加载
            , saveCallback: null//点击保存(确定)按钮时触发事件
            , delSelectedUserCallback: null//点击删除已选的人员后触发的事件
            , selectNodeCallBack: null//树选择事件
            , treeIconObj: null//树生成的图标对象
            , currOrgTreeObj: {}//当前树选中节点对象
            , selectedUserList: null//当前窗口选中的人员[{id,userId,userName}...]
            , isASingleSelectUser: false//是否单个选择人员，默认false,2为单选且提示不关窗
            , isOkSave: true//默认存在“OK” 按钮
            , saveDataUrl: null//直接保存url
            , saveData: null//保存格外的参数
            , okText:null//按钮文字
            , initTreeDataCallBack:null//加载树数据后调用的回调
            , renderTreeCallBack:null//树渲染完后回调
            , afterOpenCallBack:null//打开树回调
        };

    // The actual plugin constructor
    function Plugin(element, options) {
        this.element = element;

        this.settings = $.extend({}, defaults, options);
        this._defaults = defaults;
        this._name = pluginName;
        this._selectedUserIds = '';//已选人员ids
        this.init();
    }

    // Avoid Plugin.prototype conflicts
    $.extend(Plugin.prototype, {
        init: function () {
            var that =this;
            this.renderDialog(function () {

                that.initTreeData(function (data) {

                    if (that.settings.isGetUserList) {
                        var $data = {};
                        if (that.settings.selectedUserList != null) {
                            $data.selectedUserList = that.settings.selectedUserList;

                        }
                        $data.isASingleSelectUser = that.settings.isASingleSelectUser;
                        var html = template('m_org/m_orgByTree', $data);
                        $(that.element).html(html);
                    }
                    that.initTreeStructure(data);
                });
            });
        }
        //初始化人员选择弹窗
        , renderDialog: function (callBack) {
            var that = this;
            if (that.settings.isDialog) {
                var options = {};
                options.title = that.settings.title || '选择人员';
                options.contentEle = 'dialogOBox';
                options.lock = 3;
                options.width = '800';
                options.minHeight = '400';
                options.tPadding = '0px';
                options.url = rootPath + '/assets/module/m_common/m_dialog.html';
                options.cancelText = that.settings.cancelText || '取消';
                options.okText = that.settings.okText || '确定';
                options.cancel = function () {};
                if(that.settings.isOkSave){
                    options.ok = function () {

                        if(!isNullOrBlank(that.settings.saveDataUrl)){
                            var saveObj = {
                                selectedUserIds : that._selectedUserIds
                            };
                            $.extend(saveObj, that.settings.saveData);
                            var option = {};
                            option.url = that.settings.saveDataUrl;
                            option.postData = saveObj;
                            m_ajax.postJson(option, function (response) {
                                if (response.code == '0') {
                                    if (that.settings.saveCallback != null) {
                                        var $data = {};
                                        $data.data = response.data;
                                        $data.selectedUserList = that.settings.selectedUserList;
                                        return that.settings.saveCallback($data);
                                    }
                                } else {
                                    S_dialog.error(response.info);
                                }
                            })
                        }else{
                            var $data = {};
                            $data.selectedUserList = that.settings.selectedUserList;
                            return that.settings.saveCallback($data);
                        }
                    };
                }
                S_dialog.dialog(options, function (d) {//加载html后触发

                    that.element = 'div[id="content:' + d.id + '"] .dialogOBox';
                    if(callBack)
                        callBack();
                });
            } else {
                if(callBack)
                    callBack();
            }
        }
        //初始化树数据
        , initTreeData: function (callBack) {

            var that = this;
            var option = {};
            option.url = that.settings.treeUrl != null && that.settings.treeUrl != '' ? that.settings.treeUrl : restApi.url_getOrgTreeForSearch;
            m_ajax.get(option, function (response) {
                if (response.code == '0') {
                    if(that.settings.initTreeDataCallBack){
                        that.settings.initTreeDataCallBack(response.info);
                    }
                    if (callBack != null) {
                        return callBack(response.data);
                    }
                } else {
                    S_dialog.error(response.info);
                }

            })
        }
        //生成树结构
        , initTreeStructure: function (orgData) {
            var that = this;
            var $tree = $('#organization_treeH');
            $tree.jstree({
                'core': {
                    'check_callback': true,
                    'data': orgData
                },
                'plugins': ['types'],
                'types': that.settings.treeIconObj || {
                    'default': {
                        'icon': 'fa fa-users'
                    },
                    'independent': {   //独立经营图标
                        'icon': 'fa fa-trademark'
                    },
                    'partner': {       //合作伙伴图标

                        'icon': 'fa fa-share-alt'
                    },
                    'root': {         //根节点图标
                        'icon': 'fa fa-building'
                    }
                }
            }).on('select_node.jstree', function (e, data) {
                //alert(data.node.original.realId);
                var currOrgObj = data.node.original;//获取当前树的对象
                that.settings.currOrgTreeObj = currOrgObj;
                var inst = data.instance;
                var parentOrgObj = inst.get_node(data.node.parent).original;

                if (that.settings.isGetUserList) {

                    that.userDateByPage(data.node.original.realId);//分页
                }
                if (that.settings.selectNodeCallBack != null) {
                    currOrgObj.parentOrgObj = parentOrgObj;
                    return that.settings.selectNodeCallBack(currOrgObj);
                }

            }).on('ready.jstree', function (e, data) {//loaded.jstree

                var inst = data.instance;
                var obj = inst.get_node(e.target.firstChild.firstChild.lastChild);
                var currOrgObj = obj.original;//获取当前树的对象
                var tree = $('#organization_treeH').jstree(true);
                var selectedObj = tree.get_selected();

                if (selectedObj != null && selectedObj != undefined) {
                    var selectedTreeObj = tree.get_node(selectedObj[0]);
                    currOrgObj = selectedTreeObj.original;//获取当前树的对象
                }
                that.settings.currOrgTreeObj = currOrgObj;

                if (that.settings.selectNodeCallBack != null) {
                    return that.settings.selectNodeCallBack(currOrgObj,'ready');//字符串ready表示初始化树时才调用此方法
                }
                if (that.settings.isGetUserList) {
                    that.userDateByPage(currOrgObj.realId);
                }
                if(that.settings.renderTreeCallBack!=null){
                    that.settings.renderTreeCallBack();
                }
            }).on('after_open.jstree', function (e, data) {//load_node.jstree

                if(that.settings.afterOpenCallBack){
                    that.settings.afterOpenCallBack(data);
                }
            });
        }
        //把已选的人员列表转为id集合字符串，用于来作判断
        , dealSelectedUserList: function () {
            var that = this;
            if (that.settings.selectedUserList != null) {
                var list = that.settings.selectedUserList;
                for (var i = 0; i < list.length; i++) {
                    that._selectedUserIds += list[i].id + ',';
                }
            }
        }

        //人员数据并加载模板
        , userDateByPage: function (orgId) {
            var that = this;
            var options = {};
            options.orgId = orgId;
            options.isASingleSelectUser = that.settings.isASingleSelectUser;
            options.selectUserCallback = function (data, event) {
                that._selectedUserIds = data.selectedUserIds;
                that.settings.selectedUserList = data.selectedUserList;
                if (that.settings.selectUserCallback != null) {
                    return that.settings.selectUserCallback(data, event);
                }
            };
            options.delSelectedUserCallback = that.settings.delSelectedUserCallback;
            options.selectedUserList = that.settings.selectedUserList;
            $(that.element).find('div[data-list="userList"]').m_userList(options);
        }

    });

    $.fn[pluginName] = function (options) {
        return this.each(function () {

            //if (!$.data(this, "plugin_" + pluginName)) {
            $.data(this, "plugin_" +
                pluginName, new Plugin(this, options));
            //}
        });
    };

})(jQuery, window, document);

/**
 * 组织树
 * Created by wrb on 2016/12/14.
 */
;(function ($, window, document, undefined) {

    "use strict";
    var pluginName = "m_orgByTree_old",
        defaults = {
              title: ''//弹窗标题
            , treeUrl: ''//获取树的url
            , choseUserCallback: null//选择人员事件
            , isDialog: true//是否弹窗，默认弹窗
            , hasRole: true//是否弹窗，默认弹窗
            , isGetUserList: true//是否加载右边人员列表,默认加载
            , saveChoseUserCallback: null//点击保存(确定)按钮时触发事件
            , delChoseUserCallBack: null//点击删除已选的人员后触发的事件
            , treeClickCallBack: null//树点击事件
            , treeIconObj: null//树生成的图标对象
            , currOrgTreeObj: {}//当前树选中节点对象
            , chosedUserList: null//当前窗口选中的人员[{id,userId,userName}...]
            , isASingleSelectUser: false//是否单个选择人员，默认false,2为单选且提示不关窗
            , $isOkSave: false//默认false
            , $saveDataUrl: null//直接保存url
            , $saveData: null//保存格外的参数
            , $saveTimeKeyVal: null//保存到库所对应的时间字段 key 值
            , $okText:null//按钮文字
            , initTreeDataCallBack:null//加载树数据后调用的回调
            , renderTreeCallBack:null//树渲染完后回调
            , afterOpenCallBack:null//打开树回调
        };

    // The actual plugin constructor
    function Plugin(element, options) {
        this.element = element;

        this.settings = $.extend({}, defaults, options);
        this._defaults = defaults;
        this._name = pluginName;
        this._chosedUserIds = '';//已选人员ids
        this.init();
    }

    // Avoid Plugin.prototype conflicts
    $.extend(Plugin.prototype, {
        init: function () {
            this.initUserTreeDialog();
        }
        //初始化人员选择弹窗
        , initUserTreeDialog: function () {
            var that = this;
            if (that.settings.isDialog) {
                var options = {};
                options.title = that.settings.title || '选择人员';
                options.contentEle = 'dialogOBox';
                options.lock = 3;
                options.width = '800';
                options.minHeight = '400';
                options.tPadding = '0px';
                options.url = rootPath + '/assets/module/m_common/m_dialog.html';

                if (that.settings.isASingleSelectUser && !that.settings.$isOkSave) {//单选且没有保存按钮

                    options.cancelText = '关闭';
                    options.cancel = function () {};

                } else if ((!that.settings.isASingleSelectUser && !that.settings.$isOkSave) || (that.settings.isASingleSelectUser && that.settings.$isOkSave)) {//没单选且确定(没保存)按钮

                    options.cancel = function () {};
                    options.ok = function () {
                        if (that.settings.saveChoseUserCallback != null) {
                            var $data = {};
                            $data.chosedUserList = that.settings.chosedUserList;
                            return that.settings.saveChoseUserCallback($data);
                        }
                    };
                } else if (that.settings.$isOkSave) {//存在保存按钮
                    options.cancel = function () {};
                    options.okText = '保存';
                    options.ok = function () {

                        var timeObj = {};
                        if (that.settings.$saveTimeKeyVal != null) {//处理保存到库所对应的时间字段 key 值,此处传入的key是有序的

                            timeObj[that.settings.$saveTimeKeyVal[0]] = that._chosedUserIds;
                        }
                        $.extend(timeObj, that.settings.$saveData);
                        var option = {};
                        option.url = that.settings.$saveDataUrl;
                        option.postData = timeObj;
                        m_ajax.postJson(option, function (response) {
                            if (response.code == '0') {
                                if (that.settings.saveChoseUserCallback != null) {
                                    var $data = {};
                                    $data.data = response.data;
                                    $data.chosedUserList = that.settings.chosedUserList;
                                    return that.settings.saveChoseUserCallback($data);
                                }
                            } else {
                                S_dialog.error(response.info);
                            }
                        })
                    };
                }
                if(that.settings.$okText!=null){
                    options.okText = that.settings.$okText;
                }
                S_dialog.dialog(options, function (d) {//加载html后触发
                    that.initTreeData(function (data) {

                        that.element = 'div[id="content:' + d.id + '"] .dialogOBox';
                        var $data = {};
                        if (that.settings.chosedUserList != null) {
                            $data.chosedUserList = that.settings.chosedUserList;
                        }
                        var html = template('m_org/m_orgByTree', $data);
                        $(that.element).html(html);
                        that.initTreeStructure(data);
                    });
                });
            } else {
                that.initTreeData(function (data) {

                    if (that.settings.isGetUserList) {
                        var $data = {};
                        if (that.settings.chosedUserList != null) {
                            $data.chosedUserList = that.settings.chosedUserList;

                        }
                        $data.isASingleSelectUser = that.settings.isASingleSelectUser;
                        var html = template('m_org/m_orgByTree', $data);
                        $(that.element).html(html);

                    }
                    that.initTreeStructure(data);
                });
            }
        }
        //初始化树数据
        , initTreeData: function (callBack) {

            var that = this;
            var option = {};
            option.url = that.settings.treeUrl != null && that.settings.treeUrl != '' ? that.settings.treeUrl : restApi.url_getOrgTreeForSearch;
            m_ajax.get(option, function (response) {
                if (response.code == '0') {
                    if(that.settings.initTreeDataCallBack){
                        that.settings.initTreeDataCallBack(response.info);
                    }
                    if (callBack != null) {
                        return callBack(response.data);
                    }
                } else {
                    S_dialog.error(response.info);
                }

            })
        }
        //生成树结构
        , initTreeStructure: function (orgData) {
            var that = this;
            var $tree = $('#organization_treeH');
            $tree.jstree({
                'core': {
                    'check_callback': true,
                    'data': orgData
                },
                'plugins': ['types'],
                'types': that.settings.treeIconObj || {
                    'default': {
                        'icon': 'fa fa-users'
                    },
                    'independent': {   //独立经营图标
                        'icon': 'fa fa-trademark'
                    },
                    'partner': {       //合作伙伴图标

                        'icon': 'fa fa-share-alt'
                    },
                    'root': {         //根节点图标
                        'icon': 'fa fa-building'
                    }
                }
            }).on('select_node.jstree', function (e, data) {
                //alert(data.node.original.realId);
                var currOrgObj = data.node.original;//获取当前树的对象
                that.settings.currOrgTreeObj = currOrgObj;
                var inst = data.instance;
                var parentOrgObj = inst.get_node(data.node.parent).original;

                if (that.settings.isGetUserList) {

                    that.userDateByPage(data.node.original.realId);//分页
                }
                if (that.settings.treeClickCallBack != null) {
                    currOrgObj.parentOrgObj = parentOrgObj;
                    return that.settings.treeClickCallBack(currOrgObj);
                }

            }).on('ready.jstree', function (e, data) {//loaded.jstree

                var inst = data.instance;
                var obj = inst.get_node(e.target.firstChild.firstChild.lastChild);

                var currOrgObj = obj.original;//获取当前树的对象

                var tree = $('#organization_treeH').jstree(true);
                var selectedObj = tree.get_selected();
                if (selectedObj != null && selectedObj != undefined) {
                    var selectedTreeObj = tree.get_node(selectedObj[0]);
                    currOrgObj = selectedTreeObj.original;//获取当前树的对象
                }
                that.settings.currOrgTreeObj = currOrgObj;
                if (that.settings.treeClickCallBack != null) {
                    return that.settings.treeClickCallBack(currOrgObj,'ready');//字符串ready表示初始化树时才调用此方法
                }
                if (that.settings.isGetUserList) {
                    that.userDateByPage(currOrgObj.realId);
                }
                if(that.settings.renderTreeCallBack!=null){
                    that.settings.renderTreeCallBack();
                }
            }).on('after_open.jstree', function (e, data) {//load_node.jstree
                if(that.settings.afterOpenCallBack){
                    that.settings.afterOpenCallBack(data);
                }
            });
        }
        //把已选的人员列表转为id集合字符串，用于来作判断
        , dealChosedUserList: function () {
            var that = this;
            if (that.settings.chosedUserList != null) {
                var list = that.settings.chosedUserList;
                for (var i = 0; i < list.length; i++) {
                    that._chosedUserIds += list[i].id + ',';
                }
            }
        }

        //人员数据并加载模板
        , userDateByPage: function (orgId) {
            var that = this;
            var options = {};
            options.orgId = orgId;
            options.isASingleSelectUser = that.settings.isASingleSelectUser;
            options.choseUserCallback = function (data, event) {
                that._chosedUserIds = data.chosedUserIds;
                that.settings.chosedUserList = data.chosedUserList;
                if (that.settings.choseUserCallback != null) {
                    return that.settings.choseUserCallback(data, event);
                }
            };
            options.delChoseUserCallBack = that.settings.delChoseUserCallBack;
            options.chosedUserList = that.settings.chosedUserList;
            $(that.element).find('div[data-list="userList"]').m_userList(options);
        }

    });

    $.fn[pluginName] = function (options) {
        return this.each(function () {

            //if (!$.data(this, "plugin_" + pluginName)) {
            $.data(this, "plugin_" +
                pluginName, new Plugin(this, options));
            //}
        });
    };

})(jQuery, window, document);

/**
 * 组织－组织信息
 * Created by wrb on 2016/12/15.
 */
;(function ($, window, document, undefined) {

    "use strict";
    var pluginName = "m_orgInfomation",
        defaults = {
            $type:null//判断是通过组织架构进来还是通讯录进来，1为组织架构，0为通讯录
        };

    // The actual plugin constructor
    function Plugin(element, options) {
        this.element = element;

        this.settings = $.extend({}, defaults, options);
        this._defaults = defaults;
        this._teamInfo = null;
        this._serverTypeList = null;
        this._fastdfsUrl = null;
        this._name = pluginName;
        this._isEdit = null;
        this.init();
    }

    // Avoid Plugin.prototype conflicts
    $.extend(Plugin.prototype, {
        init: function () {
            var that = this;
            that._isEdit = (window.currentRoleCodes.indexOf('com_enterprise_edit')>-1)&&that.settings.$type==1?true:false;
            that.getData(function(){
                that.initUserData();
            });
        }
        //加载页面模板
        ,initUserData:function () {

            var that = this;
            var html = template('m_org/m_orgInfomation',{type:that.settings.$type});
            $(that.element).html(html);
            that.dissolutionCompany();
            rolesControl();
            var $data = {};
            $data.teamInfo = that._teamInfo;
            $data.isEdit = that._isEdit;
            $data.serverTypeList = that._serverTypeList;
            $("#infoMainOBox").m_teamInfoShow($data);


            var filePath = that._teamInfo.filePath;
            if(filePath!=null && filePath!=""){
                filePath = that._fastdfsUrl + filePath;
            }else{
                filePath = rootPath+"/assets/img/default/org_default_headPic.png";
            }
            var option = {};
            option.filePath = filePath;
            option.isEdit = that._isEdit;
            option.fastUrl = that._fastdfsUrl;
            $(that.element).find('#teamPicShow').m_teamPicUpload(option);

            if(window.adminFlag==1){
                $(that.element).find('#dissolutionCompany').removeClass('hide');
            }

        }
        //获取相关数据
        ,getData:function(callback){
            var that = this;
            that.getTeamMassage(function(){
                that.getProjectType(callback);
            });
        }
        //解散组织
        ,dissolutionCompany:function(){
            var that = this;
            $(that.element).find('#dissolutionCompany').on('click',function(event){

                var option = {};
                option.url = restApi.url_validateDisbandCompany;
                m_ajax.post(option,function (response) {
                    if (response.code == '0') {

                        var options = {};
                        var $data = {
                            cellphone : response.data.cellphone,
                            userName : response.data.userName
                        };
                        $.extend($data,that._teamInfo);
                        options.teamInfo = $data;
                        $('#wrapper').m_teamDissolution(options);

                    } else {
                        S_dialog.error(response.info);
                    }
                })
            });
        }
        //获取组织信息
        ,getTeamMassage:function(callback){
            var that = this;
            var option = {};
            var id = window.currentCompanyId;//当前组织ID
            option.url = restApi.url_teamInfo+'/'+id;
            m_ajax.get(option,function (response) {
                if (response.code == '0') {
                    that._teamInfo = response.data.companyInfo;
                    that._fastdfsUrl = response.data.fastdfsUrl;
                    if(callback){
                        return callback();
                    }

                } else {
                    S_dialog.error(response.info);
                }
            })
        }
        //获取项目类型
        ,getProjectType:function(callback){
            var that = this;
            var options = {};
            options.url = restApi.url_projectType;
            options.postData={};
            m_ajax.postJson(options,function (response) {
                if(response.code=='0'){
                    that._serverTypeList = response.data;
                    if(callback){
                        return callback();
                    }
                    // that.bindClickFun(t,s,f);
                }else {
                    S_dialog.error(response.info);
                }
            })
        }
    });

    $.fn[pluginName] = function (options) {
        return this.each(function () {

            //if (!$.data(this, "plugin_" + pluginName)) {
            $.data(this, "plugin_" +
                pluginName, new Plugin(this, options));
            //}
        });
    };

})(jQuery, window, document);

/**
 * Created by wrb on 2016/12/15.
 */
;(function ($, window, document, undefined) {

    "use strict";
    var pluginName = "m_orgUserList",
        defaults = {
            orgId:'',//必传参数
            currOrgTreeObj:null,
            orgUserList:[],
            isClick:false,
            deleteBtnCallBack:null
        };

    // The actual plugin constructor
    function Plugin(element, options) {
        this.element = element;

        this.settings = $.extend({}, defaults, options);
        this._defaults = defaults;
        this._name = pluginName;
        this.init();
    }

    // Avoid Plugin.prototype conflicts
    $.extend(Plugin.prototype, {
        init: function () {
            this.initUserData();
        }
        //人员数据并加载模板
        ,initUserData:function () {

            var that = this;
            var option  = {};
            option.url = restApi.url_getOrgUserNoPage+'/'+that.settings.orgId;
            m_ajax.get(option,function (response) {
                if(response.code=='0'){
                    var $data = {};
                    $data.orgUserList = response.data;
                    that.settings.orgUserList = response.data;
                    $data.isClick = that.settings.isClick;
                    var html = template('m_org/m_orgUserList',$data);
                    $(that.element).html(html);
                    if(that.settings.deleteBtnCallBack!=null){
                        that.settings.deleteBtnCallBack();
                    }
                    rolesControl();
                    that.bindTrActionClick();
                    that.bindActionClick();
                }else {
                    S_dialog.error(response.info);
                }

            })

        }
        //tr绑定事件
        ,bindTrActionClick:function () {
            $('tr.userListTr').on('click',function (event) {
                if(!($(event.target).closest('.btnReturnFalse').length>0)){
                    $(this).next().toggle();
                    if($(this).find('.td-first .fa-plus-square').length>0){
                        $(this).find('.td-first .fa').removeClass('fa-plus-square').addClass('fa-minus-square');
                    }else{
                        $(this).find('.td-first .fa').removeClass('fa-minus-square').addClass('fa-plus-square');
                    }
                }

            });

        }
        //编辑人员
        ,editOrgUser:function (i) {

            var that = this;
            var options = {};
            options.companyId = that.settings.currOrgTreeObj.companyId;
            options.realId = that.settings.currOrgTreeObj.realId;
            options.userObj = that.settings.orgUserList[i];
            options.doType = 'edit';//等于edit是编辑
            $('body').m_editUser(options);
        }
        //向上排序
        ,upSorting:function (i) {
            var that = this;
            var option  = {};
            option.url = restApi.url_orderCompanyUser;

            var param = {};
            param.companyUser1 = that.settings.orgUserList[i-0];
            param.companyUser2 = that.settings.orgUserList[i-0-1];
            param.orgId = that.settings.orgId;
            option.postData = param;
            m_ajax.postJson(option,function (response) {
                if(response.code=='0'){
                   /* S_dialog.tips('操作成功！');*/
                    that.initUserData();
                }else {
                    S_dialog.error(response.info);
                }

            })
        }
        //向下排序
        ,downSorting:function (i) {
            var that = this;
            var option  = {};
            option.url = restApi.url_orderCompanyUser;

            var param = {};
            param.companyUser1 = that.settings.orgUserList[i-0];
            param.companyUser2 = that.settings.orgUserList[i-0+1];
            param.orgId = that.settings.orgId;
            option.postData = param;
            m_ajax.postJson(option,function (response) {
                if(response.code=='0'){
                   /* S_dialog.tips('操作成功！');*/
                    that.initUserData();
                }else {
                    S_dialog.error(response.info);
                }

            })
        }
        //删除人员
        // ,delOrgUser:function (id) {
        //     var that = this;
        //     var option  = {};
        //     option.url = restApi.url_saveCompanyUser+'/'+id;
        //
        //     m_ajax.get(option,function (response) {
        //         if(response.code=='0'){
        //             S_toastr.success('操作成功！');
        //             that.initUserData();
        //
        //         }else {
        //             S_dialog.error(response.info);
        //         }
        //
        //     })
        // }
        //按钮事件绑定
        ,bindActionClick:function () {
            var that = this;

            $('.orgUserOBox a[data-action]').on('click',function () {
                var _this = this;
                var dataAction = $(this).attr('data-action');
                if(dataAction=='editOrgUser'){//编辑人员
                    that.editOrgUser($(this).attr('data-i'));
                    return false;
                }else if(dataAction=='upSorting'){//向上排序
                    that.upSorting($(this).attr('data-i'));
                    return false;
                }else if(dataAction=='downSorting'){//向下排序
                    that.downSorting($(this).attr('data-i'));
                    return false;
                }else if(dataAction=='delOrgUser'){//删除人员

                    S_swal.confirm({
                        title:'您确定要删除该工作人员吗？',
                        text:'该工作人员删除后将不能恢复，确定吗？',
                        callBack:function () {
                            var option = {};
                            var id = $(_this).attr('data-id');
                            option.url = restApi.url_saveCompanyUser + '/' + id;
                            m_ajax.get(option, function (response) {
                                if (response.code == '0') {
                                    S_swal.sure({
                                        title:'已删除',
                                        text:'该工作人员已删除。',
                                        callBack:function () {
                                            // window.location.href = window.rootPath + '/iWork/home/workbench'
                                            that.initUserData();
                                        }
                                    });
                                } else {
                                    S_dialog.error(response.info);
                                }
                            });
                        }
                    });
                    return false;
                }
            });
        }

    });

    $.fn[pluginName] = function (options) {
        return this.each(function () {

            //if (!$.data(this, "plugin_" + pluginName)) {
            $.data(this, "plugin_" +
                pluginName, new Plugin(this, options));
            //}
        });
    };

})(jQuery, window, document);

/**
 * 选择组织
 * Created by wrb on 2018/6/28.
 */
;(function ($, window, document, undefined) {

    "use strict";
    var pluginName = "m_org_chose_byTree",
        defaults = {
            $type:0,//类型（选择不同URL）默认0=总公司/分支机构/事业合伙人  可进行点击；1=总公司/分支机构/事业合伙人  不可进行点击
            $renderType:0,//默认0=浮窗展示,1=界面展示
            $selectedCallBack:null,//选中回滚事件
            $renderCallBack:null,//渲染完成事件
            $selectedId:null,//选中某节点
            $buttonStyle:null,//组件button样式
            $spanStyle:null//组件button>span样式
        };

    // The actual plugin constructor
    function Plugin(element, options) {
        this.element = element;
        this.settings = $.extend({}, defaults, options);
        this._defaults = defaults;
        this._name = pluginName;
        this._currentCompanyId = window.currentCompanyId;
        this._selectedOrg = null;//当前选中的组织
        this.init();
    }

    // Avoid Plugin.prototype conflicts
    $.extend(Plugin.prototype, {
        init: function () {
            var that = this;

            var option = {};
            if(that.settings.$type==1){//总公司/分支机构/事业合伙人  不可进行点击
                option.url = restApi.url_getStaticCompanyForFinance;
            }else{//节点没禁用
                option.url = restApi.url_getStaticCompanyForPaymentDetail;
            }
            m_ajax.post(option, function (response) {
                if (response.code == '0') {

                    that._companyList = response.data;
                    var html = template('m_org/m_org_chose_byTree',{
                        companyList:response.data,
                        renderType:that.settings.$renderType,
                        buttonStyle:that.settings.$buttonStyle,
                        spanStyle:that.settings.$spanStyle
                    });
                    $(that.element).html(html);

                    that.renderOrgSelect();

                } else {
                    S_dialog.error(response.info);
                }
            });
        }
        , renderOrgSelect:function () {
            var that = this;
            var $tree = $(that.element).find('#orgTreeH');
            $tree.jstree({
                'core': {
                    'check_callback': true,
                    'data': that._companyList
                },
                'plugins': ['types'],
                'types': that.settings.treeIconObj || {
                    'default': {
                        'icon': 'iconfont rounded icon-zuzhijiagou'
                    },
                    'independent': {   //独立经营图标
                        'icon': 'fa fa-users'
                    },
                    'partner': {       //事业合伙人图标
                        'icon': 'iconfont rounded icon-cooperation'
                    },
                    'partnerContainer': {       //事业合伙人容器图标
                        'icon': 'iconfont rounded icon-cooperation'
                    },
                    'subCompany': {       //分支机构图标
                        'icon': 'iconfont rounded icon-2fengongsi1'
                    },
                    'subCompanyContainer': {       //分支机构容器图标
                        'icon': 'iconfont rounded icon-2fengongsi1'
                    },
                    'company': {         //根节点图标
                        'icon': 'iconfont rounded icon-2fengongsi'
                    },
                    'root': {         //根节点图标
                        'icon': 'iconfont rounded icon-2fengongsi'
                    }
                }
            }).on('select_node.jstree', function (e, data) {

                that._selectedOrg = data.node.original;//获取当前树的对象
                $(that.element).find('.company-name').html(that._selectedOrg.text);
                if(that.settings.$selectedCallBack!=null){
                    that.settings.$selectedCallBack(that._selectedOrg);
                }

                $('.btn-group.m_org_chose_byTree').removeClass('open');//关闭浮窗

            }).on('ready.jstree', function (e, data) {//loaded.jstree

                var tree = $(that.element).find('#orgTreeH').jstree(true);
                tree.open_all();
                tree.select_node(that._currentCompanyId);
                if(that.settings.$selectedId!=null){
                    tree.select_node(that.settings.$selectedId);
                }
                if(that.settings.$renderCallBack!=null){
                    that.settings.$renderCallBack();
                }
                //阻止浮窗关闭
                $(that.element).find('#orgTreeH').on('click',function (e) {
                    e.stopPropagation();
                });

            }).on('after_open.jstree', function (e, data) {//load_node.jstree
                that.dealTreeIconColorFun(data.node.original.id);
                var tree = $(that.element).find('#orgTreeH').jstree(true);
                //禁用根节点选择
                if(that.settings.$type==1) {

                    tree.disable_node('#root');
                }


            }).on('open_node.jstree', function (e, data) {//open_node.jstree

            }).on('close_node.jstree', function (e, data) {//close_node.jstree

            });
        }
        //树icon颜色处理
        , dealTreeIconColorFun:function (id) {
            var that = this;
            $(that.element).find('#orgTreeH').find('li[id="'+id+'"]>ul>li').each(function () {
                var $this = $(this);
                var relationType = $this.attr('relationtype');
                if(relationType==1){
                    $this.find('a.jstree-anchor i.jstree-icon').addClass('color-blue');
                }else if(relationType==2){
                    $this.find('a.jstree-anchor i.jstree-icon').addClass('color-green');
                }else if(relationType==3){
                    $this.find('a.jstree-anchor i.jstree-icon').addClass('color-red');
                }
            });
        }

    });

    $.fn[pluginName] = function (options) {
        return this.each(function () {

            //if (!$.data(this, "plugin_" + pluginName)) {
            $.data(this, "plugin_" +
                pluginName, new Plugin(this, options));
            //}
        });
    };

})(jQuery, window, document);

/**
 * 操作－左菜单
 * Created by wrb on 2016/12/16.
 */
;(function ($, window, document, undefined) {

    "use strict";
    var pluginName = "m_org_menu",
        defaults = {
            $contentEle:null,
            $dataAction:null,
            $query:null,//URL参数
            $isFirstEnter:false//是否是第一次進來
        };

    // The actual plugin constructor
    function Plugin(element, options) {
        this.element = element;

        this.settings = $.extend({}, defaults, options);
        this._defaults = defaults;
        this._name = pluginName;
        this.init();
    }

    // Avoid Plugin.prototype conflicts
    $.extend(Plugin.prototype, {
        init: function () {
            var that = this;
            that.initHtmlData();
        }
        //初始化数据并加载模板
        ,initHtmlData:function () {
            var that = this;

            var html = template('m_org/m_org_menu',{adminFlag:window.adminFlag});
            $(that.element).html(html);
            rolesControl();
            that.menuClickFun();
            if(that.settings.$dataAction!=null){
                that.switchPage(that.settings.$dataAction);
                $(that.element).find('ul.secondary-menu-ul li[id="'+that.settings.$dataAction+'"]').addClass('active').siblings().removeClass('active');
            }else{
                $(that.element).find('ul.secondary-menu-ul li:first a').click();
            }
        }
        //菜单点击事件
        , menuClickFun:function () {
            var that = this;
            $(that.element).find('.secondary-menu-ul li a').on('click',function () {
                var id = $(this).parent().attr('id');
                $(this).parent().addClass('active').siblings().removeClass('active');
            });
        }
        //tab页切换
        , switchPage: function (dataAction) {

            var that = this;
            switch (dataAction) {
                case 'organizational'://组织架构
                    that.organizational();
                    break;
                case 'orgInfo'://组织信息编辑
                    that.orgInfomationEdit();
                    break;
                case 'addressBook'://通讯录
                    that.addressBook();
                    break;
                case 'orgInfomationShow'://组织信息
                    that.orgInfomationShow();
                    break;
                case 'permissionSettings'://权限设置
                    that.permissionSettings();
                    break;
                case 'enterpriseCertification'://企业认证
                    that.enterpriseCertification();
                    break;
                case 'historicalDataImport'://历史数据导入
                    that.historicalDataImport();
                    break;
                case 'financeSettingProcess'://项目收支流程设置
                    that.financeSettingProcess();
                    break;
                case 'approvalMgt'://审批管理
                    that.approvalMgt();
                    break;
                default:
                    dataAction = 'organizational';
                    that.organizational();
                    break;
            }
        }
        //组织架构
        , organizational: function () {
            var that = this;
            $(that.element).find('#content-box').m_organizational();
        }
        //组织信息(可编辑)
        , orgInfomationEdit: function () {
            var that = this;
            $(that.element).find('#content-box').m_orgInfomation({$type:1});
        }
        //组织信息(可查看)
        , orgInfomationShow: function () {
            var that = this;
            $(that.element).find('#content-box').m_orgInfomation({$type:0});
        }
        //通讯录
        , addressBook: function () {
            var that = this;
            $(that.element).find('#content-box').m_addressBook();
        }
        //权限设置
        ,permissionSettings:function () {
            var that = this;
            var option = {};
            option.isAddUser = 1;
            $(that.element).find('#content-box').m_roleList(option);
        }
        //企业认证
        ,enterpriseCertification:function () {
            var that = this;
            var option = {};
            $(that.element).find('#content-box').m_enterpriseCertification(option);
        }
        //历史数据导入
        ,historicalDataImport:function () {
            var that = this;
            $(that.element).find('#content-box').m_historyData({}, true);
        }
        //项目收支流程设置
        ,financeSettingProcess:function () {
            var that = this;
            var query  = that.settings.$query;
            if(query!=null && query.processType=='2'){//项目收支流程-合同回款设置

                $(that.element).find('#content-box').m_process_finance_setting_contractPayment({
                    $processType:query.processType,
                    $processId:query.processId
                }, true);

            }else if(query!=null && (query.processType=='3' || query.processType=='4')){//项目收支流程-技术审查费设置

                $(that.element).find('#content-box').m_process_finance_setting_technicalReviewFee({
                    $processType:query.processType,
                    $processId:query.processId
                }, true);

            }else{
                $(that.element).find('#content-box').m_process_finance_setting({}, true);
            }

        }
        //审批管理
        ,approvalMgt:function () {
            var that = this;
            $(that.element).find('#content-box').m_approval_mgt({}, true);
        }
    });

    $.fn[pluginName] = function (options) {
        return this.each(function () {

            //if (!$.data(this, "plugin_" + pluginName)) {
            $.data(this, "plugin_" +
                pluginName, new Plugin(this, options));
            //}
        });
    };

})(jQuery, window, document);

/**
 * 组织－部门树选择
 * Created by wrb on 2017/6/7.
 */
;(function ($, window, document, undefined) {

    "use strict";
    var pluginName = "m_selectedOrgTree",
        defaults = {
             $selectedCallBack:null//选择节点事件
            ,$isFirstSelectedCallBack:true//是否需要首次触发选中事件
            ,$isAbsolutelyPositioned:false//当前树是否绝对定位
            ,$isClickDisappear:true//是否点击外部就消失该树
            ,$clickDisappearForClass:[]//点击外部就消失该树不包括的类（[class1,class2,...]）
        };

    // The actual plugin constructor
    function Plugin(element, options) {
        this.element = element;
        this.settings = $.extend({}, defaults, options);
        this._defaults = defaults;
        this._name = pluginName;
        this._currentCompanyId = window.currentCompanyId;

        this.init();
    }

    // Avoid Plugin.prototype conflicts
    $.extend(Plugin.prototype, {
        init: function () {
            var that = this;

            //渲染容器
            $(that.element).html(template('m_org/m_selectedOrgTree', {}));
            if(that.settings.$isAbsolutelyPositioned){
                $(that.element).find('.chose-user-tree').addClass('m_selectedOrgTree');
            }
            that._initTreeData(function (data) {

                that._initTreeStructure(data);
                if(that.settings.$isClickDisappear){
                    that._closeTreeBox();
                }
            });
        }
        //初始化树数据
        , _initTreeData: function (callBack) {

            var that = this;
            var option = {};
            option.url = that.settings.treeUrl != null && that.settings.treeUrl != '' ? that.settings.treeUrl : restApi.url_getOrgTreeForSearch;
            m_ajax.get(option, function (response) {
                if (response.code == '0') {
                    if(that.settings.initTreeDataCallBack){
                        that.settings.initTreeDataCallBack(response.info);
                    }
                    if (callBack != null) {
                        return callBack(response.data);
                    }
                } else {
                    S_dialog.error(response.info);
                }

            })
        }
        //生成树结构
        , _initTreeStructure: function (orgData) {
            var that = this;
            var $tree = $('#organizationTree');
            $tree.jstree({
                'core': {
                    'check_callback': true,
                    'data': orgData
                },
                'plugins': ['types'],
                'types': {
                    'default': {
                        'icon': 'fa fa-users'
                    },
                    'independent': {   //独立经营图标
                        'icon': 'fa fa-trademark'
                    },
                    'partner': {       //合作伙伴图标

                        'icon': 'fa fa-share-alt'
                    },
                    'root': {         //根节点图标
                        'icon': 'fa fa-building'
                    }
                }
            }).on('select_node.jstree', function (e, data) {

                var currOrgObj = data.node.original;//获取当前树的对象
                that.settings.currOrgTreeObj = currOrgObj;
                var inst = data.instance;
                var parentOrgObj = inst.get_node(data.node.parent).original;

                //that.renderUserListPage(data.node.original.realId);//分页
                $(that.element).find('.chose-user-tree').addClass('hide');

                if(that.settings.$selectedCallBack!=null){
                    that.settings.$selectedCallBack(currOrgObj);
                }


            }).on('ready.jstree', function (e, data) {//loaded.jstree

                var inst = data.instance;
                var obj = inst.get_node(e.target.firstChild.firstChild.lastChild);
                var currOrgObj = obj.original;//获取当前树的对象
                var tree = $('#organizationTree').jstree(true);
                var selectedObj = tree.get_selected();

                if (selectedObj != null && selectedObj != undefined) {
                    var selectedTreeObj = tree.get_node(selectedObj[0]);
                    currOrgObj = selectedTreeObj.original;//获取当前树的对象
                }
                that.settings.currOrgTreeObj = currOrgObj;

                if(that.settings.$isFirstSelectedCallBack && that.settings.$selectedCallBack!=null){
                    that.settings.$selectedCallBack(currOrgObj);
                }

            });
            //that.renderUserListPage(orgData.realId);
        }
        //当鼠标点击的焦点不在浮窗内时，关闭浮窗
        ,_closeTreeBox:function() {
            var that = this;
            $('body').on('click', function (event) {

                var isHide = true;
                if ($(event.target).parents('.chose-user-tree').length > 0 ) {
                    isHide = false;
                }

                if(that.settings.$clickDisappearForClass!=null && that.settings.$clickDisappearForClass.length>0){
                    var c = that.settings.$clickDisappearForClass;
                    for(var i=0;i<c.length;i++){

                        if ($(event.target).hasClass(c[i])) {
                            isHide = false;
                            break;
                        }
                    }
                }

                if(isHide){
                    var treeBox = $(that.element).find('.chose-user-tree');
                    if(!treeBox.hasClass('hide')){
                        treeBox.addClass('hide');
                    }
                }

            })
        }

    });

    $.fn[pluginName] = function (options) {
        return this.each(function () {

            //if (!$.data(this, "plugin_" + pluginName)) {
            $.data(this, "plugin_" +
                pluginName, new Plugin(this, options));
            //}
        });
    };

})(jQuery, window, document);

/**
 * 待审核组织－列表
 * Created by wrb on 2016/12/18.
 */
;(function ($, window, document, undefined) {

    "use strict";
    var pluginName = "m_toAuditOrgList",
        defaults = {
            $isDialog:true,
            $dataUrl:null,
            $type:'2'//(type：2，分支机构：3，合作伙伴为)
            ,$toAuditCompanyList:[]
            ,$auditOrgCallBack:null
            ,$currentCompanyId:''
        };

    // The actual plugin constructor
    function Plugin(element, options) {
        this.element = element;

        this.settings = $.extend({}, defaults, options);
        this._defaults = defaults;
        this._name = pluginName;
        this.init();
    }

    // Avoid Plugin.prototype conflicts
    $.extend(Plugin.prototype, {
        init: function () {
            var that = this;
            this.initHtmlData(function (data) {
                that.settings.$currentCompanyId = window.currentCompanyId;
                var html = template('m_org/m_toAuditOrgList',{
                    toAuditCompanyList:data.toAuditCompanyList,
                    currentCompanyId:that.settings.$currentCompanyId
                });
                $(that.element).html(html);
                that.bindActionClick();
            });
        }
        //数据并加载模板
        ,initHtmlData:function (callBack) {

            var that = this;
            var option  = {};
            option.url = restApi.url_selectInvitedPartner;
            option.postData = {};
            option.postData.type = that.settings.$type;
            m_ajax.postJson(option,function (response) {
                if(response.code=='0'){
                    that.settings.$toAuditCompanyList = response.data.toAuditCompanyList;
                    $.each(that.settings.$toAuditCompanyList,function(i,item){
                        item.createDate = item.createDate.substr(0,11);
                    });
                    if(callBack!=null){
                        return callBack(response.data);
                    }
                }else {
                    S_dialog.error(response.info);
                }
            })
        }
        //同意，拒绝
        ,auditOrg:function (i,status) {
            var that = this;
            var option  = {};
            option.url = restApi.url_auditOrgRelation;
            var obj = {};
            obj = that.settings.$toAuditCompanyList[i];
            obj.auditStatus=status;
            option.postData = obj;
            m_ajax.postJson(option,function (response) {
                if(response.code=='0'){
                    S_toastr.success(response.info);
                    var $currentCompanyId = window.currentCompanyId;
                    if (obj.auditStatus == 0 && obj.type == 2 && $currentCompanyId == obj.orgPid) {//分支机构
                        addNodeByTreeByRoot(response.data, $currentCompanyId + 'subCompanyId');//添加节点
                    } else if (obj.auditStatus == 0 && obj.type == 3 && $currentCompanyId == obj.orgPid) {//合作伙伴
                        addNodeByTreeByRoot(response.data, $currentCompanyId + 'partnerId');//添加节点
                    }
                    that.initHtmlData(function (data) {
                        var html = template('m_org/m_toAuditOrgList',{toAuditCompanyList:data.toAuditCompanyList});
                        $(that.element).html(html);
                        that.bindActionClick();
                        if(that.settings.$auditOrgCallBack!=null){
                            that.settings.$auditOrgCallBack();
                        }
                    });

                }else {
                    S_dialog.error(response.info);
                }
            })
        }
        //按钮事件绑定
        ,bindActionClick:function () {
            var that = this;
            $('.toAuditOrgListBox a[data-action]').on('click',function () {
                var dataAction = $(this).attr('data-action');
                if(dataAction=='orgRelationApproval0'){
                    var i = $(this).attr('data-i');
                    that.auditOrg(i,0);
                    return false;
                }else if(dataAction=='orgRelationApproval1'){
                    var i = $(this).attr('data-i');
                    that.auditOrg(i,1);
                    return false;
                }
            });
        }

    });

    $.fn[pluginName] = function (options) {
        return this.each(function () {

            //if (!$.data(this, "plugin_" + pluginName)) {
            $.data(this, "plugin_" +
                pluginName, new Plugin(this, options));
            //}
        });
    };

})(jQuery, window, document);

/**
 * 待审核组织－tab页
 * Created by wrb on 2016/12/18.
 */
;(function ($, window, document, undefined) {

    "use strict";
    var pluginName = "m_toAuditOrgTab",
        defaults = {
            $isDialog:true,
            $dataUrl:null,
            $auditOrgCallBack:null
        };

    // The actual plugin constructor
    function Plugin(element, options) {
        this.element = element;

        this.settings = $.extend({}, defaults, options);
        this._defaults = defaults;
        this._name = pluginName;
        this.init();
    }

    // Avoid Plugin.prototype conflicts
    $.extend(Plugin.prototype, {
        init: function () {
            var that = this;
            this.initHtmlData(function () {
                that.getOrgList(2);
                that.bindActionClick();
            });
        }
        //数据并加载模板
        ,initHtmlData:function (callBack) {

            var that = this;
            if(that.settings.$isDialog){//以弹窗编辑
                S_dialog.dialog({
                    title: that.settings.title||'待审核组织',
                    contentEle: 'dialogOBox',
                    lock: 3,
                    width: '800',
                    maxHeight:'700',
                    tPadding: '0px',
                    url: rootPath+'/assets/module/m_common/m_dialog.html',
                    cancelText:'关闭',
                    cancel:function () {

                    }
                },function(d){//加载html后触发

                    var html = template('m_org/m_toAuditOrgTab',{});
                    $('div[id="content:'+d.id+'"] .dialogOBox').html(html);

                    if(callBack!=null){
                        callBack();
                    }

                });
            }else{//不以弹窗编辑

                var html = template('m_org/m_toAuditOrgTab',{userAuditList:data});
                $(that.element).html(html);
                if(callBack!=null){
                    callBack();
                }
            }


        }
        ,getOrgList:function (t) {
            var that = this;
            var options = {};
            options.$type = t;
            options.$auditOrgCallBack = that.settings.$auditOrgCallBack;
            if(t==2){
                $('.toAuditOrgTabBox #branch section').m_toAuditOrgList(options);
            }else{
                $('.toAuditOrgTabBox #businessPartner section').m_toAuditOrgList(options);
            }
            return false;

        }
        //按钮事件绑定
        ,bindActionClick:function () {
            var that = this;
            $('.toAuditOrgTabBox a[data-action]').on('click',function () {
                var dataAction = $(this).attr('data-action');
                if(dataAction=='getCompanyToAudit2'){
                    that.getOrgList(2);
                    //return false;
                }else if(dataAction=='getCompanyToAudit3'){
                    that.getOrgList(3);
                    //return false;
                }
            });
        }

    });

    $.fn[pluginName] = function (options) {
        return this.each(function () {

            //if (!$.data(this, "plugin_" + pluginName)) {
            $.data(this, "plugin_" +
                pluginName, new Plugin(this, options));
            //}
        });
    };

})(jQuery, window, document);

/**
 * 待审核人员
 * Created by wrb on 2016/12/18.
 */
;(function ($, window, document, undefined) {

    "use strict";
    var pluginName = "m_toAuditOrgUserList",
        defaults = {
            $isDialog:true,
            $dataUrl:null,
            $userAuditList:[],
            $auditOrgUserCallBack:null
        };

    // The actual plugin constructor
    function Plugin(element, options) {
        this.element = element;

        this.settings = $.extend({}, defaults, options);
        this._defaults = defaults;
        this._name = pluginName;
        this.init();
    }

    // Avoid Plugin.prototype conflicts
    $.extend(Plugin.prototype, {
        init: function () {

            this.initHtmlData();
        }
        //数据并加载模板
        ,initHtmlData:function () {

            var that = this;
            if(that.settings.$isDialog){//以弹窗编辑
                S_dialog.dialog({
                    title: that.settings.title||'待审核人员',
                    contentEle: 'dialogOBox',
                    lock: 3,
                    width: '600',
                    maxHeight:'700',
                    tPadding: '0px',
                    url: rootPath+'/assets/module/m_common/m_dialog.html',
                    cancelText:'关闭',
                    cancel:function () {

                    }
                },function(d){//加载html后触发


                    $('div[id="content:'+d.id+'"] .dialogOBox').html('<form class="sky-form showAuditListOBox rounded-4x p-m" style="position: static; zoom: 1;">' +
                            '<fieldset><div id="toAuditOrgUser-pagination-container" class="m-pagination pull-right"></div>' +
                            '</fieldset></form>');

                    that.getDataByPage(function (data) {
                        $('table.toAuditOrgUserListBox').remove();
                        var html = template('m_org/m_toAuditOrgUserList',{userAuditList:data});
                        $('#toAuditOrgUser-pagination-container').before(html);
                        that.bindActionClick();
                    });

                });
            }else{//不以弹窗编辑

                $(that.element).html('<div id="toAuditOrgUser-pagination-container" class="m-pagination pull-right"></div>');
                that.getDataByPage(function () {
                    $('table.toAuditOrgUserListBox').remove();
                    var html = template('m_org/m_toAuditOrgUserList',{userAuditList:data});
                    $(that.element).prepend(html);
                    that.bindActionClick();
                },d.id);
            }


        }
        ,getDataByPage:function (callBack,id) {
            var that = this;
            var url = that.settings.$dataUrl!=null&&that.settings.$dataUrl!=''?that.settings.$dataUrl:restApi.url_getPendingAudiOrgUser ;
            var params = {};
            paginationFun({
                eleId:'#toAuditOrgUser-pagination-container',
                loadingId:'#content:'+id,
                url:url,
                params:params
            },function(response){
                that.settings.$userAuditList = response.data.data;
                if(callBack!=null){
                    return callBack(response.data.data);
                }

            });
        }
        //同意，拒绝
        ,auditUser:function (obj) {
            var that = this;
            var option  = {};
            option.url = restApi.url_audiOrgUser;
            option.postData = obj;
            m_ajax.postJson(option,function (response) {
                if(response.code=='0'){
                    S_toastr.success(response.info);
                    that.getDataByPage(function (data) {
                        $('table.toAuditOrgUserListBox').remove();
                        var html = template('m_org/m_toAuditOrgUserList',{userAuditList:data});
                        $('#toAuditOrgUser-pagination-container').before(html);

                        $('#organization_treeH .jstree-clicked').click();//刷新当前人员列表
                        if(that.settings.$auditOrgUserCallBack!=null){
                            that.settings.$auditOrgUserCallBack();
                        }

                    });
                }else {
                    S_dialog.error(response.info);
                }
            })
        }
        //按钮事件绑定
        ,bindActionClick:function () {
            var that = this;
            $('.toAuditOrgUserListBox a[data-action]').on('click',function () {
                var dataAction = $(this).attr('data-action');
                if(dataAction=='agreedToJoin'){
                    var i = $(this).attr('data-i');
                    var obj = {};
                    obj = that.settings.$userAuditList[i];
                    obj.auditStatus='1';
                    that.auditUser(obj);
                }else if(dataAction=='refusedToJoin'){
                    var i = $(this).attr('data-i');
                    var obj = {};
                    obj = that.settings.$userAuditList[i];
                    obj.auditStatus='3';
                    that.auditUser(obj);
                }
            });
        }

    });

    $.fn[pluginName] = function (options) {
        return this.each(function () {

            //if (!$.data(this, "plugin_" + pluginName)) {
            $.data(this, "plugin_" +
                pluginName, new Plugin(this, options));
            //}
        });
    };

})(jQuery, window, document);

/**
 * Created by wrb on 2016/12/14.
 */
;(function ($, window, document, undefined) {

    "use strict";
    var pluginName = "m_userList",
        defaults = {
              orgId: ''
            , userUrl: ''
            , selectUserCallback: null
            , delSelectedUserCallback: null
            , selectedUserList: null//选中的人员列表[{id,userId,userName}...]
            , isASingleSelectUser: false//是否单个选择人员，默认false,2为单选且提示不关窗
        };

    // The actual plugin constructor
    function Plugin(element, options) {
        this.element = element;

        this.settings = $.extend({}, defaults, options);
        this._defaults = defaults;
        this._name = pluginName;

        this._selectedUserIds = '';

        this.init();
    }

    // Avoid Plugin.prototype conflicts
    $.extend(Plugin.prototype, {
        init: function () {
            this.initUserData();
        }
        //人员数据并加载模板
        , initUserData: function () {
            var that = this;
            var url = that.settings.userUrl != null && that.settings.userUrl != '' ? that.settings.userUrl : restApi.url_getOrgUser;
            var params = {};
            params.orgId = that.settings.orgId;
            paginationFun({
                eleId: '#userlist-pagination-container',
                loadingId: '.userListBox',
                url: url,
                params: params
            }, function (response) {

                var $data = {};
                $data.orgUserList = response.data.data;
                var html = template('m_org/m_userList', $data);
                $(that.element).html(html);
                that.dealChosedUserList();
                that.bindActionClick();
                if (that.settings.isASingleSelectUser != 2) {
                    that.dealChoseUserBtnClass();
                }

            });
        }
        //处理按钮样式与可否点击
        , dealChoseUserBtnClass: function () {
            var that = this;
            $(that.element).find('a[data-action="choseUser"]').each(function () {
                var id = $(this).attr('data-companyUserId');
                if (that._selectedUserIds != null && that._selectedUserIds.indexOf(id) > -1) {
                    $(this).addClass('btn-u-default');
                    $(this).css('cursor', 'default');
                } else {
                    $(this).removeClass('btn-u-default');
                    $(this).css('cursor', 'pointer');

                }
            });
        }
        //显示添加后的成员并给其绑定删除按钮
        , addChosedUserList: function (data) {
            var that = this;
            if ($('.chosedUserBox').length > 0) {

                if (that.settings.isASingleSelectUser && that.settings.isASingleSelectUser == 2) {//单选且不关窗

                    var _iHtml = '';
                    _iHtml += '<span style="background-color: rgb(245, 245, 245);padding: 2px 0px;">' +
                        '<span class="label label-light m-r-xs" style="display: inline-block">' + data.userName + '' +
                        '</span></span>';

                    $('.chosedUserBox').html(_iHtml);

                } else {//默认

                    var _iHtml = '';
                    _iHtml += '<span class=" m-r-xs" style="background-color: rgb(245, 245, 245);padding: 2px 0px;">' +
                        '<span class="label label-light m-r-xs" style="display: inline-block;padding-right: 0;background: transparent">' + data.userName + '' +
                        '<a class="curp" href="javascript:void(0)" data-id="' + data.companyUserId + '" data-userId="'+data.userId+'" data-action="delChosedUser">' +
                        '<i class="fa fa-times color-red"></i></a></span></span>';

                    if(that.settings.isASingleSelectUser){//单选
                        $('.chosedUserBox').html(_iHtml);
                    }else{
                        $('.chosedUserBox').append(_iHtml);
                    }
                    that.bindDelChosedUser(data);
                    that.dealChosedUserList();
                    that.dealChoseUserBtnClass();
                }
            }
        }
        //删除添加的人员
        , bindDelChosedUser: function (data) {
            var that = this;
            $('.chosedUserBox').find('a[data-id="' + data.companyUserId + '"]').bind('click', function () {

                that.delChosedUser(this, data);
            });
        }
        //删除人员相关变量与样式处理
        , delChosedUser: function (obj, data) {
            var that = this;
            var d = $(obj).attr('data-id');
            $('.userListBox').find('a[data-companyuserid="' + d + '"]').removeClass('btn-u-default');
            $('.userListBox').find('a[data-companyuserid="' + d + '"]').css('cursor', 'pointer');
            $(obj).closest('span.label').remove();
            if (that.settings.selectedUserList != null) {
                for (var i = 0; i < that.settings.selectedUserList.length; i++) {
                    if (that.settings.selectedUserList[i].id == d) {
                        that.settings.selectedUserList.splice(i, 1);
                        break;
                    }
                }
            }
            that.dealChosedUserList();
            that.dealChoseUserBtnClass();
            if (that.settings.delSelectedUserCallback != null) {
                return that.settings.delSelectedUserCallback(data, obj);
            }
        }
        //把已选的人员列表转为id集合字符串，用于来作判断
        , dealChosedUserList: function () {
            var that = this;
            if (that.settings.selectedUserList != null) {
                that._selectedUserIds = '';
                var list = that.settings.selectedUserList;
                for (var i = 0; i < list.length; i++) {
                    that._selectedUserIds += list[i].id + ',';
                }
            }
        }
        //按钮事件绑定
        , bindActionClick: function () {
            var that = this;
            $('.userListBox a[data-action]').on('click', function () {

                var $this = $(this);
                if ($this.attr('data-action') == "choseUser") {//选择用户

                    if ($this.hasClass('btn-u-default')) {//已置灰
                        return false;
                    }

                    if (that.settings.isASingleSelectUser || that.settings.isASingleSelectUser == 2) {//单选且不关窗，这里把原selectedUserList设为空
                        /*var _isASingleSelectUser = false;
                         $(that.element).find('a[data-action="choseUser"]').each(function () {

                         if($(this).hasClass('btn-u-default')){
                         _isASingleSelectUser = true;
                         return false;
                         }
                         });
                         if(_isASingleSelectUser){
                         S_dialog.tips('只能选择一人！');
                         return false;
                         }*/
                        that.settings.selectedUserList = [];
                    }

                    if (that.settings.selectUserCallback != null) {
                        var $data = {};
                        $data.userId = $this.attr('data-userId');//用户账户ID
                        $data.companyUserId = $this.attr('data-companyUserId');//组织人员ID
                        $data.userName = $this.parent().parent().find('td:eq(0)').text();
                        $data.id = $this.parents('.ui-dialog-content').attr('id');

                        if (that.settings.selectedUserList == null) {

                            that.settings.selectedUserList = [];
                        }
                        that.settings.selectedUserList.push({id: $data.companyUserId, userName: $data.userName,userId:$data.userId});//每选中，就在selectedUserList添加人员记录
                        $data.selectedUserList = that.settings.selectedUserList;
                        that.addChosedUserList($data);
                        $data.selectedUserIds = that._selectedUserIds;
                        return that.settings.selectUserCallback($data, $this);
                    }
                }
            });

            if ($('.chosedUserBox').length > 0) {
                $('.chosedUserBox a[data-action="delChosedUser"]').on('click', function () {

                    that.delChosedUser(this);
                });
            }
        }

    });

    $.fn[pluginName] = function (options) {
        return this.each(function () {

            //if (!$.data(this, "plugin_" + pluginName)) {
            $.data(this, "plugin_" +
                pluginName, new Plugin(this, options));
            //}
        });
    };

})(jQuery, window, document);

/**
 * 收支总览-收支明细-菜单
 * Created by wrb on 2017/11/30.
 */
;(function ($, window, document, undefined) {

    "use strict";
    var pluginName = "m_payments_detail_menu",
        defaults = {
            $contentEle:null,
            $isFirstEnter:false//是否是第一次進來
        };

    // The actual plugin constructor
    function Plugin(element, options) {
        this.element = element;

        this.settings = $.extend({}, defaults, options);
        this._defaults = defaults;
        this._name = pluginName;
        this.init();
    }

    // Avoid Plugin.prototype conflicts
    $.extend(Plugin.prototype, {
        init: function () {
            var that = this;
            that.initHtmlData();
        }
        //初始化数据并加载模板
        ,initHtmlData:function () {
            var that = this;

            var html = template('m_payments/m_payments_detail_menu',{});
            $(that.element).html(html);

            var dataAction = $(that.element).find('li:eq(0)').attr('id');
            $(that.element).find('ul.secondary-menu-ul li[id="'+dataAction+'"]').addClass('active').siblings().removeClass('active');
            that.switchPage(dataAction);
            that.menuClickFun();

        }
        //菜单点击事件
        , menuClickFun:function () {
            var that = this;
            $(that.element).find('.secondary-menu-ul li a').on('click',function () {
                var id = $(this).parent().attr('id');
                $(this).parent().addClass('active').siblings().removeClass('active');
                that.switchPage(id);
            });
        }
        //切换页面
        , switchPage: function (dataAction) {
            var that = this;
            switch (dataAction) {
                case 'ledger'://台账
                    that.ledger();
                    break;
                case 'receivable'://应收
                    that.receivable();
                    break;
                case 'payable'://应付
                    that.payable();
                    break;
                default:
                    dataAction = 'ledger';
                    that.ledger();
                    break;
            }
        }
        //台账
        , ledger: function () {
            var that = this;
            $(that.element).find('#content-box').m_payments_ledger();
        }
        //应收
        , receivable:function () {
            var that = this;
            $(that.element).find('#content-box').m_payments_receivable();
        }
        //应付
        , payable:function () {
            var that = this;
            $(that.element).find('#content-box').m_payments_payable();
        }

    });

    $.fn[pluginName] = function (options) {
        return this.each(function () {

            //if (!$.data(this, "plugin_" + pluginName)) {
            $.data(this, "plugin_" +
                pluginName, new Plugin(this, options));
            //}
        });
    };

})(jQuery, window, document);

/**
 * 收支总览－收支明细-台账
 * Created by wrb on 2017/11/30.
 */
;(function ($, window, document, undefined) {

    "use strict";
    var pluginName = "m_payments_ledger",
        defaults = {
            $contentEle:null,
            $isFirstEnter:false//是否是第一次進來
        };

    // The actual plugin constructor
    function Plugin(element, options) {
        this.element = element;

        this.settings = $.extend({}, defaults, options);
        this._defaults = defaults;
        this._name = pluginName;
        this._companyList = null;//组织列表
        this._companyListBySelect = null;//筛选组织
        this._selectedOrg = null;//当前组织筛选-选中组织对象
        this._feeTypeList = [];//筛选组织-收支类型

        this._feeTypeNameList  = [];
        this._feeTypeParentNameList  = [];

        this._filterTimeData = {};//时间筛选
        this._filterData = {
            combineCompanyId:null,
            startDate:null,
            endDate:null,
            profitType:null,
            feeType:null,
            projectName:null,
            feeTypeList:[],
            feeTypeParentList:[],
            fromCompanyName:null
        };

        this.init();
    }

    // Avoid Plugin.prototype conflicts
    $.extend(Plugin.prototype, {
        init: function () {
            var that = this;
            that.initHtmlData();
        }
        //初始化数据并加载模板
        ,initHtmlData:function () {
            var that = this;
            var html = template('m_payments/m_payments_ledger',{});
            $(that.element).html(html);
            that.getFeeType();

            var timeOption = {};
            timeOption.selectTimeCallBack = function (data) {
                console.log(data);
                if(!isNullOrBlank(data.startTime))
                    that._filterData.startDate = data.startTime;

                if(!isNullOrBlank(data.endTime))
                    that._filterData.endDate = data.endTime;


                that.renderLedgerList();
            };
            $(that.element).find('.time-combination').m_filter_timeCombination(timeOption,true);

            var option = {};
            option.$selectedCallBack = function (data) {
                that._selectedOrg = data;
                if(that._selectedOrg==null){
                    that._filterData.combineCompanyId=that._companyList.id;
                }else{
                    that._filterData.combineCompanyId=that._selectedOrg.id;
                }
                that.renderLedgerList();
            };
            option.$renderCallBack = function () {
                that.bindBtnActionClick();
            };
            $(that.element).find('#selectOrg').m_org_chose_byTree(option);
        }
        //渲染台账list
        , renderLedgerList:function () {
            var that = this;

            var option = {};
            option.param = {};
            option.param = that._filterData;

            paginationFun({
                eleId: '#data-pagination-container',
                loadingId: '.data-list-box',
                url: restApi.url_getExpensesDetailLedger,
                params: option.param
            }, function (response) {

                if (response.code == '0') {

                    that._companyListBySelect = response.data.organization;
                    var html = template('m_payments/m_payments_ledger_list',{
                        dataList:response.data.data,
                        summary:response.data.StatisticDetailSummaryDTO
                    });
                    $(that.element).find('.data-list-container').html(html);

                    var startDateStr = response.data.startDateStr;
                    var endDateStr = response.data.endDateStr;
                    if(startDateStr!=null && startDateStr!=''){

                        $(that.element).find('input[name="startTime"]').val(startDateStr);
                    }
                    if(endDateStr!=null && endDateStr!=''){

                        $(that.element).find('input[name="endTime"]').val(endDateStr);
                    }

                    that.renderFeeTypeFilter();
                    that.renderSubFeeTypeFilter();
                    that.renderProfitTypeFilter();

                } else {
                    S_dialog.error(response.info);
                }
            });
        }
        /**
         * 获取收支分类
         * @param feeTypeParentList feeTypeParentList==null0为一级，feeTypeParentList!=null则查询此子类
         */
        ,getFeeType:function (callBack) {
            var that = this;
            var option = {};
            option.url = restApi.url_getTitleFilter;
            option.postData = {};
            option.postData.feeTypeParentList  = that._filterData.feeTypeParentList;
            m_ajax.postJson(option, function (response) {
                if (response.code == '0') {
                    that._feeTypeNameList  = response.data.feeTypeNameList;
                    that._feeTypeParentNameList  = response.data.feeTypeParentNameList;
                    if(callBack!=null)
                        callBack();
                } else {
                    S_dialog.error(response.info);
                }
            });
        }
        //渲染收支类型筛选
        ,renderFeeTypeFilter:function () {
            var that  = this;
            var option = {};
            var newList = [];

            if(that._feeTypeParentNameList!=null && that._feeTypeParentNameList.length>0){
                $.each(that._feeTypeParentNameList,function (i,item) {
                    newList.push({id:item.expTypeValue,name:item.expTypeValue});
                })
            }
            option.selectArr = newList;
            option.selectedArr = that._filterData.feeTypeParentList;
            option.eleId = 'filterFeeType';
            option.selectedCallBack = function (data) {
                console.log(data);
                that._filterData.feeTypeParentList = data;
                that.getFeeType(function () {
                    that.renderSubFeeTypeFilter(1);
                });
                that.renderLedgerList();
            };
            $(that.element).find('#filterFeeType').m_filter_select(option, true);
        }
        /**
         * 渲染收支子类筛选
         */
        ,renderSubFeeTypeFilter:function () {
            var that  = this;
            var option = {};
            var newList = [];

            if(that._feeTypeNameList!=null && that._feeTypeNameList.length>0){
                $.each(that._feeTypeNameList,function (i,item) {
                    var childList = [];
                    if(item.childList!=null && item.childList.length>0){
                        $.each(item.childList,function (subI,subItem) {
                            childList.push({id:item.expTypeValue+'_'+subItem.expTypeValue,name:subItem.expTypeValue});
                        });
                    }
                    newList.push({id:item.expTypeValue,name:item.expTypeValue,childList:childList});
                })
            }
            option.selectArr = newList;
            option.selectedArr = that._filterData.feeTypeList;
            option.eleId = 'filterSubFeeType';
            option.boxStyle = 'min-width:525px;';
            option.dialogWidth = '525';
            option.selectedCallBack = function (data) {
                console.log(data);
                that._filterData.feeTypeList = data;
                that.renderLedgerList();

            };
            $(that.element).find('#filterSubFeeType').m_filter_checkbox_select(option, true);
        }
        //渲染金额类型筛选
        ,renderProfitTypeFilter:function () {
            var that  = this;
            var option = {};
            var newList = [
                {name:'项目收支',id:'3'},
                {name:'非项目收支',id:'4'}
            ];
            option.selectArr = newList;
            option.selectedArr = [];
            if(!isNullOrBlank(that._filterData.profitType))
                option.selectedArr.push(that._filterData.profitType);

            option.eleId = 'filterProfitType';
            option.selectedCallBack = function (data) {
                if(data && data.length>0){
                    that._filterData.profitType = data[0];
                }else{
                    that._filterData.profitType = null;
                }
                that.renderLedgerList();
            };
            $(that.element).find('#filterProfitType').m_filter_select(option, true);
        }

        //按钮事件绑定
        , bindBtnActionClick:function () {
            var that = this;
            $(that.element).find('button[data-action]').off('click').on('click',function () {
                var $this = $(this);
                var dataAction = $this.attr('data-action');
                switch (dataAction){

                    case 'refreshBtn':
                        that.initHtmlData();
                        return false;
                        break;
                }
            });
        }
        //筛选hover事件
        , filterHover:function () {
            var that =  this;
            $(that.element).find('.data-list-box  th').hover(function () {
                if( $(this).find(' .icon-filter i').hasClass('icon-shaixuan') && !$(this).find(' .icon-filter i').hasClass('fc-v1-blue')){
                    $(this).find(' .icon-filter').show();
                }
            },function () {
                if( $(this).find(' .icon-filter i').hasClass('icon-shaixuan') && !$(this).find(' .icon-filter i').hasClass('fc-v1-blue')) {
                    $(this).find(' .icon-filter').hide();
                }
            });
        }
        //筛选事件
        , filterActionClick:function () {
            var that = this;
            $(that.element).find('a.icon-filter').each(function () {

                var $this = $(this);
                var id = $this.attr('id');
                switch (id){
                    case 'filterProfitType': //报销类型
                    case 'filterFromCompany'://收款组织
                    case 'filterToCompany'://付款组织

                        var currCheckValue = '',selectList = [];
                        if(id=='filterProfitType'){
                            currCheckValue = $(that.element).find('input[name="profitType"]').val();
                            selectList = [
                                {fieldName:'全部',fieldValue:''},
                                /*{fieldName:'收入',fieldValue:'1'},
                                {fieldName:'支出',fieldValue:'2'}*/
                                {fieldName:'项目收支',fieldValue:'3'},
                                {fieldName:'非项目收支',fieldValue:'4'}
                            ]
                        }else if(id=='filterFromCompany'){
                            currCheckValue = $(that.element).find('input[name="fromCompany"]').val();
                            selectList.push({fieldName:'全部',fieldValue:''});
                            if(that._companyListBySelect!=null && that._companyListBySelect.fromCompany!=null && that._companyListBySelect.fromCompany.length>0){
                                $.each(that._companyListBySelect.fromCompany, function (i, item) {
                                    selectList.push({fieldValue: item.companyName, fieldName: item.companyName});
                                });
                            }
                        }else if(id=='filterToCompany'){
                            currCheckValue = $(that.element).find('input[name="toCompany"]').val();
                            selectList.push({fieldName:'全部',fieldValue:''});
                            if(that._companyListBySelect!=null && that._companyListBySelect.toCompany!=null && that._companyListBySelect.toCompany.length>0){
                                $.each(that._companyListBySelect.toCompany, function (i, item) {
                                    selectList.push({fieldValue: item.companyName, fieldName: item.companyName});
                                });
                            }
                        }
                        if(currCheckValue!=''){
                            $this.closest('th').find('.icon-filter i').addClass('fc-v1-blue');
                            $this.closest('th').find('.icon-filter').show();
                        }

                        var iHtml = template('m_filterableField/m_filter_select',{
                            currCheckValue:currCheckValue,
                            selectList:selectList
                        });
                        var iTextObj = iHtml.getTextWH();
                        var iWHObj = setDialogWH(iTextObj.width,iTextObj.height);

                        $this.on('click',function () {
                            S_dialog.dialog({
                                contentEle: 'dialogOBox',
                                ele:id,
                                lock: 2,
                                align: 'bottom right',
                                quickClose:true,
                                noTriangle:true,
                                width: iWHObj.width,
                                height:iWHObj.height,
                                tPadding: '0px',
                                url: rootPath+'/assets/module/m_common/m_dialog.html'

                            },function(d){//加载html后触发

                                var dialogEle = 'div[id="content:'+d.id+'"] .dialogOBox';
                                $(dialogEle).html(iHtml);

                                $(dialogEle).find('.dropdown-menu a').on('click',function () {

                                    var val = $(this).attr('data-state-no');
                                    if(id=='filterProfitType'){
                                        $(that.element).find('input[name="profitType"]').val(val);
                                    }else if(id=='filterFromCompany'){
                                        $(that.element).find('input[name="fromCompany"]').val(val);
                                    }else if(id=='filterToCompany'){
                                        $(that.element).find('input[name="toCompany"]').val(val);
                                    }
                                    that.renderLedgerList();
                                    S_dialog.close($(dialogEle));
                                });
                            });
                        });

                        break;
                    case 'filterProjectName': //项目
                        var txtVal = '',placeholder='';
                        if(id=='filterProjectName'){
                            txtVal = $('input[name="projectName"]').val();
                            placeholder = '请输入项目名称';
                        }

                        if(txtVal!=''){
                            $this.closest('th').find('.icon-filter i').addClass('fc-v1-blue');
                            $this.closest('th').find('.icon-filter').show();
                        }
                        $this.on('click',function () {
                            S_dialog.dialog({
                                contentEle: 'dialogOBox',
                                ele:id,
                                lock: 2,
                                align: 'bottom right',
                                quickClose:true,
                                noTriangle:true,
                                width: '220',
                                minHeight:'100',
                                tPadding: '0px',
                                url: rootPath+'/assets/module/m_common/m_dialog.html'


                            },function(d){//加载html后触发

                                var dialogEle = 'div[id="content:'+d.id+'"] .dialogOBox';


                                var iHtml = template('m_filterableField/m_filter_input',{
                                    txtVal:txtVal,
                                    placeholder:placeholder
                                });

                                $(dialogEle).html(iHtml);
                                $(dialogEle).find('button[data-action="sureFilter"]').on('click',function () {
                                    var val = $(dialogEle).find('input[name="txtVal"]').val();

                                    if(id=='filterProjectName'){
                                        $(that.element).find('input[name="projectName"]').val(val);
                                    }
                                    that.renderLedgerList();

                                    S_dialog.close($(dialogEle));
                                });

                            });
                        });

                        break;
                    case 'filterSubFeeType'://收支类型

                        if(that._feeTypeList!=null && that._feeTypeList.length>0){
                            $this.closest('th').find('.icon-filter i').addClass('fc-v1-blue');
                            $this.closest('th').find('.icon-filter').show();
                        }

                        $this.on('click',function () {
                            var option = {};
                            option.$eleId = 'filterFeeType';
                            option.$feeTypeList = that._feeTypeList;
                            option.$okCallBack = function (data) {
                                that._feeTypeList = data;
                                that.renderLedgerList();
                            };
                            $('body').m_payments_setFields(option);
                            return false;
                        });
                        break;
                }

            });
        }
    });

    $.fn[pluginName] = function (options) {
        return this.each(function () {

            //if (!$.data(this, "plugin_" + pluginName)) {
            $.data(this, "plugin_" +
                pluginName, new Plugin(this, options));
            //}
        });
    };

})(jQuery, window, document);

/**
 * 应收或应付详情
 * Created by wrb on 2017/12/8.
 */
;(function ($, window, document, undefined) {

    "use strict";
    var pluginName = "m_payments_list_detail",
        defaults = {
            $title:null,
            $isDialog:true,
            $type:1,//默认是1=应收,2=应付
            $id:null//报销ID
        };

    // The actual plugin constructor
    function Plugin(element, options) {
        this.element = element;

        this.settings = $.extend({}, defaults, options);
        this._defaults = defaults;
        this._name = pluginName;

        this.init();
    }

    // Avoid Plugin.prototype conflicts
    $.extend(Plugin.prototype, {
        init: function () {
            var that = this;
            that.initHtmlData();
        },
        //初始化数据
        initHtmlData:function (callBack) {
            var that = this;
            if(that.settings.$isDialog){//以弹窗编辑
                S_dialog.dialog({
                    title: that.settings.$title||'详情',
                    contentEle: 'dialogOBox',
                    lock: 3,
                    width: '800',
                    minHeight:'125',
                    height:'600',
                    tPadding: '0px',
                    url: rootPath+'/assets/module/m_common/m_dialog.html',
                    cancelText:'关闭',
                    cancel:function () {
                    }

                },function(d){//加载html后触发

                    that.element = 'div[id="content:'+d.id+'"] .dialogOBox';
                    that.initHtmlTemplate();

                });
            }else{//不以弹窗编辑
                that.initHtmlTemplate();
            }
        }
        //生成html
        ,initHtmlTemplate:function () {
            var that = this;
            var options={};
            if(that.settings.$type==2){
                options.url=restApi.url_getPaymentDetail+'/'+that.settings.$id;
            }else{
                options.url=restApi.url_getReceivableDetail+'/'+that.settings.$id;
            }
            m_ajax.post(options,function (response) {
                if(response.code=='0'){
                    var html = template('m_payments/m_payments_list_detail',{
                        detailData:response.data,
                        type:that.settings.$type
                    });
                    $(that.element).html(html);
                }else {
                    S_dialog.error(response.info);
                }
            })

        }

    });

    $.fn[pluginName] = function (options) {
        return this.each(function () {

            //if (!$.data(this, "plugin_" + pluginName)) {
            $.data(this, "plugin_" +
                pluginName, new Plugin(this, options));
            //}
        });
    };

})(jQuery, window, document);



/**
 * 收支总览－收支明细-应付
 * Created by wrb on 2017/11/30.
 */
;(function ($, window, document, undefined) {

    "use strict";
    var pluginName = "m_payments_payable",
        defaults = {
            $contentEle:null,
            $isFirstEnter:false//是否是第一次進來
        };

    // The actual plugin constructor
    function Plugin(element, options) {
        this.element = element;

        this.settings = $.extend({}, defaults, options);
        this._defaults = defaults;
        this._name = pluginName;
        this._companyList = null;//组织列表
        this._companyListBySelect = null;//筛选组织
        this._selectedOrg = null;//当前组织筛选-选中组织对象
        this.init();
    }

    // Avoid Plugin.prototype conflicts
    $.extend(Plugin.prototype, {
        init: function () {
            var that = this;
            that.initHtmlData();
        }
        //初始化数据并加载模板
        ,initHtmlData:function () {
            var that = this;
            var html = template('m_payments/m_payments_payable',{});
            $(that.element).html(html);
            var option = {};
            option.$selectedCallBack = function (data) {
                that._selectedOrg = data;
                that.renderPayableList();
            };
            option.$renderCallBack = function () {
                that.bindSetTime();
                that.bindChoseTime();
                that.bindRefreshBtn();
            };
            $(that.element).find('#selectOrg').m_org_chose_byTree(option);
        }
        //渲染台账list
        ,renderPayableList:function () {
            var that = this;

            var option = {};
            option.param = {};
            option.param.paymentId = that._selectedOrg.id;
            var startDate = $(that.element).find('#ipt_startTime').val();
            var endDate = $(that.element).find('#ipt_endTime').val();
            if(startDate!=''){
                option.param.startDate=startDate;
            }
            if(endDate!=''){
                option.param.endDate=endDate;
            }

            option.param.feeType=$(that.element).find('input[name="feeType"]').val();
            option.param.associatedOrg=$(that.element).find('input[name="associatedOrg"]').val();
            option.param.projectName=$(that.element).find('input[name="projectName"]').val();

            paginationFun({
                eleId: '#data-pagination-container',
                loadingId: '.data-list-box',
                url: restApi.url_getPayment,
                params: option.param
            }, function (response) {

                if (response.code == '0') {

                    that._companyListBySelect = response.data.organization;
                    var html = template('m_payments/m_payments_payable_list',{
                        dataList:response.data.data,
                        paymentSum:response.data.paymentSum
                    });
                    $(that.element).find('.data-list-container').html(html);
                    that.bindViewDetail();
                    that.bindGoExpensesPage();
                    that.filterHover();
                    that.filterActionClick();

                } else {
                    S_dialog.error(response.info);
                }
            });
        }
        //快捷时间
        , bindSetTime: function () {
            var that = this;
            $(that.element).find('a[data-action="setTime"]').click(function () {
                var days = $(this).attr('data-days');
                var endTime = getNowDate();
                var startTime = '';//moment(endTime).subtract(days, 'days').format('YYYY-MM-DD');

                if (endTime != null && endTime.indexOf('-') > -1) {

                    var month = endTime.substring(5, 7) - 0;//当前月份

                    if (days == 30) {//一个月

                        startTime = endTime.substring(0, 8) + '01';

                    } else if (days == 90) {//一季度

                        if (month >= 1 && month <= 3) {//第一季度
                            startTime = endTime.substring(0, 5) + '01-01';
                        } else if (month >= 4 && month <= 6) {//第二季度
                            startTime = endTime.substring(0, 5) + '04-01';
                        } else if (month >= 7 && month <= 9) {//第三季度
                            startTime = endTime.substring(0, 5) + '07-01';
                        } else if (month >= 10 && month <= 12) {//第四季度
                            startTime = endTime.substring(0, 5) + '10-01';
                        }

                    } else if (days == 180) {//半年

                        if (month >= 1 && month <= 6) {//前半年
                            startTime = endTime.substring(0, 5) + '01-01';
                        } else if (month >= 7 && month <= 12) {//后半年
                            startTime = endTime.substring(0, 5) + '07-01';
                        }

                    } else if (days == 360) {//一年

                        startTime = endTime.substring(0, 5) + '01-01';
                    }

                }

                $('#ipt_startTime').val(startTime);
                $('#ipt_endTime').val(endTime);
                that.renderPayableList();
                $(this).blur();
            });
        }
        //时间绑定事件
        , bindChoseTime:function () {
            var that = this;
            $(that.element).find('input[name="startTime"]').off('click').on('click',function () {

                var endTime = $(that.element).find('input[name="endTime"]').val();
                var onpicked =function(dp){

                    that.renderPayableList();

                };
                WdatePicker({el:this,maxDate:endTime,onpicked:onpicked})
            });
            $(that.element).find('input[name="endTime"]').off('click').on('click',function () {

                var startTime = $(that.element).find('input[name="startTime"]').val();
                var onpicked =function(dp){

                    that.renderPayableList();

                };
                WdatePicker({el:this,minDate:startTime,onpicked:onpicked})
            });
            $(that.element).find('i.fa-calendar').off('click').on('click',function () {
                $(this).closest('.input-group').find('input').click();
            });
        }
        , bindRefreshBtn:function () {
            var that = this;
            $(that.element).find('button[data-action="refreshBtn"]').on("click", function (e) {

                that.initHtmlData();
                return false;
            })
        }
        //查看详情
        ,bindViewDetail:function () {
            var that = this;
            $(that.element).find('a[data-action="viewDetail"]').on('click',function () {
                var option = {};
                option.$title = '应付详情';
                option.$id = $(this).attr('data-id');
                option.$type = 2;
                $('body').m_payments_list_detail(option);
            });
        }
        //跳转到收支管理
        ,bindGoExpensesPage:function () {
            var that = this;
            $(that.element).find('a[data-action="goExpensesPage"]').off('click').on('click',function () {
                var projectId = $(this).attr('data-project-id');
                var projectName = $(this).text();
                var type = $(this).attr('data-type');
                location.hash = '/projectDetails/incomeExpenditure?type='+type+'&id='+projectId+'&projectName='+encodeURI(projectName);
                return false;
            });
        }
        //筛选hover事件
        ,filterHover:function () {
            var that =  this;
            $(that.element).find('.data-list-box  th').hover(function () {
                if( $(this).find(' .icon-filter i').hasClass('icon-shaixuan') && !$(this).find(' .icon-filter i').hasClass('fc-v1-blue')){
                    $(this).find(' .icon-filter').show();
                }
            },function () {
                if( $(this).find(' .icon-filter i').hasClass('icon-shaixuan') && !$(this).find(' .icon-filter i').hasClass('fc-v1-blue')) {
                    $(this).find(' .icon-filter').hide();
                }
            });
        }
        //筛选事件
        ,filterActionClick:function () {
            var that = this;
            $(that.element).find('a.icon-filter').each(function () {

                var $this = $(this);
                var id = $this.attr('id');
                switch (id){
                    case 'filterFeeType'://收支类型
                    case 'filterAssociatedOrg'://关联组织

                        var currCheckValue = '',selectList = [];
                        if(id=='filterFeeType'){
                            currCheckValue = $(that.element).find('input[name="feeType"]').val()
                            selectList = [
                                {fieldName:'全部',fieldValue:''},
                                //{fieldName:'合同回款',fieldValue:'1'},
                                {fieldName:'技术审查费',fieldValue:'2'},
                                {fieldName:'合作设计费',fieldValue:'3'},
                                {fieldName:'其他收支',fieldValue:'4'}
                            ]
                        }else if(id=='filterAssociatedOrg'){
                            currCheckValue = $(that.element).find('input[name="associatedOrg"]').val()
                            selectList.push({fieldName:'全部',fieldValue:''});
                            /*if(that._companyList!=null && that._companyList.length>0){
                                $.each(that._companyList, function (i, item) {
                                    selectList.push({fieldValue: item.id, fieldName: item.companyName});
                                });
                            }*/
                            if(that._companyListBySelect!=null && Object.getOwnPropertyNames(that._companyListBySelect).length>0){
                                $.each(that._companyListBySelect, function (key, value) {
                                    selectList.push({fieldValue: key, fieldName: value});
                                });
                            }
                        }
                        if(currCheckValue!=''){
                            $this.closest('th').find('.icon-filter i').addClass('fc-v1-blue');
                            $this.closest('th').find('.icon-filter').show();
                        }
                        $this.on('click',function () {
                            S_dialog.dialog({
                                contentEle: 'dialogOBox',
                                ele:id,
                                lock: 2,
                                align: 'bottom right',
                                quickClose:true,
                                noTriangle:true,
                                width: '180',
                                height:'195',
                                tPadding: '0px',
                                url: rootPath+'/assets/module/m_common/m_dialog.html'

                            },function(d){//加载html后触发

                                var dialogEle = 'div[id="content:'+d.id+'"] .dialogOBox';

                                var iHtml = template('m_filterableField/m_filter_select',{
                                    currCheckValue:currCheckValue,
                                    selectList:selectList
                                });
                                $(dialogEle).html(iHtml);
                                $(dialogEle).find('.dropdown-menu a').on('click',function () {

                                    var val = $(this).attr('data-state-no');
                                    if(id=='filterFeeType'){
                                        $(that.element).find('input[name="feeType"]').val(val);
                                    }else if(id=='filterAssociatedOrg'){
                                        $(that.element).find('input[name="associatedOrg"]').val(val);
                                    }
                                    that.renderPayableList();
                                    S_dialog.close($(dialogEle));
                                });
                            });
                        });

                        break;
                    case 'filterProjectName': //项目
                        var txtVal = '',placeholder='';
                        if(id=='filterProjectName'){
                            txtVal = $('input[name="projectName"]').val();
                            placeholder = '请输入项目名称';
                        }

                        if(txtVal!=''){
                            $this.closest('th').find('.icon-filter i').addClass('fc-v1-blue');
                            $this.closest('th').find('.icon-filter').show();
                        }
                        $this.on('click',function () {
                            S_dialog.dialog({
                                contentEle: 'dialogOBox',
                                ele:id,
                                lock: 2,
                                align: 'bottom right',
                                quickClose:true,
                                noTriangle:true,
                                width: '220',
                                minHeight:'100',
                                tPadding: '0px',
                                url: rootPath+'/assets/module/m_common/m_dialog.html'


                            },function(d){//加载html后触发

                                var dialogEle = 'div[id="content:'+d.id+'"] .dialogOBox';


                                var iHtml = template('m_filterableField/m_filter_input',{
                                    txtVal:txtVal,
                                    placeholder:placeholder
                                });

                                $(dialogEle).html(iHtml);
                                $(dialogEle).find('button[data-action="sureFilter"]').on('click',function () {
                                    var val = $(dialogEle).find('input[name="txtVal"]').val();

                                    if(id=='filterProjectName'){
                                        $(that.element).find('input[name="projectName"]').val(val);
                                    }
                                    that.renderPayableList();

                                    S_dialog.close($(dialogEle));
                                });

                            });
                        });

                        break;
                }

            });
        }

    });

    $.fn[pluginName] = function (options) {
        return this.each(function () {

            //if (!$.data(this, "plugin_" + pluginName)) {
            $.data(this, "plugin_" +
                pluginName, new Plugin(this, options));
            //}
        });
    };

})(jQuery, window, document);

/**
 * 收支总览-利润报表
 * Created by wrb on 2017/11/30.
 */
;(function ($, window, document, undefined) {

    "use strict";
    var pluginName = "m_payments_profitStatement",
        defaults = {
            $contentEle:null,
            $isFirstEnter:false//是否是第一次進來
        };

    // The actual plugin constructor
    function Plugin(element, options) {
        this.element = element;

        this.settings = $.extend({}, defaults, options);
        this._defaults = defaults;
        this._name = pluginName;
        this._selectedOrg = null;//当前组织筛选-选中组织对象
        this.init();
    }

    // Avoid Plugin.prototype conflicts
    $.extend(Plugin.prototype, {
        init: function () {
            var that = this;
            that.initHtmlData();
        }
        //初始化数据并加载模板
        ,initHtmlData:function () {
            var that = this;
            var html = template('m_payments/m_payments_profitStatement',{currentYear:new Date().getFullYear()});
            $(that.element).html(html);
            var option = {};
            option.$selectedCallBack = function (data) {
                that._selectedOrg = data;
                that.renderProfitList();
            };
            option.$renderCallBack = function () {
                that.bindDateAction();
                that.bindRefreshBtn();
            };
            $(that.element).find('#selectOrg').m_org_chose_byTree(option);
        }
        //渲染列表
        ,renderProfitList:function () {
            var that = this;
            var option = {};
            option.url = restApi.url_getProfitDetail;
            option.postData = {};
            option.postData.combineCompanyId=that._selectedOrg.id;
            var selectedDate = $(that.element).find('#ipt_date').val();
            if(selectedDate!=''){
                selectedDate=selectedDate.substring(0,4);
                option.postData.date=selectedDate;
            }else{
                selectedDate=new data().getFullYear();
                option.postData.date=new data().getFullYear();
            }
            m_ajax.postJson(option, function (response) {
                if (response.code == '0') {

                    var html = template('m_payments/m_payments_profitStatement_list',{
                        profitData:response.data,
                        selectedDate:selectedDate
                    });
                    $(that.element).find('#profitBox').html(html);
                    that.bindExpandFeeItem();

                } else {
                    S_dialog.error(response.info);
                }
            });
        }
        //展开子项
        , bindExpandFeeItem:function () {

            var that = this;
            $(that.element).find('a[data-action="expand"]').on('click',function () {
                var $this = $(this);
                var dataType = $this.attr('data-type');

                if($this.find('i').hasClass('fa-angle-right')){
                    $this.find('i').removeClass('fa-angle-right').addClass('fa-angle-down');
                    $this.parents('table').find('tr[data-type="'+dataType+'"]').show();
                }else{
                    $this.find('i').removeClass('fa-angle-down').addClass('fa-angle-right');
                    $this.parents('table').find('tr[data-type="'+dataType+'"]').hide();
                }

            });
        }
        //时间事件
        , bindDateAction:function () {

            var that = this;
            $(that.element).find('a[data-action="setTime"]').on('click',function () {
                var $this = $(this);
                var dataType = $this.attr('data-type');

                if(dataType=='0'){
                    $(that.element).find('#ipt_date').val(new Date().getFullYear()+'年');
                }else{
                    $(that.element).find('#ipt_date').val((new Date().getFullYear())-1+'年');
                }
                that.renderProfitList();
            });
            $(that.element).find('input[id="ipt_date"]').off('click').on('click',function () {

                var endTime = (new Date().getFullYear());
                var onpicked =function(dp){

                    that.renderProfitList();

                };
                WdatePicker({el:this,maxDate:endTime,dateFmt:'yyyy年',isShowClear:false,onpicked:onpicked})
            });
            $(that.element).find('i.fa-calendar').off('click').on('click',function () {
                $(this).closest('.input-group').find('input').click();
            });
        }
        , bindRefreshBtn:function () {
            var that = this;
            $(that.element).find('button[data-action="refreshBtn"]').on("click", function (e) {

                that.initHtmlData();
                return false;
            })
        }

    });

    $.fn[pluginName] = function (options) {
        return this.each(function () {

            //if (!$.data(this, "plugin_" + pluginName)) {
            $.data(this, "plugin_" +
                pluginName, new Plugin(this, options));
            //}
        });
    };

})(jQuery, window, document);

/**
 * 项目－收支明细
 * Created by wrb on 2018/8/8.
 */
;(function ($, window, document, undefined) {

    "use strict";
    var pluginName = "m_payments_projectCost",
        defaults = {
            projectId:null//项目ID
        };

    // The actual plugin constructor
    function Plugin(element, options) {
        this.element = element;

        this.settings = $.extend({}, defaults, options);
        this._defaults = defaults;
        this._name = pluginName;
        this._currentCompanyId = window.currentCompanyId;//当前组织ID
        this._currentCompanyUserId = window.currentCompanyUserId;//当前员工ID
        this._selectedOrg = null;//当前组织筛选-选中组织对象
        this._filterTimeData = {};//时间筛选
        this.init();
    }

    // Avoid Plugin.prototype conflicts
    $.extend(Plugin.prototype, {
        init: function () {
            var that = this;
            that.renderPage();
        }
        //初始化数据,生成html
        ,renderPage:function () {
            var that = this;
            var html = template('m_payments/m_payments_projectCost',{});
            $(that.element).html(html);
            var option = {};
            option.$selectedCallBack = function (data) {
                that._selectedOrg = data;
                that.renderList();
            };
            option.$renderCallBack = function () {

            };
            $(that.element).find('#selectOrg').m_org_chose_byTree(option);

            var timeOption = {};
            timeOption.selectTimeCallBack = function (data) {
                console.log(data);
                that._filterTimeData = data;
                that.renderList();
            };
            $(that.element).find('.time-combination').m_filter_timeCombination(timeOption,true);
        }

        ,renderList:function () {
            var that = this;
            var option = {};
            option.param = {};
            option.param.startDate = that._filterTimeData.startTime;
            option.param.endDate = that._filterTimeData.endTime;
            option.param.companyId = that._selectedOrg.id;
            paginationFun({
                eleId: '#data-pagination-container',
                loadingId: '.data-list-box',
                url: restApi.url_listProjectCostSummary,
                params: option.param
            }, function (response) {

                if (response.code == '0') {

                    var html = template('m_payments/m_payments_projectCost_list',{
                        dataList:response.data.data
                    });
                    $(that.element).find('.data-list-container').html(html);
                    that.bindActionClick();
                } else {
                    S_dialog.error(response.info);
                }
            });

        }
        //按钮事件绑定
        , bindActionClick:function () {
            var that = this;
            $(that.element).find('button[data-action]').on('click',function () {
                var $this = $(this);
                var dataAction = $this.attr('data-action');
                switch (dataAction){

                    case 'refreshBtn':
                        that.renderPage();
                        return false;
                        break;
                }
            });
        }

    });

    /*
     1.一般初始化（缓存单例）： $('#id').pluginName(initOptions);
     2.强制初始化（无视缓存）： $('#id').pluginName(initOptions,true);
     3.调用方法： $('#id').pluginName('methodName',args);
     */
    $.fn[pluginName] = function (options, args) {
        var instance;
        var funcResult;
        var jqObj = this.each(function () {

            //从缓存获取实例
            instance = $.data(this, "plugin_" + pluginName);

            if (options === undefined || options === null || typeof options === "object") {

                var opts = $.extend(true, {}, defaults, options);

                //options作为初始化参数，若args===true则强制重新初始化，否则根据缓存判断是否需要初始化
                if (args === true) {
                    instance = new Plugin(this, opts);
                } else {
                    if (instance === undefined || instance === null)
                        instance = new Plugin(this, opts);
                }

                //写入缓存
                $.data(this, "plugin_" + pluginName, instance);
            }
            else if (typeof options === "string" && typeof instance[options] === "function") {

                //options作为方法名，args则作为方法要调用的参数
                //如果方法没有返回值，funcReuslt为undefined
                funcResult = instance[options].call(instance, args);
            }
        });

        return funcResult === undefined ? jqObj : funcResult;
    };

})(jQuery, window, document);

/**
 * 收支总览－收支明细-应收
 * Created by wrb on 2017/11/30.
 */
;(function ($, window, document, undefined) {

    "use strict";
    var pluginName = "m_payments_receivable",
        defaults = {
            $contentEle:null,
            $isFirstEnter:false//是否是第一次進來
        };

    // The actual plugin constructor
    function Plugin(element, options) {
        this.element = element;

        this.settings = $.extend({}, defaults, options);
        this._defaults = defaults;
        this._name = pluginName;
        this._companyList = null;//组织列表
        this._companyListBySelect = null;//筛选组织
        this._selectedOrg = null;//当前组织筛选-选中组织对象
        this.init();
    }

    // Avoid Plugin.prototype conflicts
    $.extend(Plugin.prototype, {
        init: function () {
            var that = this;
            that.initHtmlData();
        }
        //初始化数据并加载模板
        ,initHtmlData:function () {
            var that = this;
            var html = template('m_payments/m_payments_receivable',{});
            $(that.element).html(html);
            var option = {};
            option.$selectedCallBack = function (data) {
                that._selectedOrg = data;
                that.renderReceivableList();
            };
            option.$renderCallBack = function () {
                that.bindSetTime();
                that.bindChoseTime();
                that.bindRefreshBtn();
            };
            $(that.element).find('#selectOrg').m_org_chose_byTree(option);

        }
        //渲染应收list
        ,renderReceivableList:function () {
            var that = this;
            var option = {};
            option.param = {};
            option.param.receivableId=that._selectedOrg.id;
            var startDate=$(that.element).find('#ipt_startTime').val();
            var endDate=$(that.element).find('#ipt_endTime').val();
            if(startDate!=''){
                option.param.startDate=startDate;
            }
            if(endDate!=''){
                option.param.endDate=endDate;
            }

            option.param.feeType=$(that.element).find('input[name="feeType"]').val();
            option.param.associatedOrg=$(that.element).find('input[name="associatedOrg"]').val();
            option.param.projectName=$(that.element).find('input[name="projectName"]').val();

            paginationFun({
                eleId: '#data-pagination-container',
                loadingId: '.data-list-box',
                url: restApi.url_getReceivable,
                params: option.param
            }, function (response) {

                if (response.code == '0') {

                    that._companyListBySelect = response.data.organization;
                    var html = template('m_payments/m_payments_receivable_list',{
                        dataList:response.data.data,
                        receivaleSum:response.data.receivaleSum
                    });
                    $(that.element).find('.data-list-container').html(html);
                    that.bindViewDetail();
                    that.bindGoExpensesPage();
                    that.filterHover();
                    that.filterActionClick();

                } else {
                    S_dialog.error(response.info);
                }
            });
        }
        //快捷时间
        , bindSetTime: function () {
            var that = this;
            $(that.element).find('a[data-action="setTime"]').click(function () {
                var days = $(this).attr('data-days');
                var endTime = getNowDate();
                var startTime = '';//moment(endTime).subtract(days, 'days').format('YYYY-MM-DD');

                if (endTime != null && endTime.indexOf('-') > -1) {

                    var month = endTime.substring(5, 7) - 0;//当前月份

                    if (days == 30) {//一个月

                        startTime = endTime.substring(0, 8) + '01';

                    } else if (days == 90) {//一季度

                        if (month >= 1 && month <= 3) {//第一季度
                            startTime = endTime.substring(0, 5) + '01-01';
                        } else if (month >= 4 && month <= 6) {//第二季度
                            startTime = endTime.substring(0, 5) + '04-01';
                        } else if (month >= 7 && month <= 9) {//第三季度
                            startTime = endTime.substring(0, 5) + '07-01';
                        } else if (month >= 10 && month <= 12) {//第四季度
                            startTime = endTime.substring(0, 5) + '10-01';
                        }

                    } else if (days == 180) {//半年

                        if (month >= 1 && month <= 6) {//前半年
                            startTime = endTime.substring(0, 5) + '01-01';
                        } else if (month >= 7 && month <= 12) {//后半年
                            startTime = endTime.substring(0, 5) + '07-01';
                        }

                    } else if (days == 360) {//一年

                        startTime = endTime.substring(0, 5) + '01-01';
                    }

                }

                $('#ipt_startTime').val(startTime);
                $('#ipt_endTime').val(endTime);
                that.renderReceivableList();
                $(this).blur();
            });
        }
        //时间绑定事件
        , bindChoseTime:function () {
            var that = this;
            $(that.element).find('input[name="startTime"]').off('click').on('click',function () {

                var endTime = $(that.element).find('input[name="endTime"]').val();
                var onpicked =function(dp){

                    that.renderReceivableList();

                };
                WdatePicker({el:this,maxDate:endTime,onpicked:onpicked})
            });
            $(that.element).find('input[name="endTime"]').off('click').on('click',function () {

                var startTime = $(that.element).find('input[name="startTime"]').val();
                var onpicked =function(dp){

                    that.renderReceivableList();

                };
                WdatePicker({el:this,minDate:startTime,onpicked:onpicked})
            });
            $(that.element).find('i.fa-calendar').off('click').on('click',function () {
                $(this).closest('.input-group').find('input').click();
            });
        }
        , bindRefreshBtn:function () {
            var that = this;
            $(that.element).find('button[data-action="refreshBtn"]').on("click", function (e) {

                that.initHtmlData();
                return false;
            })
        }
        //查看详情
        ,bindViewDetail:function () {
            var that = this;
            $(that.element).find('a[data-action="viewDetail"]').on('click',function () {
                var option = {};
                option.$title = '应收详情';
                option.$id = $(this).attr('data-id');
                option.$type = 1;
                $('body').m_payments_list_detail(option);
            });
        }
        //跳转到收支管理
        ,bindGoExpensesPage:function () {
            var that = this;
            $(that.element).find('a[data-action="goExpensesPage"]').off('click').on('click',function () {
                var projectId = $(this).attr('data-project-id');
                var projectName = $(this).text();
                var type = $(this).attr('data-type');
                location.hash = '/projectDetails/incomeExpenditure?type='+type+'&id='+projectId+'&projectName='+encodeURI(projectName);
                return false;
            });
        }
        //筛选hover事件
        ,filterHover:function () {
            var that =  this;
            $(that.element).find('.data-list-box  th').hover(function () {
                if( $(this).find(' .icon-filter i').hasClass('icon-shaixuan') && !$(this).find(' .icon-filter i').hasClass('fc-v1-blue')){
                    $(this).find(' .icon-filter').show();
                }
            },function () {
                if( $(this).find(' .icon-filter i').hasClass('icon-shaixuan') && !$(this).find(' .icon-filter i').hasClass('fc-v1-blue')) {
                    $(this).find(' .icon-filter').hide();
                }
            });
        }
        //筛选事件
        ,filterActionClick:function () {
            var that = this;
            $(that.element).find('a.icon-filter').each(function () {

                var $this = $(this);
                var id = $this.attr('id');
                switch (id){
                    case 'filterFeeType'://收支类型
                    case 'filterAssociatedOrg'://关联组织

                        var currCheckValue = '',selectList = [];
                        if(id=='filterFeeType'){
                            currCheckValue = $(that.element).find('input[name="feeType"]').val()
                            selectList = [
                                {fieldName:'全部',fieldValue:''},
                                {fieldName:'合同回款',fieldValue:'1'},
                                {fieldName:'技术审查费',fieldValue:'2'},
                                {fieldName:'合作设计费',fieldValue:'3'},
                                {fieldName:'其他收支',fieldValue:'4'}
                            ]
                        }else if(id=='filterAssociatedOrg'){
                            currCheckValue = $(that.element).find('input[name="associatedOrg"]').val()
                            selectList.push({fieldName:'全部',fieldValue:''});
                            /*if(that._companyList!=null && that._companyList.length>0){
                                $.each(that._companyList, function (i, item) {
                                    selectList.push({fieldValue: item.id, fieldName: item.companyName});
                                });
                            }*/
                            if(that._companyListBySelect!=null && Object.getOwnPropertyNames(that._companyListBySelect).length>0){
                                $.each(that._companyListBySelect, function (key, value) {
                                    selectList.push({fieldValue: key, fieldName: value});
                                });
                            }
                        }
                        if(currCheckValue!=''){
                            $this.closest('th').find('.icon-filter i').addClass('fc-v1-blue');
                            $this.closest('th').find('.icon-filter').show();
                        }
                        $this.on('click',function () {
                            S_dialog.dialog({
                                contentEle: 'dialogOBox',
                                ele:id,
                                lock: 2,
                                align: 'bottom right',
                                quickClose:true,
                                noTriangle:true,
                                width: '180',
                                height:'195',
                                tPadding: '0px',
                                url: rootPath+'/assets/module/m_common/m_dialog.html'

                            },function(d){//加载html后触发

                                var dialogEle = 'div[id="content:'+d.id+'"] .dialogOBox';

                                var iHtml = template('m_filterableField/m_filter_select',{
                                    currCheckValue:currCheckValue,
                                    selectList:selectList
                                });
                                $(dialogEle).html(iHtml);
                                $(dialogEle).find('.dropdown-menu a').on('click',function () {

                                    var val = $(this).attr('data-state-no');
                                    if(id=='filterFeeType'){
                                        $(that.element).find('input[name="feeType"]').val(val);
                                    }else if(id=='filterAssociatedOrg'){
                                        $(that.element).find('input[name="associatedOrg"]').val(val);
                                    }
                                    that.renderReceivableList();
                                    S_dialog.close($(dialogEle));
                                });
                            });
                        });

                        break;
                    case 'filterProjectName': //项目
                        var txtVal = '',placeholder='';
                        if(id=='filterProjectName'){
                            txtVal = $('input[name="projectName"]').val();
                            placeholder = '请输入项目名称';
                        }

                        if(txtVal!=''){
                            $this.closest('th').find('.icon-filter i').addClass('fc-v1-blue');
                            $this.closest('th').find('.icon-filter').show();
                        }
                        $this.on('click',function () {
                            S_dialog.dialog({
                                contentEle: 'dialogOBox',
                                ele:id,
                                lock: 2,
                                align: 'bottom right',
                                quickClose:true,
                                noTriangle:true,
                                width: '220',
                                minHeight:'100',
                                tPadding: '0px',
                                url: rootPath+'/assets/module/m_common/m_dialog.html'


                            },function(d){//加载html后触发

                                var dialogEle = 'div[id="content:'+d.id+'"] .dialogOBox';


                                var iHtml = template('m_filterableField/m_filter_input',{
                                    txtVal:txtVal,
                                    placeholder:placeholder
                                });

                                $(dialogEle).html(iHtml);
                                $(dialogEle).find('button[data-action="sureFilter"]').on('click',function () {
                                    var val = $(dialogEle).find('input[name="txtVal"]').val();

                                    if(id=='filterProjectName'){
                                        $(that.element).find('input[name="projectName"]').val(val);
                                    }
                                    that.renderReceivableList();

                                    S_dialog.close($(dialogEle));
                                });

                            });
                        });

                        break;
                }

            });
        }

    });

    $.fn[pluginName] = function (options) {
        return this.each(function () {

            //if (!$.data(this, "plugin_" + pluginName)) {
            $.data(this, "plugin_" +
                pluginName, new Plugin(this, options));
            //}
        });
    };

})(jQuery, window, document);

/**
 * 设置显示字段
 * Created by wrb on 2018/05/04.
 */
;(function ($, window, document, undefined) {

    "use strict";
    var pluginName = "m_payments_setFields",
        defaults = {
            $title:null,
            $isDialog:true,
            $feeTypeList:null,//选中的
            $eleId:null,//定位元素
            $okCallBack:null
        };

    // The actual plugin constructor
    function Plugin(element, options) {
        this.element = element;

        this.settings = $.extend({}, defaults, options);
        this._defaults = defaults;
        this._name = pluginName;
        this._selectedList = [];//选中的项

        this.init();
    }

    // Avoid Plugin.prototype conflicts
    $.extend(Plugin.prototype, {
        init: function () {
            var that = this;
            that.renderHtml();
        },
        //初始化数据
        renderHtml:function () {
            var that = this;
            if(that.settings.$isDialog){//以弹窗编辑
                that.getCostType(function (data) {
                    var html = template('m_payments/m_payments_setFields',{fieldsList:data});

                    var iTextObj = html.getTextWH();
                    var iWHObj = setDialogWH(iTextObj.width,iTextObj.height);

                    S_dialog.dialog({
                        //title: that.settings.$title||'设置显示字段',
                        contentEle: 'dialogOBox',
                        ele:that.settings.$eleId,
                        lock: 2,
                        align: 'bottom right',
                        quickClose:true,
                        noTriangle:true,
                        width: 500,
                        height:200,
                        tPadding: '0px',
                        url: rootPath+'/assets/module/m_common/m_dialog.html',
                        cancel:function () {
                        },
                        ok:function () {
                            return that.settings.$okCallBack(that._selectedList);
                        }

                    },function(d){//加载html后触发

                        that.element = 'div[id="content:'+d.id+'"] .dialogOBox';
                        $(that.element).html(html);
                        that.initICheck();
                        if(that.settings.$feeTypeList!=null && that.settings.$feeTypeList.length>0){
                            $.each(that.settings.$feeTypeList,function (i,item) {
                                $(that.element).find('input[name="typeValueCk"][data-key="'+item+'"]').iCheck('check');
                            });
                        }
                    });
                })

            }else{//不以弹窗编辑

            }
        }
        //获取字段信息
        , getCostType:function (callBack) {
            var option = {};
            option.url = restApi.url_getCostType;
            m_ajax.get(option, function (response) {
                if (response.code == '0') {
                    return callBack(response.data);
                } else {
                    S_dialog.error(response.info);
                }
            });
        }
        //初始ICheck
        ,initICheck:function () {
            var that = this;
            var ifItemChecked = function (e) {
                var $ele = $(this).closest('li').find('input[name="typeValueCk"]');
                $ele.prop('checked',true);
                $ele.iCheck('update');
                that.isAllCheck($(this));
                that.addItemToRight($ele);
            };
            var ifItemUnchecked = function (e) {
                var $ele = $(this).closest('li').find('input[name="typeValueCk"]');
                $ele.prop('checked',false);
                $ele.iCheck('update');
                that.isAllCheck($(this));
                that.delItemToRight($ele);
            };
            $(that.element).find('input[name="typeValueCk"]').iCheck({
                checkboxClass: 'icheckbox_minimal-green',
                radioClass: 'iradio_minimal-green'
            }).on('ifUnchecked.s', ifItemUnchecked).on('ifChecked.s', ifItemChecked);
        }
        //判断全选是否该选中并给相关处理
        ,isAllCheck:function ($this) {
           var $pEle = $this.closest('ul').prev().find('input[name="typeValueCk"]');
           var $ppEle = $this.closest('ul').parents('ul').prev().find('input[name="typeValueCk"]');
           var noCheckLen = $this.closest('ul').find('input[name="typeValueCk"]').length;
           var checkedLen = $this.closest('ul').find('input[name="typeValueCk"]:checked').length;
           if(noCheckLen==checkedLen && $pEle.length>0){
               $pEle.prop('checked',true);
               $pEle.iCheck('update');
               if($ppEle.length>0){
                   $ppEle.prop('checked',true);
                   $ppEle.iCheck('update');
               }
           }else{
               $pEle.prop('checked',false);
               $pEle.iCheck('update');
               if($ppEle.length>0 && noCheckLen==checkedLen){
                   $ppEle.prop('checked',true);
                   $ppEle.iCheck('update');
               }else if($ppEle.length>0 && $pEle.length==0 && noCheckLen==checkedLen){
                   $ppEle.prop('checked',false);
                   $ppEle.iCheck('update');
               }else{
                   $ppEle.prop('checked',false);
                   $ppEle.iCheck('update');
               }
           }
        }
        //选中出现在右边
        , addItemToRight:function ($this) {
            var that = this;
            $this.each(function () {
                var fieldKey = $(this).attr('data-key'),level = $(this).attr('data-level');
                if($.inArray(fieldKey, that._selectedList)<0 && level==3){
                    that._selectedList.push(fieldKey);
                    //$(that.element).find('#fieldItems').append('<li class="list-group-item"><span class="field-name" data-key="'+fieldKey+'">'+fieldKey+'</span><i class="glyphicon glyphicon-remove pull-right curp"></i></li>');

                }
            });
            /*$(that.element).find('#fieldItems .glyphicon-remove').off('click').on('click',function () {

                var fieldKey = $(this).closest('li.list-group-item').find('.field-name').text();
                that._selectedList.splice($.inArray(fieldKey,that._selectedList),1);
                $(this).closest('li.list-group-item').remove();
                $(that.element).find('input[name="typeValueCk"][data-key="'+fieldKey+'"]').iCheck('uncheck');
                return false;
            });*/
        }
        //删除右边
        , delItemToRight:function ($this) {
            var that = this;
            $this.each(function () {
                var fieldKey = $(this).attr('data-key');
                that._selectedList.splice($.inArray(fieldKey,that._selectedList),1);
                //$(that.element).find('span.field-name[data-key="'+fieldKey+'"]').closest('li.list-group-item').remove();

            });

        }
    });

    $.fn[pluginName] = function (options) {
        return this.each(function () {

            //if (!$.data(this, "plugin_" + pluginName)) {
            $.data(this, "plugin_" +
                pluginName, new Plugin(this, options));
            //}
        });
    };

})(jQuery, window, document);



/**
 * 收支总览-分类统计
 * Created by wrb on 2017/11/30.
 */
;(function ($, window, document, undefined) {

    "use strict";
    var pluginName = "m_payments_statistics",
        defaults = {
            $contentEle:null,
            $isFirstEnter:false//是否是第一次進來
        };

    // The actual plugin constructor
    function Plugin(element, options) {
        this.element = element;

        this.settings = $.extend({}, defaults, options);
        this._defaults = defaults;
        this._name = pluginName;
        this._companyList = [];
        this._companyIdList = [];
        this._selectedOrg = null;//当前组织筛选-选中组织对象
        this.init();
    }

    // Avoid Plugin.prototype conflicts
    $.extend(Plugin.prototype, {
        init: function () {

            var that = this;
            var html = template('m_payments/m_payments_statistics',{});
            $(that.element).html(html);
            var option = {};
            option.$selectedCallBack = function (data) {
                that._selectedOrg = data;
                that.renderCategoryTypeList();
            };
            option.$renderCallBack = function () {
                that.bindSetTime();
                that.bindRefreshBtn();
            };
            $(that.element).find('#selectOrg').m_org_chose_byTree(option);

        }
        //初始ICheck
        , initItemICheck:function () {
            var that = this;
            var ifChecked = function (e) {
                var dataId = $(this).attr('data-id');
                var dataPid = $(this).attr('data-pid');

                if(dataPid==''){//根目录
                    $(that.element).find('input[name="itemCk"][data-pid="'+dataId+'"]').prop('checked',true);
                    $(that.element).find('input[name="itemCk"][data-pid="'+dataId+'"]').iCheck('update');

                }else{
                    var childLen = $(that.element).find('input[name="itemCk"][data-pid="'+dataPid+'"]').length;
                    var childCheckedLen = $(that.element).find('input[name="itemCk"][data-pid="'+dataPid+'"]:checked').length;
                    if(childLen==childCheckedLen){
                        $(that.element).find('input[name="itemCk"][data-id="'+dataPid+'"]').prop('checked',true);
                        $(that.element).find('input[name="itemCk"][data-id="'+dataPid+'"]').iCheck('update');
                    }else{
                        $(that.element).find('input[name="itemCk"][data-id="'+dataPid+'"]').prop('checked',false);
                        $(that.element).find('input[name="itemCk"][data-id="'+dataPid+'"]').iCheck('update');
                    }
                }
                that.renderBarChart();
            };
            var ifUnchecked = function (e) {
                var dataId = $(this).attr('data-id');
                var dataPid = $(this).attr('data-pid');

                if(dataPid==''){//根目录
                    $(that.element).find('input[name="itemCk"][data-pid="'+dataId+'"]').prop('checked',false);
                    $(that.element).find('input[name="itemCk"][data-pid="'+dataId+'"]').iCheck('update');
                }else{

                    $(that.element).find('input[name="itemCk"][data-id="'+dataPid+'"]').prop('checked',false);
                    $(that.element).find('input[name="itemCk"][data-id="'+dataPid+'"]').iCheck('update');
                }
                that.renderBarChart();
            };
            $(that.element).find('input[name="itemCk"]').iCheck({
                checkboxClass: 'icheckbox_minimal-green',
                radioClass: 'iradio_minimal-green'
            }).on('ifUnchecked.s', ifUnchecked).on('ifChecked.s', ifChecked);
        }
        //初始化分类统计范围
        ,renderCategoryTypeList:function () {
            var that = this;
            var option = {};
            option.url = restApi.url_getCategoryTypeList;
            option.postData = {};
            option.postData.companyId = that._selectedOrg.id;
            m_ajax.postJson(option, function (response) {
                if (response.code == '0') {
                    var html = template('m_payments/m_payments_statistics_categoryType',{
                        categoryTypeList:response.data
                    });
                    $(that.element).find('#categoryTypeBox').html(html);
                    that.initItemICheck();
                    that.renderBarChart();

                } else {
                    S_dialog.error(response.info);
                }
            });
        }
        //请求barChart数据
        ,renderBarChart:function () {
            var that = this;

            var option = {};
            option.url = restApi.url_getStatisticClassicData;

            option.postData={};
            if(that._selectedOrg==null){
                option.postData.combineCompanyId=that._companyList.id;
            }else{
                option.postData.combineCompanyId=that._selectedOrg.id;
            }

            if($(that.element).find('a[data-action="setTime"][data-type="month"]').hasClass('btn-primary')){
                option.postData.groupByTime = 1;
            }else{
                option.postData.groupByTime = 2;
            }
            option.postData.startDateStr=$(that.element).find('input[name="timeStart"]').val();
            option.postData.endDateStr=$(that.element).find('input[name="timeEnd"]').val();
            option.postData.feeTypeList  = [];
            $(that.element).find('input[name="itemCk"]:checked').each(function () {
                option.postData.feeTypeList .push($(this).attr('data-value'));
            });
           
            m_ajax.postJson(option, function (response) {
                if (response.code == '0') {

                    if(response.data!=null){

                        var html = template('m_payments/m_payments_statistics_barChart',{});
                        $(that.element).find('#barChartBox').html(html);

                        var startDateStr = response.data.startDateStr;
                        var endDateStr = response.data.endDateStr;
                        if(startDateStr!=null && startDateStr!=''){
                            if(startDateStr.length>7){
                                startDateStr = startDateStr.substring(0,7);
                            }
                            $(that.element).find('input[name="timeStart"]').val(startDateStr);
                        }
                        if(endDateStr!=null && endDateStr!=''){
                            if(endDateStr.length>7){
                                endDateStr = endDateStr.substring(0,7);
                            }
                            $(that.element).find('input[name="timeEnd"]').val(endDateStr);
                        }

                        if(response.data.columnarDataForTimeGroup!=null){
                            that.renderBarChartItem(response.data.columnarDataForTimeGroup,'barChart1');
                        }
                        if(response.data.columnarDataForOrgGroup!=null){
                            that.renderBarChartItem(response.data.columnarDataForOrgGroup,'barChart2');
                        }
                    }
                } else {
                    S_dialog.error(response.info);
                }
            });


        }
        //生成barChart
        ,renderBarChartItem:function (barData,id) {
            var that = this;
            /*barData = {
                            labels: ["卯丁设计有限公司", "华丽设计工作室", "诺明设计事务所", "华丽丽工作室", "亨利来设计有限公司四川分公司"],
                            datasets: [
                                {
                                    label: "总收入",
                                    backgroundColor: '#4765a1',
                                    borderColor: "rgba(26,179,148,0.7)",
                                    pointBackgroundColor: "rgba(26,179,148,1)",
                                    pointBorderColor: "#fff",
                                    fill: false,
                                    data:[65, 59, 80, 81, 56]
                                },
                                {
                                    label: "总支出",
                                    backgroundColor: '#449fae',
                                    borderColor: "rgba(26,179,148,0.7)",
                                    pointBackgroundColor: "rgba(26,179,148,1)",
                                    pointBorderColor: "#fff",
                                    fill: false,
                                    data: [65, 59, 80, 81, 56]
                                }
                            ]
                        };*/

            // Define a plugin to provide data labels
            /*Chart.plugins.register({
                afterDatasetsDraw: function(chart) {
                    var ctx = chart.ctx;

                    chart.data.datasets.forEach(function(dataset, i) {
                        var meta = chart.getDatasetMeta(i);
                        if (!meta.hidden) {
                            meta.data.forEach(function(element, index) {
                                // Draw the text in black, with the specified font
                                ctx.fillStyle = 'rgb(0, 0, 0)';

                                var fontSize = 16;
                                var fontStyle = 'normal';
                                var fontFamily = 'Helvetica Neue';
                                ctx.font = Chart.helpers.fontString(fontSize, fontStyle, fontFamily);

                                // Just naively convert to string for now
                                var dataString = dataset.data[index];
                                dataString = expNumberFilter(dataString).toString();

                                // Make sure alignment settings are correct
                                ctx.textAlign = 'center';
                                ctx.textBaseline = 'middle';

                                var padding = 5;
                                var position = element.tooltipPosition();
                                ctx.fillText(dataString, position.x, position.y - (fontSize / 2) - padding);
                            });
                        }
                    });
                }
            });*/

            var ctx = document.getElementById(id).getContext('2d');
            window.myBar = new Chart(ctx, {
                type: 'bar',
                data: barData,
                options: {
                    responsive: true,
                    title: {
                        display: true,
                        text: ''
                    },
                    tooltips: {
                        enabled: false,
                        custom: function(tooltip) {
                            // Tooltip Element
                            var tooltipEl = document.getElementById('chartjs-tooltip-'+id);

                            if (!tooltipEl) {
                                tooltipEl = document.createElement('div');
                                tooltipEl.id = 'chartjs-tooltip-'+id;
                                tooltipEl.innerHTML = "<table></table>";
                                this._chart.canvas.parentNode.appendChild(tooltipEl);
                            }

                            // Hide if no tooltip
                            if (tooltip.opacity === 0) {
                                tooltipEl.style.opacity = 0;
                                return;
                            }

                            // Set caret Position
                            tooltipEl.classList.remove('above', 'below', 'no-transform');
                            if (tooltip.yAlign) {
                                tooltipEl.classList.add(tooltip.yAlign);
                            } else {
                                tooltipEl.classList.add('no-transform');
                            }

                            function getBody(bodyItem) {
                                return bodyItem.lines;
                            }

                            // Set Text
                            if (tooltip.body) {
                                var titleLines = tooltip.title || [];
                                var bodyLines = tooltip.body.map(getBody);

                                var innerHtml = '<thead>';

                                titleLines.forEach(function(title) {
                                    innerHtml += '<tr><th>' + title + '</th></tr>';
                                });
                                innerHtml += '</thead><tbody>';

                                bodyLines.forEach(function(body, i) {
                                    var colors = tooltip.labelColors[i];
                                    var style = 'background:#000';
                                    style += '; border-color:#000';
                                    style += '; border-width: 2px';
                                    var span = '<span class="chartjs-tooltip-key" style="' + style + '"></span>';
                                    if(body!=null && body.length>0){
                                        var money = body[0].substring(body[0].indexOf(': ')+1,body[0].length);
                                        var moneyByFormat = expNumberFilter(money);
                                        body[0] = body[0].replaceAll(money,moneyByFormat)+'元';
                                    }


                                    innerHtml += '<tr><td>' + body + '</td></tr>';
                                });
                                innerHtml += '</tbody>';

                                var tableRoot = tooltipEl.querySelector('table');
                                tableRoot.innerHTML = innerHtml;
                            }

                            var positionY = this._chart.canvas.offsetTop;
                            var positionX = this._chart.canvas.offsetLeft;

                            // Display, position, and set styles for font
                            tooltipEl.style.opacity = 1;
                            tooltipEl.style.left = positionX + tooltip.x + 'px';
                            tooltipEl.style.top = positionY + tooltip.y + 'px';
                            tooltipEl.style.fontFamily = tooltip._fontFamily;
                            tooltipEl.style.fontSize = tooltip.fontSize;
                            tooltipEl.style.fontStyle = tooltip._fontStyle;
                            tooltipEl.style.padding = tooltip.yPadding + 'px ' + tooltip.xPadding + 'px';
                        }
                    }
                }
            });
        }
        //快捷时间
        , bindSetTime: function () {
            var that = this;
            $(that.element).find('a[data-action="setTime"]').off('click').on('click',function () {
                var dataType = $(this).attr('data-type');

                $(this).addClass('btn-primary').removeClass('btn-default').siblings().addClass('btn-default').removeClass('btn-primary');

                $(that.element).find('input[name="timeStart"]').val('');
                $(that.element).find('input[name="timeEnd"]').val('');
                if(dataType=='month'){
                    $(that.element).find('input[name="timeStart"]').attr('placeholder','开始月份');
                    $(that.element).find('input[name="timeEnd"]').attr('placeholder','结束月份');
                }else{
                    $(that.element).find('input[name="timeStart"]').attr('placeholder','开始年份');
                    $(that.element).find('input[name="timeEnd"]').attr('placeholder','结束年份');
                }
            });
            $(that.element).find('input[name="timeStart"]').off('click').on('click',function () {

                var dataType = $(that.element).find('a.btn-primary[data-action="setTime"]').attr('data-type');
                var fomartStr = 'yyyy-MM';
                if(dataType=='month'){
                    fomartStr = 'yyyy-MM';
                }else{
                    fomartStr = 'yyyy';
                }
                var endTime = $(that.element).find('input[name="timeEnd"]').val();
                var onpicked =function(dp){

                    if(endTime==''){//没有结束时间，弹出结束时间弹窗
                        $(that.element).find('input[name="timeEnd"]').click();
                    }else{
                        that.renderBarChart();
                    }
                };
                WdatePicker({el:this,dateFmt:fomartStr,maxDate:endTime,onpicked:onpicked})
            });
            $(that.element).find('input[name="timeEnd"]').off('click').on('click',function () {

                var dataType = $(that.element).find('a.btn-primary[data-action="setTime"]').attr('data-type');
                var fomartStr = 'yyyy-MM';
                if(dataType=='month'){
                    fomartStr = 'yyyy-MM';
                }else{
                    fomartStr = 'yyyy';
                }
                var startTime = $(that.element).find('input[name="timeStart"]').val();
                var onpicked =function(dp){
                    if(startTime==''){//没有开始时间，弹出开始时间弹窗
                        $(that.element).find('input[name="timeStart"]').click();
                    }else{
                        that.renderBarChart();
                    }
                };
                WdatePicker({el:this,dateFmt:fomartStr,minDate:startTime,onpicked:onpicked})
            });

            $(that.element).find('span.input-group-addon').off('click').on('click',function () {
                $(this).closest('.input-group').find('input[class!="form-control input-sm hide"]').focus();
            });
        }
        //金额单位切换
        , bindSwitchAmountUnit:function () {
            var that = this;
            $(that.element).find('a[data-action="amountUnit"]').off('click').on('click',function () {
                $(this).addClass('text-info').siblings('a').removeClass('text-info');
                that.renderBarChart();
            });
        }
        , bindRefreshBtn:function () {
            var that = this;
            $(that.element).find('button[data-action="refreshBtn"]').on("click", function (e) {

                that.init();
                return false;
            })
        }

    });

    $.fn[pluginName] = function (options) {
        return this.each(function () {

            //if (!$.data(this, "plugin_" + pluginName)) {
            $.data(this, "plugin_" +
                pluginName, new Plugin(this, options));
            //}
        });
    };

})(jQuery, window, document);

/**
 * 收支总览-分类统计-按账期统计
 * Created by wrb on 2017/11/30.
 */
;(function ($, window, document, undefined) {

    "use strict";
    var pluginName = "m_payments_statistics_lineChart",
        defaults = {
            $chartData:null
        };

    // The actual plugin constructor
    function Plugin(element, options) {
        this.element = element;

        this.settings = $.extend({}, defaults, options);
        this._defaults = defaults;
        this._name = pluginName;
        this._companyList = [];
        this._companyIdList = [];
        this.init();
    }

    // Avoid Plugin.prototype conflicts
    $.extend(Plugin.prototype, {
        init: function () {
            var that = this;
            var html = template('m_payments/m_payments_statistics_lineChart',{});
            $(that.element).html(html);

            var lineChartData = that.settings.$chartData;
            var dateArr = lineChartData[0];
            $.each(dateArr, function (i, item) {
                dateArr[i]=item+'-01';
            });
            dateArr.splice(0, 0, "x");
            var data1Arr = lineChartData[2];
            data1Arr.splice(0, 0, "data1");
            var data2Arr = lineChartData[1];
            data2Arr.splice(0, 0, "data2");
            var data3Arr = lineChartData[3];
            data3Arr.splice(0, 0, "data3");

            c3.generate({
                bindto: '#lineChart',
                data:{
                    names: {
                        data1: '总收入',
                        data2: '总支出'
                        //,data3: '合同总金额'
                    },
                    x: 'x',
                    columns: [
                        dateArr,
                        data1Arr,
                        data2Arr
                        //,data3Arr
                    ],
                    colors:{
                        data1: '#4765a1',
                        data2: '#449fae'
                        //,data3: '#999'
                    }
                },
                axis: {
                    x: {
                        type: 'timeseries',
                        tick: {
                            format: '%Y年%m月'
                        }
                    }
                },
                tooltip: {
                    format: {
                        value: function (value, ratio, id) {
                            return expNumberFilter(value)+'元';
                        }
                    }
                }
            });

        }


    });

    $.fn[pluginName] = function (options) {
        return this.each(function () {

            //if (!$.data(this, "plugin_" + pluginName)) {
            $.data(this, "plugin_" +
                pluginName, new Plugin(this, options));
            //}
        });
    };

})(jQuery, window, document);

/**
 * 收支总览-分类统计-按收支类型统计
 * Created by wrb on 2017/11/30.
 */
;(function ($, window, document, undefined) {

    "use strict";
    var pluginName = "m_payments_statistics_pieChart",
        defaults = {
            $chartData:null,
            $renderCallback:null
        };

    // The actual plugin constructor
    function Plugin(element, options) {
        this.element = element;

        this.settings = $.extend({}, defaults, options);
        this._defaults = defaults;
        this._name = pluginName;
        this._companyList = [];
        this._companyIdList = [];
        this.init();
    }

    // Avoid Plugin.prototype conflicts
    $.extend(Plugin.prototype, {
        init: function () {
            var that = this;
            var html = template('m_payments/m_payments_statistics_pieChart',{});
            $(that.element).html(html);
            var pie = new d3pie("totalRevenueChart", {
                "header": {
                    "title": {
                        "text": "总收入",
                        "color": "#666666",
                        "fontSize": 24,
                        "font": "courier"
                    },
                    "subtitle": {
                        "text": expNumberFilter(that.settings.$chartData.oneCount)+"元",
                        "color": "#333333",
                        "fontSize": 18,
                        "font": "courier"
                    },
                    "location": "pie-center",
                    "titleSubtitlePadding": 2
                },
                "footer": {
                    "color": "#999999",
                    "fontSize": 10,
                    "font": "open sans",
                    "location": "bottom-left"
                },
                "size": {
                    "canvasWidth": 590,
                    "pieInnerRadius": "60%",
                    "pieOuterRadius": "70%"
                },
                "data": {
                    "content": [
                        {
                            "label": "其他收入",
                            "value": that.settings.$chartData.oneData[0],
                            "color": "#c1cde4"
                        },
                        {
                            "label": "合同回款",
                            "value": that.settings.$chartData.oneData[1],
                            "color": "#4765a1"
                        },
                        {
                            "label": "技术审查费",
                            "value": that.settings.$chartData.oneData[2],
                            "color": "#cbe5e9"
                        },
                        {
                            "label": "合作设计费",
                            "value": that.settings.$chartData.oneData[3],
                            "color": "#449fae"
                        }
                    ]
                },
                "labels": {
                    "inner": {
                        "format": "none"
                    },
                    "mainLabel": {
                        "color": "#999999",
                        "fontSize": 18
                    },
                    "percentage": {
                        "color": "#999999",
                        "fontSize": 11,
                        "decimalPlaces": 0
                    },
                    "value": {
                        "color": "#999999",
                        "fontSize": 11
                    },
                    "lines": {
                        "enabled": true,
                        "style": "straight",
                        "color": "#777777"
                    },
                    "truncation": {
                        "enabled": true
                    }
                },
                "tooltips": {
                    "enabled": true,
                    "type": "placeholder",
                    "string": "{label}: {value}元, {percentage}%"
                },
                "effects": {
                    "pullOutSegmentOnClick": {
                        "effect": "linear",
                        "speed": 400,
                        "size": 8
                    }
                },
                "misc": {
                    "colors": {
                        "background": "#ffffff"
                    }
                },
                "callbacks": {
                    onload:function () {
                        console.log("loaded.");
                        that.formatTooltipMoney('totalRevenueChart');
                    }
                }
            });
            var pie = new d3pie("totalExpenditureChart", {
                "header": {
                    "title": {
                        "text": "总支出",
                        "color": "#666666",
                        "fontSize": 24,
                        "font": "courier"
                    },
                    "subtitle": {
                        "text": expNumberFilter(that.settings.$chartData.twoCount)+"元",
                        "color": "#333333",
                        "fontSize": 18,
                        "font": "courier"
                    },
                    "location": "pie-center",
                    "titleSubtitlePadding": 2
                },
                "footer": {
                    "color": "#999999",
                    "fontSize": 10,
                    "font": "open sans",
                    "location": "bottom-left"
                },
                "size": {
                    "canvasWidth": 590,
                    "pieInnerRadius": "60%",
                    "pieOuterRadius": "70%"
                },
                "data": {
                    "content": [
                        {
                            "label": "主营业务税金及附加",
                            "value": that.settings.$chartData.twoData[0],
                            "color": "#c1cde4"
                        },
                        {
                            "label": "主营业务成本",
                            "value": that.settings.$chartData.twoData[1],
                            "color": "#4765a1"
                        },
                        {
                            "label": "财务费用",
                            "value": that.settings.$chartData.twoData[2],
                            "color": "#344a77"
                        },
                        {
                            "label": "所得税费用",
                            "value": that.settings.$chartData.twoData[3],
                            "color": "#cbe5e9"
                        },
                        {
                            "label": "管理费用",
                            "value": that.settings.$chartData.twoData[4],
                            "color": "#449fae"
                        }
                    ]
                },
                "labels": {
                    "inner": {
                        "format": "none"
                    },
                    "mainLabel": {
                        "color": "#999999",
                        "fontSize": 18
                    },
                    "percentage": {
                        "color": "#999999",
                        "fontSize": 11,
                        "decimalPlaces": 0
                    },
                    "value": {
                        "color": "#999999",
                        "fontSize": 11
                    },
                    "lines": {
                        "enabled": true,
                        "style": "straight",
                        "color": "#777777"
                    },
                    "truncation": {
                        "enabled": true
                    }
                },
                "tooltips": {
                    "enabled": true,
                    "type": "placeholder",
                    "string": "{label}: {value}元, {percentage}%"
                },
                "effects": {
                    "pullOutSegmentOnClick": {
                        "effect": "linear",
                        "speed": 400,
                        "size": 8
                    }
                },
                "misc": {
                    "colors": {
                        "background": "#ffffff"
                    }
                },
                "callbacks": {
                    onload:function () {
                        console.log("loaded.");
                        that.formatTooltipMoney('totalExpenditureChart');
                    }
                }
            });

        }
        //格式化tooltip中的money
        ,formatTooltipMoney:function (id) {
            $('#'+id+' g[class$="_tooltip"] text').each(function () {
                var text = $(this).text();
                var money = text.substring(text.indexOf(': ')+1,text.indexOf('元'));
                var moneyByFormat = expNumberFilter(money);
                var newText = $(this).text().replaceAll(money,moneyByFormat);
                $(this).text(newText);
                var w = $(this).parent('g').find('rect').attr('width');
                $(this).parent('g').find('rect').attr('width',(w-0+20));
            });
        }
    });

    $.fn[pluginName] = function (options) {
        return this.each(function () {

            //if (!$.data(this, "plugin_" + pluginName)) {
            $.data(this, "plugin_" +
                pluginName, new Plugin(this, options));
            //}
        });
    };

})(jQuery, window, document);

/**
 * Created by wrb on 2016/12/15.
 */
;(function ($, window, document, undefined) {

    "use strict";
    var pluginName = "m_bindEmail",
        defaults = {
            sendEmailCallBack:null
        };

    // The actual plugin constructor
    function Plugin(element, options) {
        this.element = element;

        this.settings = $.extend({}, defaults, options);
        this._defaults = defaults;
        this._name = pluginName;
        this.init();
    }

    // Avoid Plugin.prototype conflicts
    $.extend(Plugin.prototype, {
        init: function () {
            var html = template('m_personal/m_bindEmail',{});
            $(this.element).html(html);
            this.sendValidationEemail_validate();
            this.bindActionClick();
        }
        //发送邮箱
        ,sendValidationEemail:function () {

            var that = this;

            if ($('form.bindEmailBox').valid()) {
                var option  = {};
                option.url = restApi.url_sendBindMail;
                option.postData = {toMail:$('form.bindEmailBox input[name="bindEmailDtoEmail"]').val()};
                m_ajax.postJson(option,function (response) {
                    if(response.code=='0'){
                        S_toastr.success('发送成功！');
                        if(that.settings.sendEmailCallBack!=null){
                            that.settings.sendEmailCallBack();
                        }
                    }else {
                        S_dialog.error(response.info);
                    }

                })
            }
        }
        //按钮事件绑定
        ,bindActionClick:function () {
            var that = this;
            $('form.bindEmailBox button[data-action]').on('click',function () {
                var dataAction = $(this).attr('data-action');
                if(dataAction=="sendValidationEemail"){//发送邮件
                    that.sendValidationEemail();
                }
            });
        }
        //发送邮箱表单验证
        ,sendValidationEemail_validate:function(){
            $('form.bindEmailBox').validate({
                rules: {
                    bindEmailDtoEmail: {
                        required: true,
                        email: true
                    }
                },
                messages: {
                    bindEmailDtoEmail: {
                        required: '请输入邮箱!',
                        email: "请输入有效的电子邮件地址",
                    }
                },
                errorPlacement: function (error, element) { //指定错误信息位置
                    if ($(element).attr('name')=='bindEmailDtoEmail') {
                        error.appendTo(element.closest('.col-md-12'));
                    } else {
                        error.insertAfter(element);
                    }
                }
            });
        }

    });

    $.fn[pluginName] = function (options) {
        return this.each(function () {

            //if (!$.data(this, "plugin_" + pluginName)) {
            $.data(this, "plugin_" +
                pluginName, new Plugin(this, options));
            //}
        });
    };

})(jQuery, window, document);

/**
 * Created by wrb on 2016/12/15.
 */
;(function ($, window, document, undefined) {

    "use strict";
    var pluginName = "m_bindPhone",
        defaults = {
            saveBindPhoneCallBack: null
        };

    // The actual plugin constructor
    function Plugin(element, options) {
        this.element = element;

        this.settings = $.extend({}, defaults, options);
        this._defaults = defaults;
        this._name = pluginName;
        this.init();
    }

    // Avoid Plugin.prototype conflicts
    $.extend(Plugin.prototype, {
        init: function () {
            var that = this;
            that.initHtml();
        }
        //初始化页面
        ,initHtml:function(){
            var that = this;
            S_dialog.dialog({
                title: '绑定手机',
                //contentEle: 'bindPhoneBox',
                lock: 3,
                width: '500',
                tPadding: '0px',
                url: rootPath+'/assets/module/m_common/m_dialog.html',
                ok:function(){
                    var flag = $('form.bindPhoneBox').valid();
                    if(!flag){
                        return false;
                    }else{
                        that.saveBindPhone();
                    }
                },
                okText:'保存',
                cancel:function(){},
                cancelText:'取消'
            },function(d){//加载html后触发
                var html = template('m_personal/m_bindPhone', {});
                $('div[id="content:'+d.id+'"]').html(html);
                //this.receiveCode_validate();
                that.saveBindPhone_validate();
                that.bindActionClick();
                that.closeDialog();
            });
        }
        //发送验证
        , receiveCode: function () {

            var that = this;
                that.getCode();
                var option = {};
                option.url = restApi.url_securityCode;
                option.postData = {cellphone: $('form.bindPhoneBox input[name="bindCellPhoneDtoCellphone"]').val()};
                m_ajax.postJson(option, function (response) {
                    if (response.code == '0') {
                        //S_dialog.tips('发送成功！');
                    } else {
                        if ("undefined" != typeof that.timer) {
                            window.clearInterval(that.timer);
                        }
                        S_dialog.error(response.info);
                    }
                })
        }
        //给关闭弹窗按钮绑定事件
        ,closeDialog:function(){
            var that = this;
            $(that.element).closest('.ui-dialog').find('td[i="header"] button.ui-dialog-close,.panel-footer button.btn-u-default')
                .on('click.clearInterval',function(event){
                    window.clearInterval(that.timer);
                    stopPropagation(event);
                });
        }
        //保存绑定手机号
        , saveBindPhone: function () {
            var that = this;
            var option = {};
            option.url = restApi.url_changeCellphone;
            option.postData = {
                cellphone: $('form.bindPhoneBox input[name="bindCellPhoneDtoCellphone"]').val(),
                code: $('form.bindPhoneBox input[name="bindCellPhoneDtoCode"]').val()
            };
            m_ajax.postJson(option, function (response) {
                if (response.code == '0') {
                    /*S_toastr.success('发送成功！');
                    var url = '/iWork/sys/logout';
                    if (data != null && data != '')
                        url = data;
                    window.location.href = window.rootPath + url;*/
                    S_swal.sure({
                        title:'已更改',
                        text:'更改手机号成功。',
                        callBack:function () {
                            window.location.href = window.rootPath + '/iWork/sys/logout';
                        }
                    });
                } else {
                    S_dialog.error(response.info);
                    return false;
                }
            });
        }
        , getCode: function () {//生成时间倒计时
            var clock = 60;
            var that = this;
            var updateClock = function () {
                if (clock > 0) {
                    clock = clock - 1;
                    $('form.bindPhoneBox a[data-action="receiveCode"]').html(clock + 's');
                    // $('form.bindPhoneBox a[data-action="receiveCode"]').css('opacity','0.5');
                    $('form.bindPhoneBox a[data-action="receiveCode"]').attr('disabled', 'disabled');
                }
            };
            updateClock();
            that.timer = setInterval(function () {
                updateClock();
                if (clock <= 0) {
                    $('form.bindPhoneBox a[data-action="receiveCode"]').html('获取验证码');
                    // $('form.bindPhoneBox a[data-action="receiveCode"]').css('opacity','1');
                    $('form.bindPhoneBox a[data-action="receiveCode"]').removeAttr('disabled');
                    if ("undefined" != typeof that.timer) {
                        window.clearInterval(that.timer);
                    }
                }
            }, 1000);
        }
        //按钮事件绑定
        , bindActionClick: function () {
            var that = this;
            $('form.bindPhoneBox a[data-action]').on('click', function (event) {
                var dataAction = $(this).attr('data-action');
                if (dataAction == "receiveCode") {//发送验证码
                    if ($(this).html() == '获取验证码') {
                        if (that.receiveCode_validate()) {
                            that.receiveCode();
                        }
                    } else {
                        return false;
                    }
                } else if (dataAction == 'saveBindPhone') {//保存绑定
                    that.saveBindPhone();
                }
                stopPropagation(event);
                return false;
            });
        }

        //发送验证码表单验证
        , receiveCode_validate: function () {//step1的表单验证
            var error = [];
            var cellphone = $('#cellphone').val();
            var mobile = /^(13[0-9]{9})|(18[0-9]{9})|(14[0-9]{9})|(17[0-9]{9})|(15[0-9]{9})$/;
            if (cellphone == '' || cellphone == null) {
                error.push('请输入手机号码');
            } else if (!mobile.test(cellphone)) {
                error.push('请正确填写您的手机号码');
            }
            if (error.length > 0) {
                var html = '<label id="cellphone-error" class="error" for="cellphone">';
                html += error[0];
                html += '</label>';
                if ($('#cellphone').closest('.form-group').find('#cellphone-error').length < 1) {
                    $('#cellphone').closest('.form-group').append(html);
                }
                return false;
            } else {
                return true;
            }
        }
        /*function(){
         $('form.bindPhoneBox').validate({
         rules: {
         bindCellPhoneDtoCellphone: {
         required: true,
         minlength: 11,
         isMobile: true
         },
         },
         messages: {
         bindCellPhoneDtoCellphone: {
         required: "请输入手机号码",
         minlength: "确认手机不能小于11个字符",
         isMobile: "请正确填写您的手机号码"
         }
         },
         errorPlacement: function (error, element) { //指定错误信息位置
         if ($(element).attr('name')=='bindCellPhoneDtoCellphone') {
         error.appendTo(element.closest('.col-md-12 .form-group'));
         } else {
         error.insertAfter(element);
         }
         }
         });
         }*/
        , saveBindPhone_validate: function () {
            var that = this;
            $(that.element).find('form.bindPhoneBox').validate({
                rules: {
                    bindCellPhoneDtoCellphone: {
                        required: true,
                        minlength: 11
                    },
                    bindCellPhoneDtoCode: {
                        required: true
                    }
                },
                messages: {
                    bindCellPhoneDtoCellphone: {
                        required: "请输入手机号码",
                        minlength: "确认手机不能小于11个字符"
                    },
                    bindCellPhoneDtoCode: {
                        required: '请输入验证码!'
                    }
                },
                errorPlacement: function (error, element) { //指定错误信息位置
                    if ($(element).attr('name') == 'bindCellPhoneDtoCellphone') {
                        error.appendTo(element.closest('.col-md-12 .form-group'));
                        error.addClass('input_error');
                    } else {
                        error.insertAfter(element);
                    }
                }
            });
            // 手机号码验证
            jQuery.validator.addMethod("isMobile", function (value, element) {
                var length = value.length;
                var mobile = /^(13[0-9]{9})|(18[0-9]{9})|(14[0-9]{9})|(17[0-9]{9})|(15[0-9]{9})$/;
                return this.optional(element) || (length == 11 && mobile.test(value));
            }, "请正确填写您的手机号码");
        }

    });

    $.fn[pluginName] = function (options) {
        return this.each(function () {

            //if (!$.data(this, "plugin_" + pluginName)) {
            $.data(this, "plugin_" +
                pluginName, new Plugin(this, options));
            //}
        });
    };

})(jQuery, window, document);

/**
 * 个人中心－安全设置
 * Created by wrb on 2017/03/01.
 */
;(function ($, window, document, undefined) {

    "use strict";
    var pluginName = "m_safety",
        defaults = {
            userDto: null//用户信息数据(当从外传入，则不需要重新请求)
        };

    // The actual plugin constructor
    function Plugin(element, options) {
        this.element = element;

        this.settings = $.extend({}, defaults, options);
        this._defaults = defaults;
        this._name = pluginName;

        this.init();
    }

    // Avoid Plugin.prototype conflicts
    $.extend(Plugin.prototype, {
        init: function () {
            this._getUserInfo();
            this._bindActionClick();
        },
        //渲染页面
        _renderHtml: function (data) {
            var that = this;

            var html = template('m_personal/m_safety', {userDto:data});

            $(that.element).html(html);
        },
        //获取用户信息
        _getUserInfo: function () {
            var that = this;
            var userDto = that.settings.userDto;
            if (userDto === void 0 || userDto === null) {
                var option = {};
                option.url = restApi.url_userInfo;
                m_ajax.get(option, function (response) {
                    if (response.code === '0') {
                        that.settings.userDto=response.data;
                        that._renderHtml(response.data)
                    } else {
                        S_dialog.error(response.info);
                    }
                });
            } else {
                that._renderHtml(userDto)
            }
        }
        //打开绑定邮箱弹窗
        ,_openBindEmailDialog:function () {
            S_dialog.dialog({
                title: '绑定邮箱',
                //contentEle: 'bindEmailBox',
                lock: 3,
                width: '500',
                tPadding: '0px',
                url: rootPath+'/assets/module/m_common/m_dialog.html',
                cancelText:'关闭',
                cancel:function () {

                }
            },function(d){//加载html后触发
                var options = {};
                options.sendEmailCallBack = function () {
                    S_dialog.close($('.bindEmailBox'))
                };
                $('div[id="content:'+d.id+'"]').m_bindEmail(options);
            });
        }
        //事件绑定
        ,_bindActionClick:function () {

            var that = this;

            $(that.element).find('a[data-action]').on('click',function () {

                var dataAction = $(this).attr('data-action');

                if(dataAction=='bindEmail'){//绑定邮箱

                    that._openBindEmailDialog();

                }else if(dataAction=='bindPhone'){//绑定手机

                    $('body').m_bindPhone();

                }else if(dataAction=='changePwd'){//修改密码

                    $('body').m_uptPassword();//打开修改密码弹窗
                }
                return false;
            });
        }

    });

    $.fn[pluginName] = function (options) {
        return this.each(function () {
            new Plugin(this, options);
        });
    };

})(jQuery, window, document);

/**
 * Created by wrb on 2016/12/15.
 */
;(function ($, window, document, undefined) {

    "use strict";
    var pluginName = "m_uptPassword",
        defaults = {
            savePasswordCallBack:null
        };

    // The actual plugin constructor
    function Plugin(element, options) {
        this.element = element;

        this.settings = $.extend({}, defaults, options);
        this._defaults = defaults;
        this._name = pluginName;
        this.init();
    }

    // Avoid Plugin.prototype conflicts
    $.extend(Plugin.prototype, {
        init: function () {
            var that = this;
            that.initHtml();

        }
        ,initHtml:function(){
            var that = this;
            S_dialog.dialog({
                title: '修改密码',
                //contentEle: 'changePassWordOBox',
                lock: 3,
                width: '500',
                tPadding: '0px',
                url: rootPath+'/assets/module/m_common/m_dialog.html',
                ok:function(){
                    var flag = $('form.changePassWordOBox').valid();
                    if(!flag){
                        return false;
                    }else{
                        that.savePassword();
                    }
                },
                okText:'保存',
                cancel:function(){},
                cancelText:'取消',
            },function(d){//加载html后触发
                var html = template('m_personal/m_uptPassword',{});
                $('div[id="content:'+d.id+'"]').html(html);
                that.savePassword_validate();
            });
        }
        //保存密码
        ,savePassword:function () {
            var that = this;
            var option  = {};
            option.url = restApi.url_changePassword;
            var $data = $('form.changePassWordOBox').serializeObject();
            option.postData = $data;
            m_ajax.postJson(option,function (response) {
                if(response.code=='0'){
                    S_dialog.success('修改成功，请重新登录!','提示',function(){
                        window.location.href = rootPath+'/iWork/sys/logout';
                    })
                }else {
                    S_dialog.error(response.info);
                    return false;
                }
            });
        }
        ,savePassword_validate:function(){
            $('form.changePassWordOBox').validate({
                rules: {
                    oldPassword: {
                        required: true
                    },
                    password:{
                        required:true,
                        minlength: 6,
                        maxlength:12
                    },
                    rePassword:{
                        required:true,
                        minlength: 6,
                        maxlength:12,
                        equalTo: "#password"
                    }
                },
                messages: {
                    oldPassword: {
                        required: '请输入旧密码！'
                    },
                    password:{
                        required:'请输入新密码！',
                        minlength:'密码为6-12位！',
                        maxlength:'密码为6-12位！'
                    },
                    rePassword:{
                        required:'请确认新密码！',
                        minlength:'密码为6-12位！',
                        maxlength:'密码为6-12位！',
                        equalTo: '两次密码输入不一致'
                    }
                }
            });
        }

    });

    $.fn[pluginName] = function (options) {
        return this.each(function () {

            //if (!$.data(this, "plugin_" + pluginName)) {
            $.data(this, "plugin_" +
                pluginName, new Plugin(this, options));
            //}
        });
    };

})(jQuery, window, document);

/**
 * Created by wrb on 2016/12/14.
 */
;(function ($, window, document, undefined) {

    "use strict";
    var pluginName = "m_userInfo",
        defaults = {
            doType: 'view',//操作类型{view=查看,edit=编辑}
            userDto: null//用户信息数据(当从外传入，则不需要重新请求)
        };

    // The actual plugin constructor
    function Plugin(element, options) {
        this.element = element;

        this.settings = $.extend({}, defaults, options);
        this._defaults = defaults;
        this._name = pluginName;

        this._originalFileGroup = '';
        this._originalFilePath = '';
        this._originalFileName = '';

        this.init();
    }

    // Avoid Plugin.prototype conflicts
    $.extend(Plugin.prototype, {
        init: function () {
            this.getUserInfo();
        },
        //渲染页面
        renderUserInfo: function () {
            var that = this;

            that.getCompanyDepartAndPermission(function (data) {
                var userDto = that.settings.userDto;

                userDto.orgpermissionList = data;
                if (userDto.headImg !== void 0 && userDto.headImg != null)
                    userDto.headImgUrl = window.fastdfsUrl + userDto.headImg;
                else
                    userDto.headImgUrl=window.rootPath+'/assets/img/default/default_headPic.png';
                if (that.settings.doType == 'edit')
                    var html = template('m_personal/m_userInfo_edit', {userDto: userDto});
                else
                    var html = template('m_personal/m_userInfo', {userDto: userDto});

                $(that.element).html(html);
                that.editableBind();
                that._bindUploadOrinalImage();
                that.bindActionClick();
                that.editableBind();
            });

        },
        //获取用户信息
        getUserInfo: function () {
            var that = this;
            var userDto = that.settings.userDto;
            if (userDto === void 0 || userDto === null) {
                var option = {};
                option.url = restApi.url_userInfo;
                m_ajax.get(option, function (response) {
                    if (response.code === '0') {
                        that.settings.userDto=response.data;
                        that.renderUserInfo();

                    } else {
                        S_dialog.error(response.info);
                    }
                });
            } else {
                that.renderUserInfo();

            }
        }

        //获取数据字典专业列表
        ,getMajor:function (callBack) {
            var option = {};
            option.url = restApi.url_getMajor;
            m_ajax.post(option, function (response) {
                if (response.code === '0') {
                   if(callBack!=null){
                       return callBack(response.data);
                   }
                } else {
                    S_dialog.error(response.info);
                }
            });
        }
        //获取人员组织权限信息
        ,getCompanyDepartAndPermission:function (callBack) {
            var option = {};
            option.url = restApi.url_getCompanyDepartAndPermission;
            option.postData = {};
            option.postData.accountId = window.currentUserId;
            option.postData.orgId = window.currentCompanyId;
            m_ajax.postJson(option, function (response) {
                if (response.code === '0') {
                    if(callBack!=null){
                        return callBack(response.data);
                    }
                } else {
                    S_dialog.error(response.info);
                }
            });
        }
        //在位编辑事件绑定
        ,editableBind:function(){
            var that = this;
            $(that.element).find('.editableInfo a[data-action="text_userName"]').editable({
                type : 'text'
                ,title : '编辑'
                ,placeholder : '请输入姓名'
                ,placement:'right'
                ,value:$.trim($(that.element).find('.editableInfo a[data-action="text_userName"]').text())
                ,mode: "popup"
                ,success:function(response,newValue){
                    that.saveUserInfo(newValue,function(){
                        $(this).text(newValue).css({'color':'#4765a0','font-weight':'normal'});
                        $('nav>div[id="navbar"]>ul>li>div').find('a[data-type="textUserName"]').text(newValue);
                    });
                }
                ,validate: function (value) {
                if ($.trim(value) == '') {
                    return "姓名不能为空！";
                }
            }
            });

            that.dealEmptyText();
        }
        //当在为编辑的文本显示为empty时，改为“请设置”
        ,dealEmptyText:function(){
            var that = this;
            $(that.element).find('.editableInfo a[data-action]').each(function(){
                var text = $(this).text();
                if(text=='Empty'){
                    $(this).text(text=='Empty'?'未设置':text).css({'color':'#ccc','font-style':'normal'});
                }
            });
        }
        //保存用户信息
        , saveUserInfo: function (value,callback) {
            var that = this;
            var option = {};
            option.url = restApi.url_userInfo;
            // var $data = $("form.userInfoForm").serializeObject();
            option.postData = {};
            option.postData.id = that.settings.userDto.id;
            option.postData.userName = value;
            m_ajax.postJson(option, function (response) {
                if (response.code == '0') {
                    S_toastr.success('保存成功！');
                    // $(that.element).m_userInfo(option.postData);
                    if(callback) return callback();
                } else {
                    S_dialog.error(response.info);
                }
            })
        }
        //按钮事件绑定
        , bindActionClick: function () {
            var that = this;
            $('.headImg a[data-action]').off('click');
            // $('.headImg a[data-action="changeHeadPic"]').on('click', function () {
            //         that._bindUploadOrinalImage();
            //     return false;
            // });

            $(that.element).find('a[data-action]').on('click',function () {

                var $this = this,dataAction = $(this).attr('data-action');

                if(dataAction=='bindPhone'){//绑定手机

                    $('body').m_bindPhone();

                }else if(dataAction=='changePwd'){//修改密码

                    $('body').m_uptPassword();//打开修改密码弹窗
                }else if(dataAction=='edit_designRange'){//修改专业

                    that.getMajor(function (data) {
                        $($this).m_popover({
                            placement: 'right',
                            content: template('m_personal/m_userInfo_major_edit', {majorList:data,majorId:that.settings.userDto.major}),
                            titleHtml: '<h3 class="popover-title">编辑</h3>',
                            onShown: function ($popover) {

                                $popover.find('.userInfo_profession_edit input[name="major"]').on('click',function (e) {

                                    stopPropagation(e);
                                })
                                $popover.find('.userInfo_profession_edit input[name="major"]').next().on('click',function (e) {
                                    $(this).prev().click();
                                })
                                that._saveUserMajor_validate();
                            },
                            onSave: function ($popover) {

                                if($(that.element).find('form.userInfo_profession_edit').valid()){
                                    var option = {};
                                    option.url = restApi.url_userInfo;
                                    option.postData = {};
                                    option.postData.id = that.settings.userDto.id;
                                    option.postData.major = $popover.find('.userInfo_profession_edit input[name="major"]:checked').val();
                                    m_ajax.postJson(option, function (response) {
                                        if (response.code == '0') {
                                            S_toastr.success('保存成功！');
                                            that.refresh();
                                        } else {
                                            S_dialog.error(response.info);
                                        }
                                    })
                                }else{
                                    return false;
                                }


                            }
                        }, true);
                        return false;
                    });

                }
                return false;
            });
        }
        //上传原图
        , _bindUploadOrinalImage: function () {
            var that = this;
            var userDto = that.settings.userDto;
            var headImg=null;
            var text=$('.imgContent .btnFilePicker').html();
            if (userDto.headImg !== void 0 && userDto.headImg != null)
                headImg=userDto.headImg;
            $('.imgContent .btnFilePicker').m_imgUploader({

                server: window.fileCenterUrl + "/fastUploadImage",
                formData: {
                    cut_deleteGroup:that.settings.cut_deleteGroup,
                    cut_deletePath:headImg
                },
                innerHTML: text,
                loadingId: 'body',
                uploadSuccessCallback: function (file, response) {
                    that._originalFileGroup = response.data.fastdfsGroup;
                    that._originalFilePath = response.data.fastdfsPath;
                    that._originalFileName = response.data.fileName;

                    that.toCutDialog();
                    //渲染图片
                    $('.m_imgCropper .img-container').attr('src', window.fastdfsUrl + that._originalFileGroup + '/' + that._originalFilePath);



                    $(that.element).find('.title:eq(0)').addClass('hide');
                    $(that.element).find('.setArea:eq(0)').removeClass('hide');



                    //S_toastr.success(response.info);
                }
            },true);
        }
        //调到裁剪窗口
        ,toCutDialog:function(){
            var that = this;
            var userDto = that.settings.userDto;
            var headImg=null;
            if (userDto.headImg !== void 0 && userDto.headImg != null)
                headImg=userDto.headImg;
            $('body').m_imgCropper({
                showDialog: true,
                zoomWidth: 180,
                zoomHeight: 180,
                originalFileGroup: that._originalFileGroup,
                originalFilePath: that._originalFilePath,
                originalFileName: that._originalFileName,
                cut_deletePath:headImg,
                croppedCallback: function (data) {
                    var ajaxOption={};
                    ajaxOption.url=restApi.url_saveOrUpdateUserAttach;
                    ajaxOption.postData={
                        fileGroup:data.fastdfsGroup,
                        filePath:data.fastdfsPath,
                        fileName:data.fileName,
                        userId:window.currentUserId
                    };
                    m_ajax.postJson(ajaxOption,function(response){
                        if(response.code==='0'){
                            var path = window.fastdfsUrl + data.fastdfsGroup + '/' + data.fastdfsPath;
                            $(that.element).find('#headImage').attr('src', path);
                            //右上角个人头像
                            $('#navbar ul.navbar-right li .img-circle').attr('src', path);
                            S_toastr.success("保存成功");
                        } else {
                            S_dialog.error(response.info);
                        }
                    });
                }
            });
        }
        //刷新当前组件
        ,refresh:function () {
            var that = this;
            var option = {};
            option.url = restApi.url_userInfo;
            m_ajax.get(option, function (response) {
                if (response.code == '0') {
                    that.userDto = response.data;
                    $('#box_detail').m_userInfo({userDto: that.userDto});
                } else {
                    S_dialog.error(response.info);
                }
            });
        }
        //金额比例验证
        ,_saveUserMajor_validate:function(){
            var that = this;
            $(that.element).find('form.userInfo_profession_edit').validate({
                rules: {
                    major:{
                        required:true
                    }
                },
                messages: {
                    major:{
                        required:'请选择专业!'
                    }
                },
                errorPlacement: function (error, element) { //指定错误信息位置
                    error.appendTo(element.closest('.row').find('.col-md-12'));
                }
            });
        }
    });

    $.fn[pluginName] = function (options) {
        return this.each(function () {
            new Plugin(this, options);
        });
    };

})(jQuery, window, document);

/**
 * Created by Wuwq on 2017/1/5.
 */
;(function ($, window, document, undefined) {

    "use strict";
    var pluginName = "m_popConfirm",
        defaults = {
            title: undefined,
            content: "您确定要执行该操作吗？",
            placement: "top",
            container: "body",
            btnYesText: "确定",
            btnNoText: "取消",
            hasClick: null,
            afterCallBack: null,
            onYes: undefined,
            onNo: undefined
        };

    function Plugin(element, options) {
        this.element = element;

        this.settings = $.extend({}, defaults, options);
        this._defaults = defaults;
        this._name = pluginName;
        this._last = null;
        this.init();
    }

    $.extend(Plugin.prototype, {
        init: function () {
            var that = this;
            var popConfirmId = _.uniqueId('popConfirm_');

            var template = null;
            if (that.settings.title)
                template = '<div class="popover" role="tooltip"><div class="arrow"></div><h3 class="popover-title"></h3><div class="popover-content"></div></div>';
            else
                template = '<div class="popover" role="tooltip"><div class="arrow"></div><div class="popover-content"></div></div>';

            var hide = function (popConfirmId) {
                $('.popover').each(function (i, o) {
                    if ($(o).find('#' + popConfirmId).length > 0) {
                        $(o).popover('hide');
                    }
                });
            };
            var popoverFunc = function (popConfirmId,template) {
                $('.popover').each(function (i, o) {
                    if ($(o).find('#' + popConfirmId).length == 0)
                        $(o).popover('hide');
                });
                $(that.element).popover({
                    trigger: 'manual',
                    title: that.settings.title,
                    html: true,
                    placement: that.settings.placement,
                    container: that.settings.container,
                    template: template,
                    content: '<div id="' + popConfirmId + '"><p style="font-size:13px;">' + that.settings.content + '</p>' + '<p style="margin-top: 10px; text-align: right;"><button type="button" class="popover-btn-no btn-u btn-u-default btn-u-xs rounded" style="margin-right: 4px !important;">' + that.settings.btnNoText + '</button><button type="button" class="popover-btn-yes btn-u btn-u-red btn-u-xs rounded">' + that.settings.btnYesText + '</button></p></div>'
                }).on('shown.bs.popover.' + popConfirmId, function () {

                    var $popConfirmId = $('#' + popConfirmId);
                    $popConfirmId.find('.popover-btn-yes:eq(0)').one('click', function () {
                        hide(popConfirmId);
                        if (that.settings.onYes)
                            that.settings.onYes(that.element);
                    });

                    $popConfirmId.find('.popover-btn-no:eq(0)').one('click', function () {
                        hide(popConfirmId);
                        if (that.settings.onNo)
                            that.settings.onNo(that.element);
                    });

                    $(document).on('click.' + popConfirmId, function (e) {
                        hide(popConfirmId);
                    });
                    if(that.settings.afterCallBack) return that.settings.afterCallBack();

                }).on('hidden.bs.popover.' + popConfirmId, function () {

                    $(document).off('click.' + popConfirmId);

                }).popover('show');
            };
            if(that.settings.hasClick){
                popoverFunc(popConfirmId,template);
            }else{
                $(that.element).click(function () {
                    popoverFunc(popConfirmId,template);
                });
            }

        }
    });

    $.fn[pluginName] = function (options) {
        return this.each(function () {
            new Plugin(this, options);
        });
    };

})(jQuery, window, document);

/**
 * 项目收支流程设置
 * 合同回款=2；技术审查费收款=3；技术审查费付款=4；合作设计费收款=5,；合作设计费付款=6
 * Created by wrb on 2018/7/17.
 */
;(function ($, window, document, undefined) {

    "use strict";
    var pluginName = "m_process_finance_setting",
        defaults = {
        };

    // The actual plugin constructor
    function Plugin(element, options) {
        this.element = element;

        this.settings = $.extend({}, defaults, options);
        this._defaults = defaults;
        this._name = pluginName;
        this._selectedOrg = null;//当前选中组织
        this._processList = [];//请求返回的数据缓存
        this.init();
    }

    // Avoid Plugin.prototype conflicts
    $.extend(Plugin.prototype, {
        init: function () {
            var that = this;
            var html = template('m_process/m_process_finance_setting',{});
            $(that.element).html(html);


            var option = {};
            option.$renderType = 1;
            option.$selectedCallBack = function (data) {
                that._selectedOrg = data;
                that.renderContent();
            };
            option.$renderCallBack = function (data) {

            };
            $(that.element).find('#left-box').m_org_chose_byTree(option);

        }

        //渲染右边（项目收支流程设置列表）
        ,renderContent:function () {
            var that = this;
            var option  = {};
            option.classId = '#content-right';
            option.url = restApi.url_getProcessByCompany;
            option.postData = {
                companyId:that._selectedOrg.id
            };
            m_ajax.postJson(option,function (response) {
                if(response.code=='0'){
                    that._processList = response.data;
                    var html = template('m_process/m_process_finance_setting_content',{
                        receiveProcessList:response.data.receiveProcessList,
                        payProcessList:response.data.payProcessList
                    });
                    $(that.element).find('#right-box').html(html);
                    that.initICheck();
                    that.bindActionClick();

                }else {
                    S_dialog.error(response.info);
                }
            });

        }
        ,initICheck:function () {
            var that = this;
            var ifChecked = function (e) {
            };
            var ifUnchecked = function (e) {
            };
            var ifClicked = function (e) {
                var param = {};
                if ($(this).is(':checked')) {
                    $(this).iCheck('uncheck');
                    param.status = 0;
                }else{
                    $(this).iCheck('check');
                    param.status = 1;
                }
                param.id = $(this).closest('tr').attr('data-id');
                that.saveChangeSelectionStatus(param);
            };
            $(that.element).find('input[name^="iCheck"]').iCheck({
                checkboxClass: 'icheckbox_square-pink',
                radioClass: 'iradio_square-blue'
            }).on('ifUnchecked.s', ifUnchecked).on('ifChecked.s', ifChecked).on('ifClicked',ifClicked);
        }
        //更改选择状态
        ,saveChangeSelectionStatus:function (param) {
            var that = this;
            var option = {};
            option.classId = '#content-right';
            option.url = restApi.url_selectedProcessForProjectPay;
            option.postData = param;
            m_ajax.postJson(option, function (response) {
                if(response.code=='0'){
                    S_toastr.success('操作成功！');
                }else {
                    S_dialog.error(response.info);
                }
            });
        }

        //事件绑定
        , bindActionClick:function () {
            var that = this;
            $(that.element).find('a[data-action],button[data-action]').off('click').on('click',function (e) {
                var $this = $(this),dataAction = $this.attr('data-action'),
                    $i = $this.closest('tr').attr('data-i');
                var dataId = $this.closest('tr').attr('data-id'),
                    dataProcessType = $this.closest('tr').attr('data-process-type'),
                    dataProcessId = $this.closest('tr').attr('data-process-id');

                switch (dataAction){
                    case 'add'://添加流程设置

                        var option = {};
                        option.$type = $this.attr('data-action-type');//0=收款，1=付款
                        option.$saveCallBack = function () {
                            that.renderContent();
                        };
                        $('body').m_process_finance_setting_add(option);

                        return false;
                        break;
                    case 'edit'://编辑流程设置

                        var option = {};
                        option.$type = $this.attr('data-action-type');//0=收款，1=付款
                        if(that._processList!=null && that._processList.receiveProcessList!=null && option.$type==0){
                            option.$processInfo = that._processList.receiveProcessList[$i];
                        }else if(that._processList!=null && that._processList.payProcessList!=null && option.$type==1){
                            option.$processInfo = that._processList.payProcessList[$i];
                        }else{
                            option.$processInfo = null;
                        }
                        option.$saveCallBack = function () {
                            that.renderContent();
                        };
                        $('body').m_process_finance_setting_add(option);
                        return false;
                        break;

                    case 'del'://删除流程

                        S_swal.confirm({
                            title:'确定删除该流程?',
                            text:'删除后将不能恢复，确定吗？',
                            callBack:function () {
                                var option = {};
                                option.classId = '#content-right';
                                option.url = restApi.url_deleteProcessForProjectPay;
                                option.postData = {};
                                option.postData.id = dataId;
                                m_ajax.postJson(option, function (response) {
                                    if (response.code == '0') {
                                        S_swal.sure({
                                            title:'已删除',
                                            text:'该流程删除成功。',
                                            callBack:function () {
                                                that.renderContent();
                                            }
                                        });
                                    } else {
                                        S_dialog.error(response.info);
                                    }
                                });
                            }
                        });

                        break;

                    case 'itemEdit'://编辑列表项

                        window.location.hash = '/backstageMgt/financeSettingProcess?processType='+dataProcessType+'&processId='+dataProcessId;
                        break;

                }

            });
        }

    });

    /*
     1.一般初始化（缓存单例）： $('#id').pluginName(initOptions);
     2.强制初始化（无视缓存）： $('#id').pluginName(initOptions,true);
     3.调用方法： $('#id').pluginName('methodName',args);
     */
    $.fn[pluginName] = function (options, args) {
        var instance;
        var funcResult;
        var jqObj = this.each(function () {

            //从缓存获取实例
            instance = $.data(this, "plugin_" + pluginName);

            if (options === undefined || options === null || typeof options === "object") {

                var opts = $.extend(true, {}, defaults, options);

                //options作为初始化参数，若args===true则强制重新初始化，否则根据缓存判断是否需要初始化
                if (args === true) {
                    instance = new Plugin(this, opts);
                } else {
                    if (instance === undefined || instance === null)
                        instance = new Plugin(this, opts);
                }

                //写入缓存
                $.data(this, "plugin_" + pluginName, instance);
            }
            else if (typeof options === "string" && typeof instance[options] === "function") {

                //options作为方法名，args则作为方法要调用的参数
                //如果方法没有返回值，funcReuslt为undefined
                funcResult = instance[options].call(instance, args);
            }
        });

        return funcResult === undefined ? jqObj : funcResult;
    };

})(jQuery, window, document);

/**
 * 项目收支流程设置-添加/编辑
 * Created by wrb on 2018/7/17.
 */
;(function ($, window, document, undefined) {

    "use strict";
    var pluginName = "m_process_finance_setting_add",
        defaults = {
            $title:null,
            $isDialog:true,
            $type:0,//0=收款，1=付款
            $processInfo:null,//流程信息，不为空即编辑
            $saveCallBack:null//保存后事件
        };

    // The actual plugin constructor
    function Plugin(element, options) {
        this.element = element;

        this.settings = $.extend({}, defaults, options);
        this._defaults = defaults;
        this._name = pluginName;
        this._applicableTeam = null;//适用团队选择
        this._associatedTeam = null;//关联团队选择


        this._typeName= this.settings.$type==0?'收款':'付款';
        this._editTypeName= this.settings.$processInfo==null?'新增':'编辑';


        this.init();
    }

    // Avoid Plugin.prototype conflicts
    $.extend(Plugin.prototype, {
        init: function () {
            var that = this;
            that.initHtmlData(function () {
                that.save_validate();

                //适用团队选择框
                var option = {};
                option.$buttonStyle = 'width: 516px;border-radius: 4px;';
                option.$spanStyle = 'width: 487px;display: inline-block;text-align: left;color: #444;font-size: 13px;';
                if(that.settings.$processInfo!=null && that.settings.$processInfo.companyId!=null & that.settings.$processInfo.companyId!=''){
                    option.$selectedId = that.settings.$processInfo.companyId;
                }
                option.$selectedCallBack = function (data) {
                    that._applicableTeam = data;
                };
                option.$renderCallBack = function () {
                };
                $(that.element).find('#applicableTeam').m_org_chose_byTree(option);

                //关联团队选择框
                var option1 = {};
                option1.$buttonStyle = 'width: 516px;border-radius: 4px;';
                option1.$spanStyle = 'width: 487px;display: inline-block;text-align: left;color: #444;font-size: 13px;';
                if(that.settings.$processInfo!=null && that.settings.$processInfo.companyId!=null & that.settings.$processInfo.companyId!=''){
                    option1.$selectedId = that.settings.$processInfo.relationCompanyId;
                }
                option1.$selectedCallBack = function (data) {
                    that._associatedTeam = data;
                };
                option1.$renderCallBack = function () {
                };
                $(that.element).find('#associatedTeam').m_org_chose_byTree(option1);


                $(that.element).find('select[name="receiptType"]').select2({
                    allowClear: false,
                    language: "zh-CN",
                    minimumResultsForSearch: -1
                });
                //编辑状态 展示信息处理
                if(that.settings.$processInfo!=null){
                    $(that.element).find('select[name="receiptType"]').val(that.settings.$processInfo.processType).trigger('change');
                    $(that.element).find('select[name="receiptType"]').prop("disabled", true);
                }
            });
        }
        //初始化数据并加载模板
        ,initHtmlData:function (callBack) {
            var that = this;
            if(that.settings.$isDialog){//以弹窗编辑
                S_dialog.dialog({
                    title: that.settings.$title||that._editTypeName+that._typeName+'计划流程',
                    contentEle: 'dialogOBox',
                    lock: 3,
                    width: '700',
                    tPadding: '0px',
                    overFlow:'unset',
                    url: rootPath+'/assets/module/m_common/m_dialog.html',
                    okText:'保存',
                    ok:function () {
                        if($(that.element).find('form.form-horizontal').valid()){
                            that.save();
                        }else{
                            return false;
                        }
                    },
                    cancel:function () {

                    }
                },function(d){//加载html后触发

                    that.element = 'div[id="content:'+d.id+'"] .dialogOBox';
                    that.renderPage();

                    if(callBack!=null){
                        callBack();
                    }

                });
            }else{//不以弹窗编辑

                that.renderPage();
                if(callBack!=null){
                    callBack();
                }
            }
        }
        //渲染界面
        ,renderPage:function () {
            var that = this;
            var html = template('m_process/m_process_finance_setting_add',{
                type:that.settings.$type,
                typeName:that._typeName,
                processInfo:that.settings.$processInfo
            });
            $(that.element).html(html);
        }

        //发送
        ,save:function () {
            var that = this;
            var option  = {};
            option.classId = that.element;
            option.url = restApi.url_saveProcess;
            option.postData = {
                processType:$(that.element).find('select[name="receiptType"]').val(),
                companyId:that._applicableTeam.id,
                relationCompanyId:that._associatedTeam.id,
                description:$(that.element).find('textarea[name="description"]').val()

            };
            if(that.settings.$processInfo!=null && that.settings.$processInfo.id!=null){
                option.postData.id = that.settings.$processInfo.id;
                option.postData.processId = that.settings.$processInfo.processId;
            }
            m_ajax.postJson(option,function (response) {
                if(response.code=='0'){
                    S_toastr.success('操作成功！');
                    if(that.settings.$saveCallBack!=null){
                        that.settings.$saveCallBack();
                    }
                }else {
                    S_dialog.error(response.info);
                }
            })

        }
        //保存验证
        ,save_validate:function(){
            var that = this;
            $(that.element).find('form.form-horizontal').validate({
                rules: {
                    receiptType:{
                        required:true
                    }
                },
                messages: {
                    receiptType:{
                        required:'请选择'+that._typeName+'类型!'
                    }
                },
                errorPlacement:function(error,element){
                    error.appendTo(element.parent());
                }
            });

        }

    });

    $.fn[pluginName] = function (options) {
        return this.each(function () {

            //if (!$.data(this, "plugin_" + pluginName)) {
            $.data(this, "plugin_" +
                pluginName, new Plugin(this, options));
            //}
        });
    };

})(jQuery, window, document);

/**
 * 项目收支流程-合同回款设置
 * Created by wrb on 2018/7/18.
 */
;(function ($, window, document, undefined) {

    "use strict";
    var pluginName = "m_process_finance_setting_contractPayment",
        defaults = {
            $processType:null,//流程类型
            $processId:null//流程ID
        };

    // The actual plugin constructor
    function Plugin(element, options) {
        this.element = element;

        this.settings = $.extend({}, defaults, options);
        this._defaults = defaults;
        this._name = pluginName;
        this._selectedOrg = null;//当前选中组织
        this.init();
    }

    // Avoid Plugin.prototype conflicts
    $.extend(Plugin.prototype, {
        init: function () {
            var that = this;

            var option  = {};
            option.classId= '#content-box';
            option.url = restApi.url_listProcessNode;
            option.postData = {
                processId:that.settings.$processId
            };
            m_ajax.postJson(option,function (response) {
                if(response.code=='0'){

                    var html = template('m_process/m_process_finance_setting_contractPayment',{listProcessNode:response.data});
                    $(that.element).html(html);
                    that.bindActionClick();
                    that.initICheck();

                }else {
                    S_dialog.error(response.info);
                }
            });


        }
        //初始化iCheck
        ,initICheck:function () {
            var that = this;
            var ifChecked = function (e) {
                var param = {};
                param.status = 1;
                param.nodeId = $(this).closest('tr').attr('data-id');
                param.processId = $(this).closest('tr').attr('data-process-id');
                param.statusType = $(this).attr('data-type');
                that.saveChangeSelectionStatus(param);
            };
            var ifUnchecked = function (e) {
                var param = {};
                param.status = 0;
                param.nodeId = $(this).closest('tr').attr('data-id');
                param.processId = $(this).closest('tr').attr('data-process-id');
                param.statusType = $(this).attr('data-type');
                that.saveChangeSelectionStatus(param);
            };
            $(that.element).find('input[name="iCheck"]').iCheck({
                checkboxClass: 'icheckbox_minimal-green',
                radioClass: 'iradio_square-blue'
            }).on('ifUnchecked.s', ifUnchecked).on('ifChecked.s', ifChecked);
        }
        //更改选择状态
        ,saveChangeSelectionStatus:function (param) {
            var that = this;
            var option = {};
            option.classId = '#content-right';
            option.url = restApi.url_selectedProcessNodeStatus;
            option.postData = param;
            m_ajax.postJson(option, function (response) {
                if(response.code=='0'){
                    S_toastr.success('操作成功！');
                }else {
                    S_dialog.error(response.info);
                }
            });
        }
        //事件绑定
        , bindActionClick:function () {
            var that = this;
            $(that.element).find('a[data-action],button[data-action]').off('click').on('click',function (e) {
                var $this = $(this),dataAction = $this.attr('data-action');
                var dataActionType = $this.attr('data-action-type');
                var dataId = $this.attr('data-id');
                switch (dataAction){
                    case 'viewTemplate':

                        $(that.element).find('a[data-action="viewTemplate"]').removeClass('active');
                        $this.addClass('active');
                        $(that.element).find('.panel#template'+dataActionType).show().siblings('.panel').hide();
                        break;

                    case 'back'://返回项目收支流程

                        window.history.go(-1);
                        break;

                }

            });
        }

    });

    /*
     1.一般初始化（缓存单例）： $('#id').pluginName(initOptions);
     2.强制初始化（无视缓存）： $('#id').pluginName(initOptions,true);
     3.调用方法： $('#id').pluginName('methodName',args);
     */
    $.fn[pluginName] = function (options, args) {
        var instance;
        var funcResult;
        var jqObj = this.each(function () {

            //从缓存获取实例
            instance = $.data(this, "plugin_" + pluginName);

            if (options === undefined || options === null || typeof options === "object") {

                var opts = $.extend(true, {}, defaults, options);

                //options作为初始化参数，若args===true则强制重新初始化，否则根据缓存判断是否需要初始化
                if (args === true) {
                    instance = new Plugin(this, opts);
                } else {
                    if (instance === undefined || instance === null)
                        instance = new Plugin(this, opts);
                }

                //写入缓存
                $.data(this, "plugin_" + pluginName, instance);
            }
            else if (typeof options === "string" && typeof instance[options] === "function") {

                //options作为方法名，args则作为方法要调用的参数
                //如果方法没有返回值，funcReuslt为undefined
                funcResult = instance[options].call(instance, args);
            }
        });

        return funcResult === undefined ? jqObj : funcResult;
    };

})(jQuery, window, document);

/**
 * 项目收支流程-技术审查费设置
 * Created by wrb on 2018/7/20.
 */
;(function ($, window, document, undefined) {

    "use strict";
    var pluginName = "m_process_finance_setting_technicalReviewFee",
        defaults = {
            $processType:null,//流程类型
            $processId:null//流程ID
        };

    // The actual plugin constructor
    function Plugin(element, options) {
        this.element = element;

        this.settings = $.extend({}, defaults, options);
        this._defaults = defaults;
        this._name = pluginName;
        this._selectedOrg = null;//当前选中组织
        this.init();
    }

    // Avoid Plugin.prototype conflicts
    $.extend(Plugin.prototype, {
        init: function () {
            var that = this;

            var option  = {};
            option.classId= '#content-box';
            option.url = restApi.url_listProcessNode;
            option.postData = {
                processId:that.settings.$processId
            };
            m_ajax.postJson(option,function (response) {
                if(response.code=='0'){

                    var html = template('m_process/m_process_finance_setting_technicalReviewFee',{listProcessNode:response.data});
                    $(that.element).html(html);
                    that.bindActionClick();
                    that.initICheck();

                }else {
                    S_dialog.error(response.info);
                }
            });


        }
        //初始化iCheck
        ,initICheck:function () {
            var that = this;
            var ifChecked = function (e) {
                var param = {};
                param.status = 1;
                param.nodeId = $(this).closest('tr').attr('data-id');
                param.processId = $(this).closest('tr').attr('data-process-id');
                param.statusType = $(this).attr('data-type');
                that.saveChangeSelectionStatus(param);
            };
            var ifUnchecked = function (e) {
                var param = {};
                param.status = 0;
                param.nodeId = $(this).closest('tr').attr('data-id');
                param.processId = $(this).closest('tr').attr('data-process-id');
                param.statusType = $(this).attr('data-type');
                that.saveChangeSelectionStatus(param);
            };
            $(that.element).find('input[name="iCheck"]').iCheck({
                checkboxClass: 'icheckbox_minimal-green',
                radioClass: 'iradio_square-blue'
            }).on('ifUnchecked.s', ifUnchecked).on('ifChecked.s', ifChecked);
        }
        //更改选择状态
        ,saveChangeSelectionStatus:function (param) {
            var that = this;
            var option = {};
            option.classId = '#content-right';
            option.url = restApi.url_selectedProcessNodeStatus;
            option.postData = param;
            m_ajax.postJson(option, function (response) {
                if(response.code=='0'){
                    S_toastr.success('操作成功！');
                }else {
                    S_dialog.error(response.info);
                }
            });
        }
        //事件绑定
        , bindActionClick:function () {
            var that = this;
            $(that.element).find('a[data-action],button[data-action]').off('click').on('click',function (e) {
                var $this = $(this),dataAction = $this.attr('data-action');
                var dataActionType = $this.attr('data-action-type');
                var dataId = $this.attr('data-id');
                switch (dataAction){
                    case 'back'://返回项目收支流程

                        window.history.go(-1);
                        break;
                }

            });
        }

    });

    /*
     1.一般初始化（缓存单例）： $('#id').pluginName(initOptions);
     2.强制初始化（无视缓存）： $('#id').pluginName(initOptions,true);
     3.调用方法： $('#id').pluginName('methodName',args);
     */
    $.fn[pluginName] = function (options, args) {
        var instance;
        var funcResult;
        var jqObj = this.each(function () {

            //从缓存获取实例
            instance = $.data(this, "plugin_" + pluginName);

            if (options === undefined || options === null || typeof options === "object") {

                var opts = $.extend(true, {}, defaults, options);

                //options作为初始化参数，若args===true则强制重新初始化，否则根据缓存判断是否需要初始化
                if (args === true) {
                    instance = new Plugin(this, opts);
                } else {
                    if (instance === undefined || instance === null)
                        instance = new Plugin(this, opts);
                }

                //写入缓存
                $.data(this, "plugin_" + pluginName, instance);
            }
            else if (typeof options === "string" && typeof instance[options] === "function") {

                //options作为方法名，args则作为方法要调用的参数
                //如果方法没有返回值，funcReuslt为undefined
                funcResult = instance[options].call(instance, args);
            }
        });

        return funcResult === undefined ? jqObj : funcResult;
    };

})(jQuery, window, document);

/**
 * 甲方
 * Created by wrb on 2018/2/5.
 */
;(function ($, window, document, undefined) {

    "use strict";
    var pluginName = "m_partyA",
        defaults = {
            $eleId:null
        };

    // The actual plugin constructor
    function Plugin(element, options) {
        this.element = element;

        this.settings = $.extend({}, defaults, options);
        this._defaults = defaults;
        this._name = pluginName;
        this.init();
    }

    // Avoid Plugin.prototype conflicts
    $.extend(Plugin.prototype, {
        init: function () {
            var that = this;
            that.initHtml();
        },
        //初始化
        initHtml: function () {
            var that = this;
            var html = template('m_projectAdd/m_partyA', {});
            $(that.element).html(html);
            that.bindSearchPartyAClick();
        }

        //绑定事件
        , bindSearchPartyAClick:function () {
            var that = this;
            $(that.element).find('button[data-action="searchPartyA"]').off('click').on('click',function () {
                var $this = $(this);
                var partyAName = $('input[id="'+that.settings.$eleId+'"]').val();
                partyAName = $.trim(partyAName);
                if(partyAName==''){
                    return;
                }
                var option = {};
                option.url = restApi.url_enterpriseSearch;
                option.classId = '#partyAList';
                option.postData={
                    name:partyAName
                };
                m_ajax.postJson(option, function (response) {
                    if (response.code == '0') {

                        var html = template('m_projectAdd/m_partyA_list', {
                            partyAList:response.data.details
                        });
                        $(that.element).find('#partyAList').html(html);
                        that.bindSelectPartyA();

                    } else {
                        S_dialog.error(response.info);
                    }
                });


            });
        }

        //绑定选择事件
        , bindSelectPartyA:function () {
            var that = this;
            $(that.element).find('a[data-action="selectPartyA"]').off('click').on('click',function () {
                var $this = $(this);
                var dataId = $this.attr('data-id');
                var name = $this.text();

                $('input[id="'+that.settings.$eleId+'"]').val(name);
                $('input[id="'+that.settings.$eleId+'"]').attr('data-id',dataId);
                $(that.element).hide();

            });
        }


    });

    $.fn[pluginName] = function (options) {
        return this.each(function () {

            //if (!$.data(this, "plugin_" + pluginName)) {
            $.data(this, "plugin_" +
                pluginName, new Plugin(this, options));
            //}
        });
    };

})(jQuery, window, document);



/**
 * Created by Wuwq on 2017/1/5.
 */
;(function ($, window, document, undefined) {

    "use strict";
    var pluginName = "m_projectAdd",
        defaults = {
            rangeList: [],
            contentList: [],
        };

    function Plugin(element, options) {
        this.element = element;

        this.settings = options;
        this._defaults = defaults;
        this._name = pluginName;
        this._contentList=null;
        this._constructCompanyList = [];//甲方列表
        this._projectTypeList = [];//项目列表
        this.init();
    }

    $.extend(Plugin.prototype, {
        init: function () {
            var that = this;
            that._render();
        }
        , _render: function () {
            var that = this;
            // var html = template('m_projectAdd/m_projectAdd', {});
            // $(that.element).html(html);
            that.getProjectType(function(){
                that.getBasicData();
            });
        }
        //地区选择事件绑定
        , bindAddressClick:function () {
            var that = this;
            $(that.element).find('.cityBox select').change(function () {
                var w = 508;
                var p = $(that.element).find('select.prov').val();
                var c = $(that.element).find('select.city').val();
                var d = $(that.element).find('select.dist').val();
                if(p==null|| p==undefined)
                    p='';
                if(c==null|| c==undefined)
                    c='';
                if(d==null|| d==undefined)
                    d='';
                var txt = p+c+d;
                $(that.element).find('.cityText').html(txt);
                $(that.element).find('.detailAddressLabel').css('width',(w-(txt.length*14)-5)+'px');
            });
        }
        , getProjectType:function (callBack) {
            var that = this;
            var option  = {};
            option.url = restApi.url_projectType;
            option.postData = {};
            m_ajax.postJson(option,function (response) {
                if(response.code=='0'){
                    that._projectTypeList = response.data;
                    if(callBack!=null){
                        return callBack();
                    }
                }else {
                    S_dialog.error(response.info);
                }
            })
        }
        //获取立项基本数据（设计范围，设计阶段）
        , getBasicData: function () {
            var that = this;

            var option = {};
            option.url = restApi.url_addProjectBasicData;
            option.classId = '.addProjectOBox';
            m_ajax.postJson(option, function (response) {
                if (response.code == '0') {

                    var $data = {};
                    $data.rangeList = response.data.rangeList;
                    $data.contentList = response.data.contentList;
                    $data.projectTypeList = that._projectTypeList;
                    that._contentList=response.data.contentList;
                    that._constructCompanyList = response.data.projectConstructList;

                    var html = template('m_projectAdd/m_projectAdd', $data);
                    $(that.element).html(html);

                    $("#selectRegion").citySelect({
                        prov:null,
                        city:null,
                        dist:null,
                        nodata:"none",
                        required:false
                    });
                    that.constructKeyupFun();
                    that.bindAddressClick();
                    that.bindDesignContent($(that.element));

                    that.bindChooseManagerBtn();
                    that.bindBtnSave();

                    that.bindChoseTemplateFun();
                    that.bindBtnAddDesignContent(that._contentList);
                    $(that.element).find('span[data-toggle="tooltip"]').tooltip();


                    $(that.element).find('button[data-toggle]').off('click').on('click',function () {
                        $(that.element).find('ul.dropdown-menu').toggle();
                    });
                    $(that.element).find('.project-type ul>li>a').off('click').on('click',function () {
                        var name = $(this).text();
                        $(that.element).find('input[name="projectType"]').val(name);
                        $(that.element).find('ul.dropdown-menu').toggle();
                    });


                } else {
                    S_dialog.error(response.info);
                }
            });
        }


        //给甲方表单增加keyup事件，进行模糊搜索
        , constructKeyupFun:function(){
            var that = this;
            $(that.element).find('input#constructCompanyName').bind("input propertychange change focus",function(event){
                var $this = $(this);
                var txt = $this.val();
                var mPartyALen = $('.m_partyA').length;
                if ($.trim(txt) != '' && mPartyALen==0) {
                    var option = {};
                    option.$eleId = 'constructCompanyName';
                    $(that.element).find('.partyA-select-box').m_partyA(option);
                    $(that.element).find('.partyA-select-box').show();
                    that.documentBindFun();
                }else if($.trim(txt)!=''){
                    $(that.element).find('.partyA-select-box').show();
                }
            });

        }
        //window document事件绑定
        ,documentBindFun:function () {
            var that = this;
            $(document).bind('click',function(e){
                console.log('document event');
                if(!($(e.target).closest('.partyA-select-box').length>0 || $(e.target).hasClass('partyA-select-box') || $(e.target).hasClass('constructCompanyName'))){
                    $(that.element).find('.partyA-select-box').hide();
                }
            });
        }
        //处理甲方列表
        , dealConstructCompanyLIst: function (data) {
            var that = this;
            var list = [];
            $.each(data, function (i, item) {//constructCompany: constructCompanyName:
                list.push({id: item.companyId, value: item.companyName});
            });
            return list;
        }
        //给模板的设计阶段绑定checkbox点击事件
        , bindDesignContent: function ($obj) {
            var that = this;
            $obj.find('.i-checks input[name="designContent"]').iCheck({
                checkboxClass: 'icheckbox_minimal-green',
                radioClass: 'iradio_minimal-green'
            }).on('ifChecked', function (e) {
                var $li = $(this).closest('span.designContentDiv');
                var $btnSetTime = $li.find('a[data-action="edit_setDesignContentTime"]:first');
                $btnSetTime.on('click',function () {
                    var options = {};
                    options.$isHaveMemo = false;
                    options.$title = '设置进度';
                    options.$timeInfo = {};

                    options.$timeInfo.startTime = $btnSetTime.attr('data-startTime') || '';
                    options.$timeInfo.endTime = $btnSetTime.attr('data-endTime') || '';
                    options.$validate = 2;
                    options.$okCallBack = function (data) {
                        $btnSetTime.attr('data-startTime', data.startTime);
                        $btnSetTime.attr('data-endTime', data.endTime);

                        var content = '';
                        var startTime = data.startTime;
                        var endTime = data.endTime;
                        if (!isNullOrBlank(startTime))
                            content += startTime;
                        if (!isNullOrBlank(endTime))
                            content += '~' + endTime;
                        if (!isNullOrBlank(startTime) && !isNullOrBlank(endTime))
                            content += (' 共' + (diffDays(startTime, endTime) - 0 + 1) + '天');

                        if(!isNullOrBlank(startTime) || !isNullOrBlank(endTime)){
                            $btnSetTime.html(content).css('color','#4765a0').removeClass('editable-empty');
                        }else{
                            $btnSetTime.html('设置合同进度').css('color','#4765a0').addClass('editable-empty').removeAttr('style');
                        }
                    };
                    $('body').m_inputProcessTime(options);
                });
            });
            if($obj[0]==that.element){
                $obj.find('.i-checks input[name="designContent"]').on('ifUnchecked', function (e) {
                    var $li = $(this).closest('span.designContentDiv');
                    var $btnSetTime = $li.find('a[data-action="edit_setDesignContentTime"]:first');
                    $btnSetTime.attr('data-startTime', '');
                    $btnSetTime.attr('data-endTime', '');
                    $(this).closest('span.designContentDiv').find('a[data-action="edit_setDesignContentTime"]:first').text('设置合同进度').css('color','#ccc');
                    $btnSetTime.off('click');
                });
            }else{
                $obj.find('.i-checks input[name="designContent"]').on('ifUnchecked', function (e) {
                    $obj.remove();
                });
            }
        }
        //立项提交事件
        , saveAddProjectFunc: function () {
            var that = this;
            var option = {};
            option.url = restApi.url_project;
            option.classId = 'body';
            option.postData = {};
            var projectName = $(that.element).find('input[name="projectName"]').val();
            option.postData.projectName = projectName;
            option.postData.flag = 2;//新建甲方的标识
            option.postData.constructCompanyName = $(that.element).find('input[name="constructCompanyName"]').val();
            //option.postData.enterpriseId = $(that.element).find('select[name="constructCompanyName"]').val();
            option.postData.province = $(that.element).find('select[name="province"]').val();
            option.postData.city = $(that.element).find('select[name="city"]').val();
            option.postData.county = $(that.element).find('select[name="county"]').val();
            option.postData.detailAddress = $(that.element).find('input[name="detailAddress"]').val();

            option.postData.projectType = $(that.element).find('input[name="projectType"]').val();

            //option.postData.projectDesignContentList = [];
            /*var timeIsNull = false;//确定合同进度是否为空
            $(that.element).find('input[name="designContent"]:checked').each(function () {
                var obj = {
                    contentId: $(this).attr('data-id'),
                    insertStatus: '0',
                    contentName: $(this).attr('data-name')
                };
                var $span = $(this).closest('span');
                var $btnSetTime = $span.find('a[data-action="edit_setDesignContentTime"]:first');
                var startTime = $btnSetTime.attr('data-startTime');
                var endTime = $btnSetTime.attr('data-endTime');
                var $_class = $(this).closest('.designContentDiv').find('a[data-action="edit_setDesignContentTime"]')[0].className;

                /!*if($_class.indexOf('editable-empty')>0){
                 return timeIsNull = true;
                 }*!/

                if (!isNullOrBlank(startTime) || !isNullOrBlank(endTime)) {
                    obj.projectProcessTimeEntityList = [];
                    obj.projectProcessTimeEntityList.push({
                        startTime: startTime,
                        endTime: endTime
                    });
                }

                option.postData.projectDesignContentList.push(obj);
            });*/
            /*if(timeIsNull){
             return S_dialog.tips('请设置合同进度');
             }*/
            m_ajax.postJson(option, function (response) {
                if (response.code == '0') {

                    S_toastr.success('保存成功！');
                    // return;
                    //var urlBaseInfo = window.rootPath + '/iWork/project/projectInformation/' + response.data + '/1';
                    ///window.location.href = urlBaseInfo;

                    that.goProjectDetail(response.data,projectName);

                } else {
                    S_dialog.error(response.info);
                }
            });
        }
        , goProjectDetail:function (id,name) {
            var that = this;
            /*var option = {};
            option.$projectId = id;
            option.$projectName = name;
            option.$contentEle = '#content-right';
            $('#left-menu-box').m_metismenu(option);*/
            location.hash = '/projectDetails/basicInfo?id='+id+'&projectName='+encodeURI(name);
        }
        //立项提交按钮绑定事件（只在非弹窗显示状态下才调用）
        , bindBtnSave: function () {
            var that = this;
            $(that.element).find('.btn-submit').on('click', function (e) {
                that.validateSaveAppProject() && that.saveAddProjectFunc();
                stopPropagation(e);
            });
            $(that.element).find('.btn-cancel').on('click', function (e) {
                //window.location.reload();
                //$('.m_metismenu a[id="projectList"]').click();
                location.hash = '/';
                stopPropagation(e);
            });
        }
        //地区选择
        , bindRegionSelect: function () {
            var that = this;
            $("#selectRegion").citySelect({
                nodata: "none",
                required: false
            });
            $(that.element).find('.cityBox select').change(function () {
                var w = 678;
                var p = $(that.element).find('select.prov').val();
                var c = $(that.element).find('select.city').val();
                var d = $(that.element).find('select.dist').val();
                if (p == null || p == undefined)
                    p = '';
                if (c == null || c == undefined)
                    c = '';
                if (d == null || d == undefined)
                    d = '';
                var txt = p + c + d;
                $(that.element).find('.cityText').html(txt);
                $(that.element).find('.detailAddressLabel').css('width', (w - (txt.length * 14) - 5) + 'px');
            });
        }
        //点击展开选择经营负责人弹窗
        , bindChooseManagerBtn: function () {
            var that = this;
            $(that.element).find('select[name="chooseManager"]').select2({
                placeholder: {
                    id: '',
                    text: '请输入关键字查找'
                },
                clear: true,
                language: "zh-CN",
                ajax: {
                    contentType: "application/json",
                    url: restApi.url_getUserByKeyWord,
                    dataType: 'json',
                    type: 'POST',
                    delay: 500,
                    data: function (params) {
                        var ret = {
                            keyword: params.term,
                            companyId: window.currentCompanyId
                        };
                        return JSON.stringify(ret);
                    },
                    processResults: function (data, params) {
                        return {
                            results: $.map(data.data, function (o, i) {
                                return {
                                    id: o.id,
                                    text: o.user_name
                                }
                            })
                        };
                    },
                    cache: true
                }
            });
        }
        //绑定模板选择相关按钮
        , bindChoseTemplateFun:function(){
            var that = this;
            $(that.element).find('li.designContentTemplate a').on('click',function(){
                var action = $(this).attr('data-action');
                if(action=='withoutTemplate'){
                    var $designContentLi = $(this).closest('ul').find('li.designContentLi');
                    if($designContentLi.find('span').length>0){
                        $designContentLi.html('');
                        $(this).closest('li').find('a').removeClass('actived');
                        $(this).addClass('actived');
                    }
                }else if(action=='choseTemplate'){
                    var iHtml = template('m_projectAdd/m_designContent_template',{contentList:that._contentList});
                    var $designContentLi = $(this).closest('ul').find('li.designContentLi');
                    if($(this).attr('disabled')&&$(this).attr('disabled').length>0){
                        return false;
                    }
                    $designContentLi.html('');
                    if(!($designContentLi.find('span').length>0)){
                        $designContentLi.append(iHtml);
                        that.bindDesignContent($(that.element));
                        $(this).closest('li').find('a').removeClass('actived');
                        $(this).addClass('actived');
                    }
                }
                return false;
            });
        }
        //绑定添加自定义阶段事件
        , bindBtnAddDesignContent:function () {
            var that = this;
            $(that.element).find('a[data-action="addDesignContent"]').on('click',function(e){
                var options = {};
                var $this = $(this);
                options.designContentNameList = [];
                $(that.element).find('.designContentDiv').each(function(){
                    var text = $.trim($(this).find('div>span').text());
                    options.designContentNameList.push(text);

                });
                options.callBack = function(data){
                    data.$obj = $this;
                    that.renderNewHtml(data);
                };
                $(this).m_projectDesignContent_add(options);
                stopPropagation(e);
            });
            $(that.element).find('a[data-action="addDesignContent"]').on('click.bindClear', function (e) {

                var $this = $(this);
                var $$this = $this.closest('li').find('.editable-container input.form-control');
                // $$this.unbind();
                $$this.val('');
                stopPropagation(e);
            });

        }
        //成功添加阶段时渲染新的阶段内容
        , renderNewHtml :function(data){
            var that = this;
            var diff = timeDiffTime(data.startTime,data.endTime);
            var iHtml = '';
            iHtml += '<span class="design_item designContentDiv" data-i="">' +
                '<label class="i-checks dp-inline-block" style="margin-bottom: 0;">' +
                '<input name="designContent" class="checkbox dinline" type="checkbox" value="" data-name="'+data.contentName+'"/>' +
                '</label>' +
                '<div class="pull-left">' +
                '<span class="content-name" data-toggle="tooltip" data-original-title="'+data.contentName+'">'+data.contentName+'</span>';

            if(data.startTime!=undefined || data.endTime!=undefined){
                var startTime = data.startTime;
                var endTime = data.endTime;
                var content = '';
                if (!isNullOrBlank(startTime)){
                    content += startTime;
                }else{
                    data.startTime = '';
                }
                if (!isNullOrBlank(endTime)){
                    content += '~' + endTime;
                }else {
                    data.endTime = '';
                }
                if (!isNullOrBlank(startTime) && !isNullOrBlank(endTime))
                    content += (' 共' + (diffDays(startTime, endTime) - 0 + 1) + '天');

                iHtml += '<a href="javascript:void(0)" class="editable editable-click dp-block" data-action="edit_setDesignContentTime"  data-startTime="'+data.startTime+'"' +
                    ' data-endTime="'+data.endTime+'">'+content+' </a>';
            }else{
                iHtml += '<a href="javascript:void(0)" class="editable editable-click editable-empty dp-block" data-action="edit_setDesignContentTime"  data-startTime="" data-endTime="">设置合同进度</a>' ;
            }

            iHtml += '</div></span>';

            $(that.element).find('li.designContentLi').append(iHtml);

            var $lastEle = (data.$obj).closest('ul').find('li.designContentLi span.designContentDiv:last');

            that.bindDesignContent($lastEle);

            $lastEle.find('input[name="designContent"]').iCheck('check');

            if($(that.element).find('#designContent-error').length>0){
                $(that.element).find('#designContent-error').remove();
            }
            $(that.element).find('span[data-toggle="tooltip"]').tooltip();
        }
        //设计设计内容名称编辑绑定事件
        , bindEditDesignContentName: function ($obj) {
            $obj.editable( {
                type: 'text'
                , mode: 'inline'
                , placeholder: '输入或选择要添加的设计内容'
                // , value: $obj.text()
                , emptytext: ''
                , success: function (response, newValue) {
                }
                , validate: function(value){
                    if ($.trim(value) == '') {
                        S_toastr.warning("设计内容不能为空！");
                        return ' ';
                    }
                }
            });
        }
        //甲方(暂无用)
        , selectFun:function () {
            var that = this;
            $(".js-example-disabled-results").select2({
                language: "zh-CN",
                ajax: {
                    contentType: "application/json",
                    url: restApi.url_enterpriseSearch,
                    dataType: 'json',
                    type:'POST',
                    delay: 500,
                    data: function (params) {
                        var ret={
                            name: params.term // search term
                        };
                        return JSON.stringify(ret);
                    },
                    processResults: function (data, params) {
                        return {
                            results: $.map(data.data.details,function(o,i){
                                return {
                                    id:o.companyid,
                                    text:o.corpname
                                }
                            })
                        };
                    },
                    cache: true
                }
            });
        }
        //验证设计设计内容是否为空
        , validateSaveAppProject:function(){
            var that = this,error = '';
            $(that.element).find('input,select').each(function(){
                var $this = $(this);
                var name = $(this).attr('name');
                if($.trim($this.val())==''){
                    switch (name){
                        case 'projectType':
                            error = '请输入或选择项目类型!';
                            break;
                        case 'projectName':
                            error = '请输入项目名称!';
                            break;
                        case 'constructCompanyName':
                            error = '请输入甲方名称!';
                            break;
                        case 'province':
                            error = '请选择所在地区!';
                            break;

                    };
                    return false;
                }
            });
            /*var flag = $(that.element).find('.designContentBox li.designContentLi span.designContentDiv input[name="designContent"]:checked').length>0;
            if(!flag && error==''){
                error='请设置设计内容!';
            }*/
            if( error!=''){
                S_toastr.warning(error);
                return false;
            }else{
                return true;
            }
        }
    });

    /*
     1.一般初始化（缓存单例）： $('#id').pluginName(initOptions);
     2.强制初始化（无视缓存）： $('#id').pluginName(initOptions,true);
     3.调用方法： $('#id').pluginName('methodName',args);
     */
    $.fn[pluginName] = function (options, args) {
        var instance;
        var funcResult;
        var jqObj = this.each(function () {

            //从缓存获取实例
            instance = $.data(this, "plugin_" + pluginName);

            if (options === undefined || options === null || typeof options === "object") {

                var opts = $.extend(true, {}, defaults, options);

                //options作为初始化参数，若args===true则强制重新初始化，否则根据缓存判断是否需要初始化
                if (args === true) {
                    instance = new Plugin(this, opts);
                } else {
                    if (instance === undefined || instance === null)
                        instance = new Plugin(this, opts);
                }

                //写入缓存
                $.data(this, "plugin_" + pluginName, instance);
            }
            else if (typeof options === "string" && typeof instance[options] === "function") {

                //options作为方法名，args则作为方法要调用的参数
                //如果方法没有返回值，funcReuslt为undefined
                funcResult = instance[options].call(instance, args);
            }
        });

        return funcResult === undefined ? jqObj : funcResult;
    };

})(jQuery, window, document);
/**
 * 选择人员
 * Created by wrb on 2017/5/26.
 */
;(function ($, window, document, undefined) {

    "use strict";
    var pluginName = "m_choseUserBox",
        defaults = {
            //$orgId:null//组织ID
        };

    // The actual plugin constructor
    function Plugin(element, options) {
        this.element = element;

        this.settings = $.extend({}, defaults, options);
        this._defaults = defaults;
        this._name = pluginName;

        this.init();
    }

    // Avoid Plugin.prototype conflicts
    $.extend(Plugin.prototype, {
        init: function () {
            this.initUserData();
        }
        //人员数据并加载模板
        , initUserData: function () {

            var that = this;
            var html = template('m_production/m_choseUserBox', {});
            $(that.element).html(html);

            that.initTreeData(function (data) {

                that.initTreeStructure(data);
                that.closeTreeBox();

            });
            that.bindBtnFilter();


        }
        ,renderUserListPage:function (orgId) {
            var that = this;
            var url = that.settings.userUrl != null && that.settings.userUrl != '' ? that.settings.userUrl : restApi.url_getOrgUser;
            var params = {};
            params.orgId = orgId;
            paginationFun({
                eleId: '#userlist-pagination-container',
                loadingId: '.userListBox',
                url: url,
                params: params
            }, function (response) {

                var $data = {};
                $data.orgUserList = response.data.data;
                var html = template('m_production/m_choseUserList', $data);
                $(that.element).find('#userListBox').html(html);
                that.bindChoseOrgUser();

            });
        }
        //按钮绑定控制树展示与否
        ,bindBtnFilter:function () {
            var that = this;
            $(that.element).find('button[name="btn-filter"]').off('click').on('click',function () {
                var treeBox = $(that.element).find('.chose-user-tree');
                if(treeBox.hasClass('hide')){
                    treeBox.removeClass('hide');
                }else{
                    treeBox.addClass('hide');
                }
            });

        }
        //选择用户
        ,bindChoseOrgUser:function () {

            var that = this;
            $(that.element).find('a[data-action="choseOrgUser"]').on('click',function () {

                var iHtml='',companyUserId = $(this).attr('data-id'),userId = $(this).attr('data-user-id'),userName = $(this).closest('TR').find('td:first').html(),
                    i = $(this).attr('data-i');

                if($('.designerRow[data-node-seq="'+i+'"]').find('.user-list .designerSpan[data-companyUserId="'+companyUserId+'"]').length>0){

                }else{
                    iHtml += '<span class="label label-default inline m-r-xs m-b-xs designerSpan" data-companyUserId="' + companyUserId + '">';
                    iHtml += '<span class="nameSpan">' + userName + '</span>';
                    iHtml += '<a href="javascript:void(0)" data-action="delDesigner"><i class="glyphicon glyphicon-remove text-danger"></i></a>';
                    iHtml += '</span>';

                    $('.designerRow[data-node-seq="'+i+'"]').find('.user-list').append(iHtml);
                    $('.designerRow[data-node-seq="'+i+'"]').find('.user-list .designerSpan:last a[data-action="delDesigner"]').on('click',function () {
                        $(this).parent('.designerSpan').remove();
                        return false;
                    });
                }


            });

        }
        //初始化树数据
        , initTreeData: function (callBack) {

            var that = this;
            var option = {};
            option.url = that.settings.treeUrl != null && that.settings.treeUrl != '' ? that.settings.treeUrl : restApi.url_getOrgTreeForSearch;
            m_ajax.get(option, function (response) {
                if (response.code == '0') {
                    if(that.settings.initTreeDataCallBack){
                        that.settings.initTreeDataCallBack(response.info);
                    }
                    if (callBack != null) {
                        return callBack(response.data);
                    }
                } else {
                    S_dialog.error(response.info);
                }

            })
        }
        //生成树结构
        , initTreeStructure: function (orgData) {
            var that = this;
            var $tree = $('#organizationTree');
            $tree.jstree({
                'core': {
                    'check_callback': true,
                    'data': orgData
                },
                'plugins': ['types'],
                'types': {
                    'default': {
                        'icon': 'fa fa-users'
                    },
                    'independent': {   //独立经营图标
                        'icon': 'fa fa-trademark'
                    },
                    'partner': {       //合作伙伴图标

                        'icon': 'fa fa-share-alt'
                    },
                    'root': {         //根节点图标
                        'icon': 'fa fa-building'
                    }
                }
            }).on('select_node.jstree', function (e, data) {

                var currOrgObj = data.node.original;//获取当前树的对象
                that.settings.currOrgTreeObj = currOrgObj;
                var inst = data.instance;
                var parentOrgObj = inst.get_node(data.node.parent).original;

                that.renderUserListPage(data.node.original.realId);//分页
                $(that.element).find('.chose-user-tree').addClass('hide');

                $(that.element).find('#orgName').html(currOrgObj.text);


            }).on('ready.jstree', function (e, data) {//loaded.jstree

                var inst = data.instance;
                var obj = inst.get_node(e.target.firstChild.firstChild.lastChild);
                var currOrgObj = obj.original;//获取当前树的对象
                var tree = $('#organizationTree').jstree(true);
                var selectedObj = tree.get_selected();

                if (selectedObj != null && selectedObj != undefined) {
                    var selectedTreeObj = tree.get_node(selectedObj[0]);
                    currOrgObj = selectedTreeObj.original;//获取当前树的对象
                }
                that.settings.currOrgTreeObj = currOrgObj;
                $(that.element).find('#orgName').html(currOrgObj.text);

            });
            that.renderUserListPage(orgData.realId);
        }

        //当鼠标点击的焦点不在浮窗内时，关闭浮窗
        ,closeTreeBox:function() {
            var that = this;
            $('body').on('click', function (event) {

                if ($(event.target).parents('.chose-user-tree').length < 1 && !($(event.target).attr('name')=='btn-filter')
                    && !$(event.target).hasClass('btn-filter-name') && !$(event.target).hasClass('btn-filter-icon')) {

                    var treeBox = $(that.element).find('.chose-user-tree');
                    if(!treeBox.hasClass('hide')){
                        treeBox.addClass('hide');
                    }
                }
            })
        }

    });

    $.fn[pluginName] = function (options) {
        return this.each(function () {

            //if (!$.data(this, "plugin_" + pluginName)) {
            $.data(this, "plugin_" +
                pluginName, new Plugin(this, options));
            //}
        });
    };

})(jQuery, window, document);

/**
 * 生产安排-确认完成
 * Created by wrb on 2018/7/2.
 */
;(function ($, window, document, undefined) {

    "use strict";
    var pluginName = "m_confirmCompletion",
        defaults = {
            $taskId:null,//任务ID
            $status:null,//任务状态
            $saveCallBack:null,
            $isDialog:true
        };

    // The actual plugin constructor
    function Plugin(element, options) {
        this.element = element;

        this.settings = $.extend({}, defaults, options);
        this._defaults = defaults;
        this._noticeInfo = null;
        this._name = pluginName;
        this._uuid = UUID.genV4().hexNoDelim;
        this.init();
    }

    // Avoid Plugin.prototype conflicts
    $.extend(Plugin.prototype, {
        init: function () {
            var that = this;
            that.renderPage(function () {
                //that.bindFileUplad();
            });

        }
        ,renderPage:function (callBack) {
            var that = this;
            var currDate = getNowDate();
            if(that.settings.$isDialog){//以弹窗编辑
                S_dialog.dialog({
                    title: that.settings.$title||'确认完成',
                    contentEle: 'dialogOBox',
                    lock: 3,
                    width: '500',
                    height:'150',
                    tPadding:'0',
                    url: rootPath+'/assets/module/m_common/m_dialog.html',
                    ok:function(){

                        if ($('form.m_confirmCompletion').valid()) {

                            var completeDate = $('form.m_confirmCompletion input[name="completeDate"]').val();
                            var completion = $('form.m_confirmCompletion textarea[name="completion"]').val();
                            var option  = {};
                            option.url = restApi.url_completeTask;
                            option.postData = {
                                taskId:that.settings.$taskId,
                                status:that.settings.$status,
                                paidDate:completeDate,
                                completion:completion
                            };
                            m_ajax.postJson(option,function (response) {
                                if(response.code=='0'){
                                    S_toastr.success('操作成功');

                                    if(that.settings.$saveCallBack!=null){
                                        that.settings.$saveCallBack();
                                    }
                                }else {
                                    S_dialog.error(response.info);
                                }
                            });

                        } else {
                            return false;
                        }
                    },
                    cancelText:'取消',
                    cancel:function(){
                    }

                },function(d){//加载html后触发

                    that.element = $('div[id="content:'+d.id+'"] .dialogOBox');
                    var html = template('m_production/m_confirmCompletion',{currDate:currDate});
                    $(that.element).html(html);
                    that.confirmCompletion_validate();
                    if(callBack!=null)
                        callBack();
                });
            }else {//不以弹窗编辑
                var html = template('m_production/m_confirmCompletion', {currDate: currDate});
                $(that.element).html(html);
                if(callBack!=null)
                    callBack();
            }
        }
        //上传文件
        , bindFileUplad:function () {
            var that =this;
            var option = {};
            that._uploadmgrContainer = $(that.element).find('.uploadmgrContainer:eq(0)');
            option.server = restApi.url_attachment_uploadNoticeAttach;
            option.accept={
                title: '请选择文件',
                extensions: '*',
                mimeTypes: '*'
            };
            option.ifCloseItemFinished = true;
            option.boxClass = 'no-borders';
            option.isShowBtnClose = false;
            option.uploadBeforeSend = function (object, data, headers) {
                data.companyId = window.currentCompanyId;
                data.accountId = window.currentUserId;
                data.targetId = that._uuid;
            };
            option.uploadSuccessCallback = function (file, response) {
                console.log(response);
                var fileData = {
                    netFileId: response.data.netFileId,
                    fileName: response.data.fileName,
                    fullPath: window.fastdfsUrl + response.data.fastdfsGroup + '/' + response.data.fastdfsPath
                };
                var $uploadItem = that._uploadmgrContainer.find('.uploadItem_' + file.id + ':eq(0)');
                if (!isNullOrBlank(fileData.netFileId)) {
                    $uploadItem.find('.span_status:eq(0)').html('上传成功');
                    var html = template('m_common/m_attach', fileData);
                    $('#showFileLoading').append(html);
                    that.bindAttachDelele();
                } else {
                    $uploadItem.find('.span_status:eq(0)').html('上传失败');
                }

            };
            that._uploadmgrContainer.m_uploadmgr(option, true);
        }
        //删除文件
        , bindAttachDelele: function () {
            $.each($('#showFileLoading').find('a[data-action="deleteAttach"]'), function (i, o) {
                $(o).off('click.deleteAttach').on('click.deleteAttach', function () {
                    var netFileId = $(this).attr('data-net-file-id');

                    var ajaxDelete = function () {
                        var ajaxOption = {};
                        ajaxOption.classId = '.file-list:eq(0)';
                        ajaxOption.url = restApi.url_attachment_delete;
                        ajaxOption.postData = {
                            id: netFileId,
                            accountId: window.currentUserId
                        };
                        m_ajax.postJson(ajaxOption, function (res) {
                            if (res.code === '0') {
                                S_toastr.success("删除成功");
                            } else if (res.code === '1') {
                                S_dialog.error(res.msg);
                            }
                        });
                    };
                    ajaxDelete();

                    $(this).closest('span').remove();
                })
            });
        }
        //事件绑定
        , bindActionClick:function () {
            var that = this;
            $(that.element).find('a[data-action]').off('click').on('click',function () {
                var $this = $(this),dataAction = $this.attr('data-action');
                switch (dataAction){
                    case 'fileUpload'://上传文件
                        that.bindFileUplad();
                        break;
                }

            })
        }
        //时间验证
        , confirmCompletion_validate: function () {
            var that = this;
            $(that.element).find('form').validate({
                rules: {
                    completeDate: 'required'
                },
                messages: {
                    completeDate: '请选择时间！'
                },
                errorPlacement: function (error, element) { //指定错误信息位置
                    error.appendTo(element.closest('.col-md-8'));
                }
            });
        }


    });

    $.fn[pluginName] = function (options) {
        return this.each(function () {

            //if (!$.data(this, "plugin_" + pluginName)) {
            $.data(this, "plugin_" +
                pluginName, new Plugin(this, options));
            //}
        });
    };

})(jQuery, window, document);

/**
 * 交付历史
 * Created by wrb on 2018/7/14.
 */
;(function ($, window, document, undefined) {

    "use strict";
    var pluginName = "m_deliveryHistory",
        defaults = {
            $isDialog:true,//是否弹窗展示
            $issueTaskId:null,//任务节点ID
            $taskId:null,//任务ID
            $projectId:null,//项目ID
            $saveCallBack:null

        };

    // The actual plugin constructor
    function Plugin(element, options) {
        this.element = element;

        this.settings = $.extend({}, defaults, options);
        this._defaults = defaults;
        this._noticeInfo = null;
        this._name = pluginName;
        this._listDeliver = [];//交付历史缓存

        this._deliverHistoryIdsByEdit = [];//当前编辑状态下人历史交付记录
        this._currentUserId = window.currentUserId;//当前用户ID

        this.init();
    }

    // Avoid Plugin.prototype conflicts
    $.extend(Plugin.prototype, {
        init: function () {
            var that = this;
            that.renderPage();

        }
        ,renderPage:function () {
            var that = this;
            var currDate = getNowDate();
            if(that.settings.$isDialog){//以弹窗编辑
                S_dialog.dialog({
                    title: that.settings.$title||'交付历史',
                    contentEle: 'dialogOBox',
                    lock: 3,
                    width: '1000',
                    height:'250',
                    url: rootPath+'/assets/module/m_common/m_dialog.html',
                    cancelText:'关闭',
                    cancel:function(){
                    }

                },function(d){//加载html后触发

                    that.element = $('div[id="content:'+d.id+'"] .dialogOBox');
                    that.renderListDeliver();
                });
            }else {//不以弹窗编辑
                that.renderListDeliver();
            }
        }
        //请求交付历史数据并渲染
        ,renderListDeliver:function () {
            var that = this;
            var options={};
            options.classId = '.ibox-content';
            options.url=restApi.url_listDeliver;
            options.postData = {};
            options.postData.isDelivery = 1;
            options.postData.issueTaskId=that.settings.$issueTaskId;
            m_ajax.postJson(options,function (response) {

                if(response.code=='0'){
                    var html = template('m_production/m_deliveryHistory',{listDeliver:response.data});
                    $(that.element).html(html);
                    that.bindActionClick();
                    that.initXeditable();

                    //禁用
                    $(that.element).find('a[data-action="xeditable"]').editable('toggleDisabled');

                    //编辑刷新 开放保留的编辑项
                    if(that._deliverHistoryIdsByEdit.length>0){
                        $.each(that._deliverHistoryIdsByEdit,function (i,item) {
                            that.dealEditStatus($(that.element).find('tr[data-id="'+item+'"]'),1);
                        });
                    }

                }else {
                    S_dialog.error(response.info);
                }
            })
        }
        ,initXeditable:function () {
            var that = this;
            $(that.element).find('a[data-action="xeditable"]').each(function () {

                var $this = $(this),$i = $this.closest('tr').attr('data-i'),type = $this.attr('data-action-type'),text = $.trim($this.text());

                var dataId = $this.closest('tr').attr('data-id');

                switch (type) {
                    case 'selectUser':
                        $this.click(function () {
                            if($this.hasClass('editable-disabled')){
                                return false;
                            }

                            var userList = [];
                            $this.find('span').each(function () {
                                userList.push({
                                    id:$(this).attr('data-id'),
                                    userName:$(this).text()
                                })
                            });
                            that.choseUser(userList,dataId);
                        });
                        break;
                    case 'time':

                        $this.click(function () {

                            if($this.hasClass('editable-disabled')){
                                return false;
                            }
                            var options = {};
                            options.popoverStyle = 'border: 0;border-radius: 0;box-shadow: none;position: relative;display: block;';
                            options.contentStyle = 'padding:0;';
                            options.type = 'inline';
                            options.hideArrow = true;
                            options.hideElement = true;
                            options.content = template('m_xeditable/m_xeditable_time', {text:$this.attr('data-value')});
                            options.onShown = function ($popover) {
                                $popover.find('.fa-calendar').on('click',function () {
                                    $(this).parent().prev().click();
                                });
                                that.time_validate($popover);
                            };
                            options.onClose = function ($popover) {
                                var flag = $popover.find('form').valid();
                                if (!flag) {
                                    return false;
                                }else {
                                    var param = {};
                                    param.deadline = $popover.find('input[name="time"]').val();
                                    param.id = dataId;
                                    that.save(param);
                                }
                            };
                            options.onClear = function ($popover) {

                            };
                            $this.m_popover(options, true);
                        });


                        break;
                    case 'select':
                        $this.editable({//编辑
                            type: 'select',
                            mode: 'inline',
                            value: text,
                            source: [
                                {value: 0, text: '未完成'},
                                {value: 1, text: '已完成'}
                            ],
                            showbuttons: false,
                            success: function (response, newValue) {
                                var param = {};
                                param.isFinished = newValue;
                                param.id = dataId;
                                that.save(param);
                            },
                            display: function (value, sourceData) {
                            }
                        });
                        break;
                    default:
                        var options = {//编辑
                            type: type,
                            mode: 'inline',
                            value: text,
                            emptytext: '',
                            onblur: 'submit',
                            showbuttons: false,
                            success: function (response, newValue) {

                                var field = $this.attr('data-field');
                                if (newValue != text) {
                                    var param = {};
                                    param[field] = newValue;
                                    param.id = dataId;
                                    that.save(param);
                                }
                            },
                            display: function (value, sourceData) {
                            },
                            validate: function (value) {
                                if ($.trim(value) == '') {
                                    S_toastr.error('不可为空！');
                                    return '不能为空';
                                }
                                if (value.length > 50) {
                                    S_toastr.error('内容超出字数限制！');
                                    return '内容超出字数限制！';
                                }
                            }
                        };
                        if(type=='textarea'){
                            $.extend(options, {rows:2});
                        }
                        $this.editable(options);
                        break;
                }
            });
        }
        //保存接口
        ,save:function (param) {
            var options={},that=this;
            options.url=restApi.url_sendArchivedFileNotifier;
            options.postData = {};
            options.postData.targetId = that.settings.$taskId;
            options.postData.projectId = that.settings.$projectId;
            options.postData.companyId = window.currentCompanyId;
            options.postData.userId = window.currentUserId;

            $.extend(options.postData, param);
            m_ajax.postJson(options,function (response) {
                if(response.code=='0'){
                    S_toastr.success('保存成功！');
                    that.renderListDeliver();
                }else {
                    S_dialog.error(response.info);
                }
            });
        }
        //选择负责人
        ,choseUser:function (userSelectedList,dataId) {
            var that=this,options = {};
            options.title = '选择负责人';
            options.selectedUserList = userSelectedList;
            options.url = restApi.url_getOrgTree;
            options.delSelectedUserCallback = function () {
            };
            options.saveCallback = function (data) {

                var userArr = [];
                if(data!=null && data.selectedUserList!=null && data.selectedUserList.length>0){
                    $.each(data.selectedUserList,function (i,item) {
                        userArr.push({
                            id:item.id,
                            name:item.userName
                        });
                    });
                    var param = {};
                    param.userArr = userArr;
                    param.id = dataId;
                    that.save(param);

                }else{

                    S_toastr.warning('请选择负责人！');
                    return false;
                }


            };
            options.renderTreeCallBack = function () {
            };
            $('body').m_orgByTree(options);
        }
        //更新编辑状态 $ele = tr标签 ,t=0=处理编辑记录ID
        ,dealEditStatus:function ($ele,t) {
            var that = this;
            var dataId = $ele.attr('data-id');
            var isPush = 0;//是否记录下来 editable-disabled是tr编辑项同步的

            $ele.find('a[data-action="xeditable"]').each(function () {
                var type = $(this).attr('data-action-type');
                switch (type){
                    case 'time':
                    case 'selectUser':
                        if($(this).hasClass('editable-disabled')){//开放编辑
                            $(this).removeClass('editable-disabled');
                            isPush = 1;
                        }else{
                            isPush = 0;
                            $(this).addClass('editable-disabled');
                        }
                        break;
                    default:
                        $(this).editable('toggleDisabled');
                        break;
                }
            });

            if(t==0){
                if(isPush==1){
                    that._deliverHistoryIdsByEdit.push(dataId);
                }else{
                    if(that._deliverHistoryIdsByEdit.indexOf(dataId)>-1){
                        that._deliverHistoryIdsByEdit.splice(that._deliverHistoryIdsByEdit.indexOf(dataId), 1);
                    }
                }
            }
        }
        ,bindActionClick:function () {
            var that = this;
            $(that.element).find('a[data-action]').off('click').on('click',function () {
                var $this = $(this),dataAction = $this.attr('data-action');
                var dataId = $this.closest('tr').attr('data-id');
                switch (dataAction){
                    case 'edit'://点击编辑,初始化编辑状态
                        that.dealEditStatus($this.closest('tr'),0);
                        break;

                    case 'delete'://删除交付

                        S_swal.confirm({
                            title:'确定删除该历史交付?',
                            text:'删除后将不能恢复，确定吗？',
                            callBack:function () {

                                var option = {};
                                option.url = restApi.url_deleteDeliver;
                                option.postData = {};
                                option.postData.id = dataId;
                                option.postData.accountId = that._currentUserId;
                                m_ajax.postJson(option, function (response) {
                                    if (response.code == '0') {
                                        S_swal.sure({
                                            title:'已删除',
                                            text:'该历史交付删除成功。',
                                            callBack:function () {
                                                that.renderListDeliver();
                                            }
                                        });
                                    } else {
                                        S_dialog.error(response.info);
                                    }
                                });
                            }
                        });
                        break;
                }
            });
        }
        //时间不为空验证
        ,time_validate:function ($ele) {
            $ele.find('form').validate({
                rules: {
                    time:{
                        required:true
                    }

                },
                messages: {
                    time:{
                        required:'请选择截止日期!'
                    }
                },
                errorPlacement: function (error, element) { //指定错误信息位置
                    error.appendTo(element.closest('form'));
                }
            });
        }

    });

    $.fn[pluginName] = function (options) {
        return this.each(function () {

            //if (!$.data(this, "plugin_" + pluginName)) {
            $.data(this, "plugin_" +
                pluginName, new Plugin(this, options));
            //}
        });
    };

})(jQuery, window, document);

/**
 * 发起交付
 * Created by wrb on 2018/7/14.
 */
;(function ($, window, document, undefined) {

    "use strict";
    var pluginName = "m_initiateDelivery",
        defaults = {
            $isDialog:true,//是否弹窗展示
            $taskId:null,//任务ID
            $projectId:null,//项目ID
            $saveCallBack:null

        };

    // The actual plugin constructor
    function Plugin(element, options) {
        this.element = element;

        this.settings = $.extend({}, defaults, options);
        this._defaults = defaults;
        this._noticeInfo = null;
        this._name = pluginName;
        this._userSelectedList = [];//选择的负责人列表
        this.init();
    }

    // Avoid Plugin.prototype conflicts
    $.extend(Plugin.prototype, {
        init: function () {
            var that = this;
            that.renderPage(function () {

                that.formSubmit_validate();
                that.bindActionClick();
            });

        }
        ,renderPage:function (callBack) {
            var that = this;
            var currDate = getNowDate();
            if(that.settings.$isDialog){//以弹窗编辑
                S_dialog.dialog({
                    title: that.settings.$title||'新的交付',
                    contentEle: 'dialogOBox',
                    lock: 3,
                    width: '600',
                    height:'250',
                    url: rootPath+'/assets/module/m_common/m_dialog.html',
                    ok:function(){

                        if ($(that.element).find('form.form-horizontal').valid()) {

                            var option  = {};
                            option.classId = '#content-right';
                            option.url = restApi.url_sendArchivedFileNotifier;
                            var $data = $(that.element).find('form.form-horizontal').serializeObject();
                            var userArr = [];
                            if(that._userSelectedList!=null && that._userSelectedList.length>0){
                                $.each(that._userSelectedList,function (i,item) {
                                    userArr.push({
                                        id:item.id,
                                        name:item.userName
                                    });
                                });
                            }
                            option.postData = {
                                targetId: that.settings.$taskId,
                                projectId: that.settings.$projectId,
                                companyId: window.currentCompanyId,
                                userId: window.currentUserId,
                                userArr: userArr
                            };
                            $.extend(option.postData, $data);
                            m_ajax.postJson(option,function (response) {
                                if(response.code=='0'){
                                    S_toastr.success('操作成功');

                                    if(that.settings.$saveCallBack!=null){
                                        that.settings.$saveCallBack();
                                    }
                                }else {
                                    S_dialog.error(response.info);
                                }
                            });

                        } else {
                            return false;
                        }
                    },
                    okText:'保存',
                    cancelText:'取消',
                    cancel:function(){
                    }

                },function(d){//加载html后触发

                    that.element = $('div[id="content:'+d.id+'"] .dialogOBox');
                    var html = template('m_production/m_initiateDelivery',{currDate:currDate});
                    $(that.element).html(html);

                    if(callBack!=null)
                        callBack();
                });
            }else {//不以弹窗编辑
                var html = template('m_production/m_confirmCompletion', {currDate: currDate});
                $(that.element).html(html);
                if(callBack!=null)
                    callBack();
            }
        }

        //选择负责人
        ,choseUser:function () {
            var that=this,options = {};
            options.title = '选择负责人';
            options.selectedUserList = that._userSelectedList;
            options.url = restApi.url_getOrgTree;
            options.delSelectedUserCallback = function () {
            };
            options.saveCallback = function (data) {
                console.log(data)

                that.renderPersonInChargeHtml(data);

            };
            options.renderTreeCallBack = function () {
            };
            console.log(options);
            $('body').m_orgByTree(options);
        }
        //渲染添加负责人html
        ,renderPersonInChargeHtml:function (data) {
            var that = this;

            if(data!=null && data.selectedUserList!=null && data.selectedUserList.length>0){

                that._userSelectedList = data.selectedUserList;
                $(that.element).find('span.span-box').remove();//删除原人员html
                $.each(data.selectedUserList,function (i,item) {//循环写入添加人员html
                    var iHtml = '<span class="span-box m-r-xs bg-muted p-xxs f-s-12">' +
                        '<span>'+item.userName+'</span>' +
                        '<a class="curp" href="javascript:void(0)" data-id="'+item.id+'" data-i="'+i+'" data-action="delPersonInCharge" >' +
                        '<i class="fa fa-times color-red"></i>' +
                        '</a></span>';

                    $(that.element).find('a[data-action="addPersonInCharge"]').before(iHtml);

                });

                $(that.element).find('a[data-action="delPersonInCharge"]').off('click').on('click',function () {
                    var i = $(this).attr('data-i');
                    $(this).parent('span').remove();
                    that._userSelectedList.splice(i, 1);
                    return false;
                });
            }
        }
        //事件绑定
        ,bindActionClick:function () {
            var that = this;
            $(that.element).find('a[data-action]').off('click').on('click',function () {
                var $this = $(this),dataAction = $this.attr('data-action');
                switch (dataAction){
                    case 'addPersonInCharge'://添加负责人
                        that.choseUser();
                        break;
                }

            });
            //时间图标事件
            $(that.element).find('.fa-calendar').on('click',function () {
                $(this).parent().prev().click();
            });
        }
        //验证
        , formSubmit_validate: function () {
            var that = this;
            $(that.element).find('form').validate({
                ignore:'',
                rules: {
                    name: {
                        required:true,
                        maxlength:50
                    },
                    description: 'required',
                    endTime: 'required',
                    personInCharge:{
                        ckPersonInCharge:true
                    }
                },
                messages: {
                    name: {
                        required:'请输入名称！',
                        maxlength:'请控制在50个字符以内！'
                    },
                    description: '请输入说明！',
                    endTime: '请选择时间！',
                    personInCharge:{
                        ckPersonInCharge:'请选择负责人！'
                    }
                },
                errorPlacement: function (error, element) { //指定错误信息位置
                    error.appendTo(element.closest('.col-sm-10'));
                }
            });
            $.validator.addMethod('ckPersonInCharge', function(value, element) {
                var isOk = true;
                if(that._userSelectedList==null || that._userSelectedList.length==0){
                    isOk = false;
                }
                return  isOk;
            }, '请选择负责人！');
        }


    });

    $.fn[pluginName] = function (options) {
        return this.each(function () {

            //if (!$.data(this, "plugin_" + pluginName)) {
            $.data(this, "plugin_" +
                pluginName, new Plugin(this, options));
            //}
        });
    };

})(jQuery, window, document);

/**
 * 项目信息－生产安排
 * Created by wrb on 2017/2/22.
 */
;(function ($, window, document, undefined) {

    "use strict";
    var pluginName = "m_production",
        defaults = {
            $projectInfo:null,
            $projectId:null,
            $projectName:null,
            $scrollCallBack:null//请求渲染html后回滚事件
        };

    // The actual plugin constructor
    function Plugin(element, options) {
        this.element = element;

        this.settings = $.extend({}, defaults, options);
        this._defaults = defaults;
        this._name = pluginName;
        this._currentCompanyId = window.currentCompanyId;//当前组织ID
        this.currentCompanyUserId = window.currentCompanyUserId;//当前用户ID
        this._productionList = null;
        this._tabList = null;//tab页list
        this.init();
    }

    // Avoid Plugin.prototype conflicts
    $.extend(Plugin.prototype, {
        init: function () {
            var that = this;
            that.renderPage();
        }
        //渲染界面
        ,renderPage:function () {
            var that = this;
            var options={};
            options.classId = '#content-right';
            options.url=restApi.url_getDesignManagerInfo;
            options.postData = {};
            options.postData.projectId = that.settings.$projectId;

            var companyId = $(that.element).find('select[name="viewByOrg"]').val();
            if(companyId!=undefined && companyId!=''){
                options.postData.companyId = companyId;
            }
            m_ajax.postJson(options,function (response) {

                if(response.code=='0'){

                    var currentManagerObj = {};//当前设计负责人、助理
                    currentManagerObj.projectManager = response.data.projectManager;
                    currentManagerObj.assistant = response.data.assistant;

                    var html = template('m_production/m_production',{
                        projectName:that.settings.$projectName,
                        orgList:response.data.orgList,
                        dataCompanyId:response.data.dataCompanyId,
                        currentCompanyId:that._currentCompanyId,
                        currentManagerObj:currentManagerObj,
                        currentCompanyUserId:window.currentCompanyUserId
                    });
                    $(that.element).html(html);
                    that.renderTabList(0);
                    that.bindClickAction();
                    that.initSelectByView();
                }else {
                    S_dialog.error(response.info);
                }
            })
        }
        //渲染tab页
        ,renderTabList:function (i) {
            var that = this;
            var companyId = $(that.element).find('select[name="viewByOrg"]').val();

            var options={};
            options.classId = '#content-right';
            options.url=restApi.url_getTaskGroupInfo;
            options.postData = {};
            options.postData.projectId = that.settings.$projectId;
            options.postData.type=2;
            if(companyId!=undefined && companyId!=''){
                options.postData.companyId = companyId;
            }
            m_ajax.postJson(options,function (response) {

                if(response.code=='0'){
                    that._tabList = response.data.tabList;
                    if(that._tabList!=null && that._tabList.length>0){

                        var html = template('m_production/m_production_tab',{
                            tabList : that._tabList,
                            currTabI :i
                        });
                        $(that.element).find('#tabContent').html(html);
                        that.bindTabClickAction();
                        that.renderTaskList(i);
                    }
                }else {
                    S_dialog.error(response.info);
                }
            })
        }
        //初始化数据,生成html
        ,renderTaskList:function (i) {

            var that = this;
            var companyId = $(that.element).find('select[name="viewByOrg"]').val();

            var options={};
            options.classId = '.ibox-content';
            options.url=restApi.url_getDesignTaskList;
            options.postData = {};
            options.postData.projectId = that.settings.$projectId;
            options.postData.type=2;
            if(that._tabList!=null && that._tabList.length>0) {
                options.postData.issueTaskId = that._tabList[i].id;
            }
            if(companyId!=undefined && companyId!=''){
                options.postData.companyId = companyId;
            }
            m_ajax.postJson(options,function (response) {

                if(response.code=='0'){

                    /*var currentManagerObj = {};//当前设计负责人、助理
                    currentManagerObj.projectManager = response.data.projectManager;
                    currentManagerObj.assistant = response.data.assistant;

                    var html = template('m_production/m_production',{
                        tabList : that._tabList,
                        currTabI :i,
                        projectName:that.settings.$projectName,
                        orgList:response.data.orgList,
                        dataCompanyId:response.data.dataCompanyId,
                        currentCompanyId:that._currentCompanyId,
                        currentManagerObj:currentManagerObj,
                        currentCompanyUserId:window.currentCompanyUserId
                    });
                    $(that.element).html(html);*/
                    var option = {};
                    option.$projectId = that.settings.$projectId;
                    option.$taskIssueOrgList = response.data.projectManagerDataDTOList;
                    option.$projectCreateBy = response.data.projectCreateBy;
                    option.$projectCompanyId = response.data.projectCompanyId;
                    option.$productionList = response.data.projectDesignContentShowList;
                    option.$projectName = that.settings.$projectName;

                    if(that.settings.$scrollCallBack!=null){
                        option.$scrollCallBack = that.settings.$scrollCallBack;
                    }

                    option.$pageEntrance = 'production';
                    $(that.element).find('#productionList'+i).m_production_list(option);

                    if(i>0){
                        that.renderTaskIssue(i);
                    }

                }else {
                    S_dialog.error(response.info);
                }
            })
        }
        //渲染签发信息界面
        ,renderTaskIssue:function (i) {
            var that = this;
            var option = {};
            option.$projectId = that.settings.$projectId;
            option.$projectName = that.settings.$projectName;
            if(that._tabList!=null && that._tabList.length>0) {
                option.$issueTaskId = that._tabList[i].id;
            }
            option.$companyId = $(that.element).find('select[name="viewByOrg"]').val();
            $(that.element).find('#taskIssueList'+i).m_production_taskIssue(option);
        }
        //视图切换
        ,initSelectByView:function () {
            var that = this;
            $(that.element).find('select[name="viewByOrg"]').select2({
                allowClear: false,
                containerCssClass:'select-sm',
                language: "zh-CN",
                minimumResultsForSearch: -1
            });
            $(that.element).find('select[name="viewByOrg"]').on("change", function (e) {
                that.renderPage();
            })
        }
        //更改设计负责人或设计人事件
        ,managerChangeEvent:function ($this) {
            var that = this;
            var action = $this.attr('data-action');
            var companyId = $this.attr('data-company-id');//当前要获取的项目立项组织的index

            if (action == 'changeOperatorPerson') {
                var operatorPersonId = $this.attr('data-id'),userName=$this.attr('data-user-name');

                var option = {};
                option.$type = 1;
                option.$title = '选择设计负责人';
                option.$selectedUserList = [{
                    id:operatorPersonId,
                    userName:userName
                }];
                option.$selectUserCallback = function (data, event) {//1
                    data.type = 1;
                    var targetUser='<strong style="color:red;margin:0 3px;">'+data.userName+'</strong>';
                    S_dialog.confirm('确定将设计负责人更换为'+targetUser+'？', function () {
                        that.postManagerChange(data, companyId, event);
                    }, function () {
                        //S_dialog.close($(event));
                    });
                };
                $('body').m_changeOperator(option);

            } else if (action == 'changeManagerPerson') {

                var isFirstSetDesign = $.trim($this.text()) == '未设置' ? true : false;
                var designPersonId = $this.attr('data-id'),userName=$this.attr('data-user-name');
                var options = {};
                options.url = restApi.url_getOrgTree;
                options.isASingleSelectUser = true;
                options.delChoseUserCallBack = function () {
                    $(that.element).find('input[name="chooseManager"]').removeAttr('companyUserId');
                    $(that.element).find('input[name="chooseManager"]').val('');
                };
                options.title = '选择助理';
                if(designPersonId!=undefined && designPersonId!=''){
                    options.selectedUserList = [{
                        id:designPersonId,
                        userName:userName
                    }];
                }

                options.isOkSave = true;
                options.saveCallback = function (data, event) {
                    var obj = {};
                    obj.type = 2;
                    if(data!=null && data.selectedUserList!=null && data.selectedUserList.length>0){
                        obj.userName = data.selectedUserList[0].userName;
                        obj.companyUserId = data.selectedUserList[0].id;
                        obj.isFirstSetDesign = isFirstSetDesign;
                        var targetUser='<strong style="color:red;margin:0 3px;">'+obj.userName+'</strong>';
                        S_dialog.confirm('确定将助理更换为'+targetUser+'？', function () {
                            that.postManagerChange(obj, companyId, event);
                        }, function () {
                        });
                    }else{
                        obj.companyUserId=null;
                        S_dialog.confirm('确定将助理置空？', function () {
                            that.postManagerChange(obj, companyId, event);
                        }, function () {
                        });
                    }
                };
                $('body').m_orgByTree(options);
            }
            return false;
        }
        //移交设计负责人或助理的请求
        ,postManagerChange: function (data, companyId, event) {
            var that = this;
            var option = {};

            option.postData = {};
            if(data.type==2){//助理
                option.url = restApi.url_updateProjectAssistant;
                option.postData.type = '2';
            }else{//设计负责人
                if (data.isFirstSetDesign != null && data.isFirstSetDesign == false) {
                    option.url = restApi.url_transferTaskDesigner;
                } else {
                    option.url = restApi.url_updateProjectManager;
                }
                option.postData.type = '2';
            }
            option.postData.projectId = that.settings.$projectId;
            option.postData.companyId = companyId;
            option.postData.companyUserId = data.companyUserId;
            m_ajax.postJson(option, function (response) {
                if (response.code == '0') {
                    S_dialog.close($(event));
                    S_toastr.success('保存成功！');
                    that.refreshPage();
                } else {
                    S_dialog.error(response.info);
                }
            })
        }
        ,refreshPage:function () {
            var option = {}, that = this;
            var scrollTop = $('body').scrollTop();
            option.$projectId = that.settings.$projectId;
            option.$projectName = that.settings.$projectName;
            option.$scrollCallBack = function () {
                $('body').scrollTop(scrollTop);
            };
            $('#content-right').m_production(option);
        }
        //事件绑定
        ,bindClickAction:function(){
            var that = this;

            $(that.element).find('a[data-action]').off('click').on('click',function(){
                var $this = $(this),
                    $i = $this.attr('data-i'),
                    dataAction = $this.attr('data-action');

                switch (dataAction) {//切换自己生产与总览

                    case 'changeOperatorPerson'://修改当前组织设计负责人

                        that.managerChangeEvent($this);
                        break;
                    case 'changeManagerPerson'://修改当前组织设计助理

                        that.managerChangeEvent($this);
                        break;
                }

            });
        }
        //渲染tab页生产安排
        ,bindTabClickAction:function () {
            var that = this;
            $(that.element).find('a[data-action="getProductionById"]').off('click').on('click',function(){
                var $this = $(this),
                    $i = $this.attr('data-i');

                if($(that.element).find('#productionList'+$i).children().length==0){//未渲染过，需要渲染

                    that.renderTaskList($i);
                }
            });
        }


    });

    $.fn[pluginName] = function (options) {
        return this.each(function () {

            //if (!$.data(this, "plugin_" + pluginName)) {
            $.data(this, "plugin_" +
                pluginName, new Plugin(this, options));
            //}
        });
    };

})(jQuery, window, document);

/**
 * 进度变更
 * Created by wrb on 2016/12/26.
 */
;(function ($, window, document, undefined) {

    "use strict";
    var pluginName = "m_productionSchedule",
        defaults = {
            $title:null,
            $isDialog:true,
            $okCallBack:null,
            $parentTaskObj:null,
            $currentAppointmentDate:null,
            $theCurrentTaskObj:null,
            $projectId:null,
            $projectName:null,
            $designContentId:null,
            $entryType:null//1==我的任务进来,默认生产安排进来
        };

    // The actual plugin constructor
    function Plugin(element, options) {
        this.element = element;

        this.settings = $.extend({}, defaults, options);
        this._defaults = defaults;
        this._name = pluginName;


        this.init();
    }

    // Avoid Plugin.prototype conflicts
    $.extend(Plugin.prototype, {
        init: function () {
            var that = this;
            that._initHtmlData(function () {
                that._bindActionClick();

            });
        },
        //初始化数据
        _initHtmlData:function (callBack) {
            var that = this;
            if(that.settings.$isDialog){//以弹窗编辑
                S_dialog.dialog({
                    title: that.settings.$title||'进度变更',
                    contentEle: 'dialogOBox',
                    lock: 3,
                    width: '800',
                    minHeight:'125',
                    tPadding: '0px',
                    url: rootPath+'/assets/module/m_common/m_dialog.html',
                    cancelText:'关闭',
                    cancel:function () {
                        that._refresh();
                    }

                },function(d){//加载html后触发

                    that._getTaskScheduleChangesList(function (data) {
                        that.element = 'div[id="content:'+d.id+'"] .dialogOBox';
                        that._initHtmlTemplate(data);
                        if(callBack!=null){
                            callBack();
                        }
                    });
                });
            }else{//不以弹窗编辑
                that._getTaskScheduleChangesList(function (data) {
                    that._initHtmlTemplate(data);
                    if (callBack != null) {
                        callBack();
                    }
                });
            }
        }
        //生成html
        ,_initHtmlTemplate:function (data) {
            var that = this;
            var $data = {};
            if(data!=null){
                $data.taskScheduleChangesList = data;
                $data.taskScheduleObj = that.settings.$theCurrentTaskObj;
            }
            $.each($data.taskScheduleChangesList,function(i,item){
                $data.taskScheduleChangesList[i].timeDiffStr=timeDiffTime(item.startTime,item.endTime)
            });
            var html = template('m_production/m_productionSchedule',$data);
            $(that.element).html(html);
        }
        //根据任务ID获取该任务的进度变更列表
        ,_getTaskScheduleChangesList:function (callBack) {
            var that = this;
            var options={};
            options.url=restApi.url_getChangeTimeList;
            options.postData = {};
            options.postData.targetId = that.settings.$theCurrentTaskObj.id;
            options.postData.type = 2;
            m_ajax.postJson(options,function (response) {
                if(response.code=='0'){
                    if(callBack!=null){
                        return callBack(response.data);
                    }
                }else {
                    S_dialog.error(response.info);
                }
            })
        }
        //刷新当前界面
        ,_refresh:function () {
            var option = {}, that = this;
            var scrollTop = $('body').scrollTop();
            option.$projectId = that.settings.$projectId;
            option.$projectName = that.settings.$projectName;
            option.$scrollCallBack = function () {
                $('body').scrollTop(scrollTop);
            };
            if(that.settings.$entryType=='1'){
                $('#content-right').m_myTask_production(option);
            }else{
                $('#content-right').m_production(option);
            }

        }
        //进度变更
        ,_taskScheduleChange:function (obj) {
            var that = this,options={};
            options.$title = '添加变更';
            options.$isOkSave = true;
            options.$saveDataUrl = restApi.url_saveProjectProcessTime;
            var $data = {};
            $data.targetId = that.settings.$theCurrentTaskObj.id;
            $data.type = 2;//计划进度
            options.$saveData = $data;
            options.$saveTimeKeyVal=['startTime','endTime','memo'];
            options.$currentAppointmentDate=that.settings.$currentAppointmentDate;
            options.$okCallBack = function (data) {
                that._getTaskScheduleChangesList(function (data) {
                    that._initHtmlTemplate(data);
                    that._bindActionClick();
                    $('li.list-group-item a[data-action="taskDecomposition"]').click();
                });
            };
            $('body').m_inputProcessTime(options);
        }
        //进度变更修改（针对设计任务的计划进度）
        ,_taskScheduleUpdate:function (obj) {
            var that = this,options={};

            var dataId = $(obj).attr('data-id');
            var dataStaTime = $(obj).attr('data-start-time');
            var dataEndTime = $(obj).attr('data-end-time');
            var dataListType = $(obj).attr('data-list-type');
            var dataMemo = $(obj).parents('.ibox-content').find('span.memo-span:last').html();

            options.$title = '修改变更';
            options.$isOkSave = true;

            var $data = {};
            $data.targetId = that.settings.$theCurrentTaskObj.id;
            //$data.type = that.settings.$type;//计划进度
            $data.id = dataId;
            options.$saveDataUrl = restApi.url_saveProjectProcessTime;
            if(dataListType!=undefined && dataListType==1){//没原因
                options.$isHaveMemo = false;
                options.$timeInfo = {
                    startTime:dataStaTime,
                    endTime:dataEndTime
                };
                options.$saveTimeKeyVal=['startTime','endTime'];
            }else {
                options.$timeInfo = {
                    startTime:dataStaTime,
                    endTime:dataEndTime,
                    memo:dataMemo
                };
                options.$saveTimeKeyVal=['startTime','endTime','memo'];
            }
            options.$saveData = $data;
            options.$currentAppointmentDate=that.settings.$currentAppointmentDate;
            options.$okCallBack = function (data) {
                that._getTaskScheduleChangesList(function (data) {
                    that._initHtmlTemplate(data);
                    that._bindActionClick();
                    if(that.settings.$okCallBack!=null){
                        that.settings.$okCallBack();
                    }
                });
            };
            $('body').m_inputProcessTime(options);
        }
        //删除变更
        ,_delTaskScheduleChange:function (obj) {
            var that = this;
            S_dialog.confirm('您确定要删除吗？', function () {

                that._delChangeTimeById(obj);

            }, function () {
            });
        }
        //删除变更记录请求
        ,_delChangeTimeById:function (obj) {
            var that = this;
            var options = {};
            options.url=restApi.url_saveProjectProcessTime+'/'+$(obj).attr('data-id');
            var seq = $(obj).attr('data-seq');
            m_ajax.get(options,function (response) {
                if(response.code=='0'){

                    if(seq==0){
                        S_dialog.close($(obj));
                        var options = {};
                        options.$projectId = that.settings.$projectId;
                        options.$title = '设置计划进度';
                        options.$isHaveMemo = false;
                        options.$isOkSave = true;
                        options.$saveDataUrl = restApi.url_saveProjectProcessTime;
                        var $data = {};
                        $data.targetId = that.settings.$theCurrentTaskObj.id;
                        $data.type = 2;
                        options.$saveData = $data;
                        options.$currentAppointmentDate = that.settings.$currentAppointmentDate;
                        options.$saveTimeKeyVal=['startTime','endTime'];
                        options.$okCallBack = function (data) {
                            var $options={};
                            $options.$projectId = that.settings.$projectId;
                            $(that.element).m_productionTaskList($options);
                        }
                        $('body').m_inputProcessTime(options);
                    }else {
                        that._getTaskScheduleChangesList(function (data) {
                            that._initHtmlTemplate(data);
                            that._bindActionClick();
                        });
                    }
                }else {
                    S_dialog.error(response.info);
                }
            })
        }
        //按钮事件绑定
        ,_bindActionClick:function () {
            var that = this;
            $(that.element).find('a[data-action]').on('click',function () {
                var _this = this,dataAction = $(this).attr('data-action');
                if(dataAction=='addScheduleProgressChange'){//添加变更
                    var dataType = $(_this).attr('data-type');
                    if(dataType==3){
                        that._taskScheduleUpdate(_this);
                    }else{//添加变更，修改变更
                        that._taskScheduleChange(_this);
                    }
                    return false;
                }else if(dataAction=='delScheduleProgressChange'){//删除变更
                    that._delTaskScheduleChange(_this);
                    return false;
                }
            });

        }

    });

    $.fn[pluginName] = function (options) {
        return this.each(function () {

            //if (!$.data(this, "plugin_" + pluginName)) {
            $.data(this, "plugin_" +
                pluginName, new Plugin(this, options));
            //}
        });
    };

})(jQuery, window, document);



/**
 * 项目信息－添加生产任务
 * Created by wrb on 2017/2/21.
 */
;(function ($, window, document, undefined) {

    "use strict";
    var pluginName = "m_production_add",
        defaults = {
            $title:null,
            $placement:null,
            $projectId:null,
            $doType:null,//默认是添加任务，'changeOrg'=更改设计组织
            $taskId:null,
            $personInCharge:null,//当前任务负责人
            $personInChargeId:null,//当前任务负责人员工ID
            $currentAppointmentDate:null//时间限制，这里指计划进度
        };

    // The actual plugin constructor
    function Plugin(element, options) {
        this.element = element;

        this.settings = $.extend({}, defaults, options);
        this._defaults = defaults;
        this._name = pluginName;
        this._currentCompanyId = window.currentCompanyId;//当前组织ID
        this._userList = [];//负责人匹配
        this.init();
    }

    // Avoid Plugin.prototype conflicts
    $.extend(Plugin.prototype, {
        init: function () {
            var that = this;
            that._initHtmlData();
        }
        //初始化数据,生成html
        ,_initHtmlData:function (callBack) {

            var option={},that = this;
            option.url=restApi.url_getIssueTaskCompany;
            option.postData = {};
            option.postData.taskId = that.settings.$taskId;
            m_ajax.postJson(option,function (response) {

                if(response.code=='0'){

                    var $data = {};
                    $data = response.data;
                    $data.doType = that.settings.$doType;
                    $data.personInCharge = that.settings.$personInCharge;
                    $data.personInChargeId = that.settings.$personInChargeId;

                    if (that.settings.$currentAppointmentDate != null) {
                        $data.appointmentStartTime = that.settings.$currentAppointmentDate.startTime;
                        $data.appointmentEndTime = that.settings.$currentAppointmentDate.endTime;
                    }

                    $(that.element).find('i').m_popover({
                        placement: 'left',
                        content: template('m_production/m_production_add', $data),
                        titleHtml: '<h3 class="popover-title">'+(that.settings.$title?that.settings.$title:'任务分解')+'</h3>',
                        onShown: function ($popover) {
                            that._selectFun();
                            that._saveTaskIssue_validate();
                            $popover.find('.input-group-addon').on('click',function(e){
                                $(this).prev('input').focus();
                                stopPropagation(e);
                            });
                        },
                        onSave: function ($popover) {
                            if ($('form.add-issue-form').valid()) {
                                return that._saveTaskIssue();
                            }else{
                                return false;
                            }
                        }
                    }, true);

                }else {
                    S_dialog.error(response.info);
                }
            })
        }
        //刷新当前界面
        ,_refresh:function () {
            var option = {}, that = this;
            var scrollTop = $('body').scrollTop();
            option.$projectId = that.settings.$projectId;
            option.$scrollCallBack = function () {
                $('body').scrollTop(scrollTop);
            };
            $('#project_detail').m_production(option);
        }
        ,_selectFun:function () {
            var that = this;
            $(".js-example-disabled-results").select2({
                language: "zh-CN",
                ajax: {
                    contentType: "application/json",
                    url: restApi.url_getUserByKeyWord,
                    dataType: 'json',
                    type:'POST',
                    delay: 500,
                    data: function (params) {
                        var ret={
                            keyword: params.term, // search term
                            companyId: that._currentCompanyId
                        };
                        return JSON.stringify(ret);
                    },
                    processResults: function (data, params) {
                        return {
                            results: $.map(data.data,function(o,i){
                                return {
                                    id:o.id,
                                    text:o.user_name
                                }
                            })
                        };
                    },
                    cache: true
                }
            });
        }

        //分解任务
        ,_saveTaskIssue:function () {
            var isTrue = false;
            var options={},that=this;
            options.url=restApi.url_saveTaskIssuing;
            options.postData = {};
            options.postData.projectId = that.settings.$projectId;
            options.postData.taskType =0;
            options.postData.companyId = that._currentCompanyId;
            options.postData.taskPid = $(that.element).attr('data-id');
            options.postData.taskName = $.trim($(that.element).find('i').next('.popover').find('input[name="taskName"]').val());
            /*if(options.postData.taskName==undefined || options.postData.taskName==''){
                return '请输入设计任务！';
            }*/

            options.postData.designerId = $(that.element).find('i').next('.popover').find('select[name="designerId"]').val();
            /*if(options.postData.designerId==undefined || options.postData.designerId==''){
                return '请选择任务负责人！';
            }*/
            options.postData.taskRemark = $(that.element).find('i').next('.popover').find('textarea[name="taskRemark"]').val();

            options.postData.startTime = $(that.element).find('i').next('.popover').find('input[name="startTime"]').val();
            options.postData.endTime = $(that.element).find('i').next('.popover').find('input[name="endTime"]').val();

            m_ajax.postJson(options,function (response) {

                if(response.code=='0'){

                    S_toastr.success('添加成功！');
                    that._refresh();
                }else {
                    S_dialog.error(response.info);
                }
            })
        }

        //保存验证
        , _saveTaskIssue_validate: function () {
            var that = this;
            $('form.add-issue-form').validate({
                rules: {
                    taskName: {
                        required: true
                    }
                    ,designerId: {
                        required: true
                    }
                    ,taskRemark: {
                        maxlength: 500
                    }
                },
                messages: {
                    taskName: {
                        required: '设计任务不能为空！'
                    }
                    ,designerId: {
                        required: '请选择任务负责人！'
                    }
                    ,taskRemark: {
                        maxlength: '输入不能超过500个字符！'
                    }
                },
                errorElement: "label",  //用来创建错误提示信息标签
                errorPlacement: function (error, element) {  //重新编辑error信息的显示位置
                    error.appendTo(element.closest('.col-sm-9'));
                }
            });
        }



    });

    $.fn[pluginName] = function (options) {
        return this.each(function () {

            //if (!$.data(this, "plugin_" + pluginName)) {
            $.data(this, "plugin_" +
                pluginName, new Plugin(this, options));
            //}
        });
    };

})(jQuery, window, document);

/**
 * 项目信息－生产安排列表
 * Created by wrb on 2017/2/22.
 */
;(function ($, window, document, undefined) {

    "use strict";
    var pluginName = "m_production_list",
        defaults = {
            $projectId:null,
            $projectName:null,
            $productionList:null,
            $getCallBack:null,//请求渲染html后回滚事件
            $scrollCallBack:null,//定位scrollTop
            $pageEntrance:'production'//页面入口（我的任务=myProductionTask,生产安排=production）
        };

    // The actual plugin constructor
    function Plugin(element, options) {
        this.element = element;

        this.settings = $.extend({}, defaults, options);
        this._defaults = defaults;
        this._name = pluginName;
        this._currentCompanyId = window.currentCompanyId;//当前组织ID
        this._currentCompanyUserId = window.currentCompanyUserId;//当前组织人员ID
        this._currentUserId = window.currentUserId;//当前用户ID
        this._productionList = [];//当前生产列表
        this._designerListByAdd=[];//添加任务－设计人员列表
        this._checkUserListByAdd=[];//添加任务－校对人员列表
        this._examineUserListByAdd=[];//添加任务－审核人员列表
        this.init();
    }

    // Avoid Plugin.prototype conflicts
    $.extend(Plugin.prototype, {
        init: function () {
            var that = this;
            that.initHtml();


        },
        //初始化数据,生成html
        initHtml:function () {
            var that = this;
            var $data = {};

            $data.productionList = that.settings.$productionList;
            that._productionList = that.settings.$productionList;
            $data.currentCompanyId = that._currentCompanyId;
            $data.currentCompanyUserId = that._currentCompanyUserId;
            $data.currentUserId = that._currentUserId;
            var html = template('m_production/m_production_list',$data);
            $(that.element).html(html);
            $(that.element).find('.tree').treegrid(
                {
                    expanderExpandedClass: 'ic-open',
                    expanderCollapsedClass: 'ic-retract',
                    treeColumn: 1
                }
            );
            that.bindActionClick();
            var tableWidth = $(that.element).find('table.table').width();
            stringCtrl('taskName',tableWidth*0.2);
            if(that.settings.$getCallBack!=null){
                that.settings.$getCallBack();
            }
            if(that.settings.$scrollCallBack!=null){
                that.settings.$scrollCallBack();
            }
            $(that.element).find('span.person-in-charge,a[data-toggle="tooltip"]').tooltip();
            that.editHoverFun();
            //操作列表没有可操作则不展示该按钮组
            $(that.element).find('ul.dropdown-menu').each(function () {
                var len = $(this).find('li a[data-action]').length;
                if(len==0){
                    $(this).parents('.btn-group').remove();
                }
            });

            //设计名称编辑
            $(that.element).find('a[data-action="taskNameEdit"]').each(function () {
                var $this = $(this);
                var taskName = $this.closest('td').find('span.taskName').attr('data-string');
                $this.editable({//编辑
                    type: 'text',
                    mode: 'inline',
                    value:taskName,
                    emptytext:'',
                    savenochange:true,
                    placeholder: '设计任务',
                    onblur:'submit',
                    showbuttons:false,
                    success: function(response, newValue) {
                        if(newValue!=taskName){
                            var param = {};
                            param.taskName = newValue;
                            if(that.saveTaskIssueBySyncEdit($this,param)){
                                return false;
                            }
                        }
                    },
                    display: function(value, sourceData) {
                        $this.closest('td').find('.show-span').show();
                    },
                    validate: function(value) {
                        if($.trim(value) == ''){
                            S_toastr.error('设计任务名称不可为空！');
                            return '不能为空';
                        }
                        if(value.length>50){
                            S_toastr.error('设计任务名称超出字数限制！');
                            return '设计任务名称超出字数限制！';
                        }
                    }
                });
                //显示x-editable事件shown
                $this.on('shown', function(e, editable) {
                    if(!($(that.element).find('.row-edit').length>0)) {
                        $this.closest('td').find('.show-span').hide();
                        var len = taskName.length;
                        $this.next('.editable-container').find('.editable-input').after('<span style="padding: 4px 12px;display: inline-block;"><span class="wordCount">' + len + '</span>/<span>50</span></span>');
                    }else{
                        S_toastr.warning('当前正在创建设计任务中...');
                        $this.editable('hide');
                    }
                    $this.next('.editable-container').find('.editable-error-block').remove();//屏蔽错误提示，改为toastr提示
                    $this.next('.editable-container').find('.editable-input input').on('keyup',function () {//任务名称字数事件
                        var len = $this.next('.editable-container').find('.editable-input input').val().length;
                        $this.next('.editable-container').find('.wordCount').text(len);
                        if(len>50){
                            $this.next('.editable-container').find('.wordCount').addClass('color-red');
                        }else{
                            if($this.next('.editable-container').find('.wordCount').hasClass('color-red')){
                                $this.next('.editable-container').find('.wordCount').removeClass('color-red');
                            }
                        }
                    });
                });
            });
            //任务描述编辑
            $(that.element).find('a[data-action="taskRemarkEdit"]').each(function () {
                var $this = $(this);
                var id = $this.attr('id'),i=$this.closest('TR').attr('data-i'),currentObj = that._productionList[i];
                $this.on('click',function () {

                    if(!($(that.element).find('.row-edit').length>0)) {

                        S_dialog.dialog({
                            title: '任务描述',
                            contentEle: 'dialogOBox',
                            ele:id,
                            lock: 2,
                            quickClose:true,
                            noTriangle:true,
                            width: '320',
                            minHeight:'110',
                            tPadding: '0px',
                            url: rootPath+'/assets/module/m_common/m_dialog.html'

                        },function(d){//加载html后触发

                            var tipsEle = 'div[id="content:'+d.id+'"] .dialogOBox';
                            var remark = currentObj.taskRemark==null?'':currentObj.taskRemark;

                            var html = template('m_production/m_production_editRemark',{
                                remark:remark
                            });
                            $(tipsEle).html(html);

                            $(tipsEle).find('button[data-action="cancel"]').off('click').on('click',function () {
                                S_dialog.close($(tipsEle));
                            });
                            $(tipsEle).find('button[data-action="submit"]').off('click').on('click',function () {
                                var text = $(tipsEle).find('textarea').val();
                                var param = {};
                                param.taskRemark = text;
                                that.saveTaskIssueByEdit($this,param);
                                S_dialog.close($(tipsEle));
                            });

                        });

                    }else{
                        S_toastr.warning('当前正在创建设计任务中...');
                    }
                });
            });
            that.editPriority();
        }
        //优先级编辑
        ,editPriority:function () {
            var that = this;
            $(that.element).find('a[data-action="priorityEdit"]').each(function () {

                var $this = $(this);
                $this.editable({//编辑
                    type: 'select',
                    mode: 'inline',
                    value: $this.attr('data-priority'),
                    source: [
                        {value: 5, text: '紧急'},
                        {value: 4, text: '高'},
                        {value: 3, text: '中'},
                        {value: 2, text: '低'},
                        {value: 1, text: '无关紧要'},
                        {value: 0, text: '无'}
                    ],
                    showbuttons:false,
                    success: function(response, newValue) {
                        if(newValue==''){
                            newValue = null;
                        }
                        var param = {};
                        param.priority = newValue;
                        that.saveTaskIssueByEdit($this,param);
                    },
                    display: function(value, sourceData) {
                        $this.closest('td').find('.show-span').show();
                    }
                });
                //显示x-editable事件shown
                $this.on('shown', function(e, editable) {
                    if($(that.element).find('.row-edit').length>0) {
                        S_toastr.warning('当前正在创建设计任务中...');
                        $this.editable('hide');
                    }else{
                        $this.closest('td').find('.show-span').hide();
                    }
                });
                $this.on('hidden', function(e, reason) {
                    if(reason === 'save' || reason === 'cancel' || reason=== 'onblur') {
                        $this.closest('td').find('.show-span').show();
                    }
                });

            });
        }
        //hover事件
        ,editHoverFun:function () {

            var that = this;
            //文本移上去出现编辑图标hover事件
            $(that.element).find('a[data-action][data-deal-type="edit"]').each(function () {

                var $this = $(this);

                $this.closest('TD').hover(function () {
                    if($this.closest('TD').find('.edit-box').length<=0 && $this.closest('TD').find('.editable-container').length<=0){
                        $this.css('display','block');
                    }
                },function () {
                    if($this.closest('TD').find('.edit-box').length<=0 && $this.closest('TD').find('.editable-container').length<=0) {
                        $this.css('display','none');
                    }
                })
            });
            //TR hover效果
            $(that.element).find('TR').each(function () {
                var $this = $(this);
                var singleOperation = $this.find('.singleOperation');
                $this.hover(function () {
                    singleOperation.show();
                    if(!$this.hasClass('no-data')){
                        $this.addClass('tr-hover');
                    }
                },function () {
                    singleOperation.hide();
                    $this.removeClass('tr-hover');
                });
            });
        }
        //编辑任务名称
        ,saveProductionTask:function (taskId,$this,taskType) {

            var options={},that=this;
            options.url=restApi.url_saveTaskIssuing;
            options.postData = {};
            options.postData.projectId = that.settings.$projectId;
            if(taskType!=null){
                options.postData.taskType =taskType;
            }else{
                options.postData.taskType =0;
            }

            options.postData.companyId = that._currentCompanyId;
            options.postData.taskPid = taskId;
            options.postData.taskName = $.trim($this.closest('tr').find('input[name="taskName"]').val());
            options.postData.taskRemark = $this.closest('tr').next('tr.row-edit').find('input[name="taskRemark"]').val();
            options.postData.startTime = $this.closest('tr').find('input[name="startTime"]').val();
            options.postData.endTime = $this.closest('tr').find('input[name="endTime"]').val();
            options.postData.designerId = $this.closest('tr').find('a[data-action="setTaskLeader"]').attr('data-id');
            options.postData.designUserList = [];
            options.postData.checkUserList = [];
            options.postData.examineUserList = [];

            if(that._designerListByAdd.length>0){
                $.each(that._designerListByAdd,function (index,item) {
                    options.postData.designUserList.push(item.id);
                });
            }
            if(that._checkUserListByAdd.length>0){
                $.each(that._checkUserListByAdd,function (index,item) {
                    options.postData.checkUserList.push(item.id);
                });
            }
            if(that._examineUserListByAdd.length>0){
                $.each(that._examineUserListByAdd,function (index,item) {
                    options.postData.examineUserList.push(item.id);
                });
            }
            m_ajax.postJson(options,function (response) {

                if(response.code=='0'){
                    S_toastr.success('添加成功！');
                    that.refreshPage();
                }else {
                    if(response.info.indexOf('已存在')>-1){
                        S_toastr.error(response.info);
                    }else{
                        S_dialog.error(response.info);
                    }
                }
            })
        }
        //设置进度变更时间
        ,setTheScheduleTime:function ($this) {

            var that = this,taskId = $this.closest('tr').attr('data-id');
            var dataStartTime = $this.attr('data-start-time');
            var dataEndTime = $this.attr('data-end-time');

            var _i = $this.closest('TR').attr('data-i');
            var theCurrentTaskObj = that._productionList[_i];
            var theParentTaskObj = [];
            $.each(that._productionList,function(i,item){
                if(item.id==theCurrentTaskObj.taskPid){
                    theParentTaskObj = item;
                    return ;
                }
            });
            var options = {};
            options.$projectId = that.settings.$projectId;
            options.$projectName = that.settings.$projectName;

            if(dataStartTime=='' && dataEndTime==''){//设置计划进度

                options.$title = '设置计划进度';
                options.$isHaveMemo = false;
                options.$isOkSave = true;
                options.$saveDataUrl = restApi.url_saveProjectProcessTime;
                var $data = {};
                $data.companyId = that._currentCompanyId;
                $data.targetId = taskId;
                $data.type = 2;
                options.$saveData = $data;
                options.$saveTimeKeyVal=['startTime','endTime'];
                options.$okCallBack = function (data) {
                    that.refreshPage();
                };
                $('body').m_inputProcessTime(options);

            }else{//计划进度变更
                options.$theCurrentTaskObj = theCurrentTaskObj;
                $('body').m_productionSchedule(options);
            }
        }
        ,planningSchedule:function ($this) {

            var that = this,taskId = $this.closest('tr').attr('data-id');
            var option = {};
            option.$saveDataUrl = restApi.url_saveProjectProcessTime;
            option.$projectId = that.settings.$projectId;
            option.$projectName = that.settings.$projectName;
            option.$title = '调整计划进度';
            option.$isOkSave = true;
            option.$validate = 2;
            var $data = {};
            $data.companyId = that._currentCompanyId;
            $data.targetId = taskId;
            $data.type = 2;
            option.$saveData = $data;
            option.$saveTimeKeyVal=['startTime','endTime','memo'];
            option.$okCallBack = function (data) {
                that.refreshPage();
            };
            $('body').m_inputProcessTime(option);
        }
        //刷新当前界面
        ,refreshPage:function () {
            var option = {}, that = this;
            var scrollTop = $('body').scrollTop();
            option.$projectId = that.settings.$projectId;
            option.$projectName = that.settings.$projectName;
            option.$scrollCallBack = function () {
                $('body').scrollTop(scrollTop);
            };
            if(that.settings.$pageEntrance == 'myProductionTask'){
                $('#content-right').m_myTask_production(option,true);
            }else{
                $('#content-right').m_production(option);
            }

        }
        //移交任务负责人
        ,postManagerChange:function(data,event){
            var that = this;
            var option={};
            option.url=restApi.url_transferTaskResponse;
            option.postData={};
            option.postData.id = data.id;
            option.postData.taskId = data.taskId;
            option.postData.projectId=that.settings.$projectId;
            option.postData.companyId=that._currentCompanyId;
            option.postData.type=data.type;
            option.postData.targetId=data.companyUserId;
            m_ajax.postJson(option,function (response) {
                if(response.code=='0'){
                    S_dialog.close($(event));
                    S_toastr.success('保存成功！');
                    that.refreshPage();
                }else {
                    S_dialog.error(response.info);
                }
            })
        }
        //编辑签发保存
        ,saveTaskIssueByEdit:function ($this,param) {
            var options={},that=this;
            options.url=restApi.url_updateTaskInfo;
            options.postData = {};
            options.postData.id = $this.closest('tr').attr('data-id');
            $.extend(options.postData, param);
            m_ajax.postJson(options,function (response) {
                if(response.code=='0'){
                    S_toastr.success('保存成功！');
                    that.refreshPage();
                }else {
                    S_dialog.error(response.info);
                }
            });
        }
        ,saveTaskIssueBySyncEdit:function ($this,param) {
            var options={},that=this;
            options.url=restApi.url_updateTaskInfo;
            options.async = false;
            options.postData = {};
            options.postData.id = $this.closest('tr').attr('data-id');
            $.extend(options.postData, param);
            var isError = false;
            m_ajax.postJson(options,function (response) {
                if(response.code=='0'){
                    S_toastr.success('保存成功！');
                    that.refreshPage();
                }else {
                    if(response.info.indexOf('已存在')>-1){
                        S_toastr.error(response.info);
                        isError = true;
                    }else{
                        S_dialog.error(response.info);
                    }
                }
            });
            return isError;
        }
        //编辑签发进度变更保存
        ,saveProgressChangeByEdit:function ($this,param) {
            var options={},that=this;
            options.url=restApi.url_saveProjectProcessTime;
            options.postData = {};
            options.postData.targetId = $this.closest('tr').attr('data-id');
            options.postData.companyId = that._currentCompanyId;
            options.postData.type = 2;
            $.extend(options.postData, param);
            m_ajax.postJson(options,function (response) {
                if(response.code=='0'){
                    S_toastr.success('保存成功！');
                    that.refreshPage();
                }else {
                    S_dialog.error(response.info);
                }
            });
        }
        //保存参与人员
        ,saveTaskParticipant:function ($this,t) {

            var that = this;
            var option  = {};
            option.classId = that.element;
            option.url = restApi.url_saveOrUpdateProcess;
            var param ={};
            var nodes = [];
            var dataI = $this.closest('tr').attr('data-i');
            if(t==1) {
                param.memberType = that._productionList[dataI].designUser.memberType;
                nodes = that.getChosedUserList(that._designerListByAdd,that._productionList[dataI].designUser);
            }else if(t==2){
                param.memberType = that._productionList[dataI].checkUser.memberType;
                nodes = that.getChosedUserList(that._checkUserListByAdd,that._productionList[dataI].checkUser);
            }else if(t==3){
                param.memberType = that._productionList[dataI].examineUser.memberType;
                nodes = that.getChosedUserList(that._examineUserListByAdd,that._productionList[dataI].examineUser);
            }
            param.nodes = nodes;
            param.projectId = that.settings.$projectId;
            param.taskManageId = $this.closest('tr').attr('data-id');
            option.postData = param;
            m_ajax.postJson(option,function (response) {
                if(response.code=='0'){
                    S_toastr.success('保存成功！');
                    that.refreshPage();
                }else {
                    S_dialog.error(response.info);
                }
            })
        }
        //向上、向下移动保存
        ,saveTaskMoveInSeq:function (taskList) {

            var that = this;
            var option = {};
            option.url = restApi.url_exchangeTask;
            option.postData = [];
            option.postData = taskList;
            m_ajax.postJson(option, function (response) {
                if (response.code == '0') {
                    S_toastr.success('更新成功');
                    that.refreshPage();
                } else {
                    S_dialog.error(response.info);
                }
            });
        }
        //选择的人员，跟旧数据对比，并返回
        ,getChosedUserList:function (newList,oldList) {
            var nodes = [];
            if (newList.length > 0) {
                $.each(newList, function (index, item) {

                    var obj = {};
                    obj.companyUserId = item.id;
                    obj.userName = item.userName;
                    obj.memberType = oldList.memberType;
                    obj.nodeName = oldList.nodeName;

                    if (oldList.userList != null && oldList.userList.length > 0) {

                        $.each(oldList.userList, function (i, t) {//跟旧数据对比
                            if (item.id == t.companyUserId) {
                                obj.id = t.id;
                                return false;
                            }
                        });
                    }
                    nodes.push(obj);
                });
            }
            return nodes;
        }
        //添加设计任务
        ,addTaskRow:function ($this,taskType) {
            var that = this;
            var taskId = $this.closest('tr').attr('data-id');
            var dataI = $this.closest('tr').attr('data-i');
            var currentTaskObj = that._productionList[dataI];
            var html =  template('m_production/m_production_list_add', {
                personInCharge:currentTaskObj.personInCharge,
                personInChargeId:currentTaskObj.personInChargeId,
                taskType:taskType
            });
            if(taskId!=null){
                if($(that.element).find('tr[data-pid="'+taskId+'"]').length>0){//存在子任务

                    $(that.element).find('tr[data-pid="'+taskId+'"]:last').after(html);
                }else{
                    $(that.element).find('tr[data-id="'+taskId+'"]').after(html);
                }
                //把父任务时间带过来
                var $pEle = $(that.element).find('tr[data-id="'+taskId+'"]');
                var sTime = $pEle.find('span.show-span[data-type="planTime"]').attr('data-start-time');
                var eTime = $pEle.find('span.show-span[data-type="planTime"]').attr('data-end-time');
                $(that.element).find('.row-edit input[name="startTime"]').val(sTime);
                $(that.element).find('.row-edit input[name="endTime"]').val(eTime);

                //父任务加底色显示
                $(that.element).find('tr[data-id="'+taskId+'"]').css('background-color','#d7d7d7');

            }else{
                $(that.element).find('tr:last').after(html);
            }
            that.timeIconClick1($('.row-edit'));
            $(that.element).find('.row-edit a[data-action]').on('click',function (e) {//选择人员事件

                var dataAction = $(this).attr('data-action');
                switch (dataAction){
                    case "setTaskLeader"://设置任务负责人
                        that.choseTaskLeader($(this),0);
                        break;
                    case "setTaskDesigner"://设置设计人员

                        that.choseUser($(this),1);
                        break;
                    case "setTaskCheckUser"://设置校对人员
                        that.choseUser($(this),2);
                        break;
                    case "setTaskExamineUser"://设置审核人员
                        that.choseUser($(this),3);
                        break;
                }
                e.stopPropagation();
            });

            $(that.element).find('button[data-action="cancel"]').on('click',function () {//取消事件
                $(this).closest('tr').next('tr.row-edit').remove();
                $(this).closest('tr.row-edit').remove();
                $(that.element).find('tr[data-id="'+taskId+'"]').removeAttr('style');
            });
            $(that.element).find('button[data-action="submit"]').on('click',function (e) {//提交事件

                /****************** 验证 - 开始**********************/

                var taskName = $.trim($(this).closest('tr.row-edit').find('input[name="taskName"]').val());
                var isRepeatName = false;//任务名称是否重名

                if(taskName==''){
                    S_toastr.error('设计任务名称不可为空！');
                    return false;
                }
                if(taskName.length>50){
                    S_toastr.error('设计任务名称超出字数限制！');
                    return false;
                }
                /*if(that._productionList!=null && that._productionList.length>0){
                    $.each(that._productionList,function (index,item) {
                        if(taskName==item.taskName){
                            isRepeatName = true;
                            return false;
                        }
                    })
                }
                if(isRepeatName){
                    S_toastr.error(taskName+'已存在！');
                    return false;
                }*/
                /****************** 验证 - 结束**********************/
                that.saveProductionTask(taskId,$(this),taskType);
                e.stopPropagation();
                return false;
            });
            $(that.element).find('input[name="taskName"]').on('keyup',function () {//任务名称字数事件
                var len = $(that.element).find('input[name="taskName"]').val().length;
                $(that.element).find('.wordCount').text(len);
                if(len>50){
                    $(that.element).find('.wordCount').addClass('color-red');
                }else{
                    if($(that.element).find('.wordCount').hasClass('color-red')){
                        $(that.element).find('.wordCount').removeClass('color-red');
                    }
                }
            });
            //绑定回车事件
            $(that.element).find('input[name="taskName"]').keydown(function(e) {
                if (event.keyCode == '13') {//keyCode=13是回车键
                    $(that.element).find('button[data-action="submit"]').click();
                    preventDefault(e);
                }
            });
        }
        //选择任务负责人
        ,choseTaskLeader:function ($this,t) {
            var that = this;
            var personInChargeId = $this.attr('data-id'),userName=$this.attr('data-user-name');
            var options = {};
            options.selectedUserList = [{
                id:personInChargeId,
                userName:userName
            }];
            options.url = restApi.url_getOrgTree;
            options.isASingleSelectUser = true;
            options.delSelectedUserCallback = function () {

            };
            options.title = '选择任务负责人';
            options.selectUserCallback = function (data,event) {

                var targetUser='<strong style="color:red;margin:0px 3px;">'+data.userName+'</strong>';
                var confirmTitle = '确定安排'+targetUser+'为新的任务负责人？';
                S_dialog.confirm(confirmTitle,function(){

                    if(t==0){//添加情况下
                        $this.attr('data-id',data.companyUserId);
                        $this.attr('data-user-name',data.userName);
                        $this.prev().find('span').html(data.userName);
                        S_dialog.close($(event));
                    }else{//编辑状态下
                        data.type = 1;
                        data.id = $this.attr('data-id');//旧任务负责人
                        data.taskId = $this.closest('tr').attr('data-id');
                        that.postManagerChange(data,event);
                    }
                },function(){
                    //S_dialog.close($(event));
                });
            };
            $('body').m_orgByTree(options);
        }
        //选择设校审人员
        ,choseUser:function ($this,t) {
            var that=this,options = {};
            var editType = $this.attr('data-deal-type');
            if(t==1){//设计人员
                options.title = '选择设计人员';
                options.selectedUserList = that._designerListByAdd;
            }else if(t==2){//校对
                options.title = '选择校对人员';
                options.selectedUserList = that._checkUserListByAdd;
            }else if(t==3){//审核
                options.title = '选择审核人员';
                options.selectedUserList = that._examineUserListByAdd;
            }

            options.url = restApi.url_getOrgTree;
            options.delSelectedUserCallback = function () {

            };
            options.saveCallback = function (data) {

                if(t==1){//设计人员
                    that._designerListByAdd=data.selectedUserList;
                }else if(t==2){//校对
                    that._checkUserListByAdd=data.selectedUserList;
                }else if(t==3){//审核
                    that._examineUserListByAdd=data.selectedUserList;
                }
                if(editType=='edit'){//编辑情况下

                    that.saveTaskParticipant($this,t);
                }else{//添加情况下
                    that.renderChoseUserShow($this,data.selectedUserList);
                }

            };
            options.renderTreeCallBack = function () {

                //把已提交的人员的删除按钮去掉，不可删除
                $('.orgUserTreeOBox .chosedUserBox').find('a[data-action="delChosedUser"]').each(function () {
                    var $this = $(this);
                    var dataId = $this.attr('data-id');

                    if(options.selectedUserList!=null && options.selectedUserList.length>0){
                        $.each(options.selectedUserList,function (index,item) {
                            if(dataId==item.id && item.completeTime!=null){
                                $this.remove();
                            }
                        })
                    }
                });

            };
            $('body').m_orgByTree(options);
        }
        //选择人员后展示在前端处理
        ,renderChoseUserShow:function ($this,userList) {
            var that = this;
            var tiphtml = '';
            var userShowObj = null;
            if(userList!=null && userList.length>0){
                $.each(userList,function (index,item) {
                    if(that._currentCompanyUserId==item.id){//当前人员展示在界面
                        userShowObj = item;
                    }
                    tiphtml += item.userName+',';
                });
                tiphtml = tiphtml.substring(0,tiphtml.length-1);
                if(userShowObj==null){
                    userShowObj = userList[0];//当前所选的人员不存在自己，取第一个
                }
                $this.closest('td').find('.show-span span').html(userShowObj.userName);
                $this.closest('td').find('.show-span').attr('data-original-title',tiphtml);
                $this.closest('td').find('span[data-toggle="tooltip"]').tooltip({html : true });
            }
        }

        //编辑前清空所有编辑情况
        ,removeAllEditBox:function () {
            var that = this;
            $(that.element).find('.reign-edit-box').parents('td').find('.show-span').show();
            $(that.element).find('.reign-edit-box').remove();
            $(that.element).find('.editable').parents('td').find('.show-span').show();
            $(that.element).find('.editable').editable('hide');
        }
        //时间图标事件点击
        ,timeIconClick:function ($this) {
            $this.next().find('.fa-calendar').off('click').on('click',function (e) {
                $(this).closest('.input-group').find('input[name="ipt_time"]').click();
                e.stopPropagation();
            });
        }
        //时间图标事件点击
        ,timeIconClick1:function ($this) {
            $this.find('.fa-calendar').off('click').on('click',function (e) {
                $(this).closest('.input-group').find('input.timeInput').focus();
                e.stopPropagation();
            });
        }
        //事件绑定
        ,bindActionClick:function () {
            var that = this;
            $(that.element).find('a[data-action]').on('click',function (e) {

                var $this = $(this),$dataAction = $this.attr('data-action');
                var $taskId = $this.closest('tr').attr('data-id');
                var $i = $this.closest('tr').attr('data-i')-0;
                switch ($dataAction) {

                    case 'setPersonInCharge'://设置任务负责人
                        that.removeAllEditBox();
                        that.choseTaskLeader($this,1);
                        e.stopPropagation();
                        break;
                    case 'delTask'://删除任务
                        S_swal.confirm({
                            title:'确定删除该任务?',
                            text:'删除后将不能恢复，确定吗？',
                            callBack:function () {

                                var option = {};
                                option.url = restApi.url_deleteProjectTask;
                                option.postData = {};
                                option.postData.id = $taskId;
                                m_ajax.postJson(option, function (response) {
                                    if (response.code == '0') {
                                        S_swal.sure({
                                            title:'已删除',
                                            text:'该生产任务删除成功。',
                                            callBack:function () {
                                                that.refreshPage();
                                            }
                                        });
                                    } else {
                                        S_dialog.error(response.info);
                                    }
                                });
                            }
                        });
                        break;
                    case 'addSubTask'://分解子任务
                        that.removeAllEditBox();
                        if(!($(that.element).find('.row-edit').length>0)){
                            that.addTaskRow($this);
                            //置空数据
                            that._designerListByAdd=[];//添加任务－设计人员列表
                            that._checkUserListByAdd=[];//添加任务－校对人员列表
                            that._examineUserListByAdd=[];//添加任务－审核人员列表
                            $this.attr('disabled',true);
                        }else{
                            S_toastr.warning('当前正在创建设计任务中...');
                        }
                        //e.stopPropagation();
                        break;
                    case 'addSubTaskByDesigner':
                        that.removeAllEditBox();
                        if(!($(that.element).find('.row-edit').length>0)){
                            that.addTaskRow($this,5);//taskType=5
                            //置空数据
                            that._designerListByAdd=[];//添加任务－设计人员列表
                            that._checkUserListByAdd=[];//添加任务－校对人员列表
                            that._examineUserListByAdd=[];//添加任务－审核人员列表
                            $this.attr('disabled',true);
                        }else{
                            S_toastr.warning('当前正在创建设计任务中...');
                        }
                        break;
                    case 'setTaskDesigner'://设设计人员
                        that.removeAllEditBox();
                        var designUser = that._productionList[$i].designUser;
                        that._designerListByAdd = [];
                        if(designUser!=null && designUser.userList!=null && designUser.userList.length>0){

                            $.each(designUser.userList,function (index,item) {
                                that._designerListByAdd.push({
                                    id:item.companyUserId,
                                    userName:item.userName,
                                    completeTime:item.completeTime
                                })
                            })
                        }
                        that.choseUser($this,1);
                        break;
                    case 'setTaskCheckUser'://设校对人员
                        var checkUser = that._productionList[$i].checkUser;
                        that._checkUserListByAdd = [];
                        if(checkUser!=null && checkUser.userList!=null && checkUser.userList.length>0){

                            $.each(checkUser.userList,function (index,item) {
                                that._checkUserListByAdd.push({
                                    id:item.companyUserId,
                                    userName:item.userName,
                                    completeTime:item.completeTime
                                })
                            })
                        }
                        that.choseUser($this,2);
                        break;
                    case 'setTaskExamineUser'://设审核人员
                        that.removeAllEditBox();
                        var examineUser = that._productionList[$i].examineUser;
                        that._examineUserListByAdd = [];
                        if(examineUser!=null && examineUser.userList!=null && examineUser.userList.length>0){

                            $.each(examineUser.userList,function (index,item) {
                                that._examineUserListByAdd.push({
                                    id:item.companyUserId,
                                    userName:item.userName,
                                    completeTime:item.completeTime
                                })
                            })
                        }
                        that.choseUser($this,3);
                        break;
                    case 'startTimeEdit'://开始时间编辑

                        if(!($(that.element).find('.row-edit').length>0)){
                            that.removeAllEditBox();
                            that.setTheScheduleTime($this);
                            e.stopPropagation();
                        }else{
                            S_toastr.warning('当前正在创建设计任务中...');
                        }
                        break;
                    case 'endTimeEdit'://开始时间编辑

                        if(!($(that.element).find('.row-edit').length>0)){
                            that.removeAllEditBox();
                            that.setTheScheduleTime($this);
                            e.stopPropagation();
                        }else{
                            S_toastr.warning('当前正在创建设计任务中...');
                        }
                        break;
                    case 'planningSchedule'://计划进度

                        if(!($(that.element).find('.row-edit').length>0)){
                            that.removeAllEditBox();
                            that.planningSchedule($this);
                            e.stopPropagation();
                        }else{
                            S_toastr.warning('当前正在创建设计任务中...');
                        }

                        break;
                    case 'viewProgressChange'://获取时间变更列表

                        var option = {};
                        option.$taskId = $taskId;
                        option.$publishId = $this.closest('tr').attr('data-id');
                        option.$type = 2;
                        option.$eleId = $this.attr('id');
                        $('body').m_schedule_list(option);
                        e.stopPropagation();
                        break;
                    case 'completeTask'://确认完成

                        var tipStr = $this.attr('data-original-title');
                        var dataStatus = $this.attr('data-status');
                        if(dataStatus=='0'){//激活

                            S_dialog.confirm(tipStr+'？',function () {
                                var option = {};
                                //option.url = restApi.url_completeTask+'/'+$taskId+'/'+dataStatus;
                                option.url = restApi.url_completeTask;
                                option.postData = {
                                    taskId:$taskId,
                                    status:dataStatus
                                };
                                m_ajax.postJson(option,function (response) {
                                    if (response.code == '0') {
                                        S_toastr.success('操作成功');
                                        that.refreshPage();
                                    } else {
                                        S_dialog.error(response.info);
                                    }
                                });
                            },function () {
                            });
                        }else{//完成

                            var option = {};
                            option.$taskId = $taskId;
                            option.$status = dataStatus;
                            option.$saveCallBack = function () {
                                that.refreshPage();
                            };
                            $('body').m_confirmCompletion(option);
                        }
                        e.stopPropagation();
                        break;

                    case 'moveUp'://向上移动

                        var taskArr = [];
                        taskArr.push({
                            id:that._productionList[$i].id,
                            seq:that._productionList[$i].seq-0
                        });
                        for(var i=$i-1;i<$i;i--){
                            if(that._productionList[i].taskLevel==that._productionList[$i].taskLevel){
                                taskArr.push({
                                    id:that._productionList[i].id,
                                    seq:that._productionList[i].seq-0
                                });
                                break;
                            }
                        }
                        that.saveTaskMoveInSeq(taskArr);

                        break;

                    case 'moveDown'://向下移动

                        var taskArr = [];
                        taskArr.push({
                            id:that._productionList[$i].id,
                            seq:that._productionList[$i].seq
                        });
                        for(var i=$i+1;i<that._productionList.length;i++){
                            if(that._productionList[i].taskLevel==that._productionList[$i].taskLevel){
                                taskArr.push({
                                    id:that._productionList[i].id,
                                    seq:that._productionList[i].seq
                                });
                                break;
                            }
                        }
                        that.saveTaskMoveInSeq(taskArr);
                        break;

                    case 'submitTask'://提交任务(设校审)

                        var dataId = $this.attr('data-id');
                        S_dialog.confirm('确定完成此任务？',function () {

                            var option = {};
                            option.url = restApi.url_updateCompleteTask+'/'+dataId;
                            m_ajax.get(option, function (response) {
                                if (response.code == '0') {
                                    S_toastr.success('操作成功');
                                    that.refreshPage();
                                } else {
                                    S_dialog.error(response.info);
                                }
                            });
                        },function () {
                        });
                        e.stopPropagation();
                        break;
                    case 'activateTask'://提交任务(设校审)

                        var dataId = $this.attr('data-id');
                        S_dialog.confirm('确定激活此任务？',function () {

                            var option = {};
                            option.url = restApi.url_activeProjectTask+'/'+dataId;
                            m_ajax.get(option, function (response) {
                                if (response.code == '0') {
                                    S_toastr.success('操作成功');
                                    that.refreshPage();
                                } else {
                                    S_dialog.error(response.info);
                                }
                            });
                        },function () {
                        });
                        e.stopPropagation();
                        break;

                    case 'viewTaskRemarkEdit'://查看任务描述

                        var id = $this.attr('id'),i=$this.closest('TR').attr('data-i'),currentObj = that._productionList[i];
                        S_dialog.dialog({
                            title: '任务描述',
                            contentEle: 'dialogOBox',
                            ele:id,
                            lock: 2,
                            quickClose:true,
                            noTriangle:true,
                            width: '320',
                            minHeight:'110',
                            tPadding: '0px',
                            url: rootPath+'/assets/module/m_common/m_dialog.html'

                        },function(d){//加载html后触发

                            var tipsEle = 'div[id="content:'+d.id+'"] .dialogOBox';
                            var remark = currentObj.taskRemark==null?'':currentObj.taskRemark;
                            $(tipsEle).html('<div class="m-sm" style="word-break: break-all;">'+remark+'</div>');

                        });
                        e.stopPropagation();
                        break;
                    case 'viewTaskCompletion'://查看任务完成情况

                        var id = $this.attr('id'),i=$this.closest('TR').attr('data-i'),currentObj = that._productionList[i];
                        S_dialog.dialog({
                            title: '完成情况',
                            contentEle: 'dialogOBox',
                            ele:id,
                            lock: 2,
                            align:'left',
                            quickClose:true,
                            noTriangle:true,
                            width: '300',
                            minHeight:'110',
                            tPadding: '0px',
                            url: rootPath+'/assets/module/m_common/m_dialog.html'

                        },function(d){//加载html后触发

                            var tipsEle = 'div[id="content:'+d.id+'"] .dialogOBox';
                            var completion = currentObj.completion==null?'':currentObj.completion;
                            $(tipsEle).html('<div class="m-sm" style="word-break: break-all;">'+completion+'</div>');

                        });
                        e.stopPropagation();
                        break;
                }
            });
        }

    });

    $.fn[pluginName] = function (options) {
        return this.each(function () {

            //if (!$.data(this, "plugin_" + pluginName)) {
            $.data(this, "plugin_" +
                pluginName, new Plugin(this, options));
            //}
        });
    };

})(jQuery, window, document);

/**
 * 项目信息－生产安排列表
 * Created by wrb on 2017/2/22.
 */
;(function ($, window, document, undefined) {

    "use strict";
    var pluginName = "m_production_list_old",
        defaults = {
            $projectId:null,
            $projectName:null,
            $productionList:null,
            $getCallBack:null,//请求渲染html后回滚事件
            $scrollCallBack:null,//定位scrollTop
            $pageEntrance:'production'//页面入口（我的任务=myProductionTask,生产安排=production）
        };

    // The actual plugin constructor
    function Plugin(element, options) {
        this.element = element;

        this.settings = $.extend({}, defaults, options);
        this._defaults = defaults;
        this._name = pluginName;
        this._currentCompanyId = window.currentCompanyId;//当前组织ID
        this._currentCompanyUserId = window.currentCompanyUserId;//当前组织人员ID
        this._currentUserId = window.currentUserId;//当前用户ID
        this._productionList = [];//当前生产列表
        this._designerListByAdd=[];//添加任务－设计人员列表
        this._checkUserListByAdd=[];//添加任务－校对人员列表
        this._examineUserListByAdd=[];//添加任务－审核人员列表
        this.init();
    }

    // Avoid Plugin.prototype conflicts
    $.extend(Plugin.prototype, {
        init: function () {
            var that = this;
            that.initHtml();


        },
        //初始化数据,生成html
        initHtml:function () {
            var that = this;
            var $data = {};

            $data.productionList = that.settings.$productionList;
            that._productionList = that.settings.$productionList;
            $data.currentCompanyId = that._currentCompanyId;
            $data.currentCompanyUserId = that._currentCompanyUserId;
            $data.currentUserId = that._currentUserId;
            var html = template('m_production/m_production_list',$data);
            $(that.element).html(html);
            $(that.element).find('.tree').treegrid(
                {
                    expanderExpandedClass: 'ic-open',
                    expanderCollapsedClass: 'ic-retract',
                    treeColumn: 1
                }
            );
            that.bindActionClick();
            var tableWidth = $(that.element).find('table.table').width();
            stringCtrl('taskName',tableWidth*0.2);
            if(that.settings.$getCallBack!=null){
                that.settings.$getCallBack();
            }
            if(that.settings.$scrollCallBack!=null){
                that.settings.$scrollCallBack();
            }
            $(that.element).find('span.person-in-charge,a[data-toggle="tooltip"]').tooltip();
            that.editHoverFun();
            //操作列表没有可操作则不展示该按钮组
            $(that.element).find('ul.dropdown-menu').each(function () {
                var len = $(this).find('li a[data-action]').length;
                if(len==0){
                    $(this).parents('.btn-group').remove();
                }
            });

            //设计名称编辑
            $(that.element).find('a[data-action="taskNameEdit"]').each(function () {
                var $this = $(this);
                var taskName = $this.closest('td').find('span.taskName').attr('data-string');
                $this.editable({//编辑
                    type: 'text',
                    mode: 'inline',
                    value:taskName,
                    emptytext:'',
                    savenochange:true,
                    placeholder: '设计任务',
                    onblur:'submit',
                    showbuttons:false,
                    success: function(response, newValue) {
                        if(newValue!=taskName){
                            var param = {};
                            param.taskName = newValue;
                            if(that.saveTaskIssueBySyncEdit($this,param)){
                                return false;
                            }
                        }
                    },
                    display: function(value, sourceData) {
                        $this.closest('td').find('.show-span').show();
                    },
                    validate: function(value) {
                        if($.trim(value) == ''){
                            S_toastr.error('设计任务名称不可为空！');
                            return '不能为空';
                        }
                        if(value.length>50){
                            S_toastr.error('设计任务名称超出字数限制！');
                            return '设计任务名称超出字数限制！';
                        }
                    }
                });
                //显示x-editable事件shown
                $this.on('shown', function(e, editable) {
                    if(!($(that.element).find('.row-edit').length>0)) {
                        $this.closest('td').find('.show-span').hide();
                        var len = taskName.length;
                        $this.next('.editable-container').find('.editable-input').after('<span style="padding: 4px 12px;display: inline-block;"><span class="wordCount">' + len + '</span>/<span>50</span></span>');
                    }else{
                        S_toastr.warning('当前正在创建设计任务中...');
                        $this.editable('hide');
                    }
                    $this.next('.editable-container').find('.editable-error-block').remove();//屏蔽错误提示，改为toastr提示
                    $this.next('.editable-container').find('.editable-input input').on('keyup',function () {//任务名称字数事件
                        var len = $this.next('.editable-container').find('.editable-input input').val().length;
                        $this.next('.editable-container').find('.wordCount').text(len);
                        if(len>50){
                            $this.next('.editable-container').find('.wordCount').addClass('color-red');
                        }else{
                            if($this.next('.editable-container').find('.wordCount').hasClass('color-red')){
                                $this.next('.editable-container').find('.wordCount').removeClass('color-red');
                            }
                        }
                    });
                });
            });
            //任务描述编辑
            $(that.element).find('a[data-action="taskRemarkEdit"]').each(function () {
                var $this = $(this);
                var id = $this.attr('id'),i=$this.closest('TR').attr('data-i'),currentObj = that._productionList[i];
                $this.on('click',function () {

                    if(!($(that.element).find('.row-edit').length>0)) {

                        S_dialog.dialog({
                            title: '任务描述',
                            contentEle: 'dialogOBox',
                            ele:id,
                            lock: 2,
                            quickClose:true,
                            noTriangle:true,
                            width: '320',
                            minHeight:'110',
                            tPadding: '0px',
                            url: rootPath+'/assets/module/m_common/m_dialog.html'

                        },function(d){//加载html后触发

                            var tipsEle = 'div[id="content:'+d.id+'"] .dialogOBox';
                            var remark = currentObj.taskRemark==null?'':currentObj.taskRemark;

                            var html = template('m_production/m_production_editRemark',{
                                remark:remark
                            });
                            $(tipsEle).html(html);

                            $(tipsEle).find('button[data-action="cancel"]').off('click').on('click',function () {
                                S_dialog.close($(tipsEle));
                            });
                            $(tipsEle).find('button[data-action="submit"]').off('click').on('click',function () {
                                var text = $(tipsEle).find('textarea').val();
                                var param = {};
                                param.taskRemark = text;
                                that.saveTaskIssueByEdit($this,param);
                                S_dialog.close($(tipsEle));
                            });

                        });

                    }else{
                        S_toastr.warning('当前正在创建设计任务中...');
                    }
                });
            });
            that.editPriority();
        }
        //优先级编辑
        ,editPriority:function () {
            var that = this;
            $(that.element).find('a[data-action="priorityEdit"]').each(function () {

                var $this = $(this);
                $this.editable({//编辑
                    type: 'select',
                    mode: 'inline',
                    value: $this.attr('data-priority'),
                    source: [
                        {value: 5, text: '紧急'},
                        {value: 4, text: '高'},
                        {value: 3, text: '中'},
                        {value: 2, text: '低'},
                        {value: 1, text: '无关紧要'},
                        {value: 0, text: '无'}
                    ],
                    showbuttons:false,
                    success: function(response, newValue) {
                        if(newValue==''){
                            newValue = null;
                        }
                        var param = {};
                        param.priority = newValue;
                        that.saveTaskIssueByEdit($this,param);
                    },
                    display: function(value, sourceData) {
                        $this.closest('td').find('.show-span').show();
                    }
                });
                //显示x-editable事件shown
                $this.on('shown', function(e, editable) {
                    if($(that.element).find('.row-edit').length>0) {
                        S_toastr.warning('当前正在创建设计任务中...');
                        $this.editable('hide');
                    }else{
                        $this.closest('td').find('.show-span').hide();
                    }
                });
                $this.on('hidden', function(e, reason) {
                    if(reason === 'save' || reason === 'cancel' || reason=== 'onblur') {
                        $this.closest('td').find('.show-span').show();
                    }
                });

            });
        }
        //hover事件
        ,editHoverFun:function () {

            var that = this;
            //文本移上去出现编辑图标hover事件
            $(that.element).find('a[data-action][data-deal-type="edit"]').each(function () {

                var $this = $(this);

                $this.closest('TD').hover(function () {
                    if($this.closest('TD').find('.edit-box').length<=0 && $this.closest('TD').find('.editable-container').length<=0){
                        $this.css('display','block');
                    }
                },function () {
                    if($this.closest('TD').find('.edit-box').length<=0 && $this.closest('TD').find('.editable-container').length<=0) {
                        $this.css('display','none');
                    }
                })
            });
            //TR hover效果
            $(that.element).find('TR').each(function () {
                var $this = $(this);
                var singleOperation = $this.find('.singleOperation');
                $this.hover(function () {
                    singleOperation.show();
                    if(!$this.hasClass('no-data')){
                        $this.addClass('tr-hover');
                    }
                },function () {
                    singleOperation.hide();
                    $this.removeClass('tr-hover');
                });
            });
        }
        //编辑任务名称
        ,saveProductionTask:function (taskId,$this,taskType) {

            var options={},that=this;
            options.url=restApi.url_saveTaskIssuing;
            options.postData = {};
            options.postData.projectId = that.settings.$projectId;
            if(taskType!=null){
                options.postData.taskType =taskType;
            }else{
                options.postData.taskType =0;
            }

            options.postData.companyId = that._currentCompanyId;
            options.postData.taskPid = taskId;
            options.postData.taskName = $.trim($this.closest('tr').find('input[name="taskName"]').val());
            options.postData.taskRemark = $this.closest('tr').next('tr.row-edit').find('input[name="taskRemark"]').val();
            options.postData.startTime = $this.closest('tr').find('input[name="startTime"]').val();
            options.postData.endTime = $this.closest('tr').find('input[name="endTime"]').val();
            options.postData.designerId = $this.closest('tr').find('a[data-action="setTaskLeader"]').attr('data-id');
            options.postData.designUserList = [];
            options.postData.checkUserList = [];
            options.postData.examineUserList = [];

            if(that._designerListByAdd.length>0){
                $.each(that._designerListByAdd,function (index,item) {
                    options.postData.designUserList.push(item.id);
                });
            }
            if(that._checkUserListByAdd.length>0){
                $.each(that._checkUserListByAdd,function (index,item) {
                    options.postData.checkUserList.push(item.id);
                });
            }
            if(that._examineUserListByAdd.length>0){
                $.each(that._examineUserListByAdd,function (index,item) {
                    options.postData.examineUserList.push(item.id);
                });
            }
            m_ajax.postJson(options,function (response) {

                if(response.code=='0'){
                    S_toastr.success('添加成功！');
                    that.refreshPage();
                }else {
                    if(response.info.indexOf('已存在')>-1){
                        S_toastr.error(response.info);
                    }else{
                        S_dialog.error(response.info);
                    }
                }
            })
        }
        //设置进度变更时间
        ,setTheScheduleTime:function ($this) {

            var that = this,taskId = $this.closest('tr').attr('data-id');
            var dataStartTime = $this.attr('data-start-time');
            var dataEndTime = $this.attr('data-end-time');

            var _i = $this.closest('TR').attr('data-i');
            var theCurrentTaskObj = that._productionList[_i];
            var theParentTaskObj = [];
            $.each(that._productionList,function(i,item){
                if(item.id==theCurrentTaskObj.taskPid){
                    theParentTaskObj = item;
                    return ;
                }
            });
            var options = {};
            options.$projectId = that.settings.$projectId;
            options.$projectName = that.settings.$projectName;

            if(dataStartTime=='' && dataEndTime==''){//设置计划进度

                options.$title = '设置计划进度';
                options.$isHaveMemo = false;
                options.$isOkSave = true;
                options.$saveDataUrl = restApi.url_saveProjectProcessTime;
                var $data = {};
                $data.companyId = that._currentCompanyId;
                $data.targetId = taskId;
                $data.type = 2;
                options.$saveData = $data;
                options.$saveTimeKeyVal=['startTime','endTime'];
                options.$okCallBack = function (data) {
                    that.refreshPage();
                };
                $('body').m_inputProcessTime(options);

            }else{//计划进度变更
                options.$theCurrentTaskObj = theCurrentTaskObj;
                $('body').m_productionSchedule(options);
            }
        }
        ,planningSchedule:function ($this) {

            var that = this,taskId = $this.closest('tr').attr('data-id');
            var option = {};
            option.$saveDataUrl = restApi.url_saveProjectProcessTime;
            option.$projectId = that.settings.$projectId;
            option.$projectName = that.settings.$projectName;
            option.$title = '调整计划进度';
            option.$isOkSave = true;
            option.$validate = 2;
            var $data = {};
            $data.companyId = that._currentCompanyId;
            $data.targetId = taskId;
            $data.type = 2;
            option.$saveData = $data;
            option.$saveTimeKeyVal=['startTime','endTime','memo'];
            option.$okCallBack = function (data) {
                that.refreshPage();
            };
            $('body').m_inputProcessTime(option);
        }
        //刷新当前界面
        ,refreshPage:function () {
            var option = {}, that = this;
            var scrollTop = $('body').scrollTop();
            option.$projectId = that.settings.$projectId;
            option.$projectName = that.settings.$projectName;
            option.$scrollCallBack = function () {
                $('body').scrollTop(scrollTop);
            };
            if(that.settings.$pageEntrance == 'myProductionTask'){
                $('#content-right').m_myTask_production(option,true);
            }else{
                $('#content-right').m_production(option);
            }

        }
        //移交任务负责人
        ,postManagerChange:function(data,event){
            var that = this;
            var option={};
            option.url=restApi.url_transferTaskResponse;
            option.postData={};
            option.postData.id = data.id;
            option.postData.taskId = data.taskId;
            option.postData.projectId=that.settings.$projectId;
            option.postData.companyId=that._currentCompanyId;
            option.postData.type=data.type;
            option.postData.targetId=data.companyUserId;
            m_ajax.postJson(option,function (response) {
                if(response.code=='0'){
                    S_dialog.close($(event));
                    S_toastr.success('保存成功！');
                    that.refreshPage();
                }else {
                    S_dialog.error(response.info);
                }
            })
        }
        //编辑签发保存
        ,saveTaskIssueByEdit:function ($this,param) {
            var options={},that=this;
            options.url=restApi.url_updateTaskInfo;
            options.postData = {};
            options.postData.id = $this.closest('tr').attr('data-id');
            $.extend(options.postData, param);
            m_ajax.postJson(options,function (response) {
                if(response.code=='0'){
                    S_toastr.success('保存成功！');
                    that.refreshPage();
                }else {
                    S_dialog.error(response.info);
                }
            });
        }
        ,saveTaskIssueBySyncEdit:function ($this,param) {
            var options={},that=this;
            options.url=restApi.url_updateTaskInfo;
            options.async = false;
            options.postData = {};
            options.postData.id = $this.closest('tr').attr('data-id');
            $.extend(options.postData, param);
            var isError = false;
            m_ajax.postJson(options,function (response) {
                if(response.code=='0'){
                    S_toastr.success('保存成功！');
                    that.refreshPage();
                }else {
                    if(response.info.indexOf('已存在')>-1){
                        S_toastr.error(response.info);
                        isError = true;
                    }else{
                        S_dialog.error(response.info);
                    }
                }
            });
            return isError;
        }
        //编辑签发进度变更保存
        ,saveProgressChangeByEdit:function ($this,param) {
            var options={},that=this;
            options.url=restApi.url_saveProjectProcessTime;
            options.postData = {};
            options.postData.targetId = $this.closest('tr').attr('data-id');
            options.postData.companyId = that._currentCompanyId;
            options.postData.type = 2;
            $.extend(options.postData, param);
            m_ajax.postJson(options,function (response) {
                if(response.code=='0'){
                    S_toastr.success('保存成功！');
                    that.refreshPage();
                }else {
                    S_dialog.error(response.info);
                }
            });
        }
        //保存参与人员
        ,saveTaskParticipant:function ($this,t) {

            var that = this;
            var option  = {};
            option.classId = that.element;
            option.url = restApi.url_saveOrUpdateProcess;
            var param ={};
            var nodes = [];
            var dataI = $this.closest('tr').attr('data-i');
            if(t==1) {
                param.memberType = that._productionList[dataI].designUser.memberType;
                nodes = that.getChosedUserList(that._designerListByAdd,that._productionList[dataI].designUser);
            }else if(t==2){
                param.memberType = that._productionList[dataI].checkUser.memberType;
                nodes = that.getChosedUserList(that._checkUserListByAdd,that._productionList[dataI].checkUser);
            }else if(t==3){
                param.memberType = that._productionList[dataI].examineUser.memberType;
                nodes = that.getChosedUserList(that._examineUserListByAdd,that._productionList[dataI].examineUser);
            }
            param.nodes = nodes;
            param.projectId = that.settings.$projectId;
            param.taskManageId = $this.closest('tr').attr('data-id');
            option.postData = param;
            m_ajax.postJson(option,function (response) {
                if(response.code=='0'){
                    S_toastr.success('保存成功！');
                    that.refreshPage();
                }else {
                    S_dialog.error(response.info);
                }
            })
        }
        //向上、向下移动保存
        ,saveTaskMoveInSeq:function (taskList) {

            var that = this;
            var option = {};
            option.url = restApi.url_exchangeTask;
            option.postData = [];
            option.postData = taskList;
            m_ajax.postJson(option, function (response) {
                if (response.code == '0') {
                    S_toastr.success('更新成功');
                    that.refreshPage();
                } else {
                    S_dialog.error(response.info);
                }
            });
        }
        //选择的人员，跟旧数据对比，并返回
        ,getChosedUserList:function (newList,oldList) {
            var nodes = [];
            if (newList.length > 0) {
                $.each(newList, function (index, item) {

                    var obj = {};
                    obj.companyUserId = item.id;
                    obj.userName = item.userName;
                    obj.memberType = oldList.memberType;
                    obj.nodeName = oldList.nodeName;

                    if (oldList.userList != null && oldList.userList.length > 0) {

                        $.each(oldList.userList, function (i, t) {//跟旧数据对比
                            if (item.id == t.companyUserId) {
                                obj.id = t.id;
                                return false;
                            }
                        });
                    }
                    nodes.push(obj);
                });
            }
            return nodes;
        }
        //添加设计任务
        ,addTaskRow:function ($this,taskType) {
            var that = this;
            var taskId = $this.closest('tr').attr('data-id');
            var dataI = $this.closest('tr').attr('data-i');
            var currentTaskObj = that._productionList[dataI];
            var html =  template('m_production/m_production_list_add', {
                personInCharge:currentTaskObj.personInCharge,
                personInChargeId:currentTaskObj.personInChargeId,
                taskType:taskType
            });
            if(taskId!=null){
                if($(that.element).find('tr[data-pid="'+taskId+'"]').length>0){//存在子任务

                    $(that.element).find('tr[data-pid="'+taskId+'"]:last').after(html);
                }else{
                    $(that.element).find('tr[data-id="'+taskId+'"]').after(html);
                }
                //把父任务时间带过来
                var $pEle = $(that.element).find('tr[data-id="'+taskId+'"]');
                var sTime = $pEle.find('span.show-span[data-type="planTime"]').attr('data-start-time');
                var eTime = $pEle.find('span.show-span[data-type="planTime"]').attr('data-end-time');
                $(that.element).find('.row-edit input[name="startTime"]').val(sTime);
                $(that.element).find('.row-edit input[name="endTime"]').val(eTime);

                //父任务加底色显示
                $(that.element).find('tr[data-id="'+taskId+'"]').css('background-color','#d7d7d7');

            }else{
                $(that.element).find('tr:last').after(html);
            }
            that.timeIconClick1($('.row-edit'));
            $(that.element).find('.row-edit a[data-action]').on('click',function (e) {//选择人员事件

                var dataAction = $(this).attr('data-action');
                switch (dataAction){
                    case "setTaskLeader"://设置任务负责人
                        that.choseTaskLeader($(this),0);
                        break;
                    case "setTaskDesigner"://设置设计人员

                        that.choseUser($(this),1);
                        break;
                    case "setTaskCheckUser"://设置校对人员
                        that.choseUser($(this),2);
                        break;
                    case "setTaskExamineUser"://设置审核人员
                        that.choseUser($(this),3);
                        break;
                }
                e.stopPropagation();
            });

            $(that.element).find('button[data-action="cancel"]').on('click',function () {//取消事件
                $(this).closest('tr').next('tr.row-edit').remove();
                $(this).closest('tr.row-edit').remove();
                $(that.element).find('tr[data-id="'+taskId+'"]').removeAttr('style');
            });
            $(that.element).find('button[data-action="submit"]').on('click',function (e) {//提交事件

                /****************** 验证 - 开始**********************/

                var taskName = $.trim($(this).closest('tr.row-edit').find('input[name="taskName"]').val());
                var isRepeatName = false;//任务名称是否重名

                if(taskName==''){
                    S_toastr.error('设计任务名称不可为空！');
                    return false;
                }
                if(taskName.length>50){
                    S_toastr.error('设计任务名称超出字数限制！');
                    return false;
                }
                /*if(that._productionList!=null && that._productionList.length>0){
                    $.each(that._productionList,function (index,item) {
                        if(taskName==item.taskName){
                            isRepeatName = true;
                            return false;
                        }
                    })
                }
                if(isRepeatName){
                    S_toastr.error(taskName+'已存在！');
                    return false;
                }*/
                /****************** 验证 - 结束**********************/
                that.saveProductionTask(taskId,$(this),taskType);
                e.stopPropagation();
                return false;
            });
            $(that.element).find('input[name="taskName"]').on('keyup',function () {//任务名称字数事件
                var len = $(that.element).find('input[name="taskName"]').val().length;
                $(that.element).find('.wordCount').text(len);
                if(len>50){
                    $(that.element).find('.wordCount').addClass('color-red');
                }else{
                    if($(that.element).find('.wordCount').hasClass('color-red')){
                        $(that.element).find('.wordCount').removeClass('color-red');
                    }
                }
            });
            //绑定回车事件
            $(that.element).find('input[name="taskName"]').keydown(function(e) {
                if (event.keyCode == '13') {//keyCode=13是回车键
                    $(that.element).find('button[data-action="submit"]').click();
                    preventDefault(e);
                }
            });
        }
        //选择任务负责人
        ,choseTaskLeader:function ($this,t) {
            var that = this;
            var personInChargeId = $this.attr('data-id'),userName=$this.attr('data-user-name');
            var options = {};
            options.selectedUserList = [{
                id:personInChargeId,
                userName:userName
            }];
            options.url = restApi.url_getOrgTree;
            options.isASingleSelectUser = true;
            options.delChoseUserCallBack = function () {

            };
            options.title = '选择任务负责人';
            options.choseUserCallback = function (data,event) {

                var targetUser='<strong style="color:red;margin:0px 3px;">'+data.userName+'</strong>';
                var confirmTitle = '确定安排'+targetUser+'为新的任务负责人？';
                S_dialog.confirm(confirmTitle,function(){

                    if(t==0){//添加情况下
                        $this.attr('data-id',data.companyUserId);
                        $this.attr('data-user-name',data.userName);
                        $this.prev().find('span').html(data.userName);
                        S_dialog.close($(event));
                    }else{//编辑状态下
                        data.type = 1;
                        data.id = $this.attr('data-id');//旧任务负责人
                        data.taskId = $this.closest('tr').attr('data-id');
                        that.postManagerChange(data,event);
                    }
                },function(){
                    //S_dialog.close($(event));
                });
            };
            $('body').m_orgByTree(options);
        }
        //选择设校审人员
        ,choseUser:function ($this,t) {
            var that=this,options = {};
            var editType = $this.attr('data-deal-type');
            if(t==1){//设计人员
                options.title = '选择设计人员';
                options.selectedUserList = that._designerListByAdd;
            }else if(t==2){//校对
                options.title = '选择校对人员';
                options.selectedUserList = that._checkUserListByAdd;
            }else if(t==3){//审核
                options.title = '选择审核人员';
                options.selectedUserList = that._examineUserListByAdd;
            }

            options.url = restApi.url_getOrgTree;
            options.delChoseUserCallBack = function () {

            };
            options.saveChoseUserCallback = function (data) {

                if(t==1){//设计人员
                    that._designerListByAdd=data.selectedUserList;
                }else if(t==2){//校对
                    that._checkUserListByAdd=data.selectedUserList;
                }else if(t==3){//审核
                    that._examineUserListByAdd=data.selectedUserList;
                }
                if(editType=='edit'){//编辑情况下

                    that.saveTaskParticipant($this,t);
                }else{//添加情况下
                    that.renderChoseUserShow($this,data.selectedUserList);
                }

            };
            options.renderTreeCallBack = function () {

                //把已提交的人员的删除按钮去掉，不可删除
                $('.orgUserTreeOBox .chosedUserBox').find('a[data-action="delChosedUser"]').each(function () {
                    var $this = $(this);
                    var dataId = $this.attr('data-id');

                    if(options.selectedUserList!=null && options.selectedUserList.length>0){
                        $.each(options.selectedUserList,function (index,item) {
                            if(dataId==item.id && item.completeTime!=null){
                                $this.remove();
                            }
                        })
                    }
                });

            };
            $('body').m_orgByTree(options);
        }
        //选择人员后展示在前端处理
        ,renderChoseUserShow:function ($this,userList) {
            var that = this;
            var tiphtml = '';
            var userShowObj = null;
            if(userList!=null && userList.length>0){
                $.each(userList,function (index,item) {
                    if(that._currentCompanyUserId==item.id){//当前人员展示在界面
                        userShowObj = item;
                    }
                    tiphtml += item.userName+',';
                });
                tiphtml = tiphtml.substring(0,tiphtml.length-1);
                if(userShowObj==null){
                    userShowObj = userList[0];//当前所选的人员不存在自己，取第一个
                }
                $this.closest('td').find('.show-span span').html(userShowObj.userName);
                $this.closest('td').find('.show-span').attr('data-original-title',tiphtml);
                $this.closest('td').find('span[data-toggle="tooltip"]').tooltip({html : true });
            }
        }

        //编辑前清空所有编辑情况
        ,removeAllEditBox:function () {
            var that = this;
            $(that.element).find('.reign-edit-box').parents('td').find('.show-span').show();
            $(that.element).find('.reign-edit-box').remove();
            $(that.element).find('.editable').parents('td').find('.show-span').show();
            $(that.element).find('.editable').editable('hide');
        }
        //时间图标事件点击
        ,timeIconClick:function ($this) {
            $this.next().find('.fa-calendar').off('click').on('click',function (e) {
                $(this).closest('.input-group').find('input[name="ipt_time"]').click();
                e.stopPropagation();
            });
        }
        //时间图标事件点击
        ,timeIconClick1:function ($this) {
            $this.find('.fa-calendar').off('click').on('click',function (e) {
                $(this).closest('.input-group').find('input.timeInput').focus();
                e.stopPropagation();
            });
        }
        //事件绑定
        ,bindActionClick:function () {
            var that = this;
            $(that.element).find('a[data-action]').on('click',function (e) {

                var $this = $(this),$dataAction = $this.attr('data-action');
                var $taskId = $this.closest('tr').attr('data-id');
                var $i = $this.closest('tr').attr('data-i')-0;
                switch ($dataAction) {

                    case 'setPersonInCharge'://设置任务负责人
                        that.removeAllEditBox();
                        that.choseTaskLeader($this,1);
                        e.stopPropagation();
                        break;
                    case 'delTask'://删除任务
                        S_swal.confirm({
                            title:'确定删除该任务?',
                            text:'删除后将不能恢复，确定吗？',
                            callBack:function () {

                                var option = {};
                                option.url = restApi.url_deleteProjectTask;
                                option.postData = {};
                                option.postData.id = $taskId;
                                m_ajax.postJson(option, function (response) {
                                    if (response.code == '0') {
                                        S_swal.sure({
                                            title:'已删除',
                                            text:'该生产任务删除成功。',
                                            callBack:function () {
                                                that.refreshPage();
                                            }
                                        });
                                    } else {
                                        S_dialog.error(response.info);
                                    }
                                });
                            }
                        });
                        break;
                    case 'addSubTask'://分解子任务
                        that.removeAllEditBox();
                        if(!($(that.element).find('.row-edit').length>0)){
                            that.addTaskRow($this);
                            //置空数据
                            that._designerListByAdd=[];//添加任务－设计人员列表
                            that._checkUserListByAdd=[];//添加任务－校对人员列表
                            that._examineUserListByAdd=[];//添加任务－审核人员列表
                            $this.attr('disabled',true);
                        }else{
                            S_toastr.warning('当前正在创建设计任务中...');
                        }
                        //e.stopPropagation();
                        break;
                    case 'addSubTaskByDesigner':
                        that.removeAllEditBox();
                        if(!($(that.element).find('.row-edit').length>0)){
                            that.addTaskRow($this,5);//taskType=5
                            //置空数据
                            that._designerListByAdd=[];//添加任务－设计人员列表
                            that._checkUserListByAdd=[];//添加任务－校对人员列表
                            that._examineUserListByAdd=[];//添加任务－审核人员列表
                            $this.attr('disabled',true);
                        }else{
                            S_toastr.warning('当前正在创建设计任务中...');
                        }
                        break;
                    case 'setTaskDesigner'://设设计人员
                        that.removeAllEditBox();
                        var designUser = that._productionList[$i].designUser;
                        that._designerListByAdd = [];
                        if(designUser!=null && designUser.userList!=null && designUser.userList.length>0){

                            $.each(designUser.userList,function (index,item) {
                                that._designerListByAdd.push({
                                    id:item.companyUserId,
                                    userName:item.userName,
                                    completeTime:item.completeTime
                                })
                            })
                        }
                        that.choseUser($this,1);
                        break;
                    case 'setTaskCheckUser'://设校对人员
                        var checkUser = that._productionList[$i].checkUser;
                        that._checkUserListByAdd = [];
                        if(checkUser!=null && checkUser.userList!=null && checkUser.userList.length>0){

                            $.each(checkUser.userList,function (index,item) {
                                that._checkUserListByAdd.push({
                                    id:item.companyUserId,
                                    userName:item.userName,
                                    completeTime:item.completeTime
                                })
                            })
                        }
                        that.choseUser($this,2);
                        break;
                    case 'setTaskExamineUser'://设审核人员
                        that.removeAllEditBox();
                        var examineUser = that._productionList[$i].examineUser;
                        that._examineUserListByAdd = [];
                        if(examineUser!=null && examineUser.userList!=null && examineUser.userList.length>0){

                            $.each(examineUser.userList,function (index,item) {
                                that._examineUserListByAdd.push({
                                    id:item.companyUserId,
                                    userName:item.userName,
                                    completeTime:item.completeTime
                                })
                            })
                        }
                        that.choseUser($this,3);
                        break;
                    case 'startTimeEdit'://开始时间编辑

                        if(!($(that.element).find('.row-edit').length>0)){
                            that.removeAllEditBox();
                            that.setTheScheduleTime($this);
                            e.stopPropagation();
                        }else{
                            S_toastr.warning('当前正在创建设计任务中...');
                        }
                        break;
                    case 'endTimeEdit'://开始时间编辑

                        if(!($(that.element).find('.row-edit').length>0)){
                            that.removeAllEditBox();
                            that.setTheScheduleTime($this);
                            e.stopPropagation();
                        }else{
                            S_toastr.warning('当前正在创建设计任务中...');
                        }
                        break;
                    case 'planningSchedule'://计划进度

                        if(!($(that.element).find('.row-edit').length>0)){
                            that.removeAllEditBox();
                            that.planningSchedule($this);
                            e.stopPropagation();
                        }else{
                            S_toastr.warning('当前正在创建设计任务中...');
                        }

                        break;
                    case 'viewProgressChange'://获取时间变更列表

                        var option = {};
                        option.$taskId = $taskId;
                        option.$publishId = $this.closest('tr').attr('data-id');
                        option.$type = 2;
                        option.$eleId = $this.attr('id');
                        $('body').m_schedule_list(option);
                        e.stopPropagation();
                        break;
                    case 'completeTask'://确认完成

                        var tipStr = $this.attr('data-original-title');
                        var dataStatus = $this.attr('data-status');
                        if(dataStatus=='0'){//激活

                            S_dialog.confirm(tipStr+'？',function () {
                                var option = {};
                                //option.url = restApi.url_completeTask+'/'+$taskId+'/'+dataStatus;
                                option.url = restApi.url_completeTask;
                                option.postData = {
                                    taskId:$taskId,
                                    status:dataStatus
                                };
                                m_ajax.postJson(option,function (response) {
                                    if (response.code == '0') {
                                        S_toastr.success('操作成功');
                                        that.refreshPage();
                                    } else {
                                        S_dialog.error(response.info);
                                    }
                                });
                            },function () {
                            });
                        }else{//完成

                            var option = {};
                            option.$taskId = $taskId;
                            option.$status = dataStatus;
                            option.$saveCallBack = function () {
                                that.refreshPage();
                            };
                            $('body').m_confirmCompletion(option);
                        }
                        e.stopPropagation();
                        break;

                    case 'moveUp'://向上移动

                        var taskArr = [];
                        taskArr.push({
                            id:that._productionList[$i].id,
                            seq:that._productionList[$i].seq-0
                        });
                        for(var i=$i-1;i<$i;i--){
                            if(that._productionList[i].taskLevel==that._productionList[$i].taskLevel){
                                taskArr.push({
                                    id:that._productionList[i].id,
                                    seq:that._productionList[i].seq-0
                                });
                                break;
                            }
                        }
                        that.saveTaskMoveInSeq(taskArr);

                        break;

                    case 'moveDown'://向下移动

                        var taskArr = [];
                        taskArr.push({
                            id:that._productionList[$i].id,
                            seq:that._productionList[$i].seq
                        });
                        for(var i=$i+1;i<that._productionList.length;i++){
                            if(that._productionList[i].taskLevel==that._productionList[$i].taskLevel){
                                taskArr.push({
                                    id:that._productionList[i].id,
                                    seq:that._productionList[i].seq
                                });
                                break;
                            }
                        }
                        that.saveTaskMoveInSeq(taskArr);
                        break;

                    case 'submitTask'://提交任务(设校审)

                        var dataId = $this.attr('data-id');
                        S_dialog.confirm('确定完成此任务？',function () {

                            var option = {};
                            option.url = restApi.url_updateCompleteTask+'/'+dataId;
                            m_ajax.get(option, function (response) {
                                if (response.code == '0') {
                                    S_toastr.success('操作成功');
                                    that.refreshPage();
                                } else {
                                    S_dialog.error(response.info);
                                }
                            });
                        },function () {
                        });
                        e.stopPropagation();
                        break;
                    case 'activateTask'://提交任务(设校审)

                        var dataId = $this.attr('data-id');
                        S_dialog.confirm('确定激活此任务？',function () {

                            var option = {};
                            option.url = restApi.url_activeProjectTask+'/'+dataId;
                            m_ajax.get(option, function (response) {
                                if (response.code == '0') {
                                    S_toastr.success('操作成功');
                                    that.refreshPage();
                                } else {
                                    S_dialog.error(response.info);
                                }
                            });
                        },function () {
                        });
                        e.stopPropagation();
                        break;

                    case 'viewTaskRemarkEdit'://查看任务描述

                        var id = $this.attr('id'),i=$this.closest('TR').attr('data-i'),currentObj = that._productionList[i];
                        S_dialog.dialog({
                            title: '任务描述',
                            contentEle: 'dialogOBox',
                            ele:id,
                            lock: 2,
                            quickClose:true,
                            noTriangle:true,
                            width: '320',
                            minHeight:'110',
                            tPadding: '0px',
                            url: rootPath+'/assets/module/m_common/m_dialog.html'

                        },function(d){//加载html后触发

                            var tipsEle = 'div[id="content:'+d.id+'"] .dialogOBox';
                            var remark = currentObj.taskRemark==null?'':currentObj.taskRemark;
                            $(tipsEle).html('<div class="m-sm" style="word-break: break-all;">'+remark+'</div>');

                        });
                        e.stopPropagation();
                        break;
                    case 'viewTaskCompletion'://查看任务完成情况

                        var id = $this.attr('id'),i=$this.closest('TR').attr('data-i'),currentObj = that._productionList[i];
                        S_dialog.dialog({
                            title: '完成情况',
                            contentEle: 'dialogOBox',
                            ele:id,
                            lock: 2,
                            align:'left',
                            quickClose:true,
                            noTriangle:true,
                            width: '300',
                            minHeight:'110',
                            tPadding: '0px',
                            url: rootPath+'/assets/module/m_common/m_dialog.html'

                        },function(d){//加载html后触发

                            var tipsEle = 'div[id="content:'+d.id+'"] .dialogOBox';
                            var completion = currentObj.completion==null?'':currentObj.completion;
                            $(tipsEle).html('<div class="m-sm" style="word-break: break-all;">'+completion+'</div>');

                        });
                        e.stopPropagation();
                        break;
                }
            });
        }

    });

    $.fn[pluginName] = function (options) {
        return this.each(function () {

            //if (!$.data(this, "plugin_" + pluginName)) {
            $.data(this, "plugin_" +
                pluginName, new Plugin(this, options));
            //}
        });
    };

})(jQuery, window, document);

/**
 * 项目信息－生产安排
 * Created by wrb on 2017/2/22.
 */
;(function ($, window, document, undefined) {

    "use strict";
    var pluginName = "m_production_old",
        defaults = {
            $projectInfo:null,
            $projectId:null,
            $projectName:null,
            $scrollCallBack:null//请求渲染html后回滚事件
        };

    // The actual plugin constructor
    function Plugin(element, options) {
        this.element = element;

        this.settings = $.extend({}, defaults, options);
        this._defaults = defaults;
        this._name = pluginName;
        this._currentCompanyId = window.currentCompanyId;//当前组织ID
        this._productionList = null;
        this.init();
    }

    // Avoid Plugin.prototype conflicts
    $.extend(Plugin.prototype, {
        init: function () {
            var that = this;
            that.initHtml();
        },
        //初始化数据,生成html
        initHtml:function (callBack) {

            var that = this;
            var companyId = $(that.element).find('select[name="viewByOrg"]').val();

            var options={};
            options.classId = '.ibox-content';
            options.url=restApi.url_getDesignTaskList;
            options.postData = {};
            options.postData.projectId = that.settings.$projectId;
            options.postData.type=2;
            if(companyId!=undefined && companyId!=''){
                options.postData.companyId = companyId;
            }
            m_ajax.postJson(options,function (response) {

                if(response.code=='0'){

                    var currentManagerObj = {};//当前设计负责人、助理
                    currentManagerObj.projectManager = response.data.projectManager;
                    currentManagerObj.assistant = response.data.assistant;

                    var html = template('m_production/m_production',{
                        projectName:that.settings.$projectName,
                        orgList:response.data.orgList,
                        dataCompanyId:response.data.dataCompanyId,
                        currentCompanyId:that._currentCompanyId,
                        currentManagerObj:currentManagerObj,
                        currentCompanyUserId:window.currentCompanyUserId
                    });
                    $(that.element).html(html);
                    var option = {};
                    option.$projectId = that.settings.$projectId;
                    option.$taskIssueOrgList = response.data.projectManagerDataDTOList;
                    option.$projectCreateBy = response.data.projectCreateBy;
                    option.$projectCompanyId = response.data.projectCompanyId;
                    option.$partB = response.data.partB;
                    option.$productionList = response.data.projectDesignContentShowList;
                    option.$projectName = that.settings.$projectName;

                    if(that.settings.$scrollCallBack!=null){
                        option.$scrollCallBack = that.settings.$scrollCallBack;
                    }

                    option.$pageEntrance = 'production';

                    $(that.element).find('#productionList').m_production_list(option);
                    that.bindClickAction();
                    that.initSelectByView();

                }else {
                    S_dialog.error(response.info);
                }
            })
        }
        //视图切换
        , initSelectByView:function () {
            var that = this;
            $(that.element).find('select[name="viewByOrg"]').select2({
                allowClear: false,
                language: "zh-CN",
                minimumResultsForSearch: -1
            });
            $(that.element).find('select[name="viewByOrg"]').on("change", function (e) {
                that.initHtml();
            })
        }

        //更改设计负责人或设计人事件
        , managerChangeEvent:function ($this) {
            var that = this;
            var action = $this.attr('data-action');
            var companyId = $this.attr('data-company-id');//当前要获取的项目立项组织的index

            if (action == 'changeOperatorPerson') {
                var operatorPersonId = $this.attr('data-id'),userName=$this.attr('data-user-name');

                var option = {};
                option.$type = 1;
                option.$title = '选择设计负责人';
                option.$selectedUserList = [{
                    id:operatorPersonId,
                    userName:userName
                }];
                option.$selectUserCallback = function (data, event) {//1
                    data.type = 1;
                    var targetUser='<strong style="color:red;margin:0 3px;">'+data.userName+'</strong>';
                    S_dialog.confirm('确定将设计负责人更换为'+targetUser+'？', function () {
                        that.postManagerChange(data, companyId, event);
                    }, function () {
                        //S_dialog.close($(event));
                    });
                };
                $('body').m_changeOperator(option);

            } else if (action == 'changeManagerPerson') {

                var isFirstSetDesign = $.trim($this.text()) == '未设置' ? true : false;
                var designPersonId = $this.attr('data-id'),userName=$this.attr('data-user-name');
                var options = {};
                options.url = restApi.url_getOrgTree;
                options.isASingleSelectUser = true;
                options.delChoseUserCallBack = function () {
                    $(that.element).find('input[name="chooseManager"]').removeAttr('companyUserId');
                    $(that.element).find('input[name="chooseManager"]').val('');
                };
                options.title = '选择助理';
                if(designPersonId!=undefined && designPersonId!=''){
                    options.chosedUserList = [{
                        id:designPersonId,
                        userName:userName
                    }];
                }

                options.$isOkSave = true;
                options.saveChoseUserCallback = function (data, event) {
                    var obj = {};
                    obj.type = 2;
                    if(data!=null && data.chosedUserList!=null && data.chosedUserList.length>0){
                        obj.userName = data.chosedUserList[0].userName;
                        obj.companyUserId = data.chosedUserList[0].id;
                        obj.isFirstSetDesign = isFirstSetDesign;
                        var targetUser='<strong style="color:red;margin:0 3px;">'+obj.userName+'</strong>';
                        S_dialog.confirm('确定将助理更换为'+targetUser+'？', function () {
                            that.postManagerChange(obj, companyId, event);
                        }, function () {
                        });
                    }else{
                        obj.companyUserId=null;
                        S_dialog.confirm('确定将助理置空？', function () {
                            that.postManagerChange(obj, companyId, event);
                        }, function () {
                        });
                    }
                };
                $('body').m_orgByTree(options);
            }
            return false;
        }
        //移交设计负责人或助理的请求
        , postManagerChange: function (data, companyId, event) {
            var that = this;
            var option = {};

            option.postData = {};
            if(data.type==2){//助理
                option.url = restApi.url_updateProjectAssistant;
                option.postData.type = '2';
            }else{//设计负责人
                if (data.isFirstSetDesign != null && data.isFirstSetDesign == false) {
                    option.url = restApi.url_transferTaskDesigner;
                } else {
                    option.url = restApi.url_updateProjectManager;
                }
                option.postData.type = '2';
            }
            option.postData.projectId = that.settings.$projectId;
            option.postData.companyId = companyId;
            option.postData.companyUserId = data.companyUserId;
            m_ajax.postJson(option, function (response) {
                if (response.code == '0') {
                    S_dialog.close($(event));
                    S_toastr.success('保存成功！');
                    that.refreshPage();
                } else {
                    S_dialog.error(response.info);
                }
            })
        }
        ,refreshPage:function () {
            var option = {}, that = this;
            var scrollTop = $('body').scrollTop();
            option.$projectId = that.settings.$projectId;
            option.$projectName = that.settings.$projectName;
            option.$scrollCallBack = function () {
                $('body').scrollTop(scrollTop);
            };
            $('#content-right').m_production(option);
        }
        //事件绑定
        ,bindClickAction:function(){
            var that = this;

            $(that.element).find('a[data-action]').bind('click',function(){
                var $this = $(this),
                    dataAction = $this.attr('data-action');

                switch (dataAction) {//切换自己生产与总览

                    case 'changeOperatorPerson'://修改当前组织设计负责人

                        that.managerChangeEvent($this);
                        break;
                    case 'changeManagerPerson'://修改当前组织设计助理

                        that.managerChangeEvent($this);
                        break;
                }

            });
        }


    });

    $.fn[pluginName] = function (options) {
        return this.each(function () {

            //if (!$.data(this, "plugin_" + pluginName)) {
            $.data(this, "plugin_" +
                pluginName, new Plugin(this, options));
            //}
        });
    };

})(jQuery, window, document);

/**
 * 项目信息－生产安排组织
 * Created by wrb on 2017/2/22.
 */
;(function ($, window, document, undefined) {

    "use strict";
    var pluginName = "m_production_org",
        defaults = {
            $projectId: null,
            partB: null,
            $productionOrgList: null,
            $projectCreateBy:null,//立项人用户ID
            $projectCompanyId:null//立项人组织
        };

    // The actual plugin constructor
    function Plugin(element, options) {
        this.element = element;

        this.settings = $.extend({}, defaults, options);
        this._defaults = defaults;
        this._name = pluginName;
        this._currentCompanyId = window.currentCompanyId;//当前组织ID
        this.init();
    }

    // Avoid Plugin.prototype conflicts
    $.extend(Plugin.prototype, {
        init: function () {
            var that = this;
            that._initHtml();
        },
        //初始化数据,生成html
        _initHtml: function () {
            var that = this;
            var $data = {};
            $data.departBCompany = that.settings.partB;//获取乙方组织
            $data.isRoleCompany = false;//判断是立项方组织或者乙方组织
            $data.productionOrgList = that.settings.$productionOrgList;
            $data.currentCompanyId = window.currentCompanyId;
            $data.currentCompanyUserId = window.currentCompanyUserId;
            $data.isShowTips = 0;
            if($data.productionOrgList!=null && $data.productionOrgList.length>0){
                for (var i=0;i<$data.productionOrgList.length;i++){
                    if ($data.productionOrgList[0].type == 1) {
                        var flag = $data.productionOrgList[0].id == window.currentCompanyId || ($data.departBCompany&&$data.departBCompany.id == that._currentCompanyId);
                        $data.isRoleCompany = flag ? true : false;
                    }
                    //合作组织是当前组织且经营负责人是当前人且未设置设计负责人
                    if($data.productionOrgList[i].id==$data.currentCompanyId
                        && $data.productionOrgList[i].operatorPersonId==$data.currentCompanyUserId
                        && $data.productionOrgList[i].designPersonId==null){
                        $data.isShowTips = 1;
                        break;
                    }
                }
            }
            $data.projectCreateBy = that.settings.$projectCreateBy;
            $data.projectCompanyId = that.settings.$projectCompanyId;
            $data.currentUserId = window.currentUserId;
            $data.isOrgManager = window.currentRoleCodes!=null && window.currentRoleCodes.indexOf('sys_enterprise_logout')>-1?1:0;//是否是当前组织企业负责人
            var html = template('m_production/m_production_org', $data);
            $(that.element).html(html);
            //$(that.element).find('.tree').treegrid();
            //$(that.element).find('.no-treegrid-expander span.treegrid-expander-expanded').unbind();
            stringCtrl('companyName');
            that._bindClickFun();
        },
        _bindClickFun: function () {
            var that = this;
            $(that.element).find('a[data-toggle="tooltip"]').tooltip();
            $(that.element).find('a[data-action]').on('click', function (event) {//移交经营负责人与项目负责人按钮
                var action = $(this).attr('data-action');
                var companyId = $(this).attr('data-company-id');//当前要获取的项目立项组织的index
                var options = {};

                options.url = restApi.url_getOrgTree;
                options.isASingleSelectUser = true;
                options.delSelectedUserCallback = function () {
                    $(that.element).find('input[name="chooseManager"]').removeAttr('companyUserId');
                    $(that.element).find('input[name="chooseManager"]').val('');
                };
                if (action == 'changeOperatorPerson') {
                    var operatorPersonId = $(this).attr('data-id'),userName=$(this).attr('data-user-name');
                    options.title = '选择经营负责人';
                    options.selectedUserList = [{
                        id:operatorPersonId,
                        userName:userName
                    }];
                    options.selectUserCallback = function (data, event) {
                        data.type = 1;
                        var targetUser='<strong style="color:red;margin:0 3px;">'+data.userName+'</strong>';
                        S_dialog.confirm('确定将经营负责人更换为'+targetUser+'？', function () {
                            that._postManagerChange(data, companyId, event);
                        }, function () {
                            //S_dialog.close($(event));
                        });
                    }
                } else if (action == 'changeManagerPerson') {

                    var isFirstSetDesign =  $.trim($(this).text())=='未设置'?true:false;
                    var designPersonId = $(this).attr('data-id'),userName=$(this).attr('data-user-name');

                    options.title = '选择设计负责人';
                    options.selectedUserList = [{
                        id:designPersonId,
                        userName:userName
                    }];
                    options.selectUserCallback = function (data, event) {
                        data.type = 2;
                        var targetUser='<strong style="color:red;margin:0 3px;">'+data.userName+'</strong>';
                        S_dialog.confirm('确定将设计负责人更换为'+targetUser+'？', function () {
                            that._postManagerChange(data, companyId, event);
                        }, function () {
                            //S_dialog.close($(event));
                        });

                        data.isFirstSetDesign = isFirstSetDesign;
                    }
                }
                $('body').m_orgByTree(options);
                return false;
            });
        }
        //移交经营负责人或项目负责人的请求
        , _postManagerChange: function (data, companyId, event) {
            var that = this;
            var option = {};
            if(data.isFirstSetDesign!=null && data.isFirstSetDesign==false){
                option.url = restApi.url_transferTaskDesigner;
            }else{
                option.url = restApi.url_updateProjectManager;
            }
            option.postData = {};
            option.postData.projectId = that.settings.$projectId;
            option.postData.companyId = companyId;
            option.postData.type = data.type;
            option.postData.companyUserId = data.companyUserId;
            m_ajax.postJson(option, function (response) {
                if (response.code == '0') {
                    S_dialog.close($(event));
                    S_toastr.success('保存成功！');
                    if(data.type==1){//移交经营负责人会影响项目权限的编辑更改，需要刷新数据
                        that._refreshMenu();
                    }
                    that._refresh();
                } else {
                    S_dialog.error(response.info);
                }
            })
        }
        //刷新当前菜单
        , _refreshMenu: function () {
            var that=this,option = {};
            option.$projectId = that.settings.$projectId;
            option.$type = 'productionArrangement';
            $('#project_menu').m_projectMenu(option);
        }
        //刷新当前界面
        , _refresh: function () {
            var option = {}, that = this;
            option.$projectId = that.settings.$projectId;
            $('#project_detail').m_production(option,true);
        }

    });

    $.fn[pluginName] = function (options) {
        return this.each(function () {

            //if (!$.data(this, "plugin_" + pluginName)) {
            $.data(this, "plugin_" +
                pluginName, new Plugin(this, options));
            //}
        });
    };

})(jQuery, window, document);

/**
 * 项目信息－生产安排
 * Created by wrb on 2017/2/22.
 */
;(function ($, window, document, undefined) {

    "use strict";
    var pluginName = "m_production_overview",
        defaults = {
            $projectInfo:null,
            $projectId:null,
            $getCallBack:null//请求渲染html后回滚事件
        };

    // The actual plugin constructor
    function Plugin(element, options) {
        this.element = element;

        this.settings = $.extend({}, defaults, options);
        this._defaults = defaults;
        this._name = pluginName;
        this._currentCompanyId = window.currentCompanyId;//当前组织ID
        this._productionList = [];//当前生产总览
        this.init();
    }

    // Avoid Plugin.prototype conflicts
    $.extend(Plugin.prototype, {
        init: function () {
            var that = this;
            that._initHtml();
        },
        //初始化数据,生成html
        _initHtml:function (callBack) {
            var that = this;
            var options={};
            options.classId = '#productionList';
            options.url=restApi.url_getProductTaskOverview+'/'+that.settings.$projectId;

            m_ajax.get(options,function (response) {

                if(response.code=='0'){

                    that._productionList = response.data;

                    var html = template('m_production/m_production_overview',{});
                    $(that.element).html(html);
                    var html1 = template('m_production/m_production_overview_list',{productionList:response.data});
                    $(that.element).find('#productionList').html(html1);
                    $(that.element).find('.tree').treegrid(
                        {
                            /*expanderExpandedClass: 'fa fa-minus-square-o',
                            expanderCollapsedClass: 'fa fa-plus-square-o',*/
                            expanderExpandedClass: 'icon iconfont icon-iconfontttpodicon2',
                            expanderCollapsedClass: 'icon iconfont icon-shouqi',
                            treeColumn: 0
                        }
                    );
                    //设校审tooltip
                    $(that.element).find('span[tooltip-type]').each(function () {
                        var $this = $(this);
                        var $i = $this.closest('tr').attr('data-i');
                        var tooltipType = $this.attr('tooltip-type');
                        switch (tooltipType){
                            case '1':
                                var userList = that._productionList[$i].designUser.userList;
                                that.toolTipRender($this,userList);
                                break;
                            case '2':
                                var userList = that._productionList[$i].checkUser.userList;
                                that.toolTipRender($this,userList);
                                break;
                            case '3':
                                var userList = that._productionList[$i].examineUser.userList;
                                that.toolTipRender($this,userList);
                                break;
                        }
                    });
                    stringCtrl('taskName');
                    stringCtrl('taskRemark');
                    if(that.settings.$getCallBack!=null){
                        that.settings.$getCallBack();
                    }

                }else {
                    S_dialog.error(response.info);
                }
            })
        }
        //设校审－已提交未提交tooltip
        ,toolTipRender:function ($this,userList) {
            var that = this;
            var submittedUserList = [],unSubmittedUserList=[];
            $.each(userList,function (index,item) {
                if(item.completeTime==null){
                    unSubmittedUserList.push(item);
                }else{
                    submittedUserList.push(item);
                }
            });
            var iHtml = template('m_production/m_production_list_usertip',{submittedUserList:submittedUserList,unSubmittedUserList:unSubmittedUserList});
            $this.attr('data-original-title',iHtml);
            $this.tooltip({html : true });
        }
        //渲染头部展示信息
        ,_renderHeaderInfo:function () {
            var that=this,option = {};
            option.url = restApi.url_getProjectInfoForTask+'/'+that.settings.$projectId;
            m_ajax.get(option, function (response) {
                if (response.code == '0') {
                    var html = template('m_production/m_production_overview_header',response.data);
                    $(that.element).find('#productionOverviewHeader').html(html);

                } else {
                    S_dialog.error(response.info);
                }
            })
        }

    });

    $.fn[pluginName] = function (options) {
        return this.each(function () {

            //if (!$.data(this, "plugin_" + pluginName)) {
            $.data(this, "plugin_" +
                pluginName, new Plugin(this, options));
            //}
        });
    };

})(jQuery, window, document);

/**
 * 项目信息－生产安排-签发信息
 * Created by wrb on 2018/7/17.
 */
;(function ($, window, document, undefined) {

    "use strict";
    var pluginName = "m_production_taskIssue",
        defaults = {
            $projectId:null,
            $projectName:null,
            $issueTaskId:null,//签发节点ID
            $companyId:null,//视图切换传过来的组织ID
            $scrollCallBack:null//请求渲染html后回滚事件
        };

    // The actual plugin constructor
    function Plugin(element, options) {
        this.element = element;

        this.settings = $.extend({}, defaults, options);
        this._defaults = defaults;
        this._name = pluginName;
        this._currentCompanyId = window.currentCompanyId;//当前组织ID
        this.init();
    }

    // Avoid Plugin.prototype conflicts
    $.extend(Plugin.prototype, {
        init: function () {
            var that = this;
            that.renderPage();
        }


        //初始化数据,生成html
        ,renderPage:function () {

            var that = this;
            var options={};
            options.classId = '.ibox-content';
            options.url=restApi.url_getIssueInfo;
            options.postData = {};
            options.postData.projectId = that.settings.$projectId;
            options.postData.issueTaskId = that.settings.$issueTaskId;
            if(that.settings.$companyId!=null){
                options.postData.companyId = that.settings.$companyId;
            }
            m_ajax.postJson(options,function (response) {

                if(response.code=='0'){

                    var html = template('m_production/m_production_taskIssue',{
                        contentTaskList:response.data.contentTaskList
                    });
                    $(that.element).html(html);
                    that.bindClickAction();
                }else {
                    S_dialog.error(response.info);
                }
            })
        }

        //事件绑定
        ,bindClickAction:function(){
            var that = this;

            $(that.element).find('a[data-action]').bind('click',function(){
                var $this = $(this),
                    $i = $this.attr('data-i'),
                    dataAction = $this.attr('data-action');

                switch (dataAction) {//切换自己生产与总览

                    case 'deliveryHistory':
                        var option = {};
                        option.$projectId = that.settings.$projectId;
                        option.$issueTaskId = that.settings.$issueTaskId;
                        option.$taskId = $this.attr('data-task-id');
                        option.$saveCallBack = function () {
                        };
                        $('body').m_deliveryHistory(option);
                        break;
                    case 'initiateDelivery':
                        var option = {};
                        option.$projectId = that.settings.$projectId;
                        option.$taskId = $this.attr('data-task-id');
                        option.$saveCallBack = function () {
                            that.renderPage();
                        };
                        $('body').m_initiateDelivery(option);
                        break;
                }

            });
        }


    });

    $.fn[pluginName] = function (options) {
        return this.each(function () {

            //if (!$.data(this, "plugin_" + pluginName)) {
            $.data(this, "plugin_" +
                pluginName, new Plugin(this, options));
            //}
        });
    };

})(jQuery, window, document);

/**
 * 进度变更记录列表
 * Created by wrb on 2018/6/28.
 */
;(function ($, window, document, undefined) {

    "use strict";
    var pluginName = "m_schedule_list",
        defaults = {
            $title:null,
            $isDialog:true,
            $eleId:null,
            $projectId:null,
            $taskId:null,
            $publishId:null,
            $type:null,//1=合同约定，2＝计划
            $taskCompanyId:null,
            $renderCallBack:null,//弹窗回掉方法
            $align:null

        };

    // The actual plugin constructor
    function Plugin(element, options) {
        this.element = element;

        this.settings = $.extend({}, defaults, options);
        this._defaults = defaults;
        this._name = pluginName;


        this.init();
    }

    // Avoid Plugin.prototype conflicts
    $.extend(Plugin.prototype, {
        init: function () {
            var that = this;
            that.initHtmlData();
        },
        //初始化数据
        initHtmlData:function () {
            var that = this;
            if(that.settings.$isDialog){//以弹窗编辑
                S_dialog.dialog({
                    title: '计划进度调整历史',
                    contentEle: 'dialogOBox',
                    ele:that.settings.$eleId,
                    align:that.settings.$align||'bottom',
                    lock: 2,
                    quickClose:true,
                    noTriangle:true,
                    width: '670',
                    height:'200',
                    tPadding: '0px',
                    url: rootPath+'/assets/module/m_common/m_dialog.html'
                },function(d){//加载html后触发

                    that.element = 'div[id="content:'+d.id+'"] .dialogOBox';
                    that.initHtmlTemplate();


                });
            }else{//不以弹窗编辑

            }
        }
        //生成html
        ,initHtmlTemplate:function () {
            var that = this;

            that.getTaskScheduleChangesList(function (data) {
                var html = template('m_production/m_schedule_list',{taskScheduleChangesList:data});
                $(that.element).html(html);

                if(that.settings.$renderCallBack!=null){
                    that.settings.$renderCallBack(that.element);
                }
            });
        }
        //根据任务ID获取该任务的进度变更列表
        ,getTaskScheduleChangesList:function (callBack) {
            var that = this;
            var options={};
            options.url=restApi.url_getChangeTimeList;
            options.postData = {};
            options.postData.targetId = that.settings.$taskId;

            if(that.settings.$type!=2){
                options.postData.type = that.settings.$type;
            }

            m_ajax.postJson(options,function (response) {
                if(response.code=='0'){
                    if(callBack!=null){
                        return callBack(response.data);

                    }
                }else {
                    S_dialog.error(response.info);
                }
            })
        }

    });

    $.fn[pluginName] = function (options) {
        return this.each(function () {

            //if (!$.data(this, "plugin_" + pluginName)) {
            $.data(this, "plugin_" +
                pluginName, new Plugin(this, options));
            //}
        });
    };

})(jQuery, window, document);



/**
 * 进度变更
 * Created by wrb on 2016/12/26.
 */
;(function ($, window, document, undefined) {

    "use strict";
    var pluginName = "m_setDesigners",
        defaults = {
            $title:null,
            $isDialog:true,
            $projectId:null,
            $taskId:null
        };

    // The actual plugin constructor
    function Plugin(element, options) {
        this.element = element;

        this.settings = $.extend({}, defaults, options);
        this._defaults = defaults;
        this._name = pluginName;
        this._projectProcess = null;
        this.init();
    }

    // Avoid Plugin.prototype conflicts
    $.extend(Plugin.prototype, {
        init: function () {
            var that = this;
            that._initHtmlData(function () {

                that._bindActionClick();
            });
        },
        //初始化数据
        _initHtmlData:function (callBack) {
            var that = this;
            if(that.settings.$isDialog){//以弹窗编辑
                S_dialog.dialog({
                    title: that.settings.$title||'设置参与人员',
                    contentEle: 'dialogOBox',
                    lock: 3,
                    width: '850',
                    height:'520',
                    tPadding: '0px',
                    url: rootPath+'/assets/module/m_common/m_dialog.html',
                    cancel:function () {
                        that._refresh();
                    },
                    okText:'保存',
                    ok:function () {
                        var res = that._saveTaskParticipant();
                        if(!res){
                            return false;
                        }
                    }

                },function(d){//加载html后触发

                    that.element = 'div[id="content:'+d.id+'"] .dialogOBox';
                    that._initHtmlTemplate();
                    if(callBack!=null){
                        callBack();
                    }
                });
            }else{//不以弹窗编辑
                that._initHtmlTemplate();
                if(callBack!=null){
                    callBack();
                }
            }
        }
        //生成html
        ,_initHtmlTemplate:function (data) {
            var that = this;

            //根据任务ID获取参与人员列表
            var options={};
            options.url=restApi.url_getProcessesByTask+'/'+that.settings.$taskId;
            m_ajax.get(options,function (response) {
                if(response.code=='0'){
                    that._projectProcess = response.data.projectProcess;
                    var $data = {};
                    $data.projectProcessNodes = response.data.projectProcess.projectProcessNodes;
                    var html = template('m_production/m_setDesigners',$data);
                    $(that.element).html(html);
                    that._bindActionClick();
                    $(that.element).find('#choseUserBox').m_choseUserBox();
                }else {
                    S_dialog.error(response.info);
                }
            })
        }
        //保存参与人员
        ,_saveTaskParticipant:function () {
            var that = this;
            var option  = {};
            option.classId = that.element;
            option.url = restApi.url_saveOrUpdateProcess;
            var param ={};

            var isError = true;
            var nodes = [];
            $(that.element).find('div.designerRow').each(function (_i) {

                //var id = $(this).attr('data-node-id')==''?null:$(this).attr('data-node-id');
                var nodeName = $(this).attr('data-node-name');
                var nodeSeq = $(this).attr('data-node-seq');
                $(this).find('span.designerSpan').each(function (i) {
                    if(_i==0 && i==0){
                        isError = false;//进来说明存在设计人
                    }
                    var dataUserId = $(this).attr('data-companyUserId');
                    nodes.push({
                        id:$(this).attr('data-id')==''?null:$(this).attr('data-id'),
                        companyUserId:dataUserId,
                        userName:$(this).find('span').text(),
                        nodeName:nodeName,
                        seq:nodeSeq
                    });
                });
            });
            /*if(isError){
                S_dialog.tips('设计人不能为空！');
                return false;
            }*/

            if(that._projectProcess!=null && that._projectProcess.id!=null){
                param.id=that._projectProcess.id;
            }else{
                param.id=null;
            }

            param.processName = "";
            param.nodes = nodes;
            param.projectId = that.settings.$projectId;
            param.taskManageId = that.settings.$taskId;
            option.postData = param;
            m_ajax.postJson(option,function (response) {
                if(response.code=='0'){
                    S_toastr.success('保存成功！')
                    S_dialog.close($(that.element));
                    that._refresh();
                }else {
                    S_dialog.error(response.info);
                }

            })
        }
        //刷新当前界面
        ,_refresh:function () {
            var option = {}, that = this;
            var scrollTop = $('body').scrollTop();
            option.$projectId = that.settings.$projectId;
            option.$scrollCallBack = function () {
                $('body').scrollTop(scrollTop);
            };
            $('#project_detail').m_production(option);
        }

        //按钮事件绑定
        ,_bindActionClick:function () {
            var that = this;
            $(that.element).find('a[data-action]').on('click',function () {

                var dataAction = $(this).attr('data-action');

                if(dataAction=='addDesigners') {//添加参与人员

                    var selectedUserList = [], _this = this;
                    var nodeName = $(_this).closest('.designerRow').attr('data-node-name');
                    $(this).parent().find('span.designerSpan').each(function (i) {
                        selectedUserList.push({
                            id: $(this).attr('data-companyUserId'),
                            userName: $(this).find('span').text()
                        });
                    });

                    var options = {};
                    options.title = '选择' + nodeName + '人';
                    options.selectedUserList = selectedUserList;
                    options.saveCallback = function (data) {
                        var iHtml = '';
                        if (data != null && data.selectedUserList != null && data.selectedUserList.length > 0) {
                            for (var i = 0; i < data.selectedUserList.length; i++) {
                                iHtml += '<span class="label label-default inline m-r-xs designerSpan" data-companyUserId="' + data.selectedUserList[i].id + '">';
                                iHtml += '<span class="nameSpan">' + data.selectedUserList[i].userName + '</span>';
                                iHtml += '<a href="javascript:void(0)" data-action="delDesigner"><i class="glyphicon glyphicon-remove text-danger"></i></a>';
                                iHtml += '</span>';
                            }
                        }
                        $(_this).parent().find('.designerSpan').remove();
                        $(_this).before(iHtml);
                        $(_this).parent().find('.designerSpan a[data-action="delDesigner"]').unbind();
                        $(_this).parent().find('.designerSpan a[data-action="delDesigner"]').on('click',function () {
                            $(this).parent('.designerSpan').remove();
                            return false;
                        });
                    }
                    $('body').m_orgByTree(options);

                }else if(dataAction=='delDesigner'){//删除参与人员

                    $(this).parent('.designerSpan').remove();
                    return false;
                }
                return false;
            });

        }

    });

    $.fn[pluginName] = function (options) {
        return this.each(function () {

            //if (!$.data(this, "plugin_" + pluginName)) {
            $.data(this, "plugin_" +
                pluginName, new Plugin(this, options));
            //}
        });
    };

})(jQuery, window, document);



/**
 * 设计范围
 * Created by wrb on 2016/12/20.
 */
;(function ($, window, document, undefined) {

    "use strict";
    var pluginName = "m_addProjectDesignRange",
        defaults = {
            $title:null,
            $isDialog:true,
            $projectId:'',
            $projectDesignRange:null,
            $placement:null,
            $okCallBack:null
        };

    // The actual plugin constructor
    function Plugin(element, options) {
        this.element = element;

        this.settings = $.extend({}, defaults, options);
        this._defaults = defaults;
        this._designRangeList = null;
        this._name = pluginName;
        this.init();
    }

    // Avoid Plugin.prototype conflicts
    $.extend(Plugin.prototype, {
        init: function () {
            var that = this;
            that.getRangeData(function(data){
                that.initHtmlData(data);
            });
        },
        //初始化数据
        initHtmlData:function (data) {
            var that = this;
            var $data = that.dealDesignRange();
            var $top = 'top',left = $(that.element).position().left;
            if(parseInt(left)>600){
                $top = 'left';
            }
            $(that.element).m_popover({

                placement: $top,
                content: template('m_project/m_addProjectDesignRange', $data),
                titleHtml: '<h3 class="popover-title">'+(that.settings.$title?that.settings.$title:'设计范围')+'</h3>',
                onShown: function ($popover) {

                    that.bindActionClick();
                    that.editOtherRangeValid();
                    $('.i-checks').iCheck({
                        checkboxClass: 'icheckbox_minimal-green',
                        radioClass: 'iradio_minimal-green'
                    });
                },
                onSave: function ($popover) {

                    if ($('.designRangeBox form').valid()) {
                        that.saveEditDesignRange();
                    }else{
                        return false;
                    }

                }
            }, true);

        },
        //保存设计范围编辑
        saveEditDesignRange:function (text) {
            var that = this;
            var text = '';
            var otherRangeList = $('.otherRangeRow input[type="text"]');
            otherRangeList.each(function(){
                if($(this).val()==''||$(this).val()==null){
                    return text = '设计范围不能为空！';

                };
                if($(this).val().length>50){return text = '设计范围名称过长，请控制在50个字符内'};
            });
            // var check = $(".designRangeBox form").valid();

            if(text && text!=''){
                    return text;
                }
            else{
                if($('.popover .editable-error-block').length>0){
                    $('.popover .editable-error-block').html('');
                }
                var projectDesignRangeList = [];
                $('.designRangeBox input[type="checkbox"][name="range"]:checked').each(function () {
                    projectDesignRangeList.push({designRange:$(this).val(),id:$(this).attr('data-id')});
                });

                 $('.designRangeBox input[type="checkbox"][name="otherRange"]:checked').each(function () {
                         projectDesignRangeList.push({designRange:$(this).closest('.liBox').find('input[name="designRange"]').val()});
                 });

                 if(that.settings.$okCallBack!=null){
                     that.settings.$okCallBack(projectDesignRangeList);
                    }
                 }
                return text;

         }
        //生成html
        ,initHtmlTemplate:function (callBack,data,classIdObj) {
            var that = this;
            var html = template('m_project/m_addProjectDesignRange',data);
            classIdObj.find('div.editable-input').html(html);
            if(callBack!=null){
                callBack();
            }
            //给所有已有的自定义范围的checkbox添加事件
            $.each(data.otherRange,function(i,item){
                var obj = $('input#'+item.id).parents('.liBox');
                that.bindOtherRangeCk(obj);
            });
        }
        //把设计范围解析(哪些是来自基础数据，来自自定义)
        ,dealDesignRange:function () {
            var that = this;
            var rangeListClone = that.settings.$projectDesignRange;//已选中的设计范围
            var designRangeList = that._designRangeList;//数据字典的设计范围
            var rangeList=[];
            var otherRange=[];
            if(rangeListClone!=null && rangeListClone.length>0){
                for (var i = 0; i < rangeListClone.length; i++) {
                    var isCon = false;
                    for (var j = 0; j < designRangeList.length; j++) {
                        if (rangeListClone[i].designRange == designRangeList[j].name) {
                            isCon = true;
                            designRangeList[j].isChecked = 1;//初始化选中
                            rangeList.push(rangeListClone[i]);
                            continue;
                        }
                    }
                    if (!isCon) {
                        rangeListClone[i].isChecked = 1;//初始化选中
                        otherRange.push(rangeListClone[i]);
                    }
                }
            }
            var $data = {};
            $data.rangeList = rangeList;
            $data.otherRange = otherRange;
            $data.designRangeList = designRangeList;
            return $data;
        }
        //获取设计范围基础数据
        ,getRangeData:function (callBack) {
            var that = this;
            var option  = {};
            var rangeList = [];
            option.classId = that.element;
            option.url = restApi.url_getDesignRangeList;
            m_ajax.get(option,function (response) {
                if(response.code=='0'){
                    rangeList = response.data;
                    that._designRangeList = rangeList;
                    return callBack();
                }else {
                    S_dialog.error(response.info);
                }

            })
        }
        //添加自定义设计范围事件
        ,bindAddRange:function (obj) {
            var that = this;

            var iHtml = '';
            iHtml+='<div class="col-md-4 liBox">';
            iHtml+='    <div class="col-md-2 no-padding" >';
            iHtml+='        <label class="i-checks" title="">';
            iHtml+='            <input name="otherRange" class="checkbox" checked type="checkbox"/>';
            iHtml+='            <i></i>';
            iHtml+='        </label>';
            iHtml+='    </div>';
            iHtml+='    <div class="col-md-10 out-box" style="padding-left: 0;padding-right: 0;">';
            iHtml+='        <label class="input">';
            iHtml+='            <input id="designRange" class="designRange form-control input-sm" type="text" maxlength="50" name="designRange" placeholder="请输入名称" />';
            iHtml+='        </label>';
            iHtml+='    </div>';
            iHtml+='</div>';

            obj.parent().before(iHtml);
            that.bindOtherRangeCk(obj.parent().prev());
            that.bindIcheckbox(obj.parent().prev());
            that.editOtherRangeValid();
        }
        //绑定checkbox显示
        ,bindIcheckbox:function($el){
            var that = this;
            $el.find('.i-checks').iCheck({
                checkboxClass: 'icheckbox_minimal-green',
                radioClass: 'iradio_minimal-green'
            });
        }
        //绑定选择自定义设计范围事件
        ,bindOtherRangeCk:function (obj) {
            obj.find('input[name="otherRange"]').on('ifUnchecked.s',function () {
                $(this).parents('.liBox').find('label.error').hide();
                $(this).parents('.liBox').remove();
                if($('.otherRangeRow div.liBox').length<1){
                    $('.popover .editable-error-block').html('');
                }
                return false;
            });
            obj.find('input[name="designRange"]').keyup(function () {
                $(this).parents('.liBox').find('label.error').hide();
                return false;
            });
        }
        //按钮事件绑定
        ,bindActionClick:function () {
            var that = this;
            $('.designRangeBox').find('label[data-action]').on('click',function () {
                var dataAction = $(this).attr('data-action');
                if(dataAction=='addOtherRange'){
                    that.bindAddRange($(this));
                    return false;
                }
            });
        }
        //自定义范围时的验证
        ,editOtherRangeValid:function(){
            $(".designRangeBox form").validate({
                rules: {
                    otherRange:{
                        ckDesignRange:true
                    },
                    designRange:{
                        ckDesignRange:true,
                        maxlengthCK:50
                    }
                },
                messages: {
                    otherRange:{
                        ckDesignRange:'请输入设计范围名称!'
                    },
                    designRange:{
                        ckDesignRange:'请输入设计范围名称!',
                        maxlengthCK:"设计范围名称不能超过50个字！"
                    }
                },
                errorPlacement: function (error, element) { //指定错误信息位置
                    /*if (element.is(':radio') || element.is(':checkbox')) {
                        error.appendTo(element.closest('.liBox'));
                    } else {
                        error.insertAfter(element);
                    }*/
                    $('.designRangeBox form').find('.error-box .col-md-12').html(error);
                }
            });
            $.validator.addMethod('ckDesignRange', function(value, element) {
                var isTrue = true;
                $('.designRangeBox form').find(' input[name="otherRange"]:checked').each(function () {
                    var val = $(this).closest('.liBox').find('input[name="designRange"]').val();
                    if($.trim(val).length===0){
                        isTrue = false;
                        return false;
                    }
                });
                if(isTrue){
                    $('.designRangeBox form').find('.error-box .col-md-12').html('');
                }
                return  isTrue;
            }, '请输入设计范围名称!');
            $.validator.addMethod('maxlengthCK', function(value, element) {
                var isTrue = true;
                $('.designRangeBox form').find(' input[name="otherRange"]:checked').each(function () {
                    var val = $(this).closest('.liBox').find('input[name="designRange"]').val();
                    if($.trim(val).length>50){
                        isTrue = false;
                        return false;
                    }
                });
                if(isTrue){
                    $('.designRangeBox form').find('.error-box .col-md-12').html('');
                }
                return  isTrue;
            }, '设计范围名称不能超过50个字');
        }

    });

    $.fn[pluginName] = function (options) {
        return this.each(function () {

            //if (!$.data(this, "plugin_" + pluginName)) {
            $.data(this, "plugin_" +
                pluginName, new Plugin(this, options));
            //}
        });
    };

})(jQuery, window, document);

/**
 * 添加一条变更记录
 * Created by wrb on 2016/12/21.
 */
;(function ($, window, document, undefined) {

    "use strict";
    var pluginName = "m_addTimeChangeRecord",
        defaults = {
            $data : null
        };

    // The actual plugin constructor
    function Plugin(element, options) {
        this.element = element;

        this.settings = $.extend({}, defaults, options);
        this._defaults = defaults;
        this._name = pluginName;
        this.init();
    }

    // Avoid Plugin.prototype conflicts
    $.extend(Plugin.prototype, {
        init: function () {
            var that = this;
            that.initHtmlTemplate(that.settings.$data);
        }
        //生成html
        ,initHtmlTemplate:function (data) {
            var that = this;
            var html = template('m_project/m_addTimeChangeRecord',data);
            $(that.element).append(html);
        }
    });

    $.fn[pluginName] = function (options) {
        return this.each(function () {

            //if (!$.data(this, "plugin_" + pluginName)) {
                $.data(this, "plugin_" +
                    pluginName, new Plugin(this, options));
            //}
        });
    };

})(jQuery, window, document);

/**
 * 选择甲方（建设单位）
 * Created by wrb on 2016/12/21.
 */
;(function ($, window, document, undefined) {

    "use strict";
    var pluginName = "m_choseConstructCompany",
        defaults = {
            $title:null,
            $isDialog:true,
            $okCallBack:null
        };

    // The actual plugin constructor
    function Plugin(element, options) {
        this.element = element;

        this.settings = $.extend({}, defaults, options);
        this._defaults = defaults;
        this._name = pluginName;
        this.init();
    }

    // Avoid Plugin.prototype conflicts
    $.extend(Plugin.prototype, {
        init: function () {
            var that = this;
            that.initHtmlData(function () {
                that.bindActionClick();

            });
        },
        //初始化数据
        initHtmlData:function (callBack) {
            var that = this;
            if(that.settings.$isDialog){//以弹窗编辑
                S_dialog.dialog({
                    title: that.settings.$title||'甲方单位',
                    contentEle: 'dialogOBox',
                    lock: 3,
                    width: '850',
                    minHeight:'200',
                    tPadding: '0px',
                    url: rootPath+'/assets/module/m_common/m_dialog.html',
                    cancelText:'关闭',
                    cancel:function () {

                    },
                    okText:'清除',
                    ok:function () {
                        if(that.settings.$okCallBack!=null){
                            return that.settings.$okCallBack(null);
                        }
                    }
                },function(d){//加载html后触发

                    var classIdObj = $('div[id="content:'+d.id+'"] .dialogOBox');
                    that.initHtmlTemplate(classIdObj)
                    that.getConstructListData(1);
                    if(callBack!=null){
                        callBack();
                    }
                });
            }else{//不以弹窗编辑
                var classIdObj = $(that.element);
                that.initHtmlTemplate(classIdObj);
                if(callBack!=null){
                    callBack();
                }
            }
        }
        //生成html
        ,initHtmlTemplate:function (classIdObj) {
            var that = this;
            var html = template('m_project/m_choseConstructCompany',{});
            classIdObj.html(html);
        }
        //获取甲方单位数据{type=1=常用甲方,type=2=查询甲方}
        ,getConstructListData:function (type) {
            var that = this;
            var option={};
            if(type==1){
                option.url=restApi.url_getUsedPartA;
            }else{
                option.url=restApi.url_getLikedPartA;
                option.postData={keyword:$('.choiseConstructOBox input[name="keyword"]').val()}
            }

            m_ajax.postJson(option,function (response) {
                if(response.code=='0'){
                    that.toGenerateConstructListHtml(response.data);
                }else {
                    S_dialog.error(response.info);
                }

            })
        }
        //生成甲方单位列表html
        ,toGenerateConstructListHtml:function (data) {
            var that = this
            var iHtml = '';
            if(data!=null && data.length>0){
                for(var i=0;i<data.length;i++){
                    iHtml+='<tr class="curp" data-id="'+data[i].id+'" data-name="'+data[i].companyName+'"><td>'+(i+1)+'</td>' +
                        '<td style="word-break: break-all;">'+data[i].companyName+'</td></tr>';
                }
                $('.choiseConstructOBox table.constructList tbody').html(iHtml);
                $('.choiseConstructOBox table.constructList tbody').find('tr').on('click',function () {
                    var $data={};
                    $data.id=$(this).attr('data-id');
                    $data.companyName=$(this).attr('data-name');
                    S_dialog.close($('.choiseConstructOBox'));
                    if(that.settings.$okCallBack!=null){
                        return that.settings.$okCallBack($data);
                    }
                });
            }
            return false;
        }
        //按钮事件绑定
        ,bindActionClick:function () {
            var that = this;
            $('.choiseConstructOBox').find('input[name="choiseConstruct"],button[data-action]').on('click',function () {
                var dataAction = $(this).attr('data-action');
                if(dataAction=='choiseCommonAConstruct'){//常用甲方
                    that.getConstructListData(1);
                    $('.choiseConstructOBox .searchBox').addClass('hide');
                }else if(dataAction=='searchAConstruct' || dataAction=='toSearchAConstruct'){//查询甲方
                    that.getConstructListData(2);
                    $('.choiseConstructOBox .searchBox').removeClass('hide');
                }
            });
        }

    });

    $.fn[pluginName] = function (options) {
        return this.each(function () {

            //if (!$.data(this, "plugin_" + pluginName)) {
            $.data(this, "plugin_" +
                pluginName, new Plugin(this, options));
            //}
        });
    };

})(jQuery, window, document);



/**
 * 选择乙方（组织）
 * Created by wrb on 2016/12/22.
 */
;(function ($, window, document, undefined) {

    "use strict";
    var pluginName = "m_choseOrg",
        defaults = {
            $title:null,
            $isDialog:true,
            $okCallBack:null
        };

    // The actual plugin constructor
    function Plugin(element, options) {
        this.element = element;

        this.settings = $.extend({}, defaults, options);
        this._defaults = defaults;
        this._name = pluginName;
        this.init();
    }

    // Avoid Plugin.prototype conflicts
    $.extend(Plugin.prototype, {
        init: function () {
            var that = this;
            that.initHtmlData(function () {
                that.bindActionClick();

            });
        },
        //初始化数据
        initHtmlData:function (callBack) {
            var that = this;
            if(that.settings.$isDialog){//以弹窗编辑
                S_dialog.dialog({
                    title: that.settings.$title||'乙方',
                    contentEle: 'dialogOBox',
                    lock: 3,
                    width: '850',
                    minHeight:'200',
                    tPadding: '0px',
                    url: rootPath+'/assets/module/m_common/m_dialog.html',
                    cancelText:'关闭',
                    cancel:function () {

                    },
                    okText:'清除',
                    ok:function () {
                        if(that.settings.$okCallBack!=null){
                            return that.settings.$okCallBack(null);
                        }
                    }
                },function(d){//加载html后触发

                    var classIdObj = $('div[id="content:'+d.id+'"] .dialogOBox');
                    that.initHtmlTemplate(classIdObj)
                    that.getOrgListData(1);
                    if(callBack!=null){
                        callBack();
                    }
                });
            }else{//不以弹窗编辑
                var classIdObj = $(that.element);
                that.initHtmlTemplate(classIdObj);
                if(callBack!=null){
                    callBack();
                }
            }
        }
        //生成html
        ,initHtmlTemplate:function (classIdObj) {
            var that = this;
            var html = template('m_project/m_choseOrg',{});
            classIdObj.html(html);
        }
        //获取乙方单位数据{type=1=常用乙方,type=2=查询乙方}
        ,getOrgListData:function (type) {
            var that = this;
            var option={};
            if(type==1){
                option.url=restApi.url_getUsedPartB;
            }else{
                option.url=restApi.url_getLikedPartB;
                option.postData={keyword:$('.choseOrgBox input[name="keyword"]').val()}
            }

            m_ajax.postJson(option,function (response) {
                if(response.code=='0'){
                    that.toGenerateOrgListHtml(response.data);
                }else {
                    S_dialog.error(response.info);
                }

            })
        }
        //生成乙方单位列表html
        ,toGenerateOrgListHtml:function (data) {
            var that = this
            var iHtml = '';
            if(data!=null && data.length>0){
                for(var i=0;i<data.length;i++){
                    iHtml+='<tr class="curp" data-id="'+data[i].id+'" data-name="'+data[i].companyName+'"><td>'+(i+1)+'</td>' +
                        '<td style="word-break: break-all;">'+data[i].companyName+'</td></tr>';
                }
                $('.choseOrgBox table.orgList tbody').html(iHtml);
                $('.choseOrgBox table.orgList tbody').find('tr').on('click',function () {
                    var $data={};
                    $data.id=$(this).attr('data-id');
                    $data.companyName=$(this).attr('data-name');
                    S_dialog.close($('.choseOrgBox'));
                    if(that.settings.$okCallBack!=null){
                        return that.settings.$okCallBack($data);
                    }
                });
            }
            return false;
        }
        //按钮事件绑定
        ,bindActionClick:function () {
            var that = this;
            $('.choseOrgBox').find('input[name="choiseOrg"],button[data-action]').on('click',function (event) {
                var dataAction = $(this).attr('data-action');
                if(dataAction=='choiseCommonAOrg'){//常用org
                    that.getOrgListData(1);
                    $('.choseOrgBox .searchBox').addClass('hide');
                }else if(dataAction=='searchAOrg' || dataAction=='toSearchAOrg'){//查询org
                    that.getOrgListData(2);
                    $('.choseOrgBox .searchBox').removeClass('hide');
                }
                event.stopPropagation();
            });
        }

    });

    $.fn[pluginName] = function (options) {
        return this.each(function () {

            //if (!$.data(this, "plugin_" + pluginName)) {
            $.data(this, "plugin_" +
                pluginName, new Plugin(this, options));
            //}
        });
    };

})(jQuery, window, document);



/**
 * 数据字典选择(针对功能分类、设计范围这类编辑、自定义等)
 * Created by wrb on 2018/6/26.
 */
;(function ($, window, document, undefined) {

    "use strict";
    var pluginName = "m_customDataDictionary",
        defaults = {
            $title:null,
            $isDialog:true,
            $dataDictionaryList:null,//数据字典
            $dataList:null,//数据列表（包括数据字典）
            $placement:null,
            $okCallBack:null
        };

    // The actual plugin constructor
    function Plugin(element, options) {
        this.element = element;

        this.settings = $.extend({}, defaults, options);
        this._defaults = defaults;
        this._designRangeList = null;
        this._name = pluginName;
        this._strName = this.settings.$title?this.settings.$title:'';
        this._selectedData = [];//数据字典
        this._selectedCustomData = [];//非数据字典
        this.init();
    }

    // Avoid Plugin.prototype conflicts
    $.extend(Plugin.prototype, {
        init: function () {
            var that = this;
            that.initHtmlData();
        },
        //初始化数据
        initHtmlData:function () {
            var that = this;
            var $data = that.dealDataList();
            var $top = 'top',left = $(that.element).position().left;
            if(parseInt(left)>600){
                $top = 'left';
            }
            $(that.element).m_popover({

                placement: $top,
                content: template('m_project/m_customDataDictionary', $data),
                titleHtml: '<h3 class="popover-title">'+(that.settings.$title?that.settings.$title:'编辑')+'</h3>',
                onShown: function ($popover) {

                    that.bindActionClick();
                    that.editValid();
                    that.bindIcheckbox($('.data-dictionary'));
                },
                onSave: function ($popover) {

                    if ($('.data-dictionary form').valid()) {
                        that.saveData();
                    }else{
                        return false;
                    }

                }
            }, true);

        }
        //把数据解析(哪些是来自基础数据，来自自定义)
        ,dealDataList:function () {
            var that = this;
            var dataListClone = that.settings.$dataList;//已选中的数据
            var dataDictionaryList = that.settings.$dataDictionaryList;//数据字典
            var dataDictionarySelectedList=[];
            var customDataList=[];
            if(dataListClone!=null && dataListClone.length>0){
                for (var i = 0; i < dataListClone.length; i++) {
                    var isCon = false;
                    for (var j = 0; j < dataDictionaryList.length; j++) {
                        if (dataListClone[i].name == dataDictionaryList[j].name) {
                            isCon = true;
                            dataDictionaryList[j].selected = true;//初始化选中
                            dataDictionarySelectedList.push({
                                name:dataListClone[i].name,
                                id:dataListClone[i].id,
                                selected:true,
                                default:true
                            });
                            continue;
                        }
                    }
                    if (!isCon) {
                        dataListClone[i].selected = true;//初始化选中
                        customDataList.push({
                            name:dataListClone[i].name,
                            id:dataListClone[i].id,
                            selected:true,
                            default:false
                        });
                    }
                }
            }
            var $data = {};
            $data.dataDictionarySelectedList = dataDictionarySelectedList;
            $data.customDataList = customDataList;
            $data.dataDictionaryList = dataDictionaryList;
            that._selectedData = dataDictionarySelectedList;
            that._selectedCustomData = customDataList;
            return $data;
        }
        //保存功能分类编辑
        ,saveData:function (text) {
            var that = this;

            if($('.popover .editable-error-block').length>0){
                $('.popover .editable-error-block').html('');
            }
            var dataDictionaryList = [];
            $('.data-dictionary input[type="checkbox"][name="dataDictionary"]:checked').each(function () {

                dataDictionaryList.push({
                    name:$(this).val(),
                    id:$(this).attr('data-id'),
                    selected:true,
                    default:true
                });
            });
            $('.data-dictionary input[type="checkbox"][name="customDataDictionary"]:checked').each(function () {

                dataDictionaryList.push({
                    name:$(this).closest('.liBox').find('input[name="iptCustomDataDictionary"]').val(),
                    id:$(this).attr('data-id')==''?null:$(this).attr('data-id'),
                    selected:true,
                    default:false
                });
            });

            var newDataDictionaryList = dataDictionaryList.concat();
            var oldDataList = that._selectedData.concat(that._selectedCustomData);
            if(oldDataList!=null && oldDataList.length>0){
                $.each(oldDataList, function (i, item) {

                    var isRepeat = false;//不存在，则表明是删除，添加到数组，返回到后台
                    $.each(dataDictionaryList, function (i0, item0) {
                        if(item0.id!=null && item0.id!='' && item0.id==item.id){
                            isRepeat = true;
                            return false;
                        }
                    });
                    if(!isRepeat){
                        item.selected = false;
                        newDataDictionaryList.push(item);
                    }
                });
            }
            if(that.settings.$okCallBack!=null){
                 that.settings.$okCallBack(newDataDictionaryList);
            }
            return text;

         }
        //添加自定义功能分类事件
        ,bindAddDataDictionary:function (obj) {
            var that = this;

            var iHtml = '';
            iHtml+='<div class="col-md-4 liBox">';
            iHtml+='    <div class="col-md-2 no-padding" >';
            iHtml+='        <label class="i-checks" title="">';
            iHtml+='            <input name="customDataDictionary" class="checkbox" checked type="checkbox"/>';
            iHtml+='            <i></i>';
            iHtml+='        </label>';
            iHtml+='    </div>';
            iHtml+='    <div class="col-md-10 out-box" style="padding-left: 0;padding-right: 0;">';
            iHtml+='        <label class="input">';
            iHtml+='            <input class="form-control input-sm" type="text" maxlength="50" name="iptCustomDataDictionary" placeholder="请输入名称" />';
            iHtml+='        </label>';
            iHtml+='    </div>';
            iHtml+='</div>';

            obj.parent().before(iHtml);
            that.bindCustomDataDictionaryCk(obj.parent().prev());
            that.bindIcheckbox(obj.parent().prev());
            that.editValid();
        }
        //绑定checkbox显示
        ,bindIcheckbox:function($el){
            var that = this;
            var ifChecked = function (e) {
            };
            var ifUnchecked = function (e) {
            };
            $el.find('input[name="dataDictionary"]').iCheck({
                checkboxClass: 'icheckbox_minimal-green',
                radioClass: 'iradio_minimal-green'
            }).on('ifUnchecked.s', ifUnchecked).on('ifChecked.s', ifChecked);

            var ifCheckedByCustom = function (e) {
                console.log(11)
            };
            var ifUncheckedByCustom = function (e) {

            };
            $el.find('input[name="customDataDictionary"]').iCheck({
                checkboxClass: 'icheckbox_minimal-green',
                radioClass: 'iradio_minimal-green'
            }).on('ifUncheckedByCustom.s', ifUnchecked).on('ifCheckedByCustom.s', ifChecked);

        }
        //绑定选择自定义功能分类事件
        ,bindCustomDataDictionaryCk:function (obj) {
            obj.find('input[name="customDataDictionary"]').on('ifUnchecked.s',function () {
                $(this).parents('.liBox').find('label.error').hide();
                $(this).parents('.liBox').remove();
                if($('.custom-data-dictionary div.liBox').length<1){
                    $('.popover .editable-error-block').html('');
                }
                return false;
            });
            obj.find('input[name="iptCustomDataDictionary"]').keyup(function () {
                $(this).parents('.liBox').find('label.error').hide();
                return false;
            });
        }
        //按钮事件绑定
        ,bindActionClick:function () {
            var that = this;
            $('.data-dictionary').find('label[data-action]').on('click',function () {
                var dataAction = $(this).attr('data-action');
                if(dataAction=='addCustomDataDictionary'){
                    that.bindAddDataDictionary($(this));
                    return false;
                }
            });
        }
        //自定义功能分类时的验证
        ,editValid:function(){
            var that = this;
            $(".data-dictionary form").validate({
                rules: {
                    customDataDictionary:{
                        ckCustomDataDictionary:true
                    },
                    iptCustomDataDictionary:{
                        ckCustomDataDictionary:true,
                        ckIsRepeat:true,
                        maxlengthCK:50
                    }
                },
                messages: {
                    customDataDictionary:{
                        ckCustomDataDictionary:'请输入'+that._strName+'名称!'
                    },
                    iptCustomDataDictionary:{
                        ckCustomDataDictionary:'请输入'+that._strName+'名称!',
                        ckIsRepeat:'名称重复或已存在！',
                        maxlengthCK:that._strName+'名称不能超过50个字！'
                    }
                },
                errorPlacement: function (error, element) { //指定错误信息位置

                    $('.data-dictionary form').find('.error-box .col-md-12').html(error);
                }
            });
            $.validator.addMethod('ckCustomDataDictionary', function(value, element) {
                var isTrue = true;
                $('.data-dictionary form').find(' input[name="customDataDictionary"]:checked').each(function () {
                    var val = $(this).closest('.liBox').find('input[name="iptCustomDataDictionary"]').val();
                    if($.trim(val).length===0){
                        isTrue = false;
                        return false;
                    }
                });
                if(isTrue){
                    $('.data-dictionary form').find('.error-box .col-md-12').html('');
                }
                return  isTrue;
            }, '请输入'+that._strName+'名称!');
            $.validator.addMethod('ckIsRepeat', function(value, element) {
                var isTrue = true;
                var customDataList = [];
                $('.data-dictionary input[type="checkbox"][name="customDataDictionary"]:checked').each(function(){

                    var name = $(this).closest('.liBox').find('input[name="iptCustomDataDictionary"]').val();
                    customDataList.push(name);
                });

                if(customDataList.length>0){

                    var newCustomDataList = customDataList.sort();
                    for(var i=0;i<customDataList.length;i++){

                        if (newCustomDataList[i]==newCustomDataList[i+1]){

                            isTrue = false;
                        }
                    }
                    $.each(customDataList,function (i,item) {
                        $.each(that.settings.$dataDictionaryList, function (i0, item0) {
                            if(item==item0.name){
                                isTrue = false;
                            }
                        });
                    })
                }
                if(isTrue){
                    $('.data-dictionary form').find('.error-box .col-md-12').html('');
                }
                return  isTrue;
            }, '名称重复或已存在！');
            $.validator.addMethod('maxlengthCK', function(value, element) {
                var isTrue = true;
                $('.data-dictionary form').find(' input[name="customDataDictionary"]:checked').each(function () {
                    var val = $(this).closest('.liBox').find('input[name="iptCustomDataDictionary"]').val();
                    if($.trim(val).length>50){
                        isTrue = false;
                        return false;
                    }
                });
                if(isTrue){
                    $('.data-dictionary form').find('.error-box .col-md-12').html('');
                }
                return  isTrue;
            }, that._strName+'名称不能超过50个字');
        }

    });

    $.fn[pluginName] = function (options) {
        return this.each(function () {

            //if (!$.data(this, "plugin_" + pluginName)) {
            $.data(this, "plugin_" +
                pluginName, new Plugin(this, options));
            //}
        });
    };

})(jQuery, window, document);

/**
 * 编辑在位编辑type为popup时里面内容的自定义
 * Created by veata on 2016/12/21.
 */
;(function ($, window, document, undefined) {

    "use strict";
    var pluginName = "m_defineEditableContent",
        defaults = {
            top:null,
            html:null,
            showAllButton:true,
            showCloseButton:false,
            title:null,
            p_width:null,
            p_height:null,
            placement:null,//浮窗是在哪个位置展开：‘left’,‘right’,‘top’,‘bottom’,空值则默认为top
            onShown: null,//浮窗显示后的事件，可以用来重新绑定值
            saveCallback:null,//点击确定触发的事件
            afterCallback:null,//页面加载后触发的事件
            cancelCallback:null,//点击取消触发的事件
            ifDelay:null,//是否延迟加载afterCallback
            errorTipsMarginLeft:null,//错误提示margin-left
            template:'m_project/m_defineEditableContent'
        };

    // The actual plugin constructor
    function Plugin(element, options) {
        this.element = element;

        this.settings = $.extend({}, defaults, options);
        this._defaults = defaults;
        this._name = pluginName;
        this._popoverTop = null;//初始化页面时，保存浮窗的top值
        this._popoverHeight = null;//初始化页面时，保存浮窗的height值
        this.init();
    }

    // Avoid Plugin.prototype conflicts
    $.extend(Plugin.prototype, {
        init: function () {
            var that = this;
            // that.closePopover();
            $('body').find('.popover').remove();
            if(!$(that.element).parent().find('.popover').length){
                that.getHtml(function(){
                    that.getPosition();
                    that.bindButtonClick();
                    that.closePopover();
                });
            }

        },
        //当鼠标点击的焦点不在浮窗内时，关闭浮窗
        closePopover:function(){
            var that = this;
            $('body').on('click',function(event){
                // console.log('body.click');
                // console.log(event.target);
                // console.log($(event.target).closest('.select2-search__field').length)
                if($(that.element).next('.popover').length>0){
                    if($(event.target).parents('.popover.editable-container').length<1
                        && event.target!=that.element && $(event.target).closest('.select2-search__field').length<1){
                        that.closeEditable();
                    }
                }

            })
        },
        getPosition:function(){
            var that = this;
            var p_p = that.settings.placement?that.settings.placement:'top';//浮窗的展示位置
            var a_ptop = $(that.element).position().top;//a标签的top值
            var a_width = $(that.element).outerWidth();//a标签的width值
            var a_height = $(that.element).outerHeight();//a标签的height值
            var a_pleft = $(that.element).position().left;//a标签的left值
            var p_width = that.settings.p_width || $(that.element).next('.popover').width();//浮窗的宽度
            var p_height = that.settings.p_height || $(that.element).next('.popover').height();//浮窗的高度
            var p_top = 0;//浮窗的top值
            var p_left = 0;//浮窗的left值
            switch(p_p){
                case 'top':
                    p_top = (a_ptop-p_height);
                    p_left = a_pleft+a_width/2-p_width/2;
                    break;
                case 'bottom':
                    p_top = (a_ptop+a_height);
                    p_left = a_pleft+a_width/2-p_width/2;
                    break;
                case 'left':
                    p_top = (a_ptop-p_height/2+5);
                    p_left = a_pleft-p_width-10;
                    break;
                case 'right':
                    p_top = (a_ptop-p_height/2+7);
                    p_left = a_pleft+a_width;
                    break;


            };
            that._popoverTop = p_top;
            that._popoverHeight = p_height;
            $(that.element).next('.popover').removeClass('top').addClass(p_p);
            if(p_p.indexOf('left')>-1||p_p.indexOf('right')>-1){
                $(that.element).next('.popover').find('.arrow').css({'top':'50%','left':''});
            }
            $(that.element).next('.popover').css({display:'inline-block',position:'absolute',top:p_top,left:p_left});


        },
        getHtml:function(callback){
            var that=this;
            var data={};
            data.showAllButton = that.settings.showAllButton;
            data.showCloseButton = that.settings.showCloseButton;
            data.title = that.settings.title;
            var html = template(that.settings.template,data);
            $(html).insertAfter(that.element);
            $(that.element).next('.popover').find('.editable-input').html(that.settings.html);
            var $popover = $(that.element).next('.popover.editable-container');

            if (that.settings.onShown && that.settings.onShown !== null)
                that.settings.onShown($popover);

            if(that.settings.afterCallback){
                that.settings.afterCallback($popover);
            }
            //绑定回车事件
            $popover.find('input[type="text"],input[type="password"]').keydown(function() {
                if (event.keyCode == '13') {//keyCode=13是回车键
                    $popover.find('.editable-submit').click();
                    preventDefault(event);
                }
            });
            if(callback){
                return callback($popover);
            }

        },
        bindButtonClick:function(){
            var that = this;
            var $popover = $(that.element).next('.popover');
            $popover.find('button').on('click',function(){
                if($(this).is('.editable-submit')){
                    var error = '';
                    if(that.settings.saveCallback){
                        error = that.settings.saveCallback();
                    }
                    if(error!=false){
                        that.closeEditable(error);
                    }
                }else{
                    if(that.settings.cancelCallback){
                        return that.settings.cancelCallback;
                    }
                    that.closeEditable();
                }
            });
            //点击submit按钮或浮窗其他地方，出现验证信息时，相应改变popover的top值
            $popover.find('.popover-content,button').off('click.changePosition').on('click.changePosition',function(e){
                setTimeout(function(){
                    that.changePosition($popover);
                },20);
            });
            //点击input表单，出现验证信息时，相应改变popover的top值
            $popover.find('input[type="text"]').off('keyup.changePosition').on('keyup.changePosition',function(e){
                setTimeout(function(){
                    that.changePosition($popover);
                },20);
            });
        },

        //通过改变弹窗的top值来改变弹窗的位置
        changePosition:function($popover){
            var that = this;
            var errTag = $popover.find('label.error,div.editable-error-block').length;
            var popH = $popover.outerHeight();
            var h1 = popH-that._popoverHeight;
            if(errTag>0){
                var newTop = that._popoverTop-h1;
                $popover.css('top',newTop);
            }
        },
        closeEditable:function(data){
            var that = this;
            if(data && data!=''){
                var cssObj = {display:'block',color:'#a94442'};
                if(that.settings.errorTipsMarginLeft!=null){
                    cssObj.marginLeft = that.settings.errorTipsMarginLeft+'px';
                }
                return $(that.element).next('.popover').find('.editable-error-block').css(cssObj).text(data);
            }
            $(that.element).next('.popover').remove();
            $('body').off("click");
        }

    });

    $.fn[pluginName] = function (options) {
        return this.each(function () {
            //if (!$.data(this, "plugin_" + pluginName)) {
            $.data(this, "plugin_" +
                pluginName, new Plugin(this, options));
            //}
        });
    };

})(jQuery, window, document);



/**
 * 基本信息－自定义属性模板
 * Created by wrb on 2017/08/15.
 */
;(function ($, window, document, undefined) {

    "use strict";
    var pluginName = "m_editCustomPropertyTemp",
        defaults = {
            $title:null,
            $isDialog:true,
            $projectId:null,
            $okCallBack:null
        };

    // The actual plugin constructor
    function Plugin(element, options) {
        this.element = element;

        this.settings = $.extend({}, defaults, options);
        this._defaults = defaults;
        this._name = pluginName;
        this._currentCompanyId = window.currentCompanyId;
        this._currentUserId = window.currentUserId;
        this._projectPropertyData = null;//加载的数据
        this._projectPropertyEditData = null;//改动后的数据
        this.init();
    }

    // Avoid Plugin.prototype conflicts
    $.extend(Plugin.prototype, {
        init: function () {
            var that = this;
            that.initHtmlData();
        },
        //初始化数据
        initHtmlData:function () {
            var that = this;
            if(that.settings.$isDialog){//以弹窗编辑
                S_dialog.dialog({
                    title: that.settings.$title||'编辑项信息',
                    contentEle: 'dialogOBox',
                    lock: 3,
                    tPadding: '0px',
                    width: '1000',
                    minHeight:'550',
                    url: rootPath+'/assets/module/m_common/m_dialog.html',
                    cancel:function () {

                        /*S_dialog.confirm('当前数据未保存',function () {

                        },function () {
                            
                        })*/
                    },
                    okText:'保存',
                    ok:function () {
                        that.saveProjectCustomFields();

                    }
                },function(d){//加载html后触发

                    that.element = $('div[id="content:'+d.id+'"] .dialogOBox');
                    that.initHtmlTemplate()
                });
            }else{//不以弹窗编辑
                that.initHtmlTemplate();
            }
        }
        //生成html
        ,initHtmlTemplate:function () {
            var that = this;
            that.getCustomProjectPropertyData(function (data) {
                var html = template('m_project/m_editCustomPropertyTemp',{projectPropertyData:data});
                $(that.element).html(html);
                that.renderSelectProperty(data.selectedPropertyList);
                that.renderAddCusProperty(data.customPropertyList,0);
                that.addCustomLibrary();
                that.bindChoseLibrary();
                that.initICheck();
                that.addProperty_validate();
            });
        }
        //获取自定义属性数据
        ,getCustomProjectPropertyData:function (callback) {
            var that = this;
            var options = {};
            options.url = restApi.url_loadProjectCustomFields;
            options.postData = {};
            options.postData.companyId = that._currentCompanyId;
            options.postData.projectId = that.settings.$projectId;
            m_ajax.postJson(options, function (response) {
                if (response.code == '0') {
                    that._projectPropertyData = response.data;
                    that._projectPropertyEditData = jQuery.extend(true, {}, that._projectPropertyData);
                    if(callback){
                        return callback(response.data);
                    }
                } else {
                    S_dialog.error(response.info);
                }
            });
        }
        //添加自定义库
        ,addCustomLibrary:function () {
            var that = this;
            $(that.element).find('button[data-action="addPropertyBtn"]').on('click',function () {

                if($('form.addPropertyForm').valid()){
                    var fieldName = $(this).parents('.row').find('input[name="fieldName"]').val();
                    var unitName = $(this).parents('.row').find('input[name="unitName"]').val();

                    //追加到customPropertyList
                    if(that._projectPropertyEditData.customPropertyList==null){
                        that._projectPropertyEditData.customPropertyList = [];
                    }
                    that._projectPropertyEditData.customPropertyList.push({
                        changeStatus:1,
                        fieldName:fieldName,
                        fieldValue:null,
                        id:null,
                        sequencing:null,
                        unitName:unitName
                    });
                    that.renderAddCusProperty(that._projectPropertyEditData.customPropertyList,1);
                    //追加到selectedPropertyList
                    if(that._projectPropertyEditData.selectedPropertyList==null){
                        that._projectPropertyEditData.selectedPropertyList = [];
                    }
                    var newObj = {};
                    that.dealSelectedPropertyList(fieldName,unitName);
                    newObj.changeStatus = 1;
                    newObj.fieldName = fieldName;
                    newObj.unitName = unitName;
                    that._projectPropertyEditData.selectedPropertyList.push(newObj);
                    that.renderSelectProperty(that._projectPropertyEditData.selectedPropertyList);//重新渲染右边模板
                    //清空
                    $(this).parents('.row').find('input[name="fieldName"]').val('');
                    $(this).parents('.row').find('input[name="unitName"]').val('');
                }
            });
        }
        //绑定选择模板库
        ,bindChoseLibrary:function () {
            var that = this;
            $(that.element).find('.addPropertyForm ul.dropdown-menu>li>a').off('click').on('click',function () {
                var value = $(this).text();
                $(that.element).find('input[name="unitName"]').val(value);
            });
        }
        //选中项删掉某项
        ,dealSelectedPropertyList:function (fieldName,unitName) {
            var that = this;
            if(that._projectPropertyEditData.selectedPropertyList!=null && that._projectPropertyEditData.selectedPropertyList.length>0){
                $.each(that._projectPropertyEditData.selectedPropertyList,function(index,item){
                    if(item.fieldName+''+that.conversionUnitFormat(item.unitName)==fieldName+''+that.conversionUnitFormat(unitName)){//已存在已选项中
                        that._projectPropertyEditData.selectedPropertyList.splice(index,1);
                        return false;//跳出循环
                    }
                });
            }
        }
        //自定义项删掉某项
        ,dealCustomPropertyList:function (i) {
            var that = this;
            $.each(that._projectPropertyEditData.customPropertyList,function(index,item){
                if(index==i){
                    that._projectPropertyEditData.customPropertyList.splice(index,1);
                }
            });
        }
        //渲染添加的属性{isLastCheck:1=最后选中，即添加时需要}
        ,renderAddCusProperty:function (cusList,isLastCheck) {
            var that = this;
            $(that.element).find('#customPropertyBox').html(template('m_project/m_editCustomPropertyTempAdd',{customPropertyList:cusList}));

            var ifUnchecked = function (e) {

                var fieldName = $(this).attr('data-field-name');
                var unitName = $(this).attr('data-unit-name');
                that.dealSelectedPropertyList(fieldName,unitName);
                that.renderSelectProperty(that._projectPropertyEditData.selectedPropertyList);//重新渲染右边模板
            };
            var ifChecked = function (e) {
                //追加到selectedPropertyList
                if(that._projectPropertyEditData.selectedPropertyList==null){
                    that._projectPropertyEditData.selectedPropertyList = [];
                }
                var fieldName = $(this).attr('data-field-name');
                var unitName = $(this).attr('data-unit-name');

                that.dealSelectedPropertyList(fieldName,unitName);
                var newObj = {};
                newObj.changeStatus = 1;
                newObj.fieldName = fieldName;
                newObj.unitName = unitName;
                that._projectPropertyEditData.selectedPropertyList.push(newObj);
                that.renderSelectProperty(that._projectPropertyEditData.selectedPropertyList);//重新渲染右边模板
            };
            $(that.element).find('#customPropertyBox .i-checks input[name="cusProjectFieldCk"]').iCheck({
                checkboxClass: 'icheckbox_minimal-green',
                radioClass: 'iradio_minimal-green'
            }).on('ifUnchecked.s', ifUnchecked).on('ifChecked.s', ifChecked);

            if(isLastCheck==1){
                $(that.element).find('#customPropertyBox .i-checks input[name="cusProjectFieldCk"]:last').iCheck('check');
            }

            $(that.element).find('#customPropertyBox').find('span.field-name').each(function () {
                singleLimitString($(this).parents('.col-md-6'),$(this),200,20,'top');
            });

            $(that.element).find('#customPropertyBox a[data-action="delCusProperty"]').off().on('click',function (e) {

                var i = $(this).attr('data-index');
                var fieldName = $(this).attr('data-field-name');
                var unitName = $(this).attr('data-unit-name');
                that.dealCustomPropertyList(i);
                that.renderAddCusProperty(that._projectPropertyEditData.customPropertyList,0);//重新渲染左边自定义模板
                that.dealSelectedPropertyList(fieldName,unitName);
                that.renderSelectProperty(that._projectPropertyEditData.selectedPropertyList);//重新渲染右边模板
                e.stopPropagation();
            });
            $(that.element).find('input[name="cusProjectFieldCk"]').each(function () {
                var $this = $(this);
                var fieldName = $this.attr('data-field-name');
                var unitName = $this.attr('data-unit-name');
                if(that._projectPropertyEditData.selectedPropertyList!=null && that._projectPropertyEditData.selectedPropertyList.length>0){
                    $.each(that._projectPropertyEditData.selectedPropertyList,function(index,item){
                        if(item.fieldName+''+that.conversionUnitFormat(item.unitName)==fieldName+''+that.conversionUnitFormat(unitName)){//已存在已选项中
                            $this.prop('checked',true);
                            $this.iCheck('update');
                            return false;
                        }
                    });
                }
            });
        }
        //渲染已选中的属性
        ,renderSelectProperty:function (selectList) {
            var that = this;
            $(that.element).find('#selectPropertyBox').html(template('m_project/m_editCustomPropertyTempSelect',{selectedPropertyList:selectList}));
            $(that.element).find('#selectPropertyBox').find('span.field-name').each(function () {
                singleLimitString($(this).parents('.col-md-6'),$(this),200,20,'bottom');
            });
            $(that.element).find('#selectPropertyBox').find('a[data-action="delSelectedProperty"]').off().on('click',function (e) {

                var fieldName = $(this).attr('data-field-name');
                var unitName = $(this).attr('data-unit-name');
                that.dealSelectedPropertyList(fieldName,unitName);
                that.renderSelectProperty(that._projectPropertyEditData.selectedPropertyList);//重新渲染右边模板

                if($(that.element).find('input[name="projectFieldCk"][data-field-name="'+fieldName+'"][data-unit-name="'+unitName+'"]').length>0){//存在基本模板，uncheck
                    $(that.element).find('input[name="projectFieldCk"][data-field-name="'+fieldName+'"][data-unit-name="'+unitName+'"]').iCheck('uncheck');
                }
                if($(that.element).find('input[name="cusProjectFieldCk"][data-field-name="'+fieldName+'"][data-unit-name="'+unitName+'"]').length>0){//若存在自定义模板,uncheck
                    $(that.element).find('input[name="cusProjectFieldCk"][data-field-name="'+fieldName+'"][data-unit-name="'+unitName+'"]').iCheck('uncheck');
                }
                e.stopPropagation();
            });
            that.bindSortable();
        }
        //初始化icheck
        ,initICheck:function () {
            var that = this;
            var ifAllChecked = function (e) {
                $(that.element).find('input[name="projectFieldCk"]').iCheck('check');

                var baseList = that._projectPropertyEditData.basicPropertyList;
                var selectList = that._projectPropertyEditData.selectedPropertyList;

                if(selectList==null){
                    selectList = [];
                }
                for(var i = 0; i < baseList.length; i++){
                    var isResult = true;
                    if(selectList.length>0){
                        for(var j=0;j<selectList.length;j++){
                            if(selectList[j].fieldName+''+that.conversionUnitFormat(selectList[j].unitName)==baseList[i].fieldName+''+that.conversionUnitFormat(baseList[i].unitName)){
                                isResult = false;
                                break;
                            }
                        }
                    }
                    if(isResult){
                        baseList[i].id = null;
                        selectList.push(baseList[i]);
                    }
                }
                that._projectPropertyEditData.selectedPropertyList = selectList;
                that.renderSelectProperty(selectList);

            };
            var ifAllUnchecked = function (e) {
                $(that.element).find('input[name="projectFieldCk"]').iCheck('uncheck');
            };
            $(that.element).find('input[name="allProjectFieldCK"]').iCheck({
                checkboxClass: 'icheckbox_minimal-green',
                radioClass: 'iradio_minimal-green'
            }).on('ifUnchecked.s', ifAllUnchecked).on('ifChecked.s', ifAllChecked);
            var ifChecked = function (e) {
                that.dealAllCheck();

                //追加到selectedPropertyList
                if(that._projectPropertyEditData.selectedPropertyList==null){
                    that._projectPropertyEditData.selectedPropertyList = [];
                }
                var fieldName = $(this).attr('data-field-name');
                var unitName = $(this).attr('data-unit-name');

                that.dealSelectedPropertyList(fieldName,unitName);
                var newObj = {};
                newObj.changeStatus = 1;
                newObj.fieldName = fieldName;
                newObj.unitName = unitName;
                that._projectPropertyEditData.selectedPropertyList.push(newObj);
                console.log(that._projectPropertyEditData.selectedPropertyList);
                that.renderSelectProperty(that._projectPropertyEditData.selectedPropertyList);//重新渲染右边模板

            };
            var ifUnchecked = function (e) {
                that.dealAllCheck();
                var fieldName = $(this).attr('data-field-name');
                var unitName = $(this).attr('data-unit-name');
                that.dealSelectedPropertyList(fieldName,unitName);
                that.renderSelectProperty(that._projectPropertyEditData.selectedPropertyList);//重新渲染右边模板
            };
            $(that.element).find('input[name="projectFieldCk"]').iCheck({
                checkboxClass: 'icheckbox_minimal-green',
                radioClass: 'iradio_minimal-green'
            }).on('ifUnchecked.s', ifUnchecked).on('ifChecked.s', ifChecked);

            $(that.element).find('input[name="projectFieldCk"]').each(function () {
                var $this = $(this);
                var fieldName = $this.attr('data-field-name'),unitName = $this.attr('data-unit-name');
                if(that._projectPropertyEditData.selectedPropertyList!=null && that._projectPropertyEditData.selectedPropertyList.length>0){
                    $.each(that._projectPropertyEditData.selectedPropertyList,function(index,item){
                        if(item.fieldName+''+that.conversionUnitFormat(item.unitName)==fieldName+''+that.conversionUnitFormat(unitName)){//已存在已选项中
                            $this.prop('checked',true);
                            $this.iCheck('update');
                        }
                    });
                    that.dealAllCheck();
                }
            });

        }
        //当选择标签库时，判断全选checkbox是否该选中
        ,dealAllCheck:function() {
            var that = this;
            var checkedLen = $(that.element).find('input[name="projectFieldCk"]:checked').length;
            var allLen = $(that.element).find('input[name="projectFieldCk"]').length;
            if(checkedLen==allLen){
                $('input[name="allProjectFieldCK"]').prop('checked',true);
            }else{
                $('input[name="allProjectFieldCK"]').prop('checked',false);
            }
            $('input[name="allProjectFieldCK"]').iCheck('update');
        }
        //已选自定义属性排序拖拽
        , bindSortable: function () {
            var that = this;
            var sortable = Sortable.create(document.getElementById('selectPropertyBox'), {
                animation: 200,
                handle: '.property-span',
                sort: true,
                dataIdAttr: 'data-sortId',
                ghostClass: 'my-sortable-ghost',
                chosenClass: 'my-sortable-chosen',
                dragClass: 'my-sortable-drag',
                onAdd: function (evt){ //拖拽时候添加有新的节点的时候发生该事件
                    //console.log('onAdd.foo:', [evt.item, evt.from]);
                },
                onUpdate: function (evt){ //拖拽更新节点位置发生该事件
                    //console.log('onUpdate.foo:', [evt.item, evt.from]);
                },
                onRemove: function (evt){ //删除拖拽节点的时候促发该事件
                    //console.log('onRemove.foo:', [evt.item, evt.from]);
                },
                onStart:function(evt){ //开始拖拽出发该函数
                    //console.log('onStart.foo:', [evt.item, evt.from]);
                },
                onSort:function(evt){ //发生排序发生该事件
                    //console.log('onSort.foo:', [evt.item, evt.from]);
                },
                onEnd: function(evt){ //拖拽完毕之后发生该事件
                    //console.log('onEnd.foo:', [evt.item, evt.from]);
                    //console.log(evt)
                    that.sortSelectProperty(evt.oldIndex,evt.newIndex);
                }
            });
        }
        //选中的属性定段进行排行，重新生成新的下标值
        ,sortSelectProperty:function (oldIndex,newIndex) {
            var that = this;
            var list = that._projectPropertyEditData.selectedPropertyList;
            var newList = [];
            for(var i=0;i<list.length;i++){
                if(newIndex>oldIndex){//向后拖拽

                    if(i<oldIndex){
                        newList.push(list[i]);
                    }else if(i>=oldIndex && i<newIndex){
                        newList.push(list[i+1]);
                    }else if(i==newIndex){
                        newList.push(list[oldIndex]);
                    }else{
                        newList.push(list[i]);
                    }
                }else{
                    if(i<newIndex){
                        newList.push(list[i]);
                    }else if(i==newIndex){
                        newList.push(list[oldIndex]);
                    }else if(i>newIndex && i<=oldIndex){
                        newList.push(list[i-1]);
                    }else{
                        newList.push(list[i]);
                    }
                }
            }
            console.log(newList);
            that._projectPropertyEditData.selectedPropertyList = newList;

        }
        //根据fieldName移除某项
        ,delFieldList:function (list,name) {
            if(list!=null){
                $.each(list,function (index,item) {
                    if(item!=undefined && item!=null){
                        if(item.fieldName == name){
                            list.splice(index,1);//存在则删除
                        }
                    }
                })
            }
            return list;
        }
        //保存自定义模板
        ,saveProjectCustomFields:function () {

            var that = this,option  = {};
            option.classId = that.element;
            option.url = restApi.url_saveProjectCustomFields;
            option.postData = {};
            option.postData.projectId = that.settings.$projectId;
            option.postData.companyId = that._currentCompanyId;
            option.postData.operatorId = that._currentUserId;

            var selectedPropertyList =  that._projectPropertyEditData.selectedPropertyList;
            var oldSelectedPropertyList = that._projectPropertyData.selectedPropertyList;
            var delSelectedPropertyList = that._projectPropertyData.selectedPropertyList;

            if(selectedPropertyList==null)
                selectedPropertyList = [];
            if(oldSelectedPropertyList==null)
                oldSelectedPropertyList = [];
            if(delSelectedPropertyList==null)
                delSelectedPropertyList = [];

            if(oldSelectedPropertyList.length>0 && selectedPropertyList.length>0){//对比数据

                for(var i=0;i<selectedPropertyList.length;i++){

                    selectedPropertyList[i].sequencing = i;//排序值
                    var newItem = jQuery.extend(true, {}, selectedPropertyList[i]);
                    for(var j=0;j<oldSelectedPropertyList.length;j++){
                        if(newItem.fieldName+''+that.conversionUnitFormat(newItem.unitName) == oldSelectedPropertyList[j].fieldName+''+ that.conversionUnitFormat(oldSelectedPropertyList[j].unitName)){//相同，copy旧对象，替换sequencing，fieldName,unitName
                            selectedPropertyList[i] = jQuery.extend(true, {}, oldSelectedPropertyList[j]);
                            selectedPropertyList[i].changeStatus = 2;//当存在库里则update
                            selectedPropertyList[i].sequencing = i;
                            selectedPropertyList[i].fieldName = newItem.fieldName;
                            selectedPropertyList[i].unitName = newItem.unitName;
                            delSelectedPropertyList = that.delFieldList(delSelectedPropertyList,newItem.fieldName);//存在则删除
                            break;
                        }
                    }
                }
            }
            if(delSelectedPropertyList.length>0){
                $.each(delSelectedPropertyList,function(index,item){
                    item.changeStatus=-1;//状态设为删除,追加到selectedPropertyList上
                    selectedPropertyList.push(item);
                });
            }
            var customPropertyList = that._projectPropertyEditData.customPropertyList;
            var oldCustomPropertyList = that._projectPropertyData.customPropertyList;
            var delCustomPropertyList = that._projectPropertyData.customPropertyList;
            if(customPropertyList==null)
                customPropertyList = [];
            if(oldCustomPropertyList==null)
                oldCustomPropertyList = [];
            if(delCustomPropertyList==null)
                delCustomPropertyList = [];

            if(oldCustomPropertyList.length>0 && customPropertyList.length>0){//对比数据

                for(var m=0;m<customPropertyList.length;m++){

                    customPropertyList[m].sequencing = m;//排序值
                    var newItem = jQuery.extend(true, {}, customPropertyList[m]);
                    for(var n=0;n<oldCustomPropertyList.length;n++){
                        if(newItem.fieldName+''+that.conversionUnitFormat(newItem.unitName) == oldCustomPropertyList[n].fieldName+''+ that.conversionUnitFormat(oldCustomPropertyList[n].unitName)){//相同，copy旧对象，替换sequencing，fieldName,unitName
                            customPropertyList[m] = jQuery.extend(true, {}, oldCustomPropertyList[n]);
                            customPropertyList[m].changeStatus = 2;//当存在库里则update
                            customPropertyList[m].sequencing = m;
                            customPropertyList[m].fieldName = newItem.fieldName;
                            customPropertyList[m].unitName = newItem.unitName;
                            delCustomPropertyList = that.delFieldList(delCustomPropertyList,newItem.fieldName);//存在则删除
                            break;
                        }
                    }
                }
            }
            if(delCustomPropertyList.length>0){
                $.each(delCustomPropertyList,function(index,item){
                    item.changeStatus=-1;//状态设为删除,追加到selectedPropertyList上
                    customPropertyList.push(item);
                });
            }
            option.postData.basicPropertyList = that._projectPropertyEditData.basicPropertyList;
            option.postData.customPropertyList = customPropertyList;
            option.postData.selectedPropertyList = selectedPropertyList;
            m_ajax.postJson(option,function (response) {
                if(response.code=='0'){
                    S_toastr.success('保存成功！');
                    if(that.settings.$okCallBack!=null){
                        return that.settings.$okCallBack(null);
                    }
                }else {
                    S_dialog.error(response.info);
                }
            })
        }
        //转换单位格式
        , conversionUnitFormat:function (unitName) {

            var that = this,_unitName = '';
            switch(unitName){
                case 'm&sup2;':
                    _unitName = 'm²';
                    break;
                case 'm&sup3;':
                    _unitName = 'm³';
                    break;
                default:
                    _unitName = unitName;
                    break;
            }
            return _unitName;
        }
        //添加自定义属性验证
        , addProperty_validate: function () {
            var that = this;
            $('form.addPropertyForm').validate({
                rules: {
                    fieldName: {
                        required: true,
                        isReName: true
                    }
                },
                messages: {
                    fieldName: {
                        required: '标签名称不可为空！',
                        isReName: "该标签库已存在，请勿重复添加"

                    }
                },
                errorPlacement: function (error, element) { //指定错误信息位置
                    element.closest('.row').find('.col-md-12').html(error);
                }
            });
            // 重名验证
            jQuery.validator.addMethod("isReName", function (value, element) {

                value = $.trim(value);
                var unitName = $(element).parents('.addPropertyForm').find('input[name="unitName"]').val();
                var isOk = true;
                if(that._projectPropertyData!=null && that._projectPropertyData.basicPropertyList!=null && that._projectPropertyData.basicPropertyList.length>0){
                    var baseList = that._projectPropertyData.basicPropertyList;
                    for(var i=0;i<baseList.length;i++){
                        if(value+'' + unitName == baseList[i].fieldName+''+ that.conversionUnitFormat(baseList[i].unitName)){
                            isOk = false;
                            break;
                        }
                    }
                }
                if(isOk && that._projectPropertyEditData!=null && that._projectPropertyEditData.customPropertyList!=null && that._projectPropertyEditData.customPropertyList.length>0){
                    var customList = that._projectPropertyEditData.customPropertyList;
                    for(var i=0;i<customList.length;i++){
                        if(value+'' + unitName ==customList[i].fieldName+''+ that.conversionUnitFormat(customList[i].unitName)){
                            isOk = false;
                            break;
                        }
                    }
                }
                return  isOk;

            }, "该标签库已存在，请勿重复添加");

        }
    });

    $.fn[pluginName] = function (options) {
        return this.each(function () {

            //if (!$.data(this, "plugin_" + pluginName)) {
            $.data(this, "plugin_" +
                pluginName, new Plugin(this, options));
            //}
        });
    };

})(jQuery, window, document);



/**
 * 设计阶段
 * Created by wrb on 2016/12/20.
 */
;(function ($, window, document, undefined) {

    "use strict";
    var pluginName = "m_editDesignContent",
        defaults = {
            $title: null,
            $isDialog: true,
            $projectId: '',
            $projectDesignContent: null,
            $okCallBack: null,
            $cancelCallBack: null,
            $designContentList: null//此字段跟$projectDesignContent一样，这里不代表所有
        };

    // The actual plugin constructor
    function Plugin(element, options) {
        this.element = element;

        this.settings = $.extend({}, defaults, options);
        this._defaults = defaults;
        this._name = pluginName;
        this._designContentListClone = null;
        this.init();
    }

    // Avoid Plugin.prototype conflicts
    $.extend(Plugin.prototype, {
        init: function () {
            var that = this;
            that.initHtmlData(function () {
                that.bindActionClick();
                that.bindDesignContentCk();
            });
        },
        //初始化数据
        initHtmlData: function (callBack) {
            var that = this;
            if (that.settings.$isDialog) {//以弹窗编辑
                S_dialog.dialog({
                    title: that.settings.$title || '进度变更',
                    contentEle: 'dialogOBox',
                    lock: 3,
                    width: '800',
                    minHeight: '350',
                    tPadding: '0px',
                    url: rootPath + '/assets/module/m_common/m_dialog.html',
                    cancel: function () {
                        /*that.settings.$designContentList = that._designContentListClone;
                        if (that.settings.$cancelCallBack != null) {
                            return that.settings.$cancelCallBack(that._designContentListClone);
                        }*/
                    },
                    cancelText:'关闭'


                }, function (d) {//加载html后触发
                    that.element = 'div[id="content:' + d.id + '"] .dialogOBox';
                    if (that.settings.$designContentList != null) {
                        that._designContentListClone = jQuery.extend(true, {}, that.settings.$designContentList);
                        var $data = {};
                        $data.designContentList = that.settings.$designContentList;
                        $data.designContentList[0].projectProcessTimeEntityList = that.getChangeTimeDiff($data.designContentList[0].projectProcessTimeEntityList);
                        that.initHtmlTemplate(callBack, $data)
                    }


                });
            } else {//不以弹窗编辑
                var $data = that.dealDesignContent();
                that.initHtmlTemplate(callBack, $data, classIdObj)
            }
        }
        //生成html
        , initHtmlTemplate: function (callBack, data, classIdObj) {
            var that = this;
            var html = template('m_project/m_editDesignContent', data);
            $(that.element).html(html);
            if (callBack != null) {
                callBack();
            }
        }
        //计算变更容器的时间差（天）
        , getChangeTimeDiff: function (list) {
            var that = this;
            $.each(list, function (i, item) {
                list[i].timeDiffStr = that.countTimeDiff(item.startTime, item.endTime);
            });
            return list;
        }
        //计算时间差的方法
        , countTimeDiff:function (startTime, endTime) {
            var diffStr = moment(endTime).diff(moment(startTime), 'days')+1;
            if(isNaN(diffStr) || diffStr==undefined){
                diffStr = '';
            }
            return diffStr;
        }
        //获取设计阶段基础数据
        , getContentData: function (callBack) {
            var that = this;
            var option = {};
            option.classId = that.element;
            option.url = restApi.url_getDesignContentList;
            m_ajax.get(option, function (response) {
                if (response.code == '0') {
                    that.settings.$designContentList = response.data;
                    return callBack(response.data);
                } else {
                    S_dialog.error(response.info);
                }

            })
        }

        //变更按钮事件绑定
        , bindTimeChangeRecord: function (obj) {
            var that = this;
            var contentIndex = obj.closest('.designContentDiv').attr('data-i');
            var contentObj = that.settings.$designContentList[contentIndex];
            var options = {};
            options.$title = '添加变更';
            options.$okText = '保存';
            options.$minHeight = '180';
            options.$validate = 1;
            options.$timeInfo={
                startTime:obj.closest('.time-row').find('span[data-type="startTime"]').text(),
                endTime:obj.closest('.time-row').find('span[data-type="endTime"]').text()
            }
            options.$okCallBack = function (data) {
                data.timeDiffStr = that.countTimeDiff(data.startTime, data.endTime);
                if (data != null) {
                    if (that.settings.$okCallBack != null) {
                        that.settings.$okCallBack(data);
                    }
                    if (contentObj.projectProcessTimeEntityList != null) {
                        contentObj.projectProcessTimeEntityList.push({
                            startTime: data.startTime,
                            endTime: data.endTime,
                            timeDiffStr: data.timeDiffStr,
                            memo: data.memo
                        });
                    }
                    var $option = {};
                    $option.$data = data;
                    $option.$data.$index = contentObj.projectProcessTimeEntityList.length - 2;
                    $(that.element).find('div.designContentDiv[data-i="' + contentIndex + '"]').m_addTimeChangeRecord($option);
                    $(that.element).find('.detailListDiv:last').siblings().find('a[data-action="addTimeChangeRecord"]').addClass('hide');
                    $(that.element).find('.detailListDiv:last').siblings().find('a[data-action="delTimeChangeRecord"]').addClass('hide');
                    $(that.element).find('.detailListDiv:last').find('a[data-action="addTimeChangeRecord"]').on('click', function () {
                        that.bindTimeChangeRecord($(this));
                    });
                }

            };
            $('body').m_inputProcessTime(options);
        }
        //删除变更列表
        , delTimeChangeRecord: function (obj) {
            var that = this;
            var contentIndex = $(obj).closest('.designContentDiv').attr('data-i');
            var contentObj = that.settings.$designContentList[contentIndex];
            if (contentObj.projectProcessTimeEntityList && contentObj.projectProcessTimeEntityList.length > 1) {//删除变更列表
                if (contentObj.projectProcessTimeEntityList.length == 2) {
                    $(obj).closest('.detailListDiv').prev().find('a').removeClass('hide');
                } else {
                    $(obj).closest('.detailListDiv').prev().find('a').removeClass('hide');
                }
                $(obj).closest('.detailListDiv').remove();
                contentObj.projectProcessTimeEntityList.splice(contentObj.projectProcessTimeEntityList.length - 1, 1);
                that.settings.$designContentList[contentIndex] = contentObj;
            } else {//第一条合同进度时间
                $(obj).closest('.liBox').find('input[name="startTime"]').val('');
                $(obj).closest('.liBox').find('input[name="endTime"]').val('');
                $(obj).closest('.liBox').find('input').removeAttr('disabled');
                $(obj).closest('.liBox').find('.btnBox a').addClass('hide');
                contentObj.projectProcessTimeEntityList.splice(contentObj.projectProcessTimeEntityList.length - 1, 1);
                that.settings.$designContentList[contentIndex] = contentObj;

                S_dialog.close($(that.element));
                var options = {};
                options.$isHaveMemo = false;
                options.$timeInfo = {};
                options.$title = '设计阶段';
                options.$okCallBack = function (data) {
                    if (that.settings.$okCallBack != null) {
                        return that.settings.$okCallBack(data, 1);
                    }
                };
                $('body').m_inputProcessTime(options);
            }
        }
        , bindDesignContentCk: function () {
            $(this.element).find('input[type="checkbox"][name="designContent"]').on('click', function () {
                if ($(this).is(':checked')) {
                    $(this).closest('.designContentDiv').find('.start-time').removeClass('hide');
                    $(this).closest('.designContentDiv').find('.end-time').removeClass('hide');
                } else {
                    $(this).closest('.designContentDiv').find('.start-time').addClass('hide');
                    $(this).closest('.designContentDiv').find('.end-time').addClass('hide');
                }
            });
        }
        //按钮事件绑定
        , bindActionClick: function () {
            var that = this;
            $(that.element).find('a[data-action]').on('click', function () {
                var dataAction = $(this).attr('data-action');
                if (dataAction == 'addOtherContent') {
                    that.bindAddContent($(this));
                    return false;
                } else if (dataAction == 'addTimeChangeRecord') {//点击变更
                    that.bindTimeChangeRecord($(this));
                    return false;
                }
                /*else if(dataAction=='delTimeChangeRecord'){
                 var $that = this;
                 S_dialog.confirm('您确定要删除吗？',function(){
                 that.delTimeChangeRecord($that);
                 },function(){})
                 return false;
                 }*/
            });
        }

    });

    $.fn[pluginName] = function (options) {
        return this.each(function () {

            //if (!$.data(this, "plugin_" + pluginName)) {
            $.data(this, "plugin_" +
                pluginName, new Plugin(this, options));
            //}
        });
    };

})(jQuery, window, document);



/**
 * 设计范围
 * Created by wrb on 2016/12/20.
 */
;(function ($, window, document, undefined) {

    "use strict";
    var pluginName = "m_editDesignRange",
        defaults = {
            $title:null,
            $isDialog:true,
            $projectId:'',
            $projectDesignRange:null,
            $okCallBack:null
        };

    // The actual plugin constructor
    function Plugin(element, options) {
        this.element = element;

        this.settings = $.extend({}, defaults, options);
        this._defaults = defaults;
        this._name = pluginName;
        this.init();
    }

    // Avoid Plugin.prototype conflicts
    $.extend(Plugin.prototype, {
        init: function () {
            var that = this;
            that.initHtmlData(function () {
                that.bindActionClick();
            });
        },
        //初始化数据
        initHtmlData:function (callBack) {
            var that = this;
            if(that.settings.$isDialog){//以弹窗编辑
                S_dialog.dialog({
                    title: that.settings.$title||'设计范围',
                    contentEle: 'dialogOBox',
                    lock: 3,
                    width: '800',
                    minHeight:'250',
                    tPadding: '0px',
                    url: rootPath+'/assets/module/m_common/m_dialog.html',
                    cancel:function () {
                        
                    },
                    ok:function () {
                        var check = $(".addRangeOBox form").valid();
                        if(!check){
                            return false;
                        }else{
                            var projectDesignRangeList = [];
                            $('.addRangeOBox input[type="checkbox"][name="range"]:checked').each(function () {
                                projectDesignRangeList.push({designRange:$(this).val()});
                            });
                            $('.addRangeOBox input[type="checkbox"][name="otherRange"]:checked').each(function () {
                                projectDesignRangeList.push({designRange:$(this).closest('.liBox').find('input[name="designRange"]').val()});
                            });
                            if(that.settings.$okCallBack!=null){
                                return that.settings.$okCallBack(projectDesignRangeList);
                            }
                        }


                    }
                    
                },function(d){//加载html后触发
                    that.element = '#content:'+d.id;
                    that.getRangeData(function (data) {

                        var $data = that.dealDesignRange();
                        var classIdObj = $('div[id="content:'+d.id+'"] .dialogOBox');
                        that.initHtmlTemplate(callBack,$data,classIdObj)
                    });


                });
            }else{//不以弹窗编辑
                var $data = that.dealDesignRange();
                var classIdObj = $(that.element);
                that.initHtmlTemplate(callBack,$data,classIdObj)
            }
        }
        //生成html
        ,initHtmlTemplate:function (callBack,data,classIdObj) {
            var that = this;
            var html = template('m_project/m_editDesignRange',data);
            classIdObj.html(html);
            if(callBack!=null){
                callBack();
            }
            //给所有已有的自定义范围的checkbox添加事件
            $.each(data.otherRange,function(i,item){
                var obj = $('input#'+item.id).parents('.liBox');
                that.bindOtherRangeCk(obj);
            });
        }
        //把设计范围解析(哪些是来自基础数据，来自自定义)
        ,dealDesignRange:function () {
            var that = this;
            var rangeListClone = that.settings.$projectDesignRange;//已选中的设计范围
            var designRangeList = that.settings.$designRangeList;//数据字典的设计范围
            var rangeList=[];
            var otherRange=[];
            if(rangeListClone!=null && rangeListClone.length>0){
                for (var i = 0; i < rangeListClone.length; i++) {
                    var isCon = false;
                    for (var j = 0; j < designRangeList.length; j++) {
                        if (rangeListClone[i].designRange == designRangeList[j].name) {
                            isCon = true;
                            designRangeList[j].isChecked = 1;//初始化选中
                            rangeList.push(rangeListClone[i]);
                            continue;
                        }
                    }
                    if (!isCon) {
                        rangeListClone[i].isChecked = 1;//初始化选中
                        otherRange.push(rangeListClone[i]);
                    }
                }
            }
            var $data = {};
            $data.rangeList = rangeList;
            $data.otherRange = otherRange;
            $data.designRangeList = designRangeList;
            return $data;
        }
        //获取设计范围基础数据
        ,getRangeData:function (callBack) {
            var that = this;
            var option  = {};
            option.classId = that.element;
            option.url = restApi.url_getDesignRangeList;
            m_ajax.get(option,function (response) {
                if(response.code=='0'){
                    that.settings.$designRangeList = response.data;
                    return callBack(response.data);
                }else {
                    S_dialog.error(response.info);
                }

            })
        }
        //添加自定义设计范围事件
        ,bindAddRange:function (obj) {
            var that = this;

            var iHtml = '';
            iHtml+='<div class="col-md-3 liBox">';
            iHtml+='    <div class="col-md-2 no-padding" >';
            iHtml+='        <label class="checkbox" title="">';
            iHtml+='            <input name="otherRange" class="checkbox" checked type="checkbox"/>';
            iHtml+='            <i></i>';
            iHtml+='        </label>';
            iHtml+='    </div>';
            iHtml+='    <div class="col-md-10 out-box" style="padding-left: 0;padding-right: 0;">';
            iHtml+='        <label class="input">';
            iHtml+='            <input id="designRange" class="designRange form-control input-sm" type="text" name="designRange" placeholder="请输入名称" />';
            iHtml+='        </label>';
            iHtml+='    </div>';
            iHtml+='</div>';

            obj.parent().before(iHtml);
            that.bindOtherRangeCk(obj.parent().prev());
            that.editOtherRangeValid();
        }
        //绑定选择自定义设计范围事件
        ,bindOtherRangeCk:function (obj) {
            obj.find('input[name="otherRange"]').on('click',function () {
                $(this).parents('.liBox').find('label.error').hide();
                $(this).parents('.liBox').remove();
            });
            obj.find('input[name="designRange"]').keyup(function () {
                $(this).parents('.liBox').find('label.error').hide();
            });
        }
        //按钮事件绑定
        ,bindActionClick:function () {
            var that = this;
            $('.addRangeOBox').find('label[data-action]').on('click',function () {
                var dataAction = $(this).attr('data-action');
                if(dataAction=='addOtherRange'){
                    that.bindAddRange($(this));
                    return false;
                }
            });
        }
        //自定义范围时的验证
        ,editOtherRangeValid:function(){
            var that = this;
            $(".addRangeOBox form").validate({
                onfocusout:false,
                rules: {
                    otherRange:{
                        ckDesignRange:true
                     }
                },
                messages: {
                    otherRange:{
                        ckDesignRange:'请输入设计范围名称!'
                     }
                },
                errorPlacement: function (error, element) { //指定错误信息位置
                    if (element.is(':radio') || element.is(':checkbox')) {
                        error.appendTo(element.closest('.liBox'));
                    } else {
                        error.insertAfter(element);
                    }
                }
            });
            $.validator.addMethod('ckDesignRange', function(value, element) {
                var that = this;
                var isTrue = true;
                $(that.element).find(' input[name="otherRange"]:checked').each(function () {
                    var val = $(this).closest('.liBox').find('input[name="designRange"]').val();
                    if($.trim(val).length===0){
                        isTrue = false;
                    }
                });
                return  isTrue;
            }, '请输入设计范围名称!');
        }

    });

    $.fn[pluginName] = function (options) {
        return this.each(function () {

            //if (!$.data(this, "plugin_" + pluginName)) {
            $.data(this, "plugin_" +
                pluginName, new Plugin(this, options));
            //}
        });
    };

})(jQuery, window, document);

/**
 * 录入地址
 * Created by wrb on 2016/12/21.
 */
;(function ($, window, document, undefined) {

    "use strict";
    var pluginName = "m_entryAddress",
        defaults = {
            $title:null,
            $isDialog:true,
            $placement:'null',
            $province:null,//选中的省份
            $city:null,//选中的城市
            $county:null,//选中的县或区或镇
            $detailAddress:'',
            $okCallBack:null
        };

    // The actual plugin constructor
    function Plugin(element, options) {
        this.element = element;

        this.settings = $.extend({}, defaults, options);
        this._defaults = defaults;
        this._name = pluginName;
        this.init();
    }

    // Avoid Plugin.prototype conflicts
    $.extend(Plugin.prototype, {
        init: function () {
            var that = this;
            that.initHtmlData(function (data) {
                $("#selectRegion").citySelect({
                    prov:that.settings.$province,
                    city:that.settings.$city,
                    dist:that.settings.$county,
                    nodata:"none",
                    required:false
                });
                that.bindActionClick();
            });
        },
        //初始化数据
        initHtmlData:function (callBack) {
            var that = this;
            var options = {};
            options.titleHtml ='<h3 class="popover-title">'+(that.settings.$title?that.settings.$title:'编辑地址')+'</h3>';
            options.placement =that.settings.$placement?that.settings.$placement:'top';
            options.content =that.initHtmlTemplate();
            options.onShown = function ($popover) {
                if(callBack!=null){
                    callBack();
                }
            };
            options.onSave = function ($popover) {
                return that.saveAddress();
            };

            $(that.element).m_popover(options,true);
        }
        //保存地址详情编辑
        ,saveAddress:function () {
            var that = this;

            var p = $(that.element).next('.popover').find('select.prov').val();
            var c = $(that.element).next('.popover').find('select.city').val();
            var d = $(that.element).next('.popover').find('select.dist').val();
            if(p==null|| p==undefined)
                p='';
            if(c==null|| c==undefined)
                c='';
            if(d==null|| d==undefined)
                d='';
            var $data = {};
            $data.province = p;
            $data.city = c;
            $data.county = d;
            $data.detailAddress = $('.selectRegionOBox input[name="detailAddress"]').val();

            if(that.settings.$okCallBack!=null){
                return that.settings.$okCallBack($data);
            }

        }
        //生成html
        ,initHtmlTemplate:function () {
            var that = this;
            var data = {};
            data.$detailAddress = that.settings.$detailAddress;
            var html = template('m_project/m_entryAddress',data);
            return html;
            // $(that.element).next('.popover').find('editable-input').html(html);
        }
        //事件绑定
        ,bindActionClick:function () {
            var that = this;
            $(that.element).find('.cityBox select').change(function () {
                var w = 508;
                var p = $(that.element).find('select.prov').val();
                var c = $(that.element).find('select.city').val();
                var d = $(that.element).find('select.dist').val();
                if(p==null|| p==undefined)
                    p='';
                if(c==null|| c==undefined)
                    c='';
                if(d==null|| d==undefined)
                    d='';
                var txt = p+c+d;
                $(that.element).find('.cityText').html(txt);
                $(that.element).find('.detailAddressLabel').css('width',(w-(txt.length*14)-5)+'px');
            });
        }
    });

    $.fn[pluginName] = function (options) {
        return this.each(function () {

            //if (!$.data(this, "plugin_" + pluginName)) {
            $.data(this, "plugin_" +
                pluginName, new Plugin(this, options));
            //}
        });
    };

})(jQuery, window, document);



/**
 * Created by wrb on 2016/12/19.
 */
;(function ($, window, document, undefined) {

    "use strict";
    var pluginName = "m_projectBasicInfo",
        defaults = {
            $isDialog:false,//是否弹窗
            $isView:false,//是否信息浏览,是则屏蔽操作,屏蔽面包屑
            $projectId: null,
            $editFlag:null,
            $deleteFlag:null,
            $renderCallBack: null
        };

    // The actual plugin constructor
    function Plugin(element, options) {
        this.element = element;
        this.settings = $.extend({}, defaults, options);
        this._defaults = defaults;
        this._projectInfo = null;//项目信息
        this._currentUserId = null;//当前用户id
        this._currentCompanyId = window.currentCompanyId;
        this._currentCompanyUserId = window.currentCompanyUserId;
        this._designContentAncestors = null;//项目设计阶段数据
        this._constructionCateList = null;//功能分类数据字典的list
        this._designContentList = null;//设计阶段数据字典的list
        this._projectTypeList = null;//项目类型
        this._name = pluginName;

        this._currentUserId = window.currentUserId;
        this._currentCompanyUserId = window.currentCompanyUserId;
        this.init();
    }

    // Avoid Plugin.prototype conflicts
    $.extend(Plugin.prototype, {
        init: function () {
            var that = this;
            if(that.settings.$isDialog){
                S_dialog.dialog({
                    title: that.settings.$title||'项目基本信息',
                    contentEle: 'dialogOBox',
                    lock: 3,
                    tPadding: '0px',
                    width: '1000',
                    minHeight:'700',
                    url: rootPath+'/assets/module/m_common/m_dialog.html',
                    cancel:function () {
                    },
                    cancelText:'关闭'

                },function(d){//加载html后触发

                    that.element = $('div[id="content:'+d.id+'"] .dialogOBox');
                    that.renderPage();
                });
            }else{
                that.renderPage();
            }
        }
        //渲染界面
        ,renderPage:function () {
            var that = this;
            that.getProjectData(function (data) {
                that.initHtmlData(data);
                //that.bindAttentionActionClick();
                rolesControl();

                if(that.settings.$isView==false){
                    if (that.settings.$editFlag!=null && that.settings.$editFlag==1) {//具有编辑权限操作
                        that.bindEditItem();
                        that.uploadRecordFile();
                        that.bindEditable();
                        that.bindBtnAddDesignContent();
                        that.bindCustomInfoTemp();
                        that.bindFileEditFun();
                    }
                    that.bindDeleteProject();
                }
            });
        }
        ,getProjectData: function (callback) {
            var that = this;
            var option = {};
            option.url = restApi.url_loadProjectDetails + '/' + that.settings.$projectId;
            m_ajax.postJson(option, function (response) {
                if (response.code == '0') {
                    that._projectInfo = response.data;
                    that._designContentAncestors = response.data.projectDesignContentList;
                    that._constructionCateList = response.data.constructionCateList;
                    that.getContentData(function () {

                        if (callback)
                            callback.call(that, that._projectInfo);
                    });
                } else {
                    S_dialog.error(response.info);
                }
            });
        },
        //获取设计阶段基础数据
        getContentData: function (callback) {
            var that = this;
            var option = {};
            option.classId = that.element;
            option.url = restApi.url_getDesignContentList;
            m_ajax.get(option, function (response) {
                if (response.code == '0') {
                    that._designContentList = response.data;
                    if (callback) {
                        return callback();
                    }
                } else {
                    S_dialog.error(response.info);
                }
            })
        },
        initHtmlData: function (data) {
            var that = this;
            var flag =  that.settings.$editFlag!=null && that.settings.$editFlag==1 ? true : false;//编辑标识
            var html = template('m_project/m_projectBasicInfo', {
                project: data,
                isCreate: that._currentUserId == data.createBy && that._currentCompanyId == data.companyId,
                isOperator: that._currentCompanyUserId == data.operatorPerson,
                editFlag:flag,
                deleteFlag:that.settings.$deleteFlag,
                currentCompanyId : that._currentCompanyId,
                roles: window.currentRoleCodes,
                fastdfsUrl: window.fastdfsUrl + '/',
                isView:that.settings.$isView
            });
            $(that.element).html(html);
            if (that.settings.$renderCallBack != null) {
                that.settings.$renderCallBack();
            }

            $(that.element).find('span[data-toggle="tooltip"]').tooltip();

            if (!flag) {
                $(that.element).find('a[data-action][data-action!="deleteProject"]').addClass('normalAElem');//删除的权限单独控制，跟编辑权限不一样,删除的权限在渲染此组件时作了处理
            }
            rolesControl();
            that.bindDesignContentCheckbox();//给设计阶段的checkbox绑定事件
        },
        //处理文件上传的删除事件，hover事件
        bindFileEditFun:function () {
            var that = this;
            $(that.element).find('.file-span').hover(function () {
                $(this).find('a[data-action="delFile"]').show();
            },function () {
                $(this).find('a[data-action="delFile"]').hide();
            });
            $(that.element).find('.file-span a[data-action="delFile"]').on('click',function () {

                var dataId = $(this).attr('data-id');
                S_swal.confirm({
                    title:'您确定要删除该文件吗？',
                    text:'该文件删除后将不能恢复，确定吗？',
                    callBack:function () {
                        var option = {};
                        option.url = restApi.url_netFile_delete;
                        option.postData = {
                            id: dataId,
                            accountId: window.currentUserId
                        };
                        m_ajax.postJson(option, function (response) {
                            if (response.code == '0') {
                                S_swal.sure({
                                    title:'已删除',
                                    text:'该文件已删除。',
                                    callBack:function () {
                                        that._refresh();
                                    }
                                });
                            } else {
                                S_dialog.error(response.info);
                            }
                        });
                    }
                });
            });
        },
        //绑定点击关注或取消关注按钮
        bindAttentionActionClick: function () {
            var that = this;
            $(that.element).find('a.attention').click(function () {
                if ($(this).hasClass('shoucang')) {//点击关注
                    that.addAttention(this);
                } else if ($(this).hasClass('shoucangshixin')) {//点击取消关注
                    that.delAttention(this);
                }
                return false;
            });
        },
        //添加项目关注
        addAttention: function (obj) {
            var option = {}, that = this;
            option.url = restApi.url_attention;
            option.postData = {};
            option.postData.targetId = $(obj).attr('data-id');
            option.postData.type = '1';
            option.postData.companyUserId = window.currentCompanyUserId;
            m_ajax.postJson(option, function (response) {
                if (response.code == '0') {
                    S_toastr.success('关注成功！');
                    $(obj).removeClass('shoucang').addClass('shoucangshixin');
                    $(obj).find('i').addClass('fc-v1-yellow');
                    $(obj).find('.text').text('取消关注');
                    $(obj).attr('data-attention-id', response.data);
                    $(obj).attr('title', '取消关注该项目');
                } else {
                    S_dialog.error(response.info);
                }
            });
        },
        //取消项目关注
        delAttention: function (obj) {
            var option = {}, that = this;
            option.url = restApi.url_attention + '/' + $(obj).attr('data-attention-id');
            m_ajax.get(option, function (response) {
                if (response.code == '0') {
                    S_toastr.success('取消关注成功！');
                    $(obj).removeClass('shoucangshixin').addClass('shoucang');
                    $(obj).find('i').removeClass('fc-v1-yellow');
                    $(obj).find('.text').text('关注');
                    $(obj).attr('data-attention-id', '');
                    $(obj).attr('title', '关注该项目');
                } else {
                    S_dialog.error(response.info);
                }
            });
        },
        //点击删除项目
        bindDeleteProject: function () {
            var that = this;
            $(that.element).find('a[data-action="deleteProject"]').on('click',function(){
                var $this = this;

                S_swal.confirm({
                    title:'您确定要删除该项目吗？',
                    text:'该项目删除后将不能恢复，确定吗？',
                    callBack:function () {
                        var option = {};
                        var id = $($this).attr('data-id');
                        option.url = restApi.url_deleteProject + '/' + id;
                        m_ajax.get(option, function (response) {
                            if (response.code == '0') {
                                S_swal.sure({
                                    title:'已删除',
                                    text:'该项目已删除。',
                                    callBack:function () {
                                        //window.location.href = window.rootPath + '/iWork/home/workbench'
                                        //$('.m_metismenu a[id="projectList"]').click();
                                        location.hash = '/';
                                    }
                                });
                            } else {
                                S_dialog.error(response.info);
                            }
                        });
                    }
                });
            });
        },
        //当在位编辑的文本显示为empty时，改为“请设置”
        dealEmptyText: function () {
            var that = this;
            $('.m_projectBasicInfo .editable-empty,.m_projectBasicInfo a.editable').each(function () {

                var text = $(this).text();
                if( text == 'Empty' || $.trim(text) == ''){
                    text = '未设置'
                }
                $(this).text(text);

                if (that.settings.$editFlag!=null && that.settings.$editFlag==1) {
                    $(this).css('color', (($.trim(text).indexOf('未设置') > -1 || $.trim(text) == '未签订')) ? '#ccc' : '#4765a0');
                } else {
                    $(this).css('color', '#676a6c');
                }
            });
        },
        //上传附件
        uploadRecordFile: function () {
            var that = this;
            $('#filePicker').m_fileUploader({
                server: restApi.url_attachment_uploadProjectContract,
                fileExts: 'pdf',
                fileSingleSizeLimit:20*1024*1024,
                formData: {},
                multiple:true,
                //duplicate:false,
                loadingId: '.ibox-content',
                innerHTML: '<i class="fa fa-upload fa-fixed"></i>',
                uploadBeforeSend: function (object, data, headers) {
                    data.companyId = window.currentCompanyId;
                    data.accountId = window.currentUserId;
                    data.projectId = that.settings.$projectId;
                },
                uploadSuccessCallback: function (file, response) {
                    $(that.element).m_projectBasicInfo({
                        $projectId: that.settings.$projectId,
                        $editFlag:that.settings.$editFlag,
                        $deleteFlag:that.settings.$deleteFlag
                    });

                    S_toastr.success('保存成功！');
                }
            },true);
        }

        //验证当前选的组织是否已选过，选过的话，经营负责人不能另选
        , _validateIssueTaskCompany: function (toCompanyId, callBack) {

            var options = {}, that = this;

            options.url = restApi.url_validateIssueTaskCompany;
            options.postData = {};
            options.postData.toCompanyId = toCompanyId;
            options.postData.projectId = that.settings.$projectId;
            m_ajax.postJson(options, function (response) {

                if (response.code == '0') {
                    return callBack(response.data);
                } else {
                    S_dialog.error(response.info);
                }
            })
        }
        //获取甲方列表
        , getConstructCompanyList: function (keyword, callback) {
            var that = this;
            var option = {};
            option.url = restApi.url_constructList;
            option.postData = {};
            if (keyword != null) {
                option.postData.keyword = keyword;
            }
            m_ajax.postJson(option, function (response) {
                if (response.code == '0') {
                    that._constructCompanyList = that.dealConstructCompanyLIst(response.data);
                    if (callback != null) {
                        return callback(that._constructCompanyList);
                    }
                } else {
                    S_dialog.error(response.info);
                }
            });
        }
        //处理甲方列表
        , dealConstructCompanyLIst: function (data) {
            var that = this;
            var list = [];
            $.each(data, function (i, item) {//constructCompany: constructCompanyName:
                list.push({id: item.companyId, value: item.companyName});
            });
            return list;
        }
        //乙方
        , chosePartyBOrg: function ($btn) {
            var that = this;
            var options = {};
            options.titleHtml = '<h3 class="popover-title">编辑</h3>';
            options.popoverStyle = 'width:360px;min-width:360px';
            options.contentStyle = 'padding:15px 15px 0';
            options.content = template('m_project/m_popover_partyB', {});
            options.onShown = function ($popover) {

                var $select_partB = $popover.find('select[name="partB"]:first').select2({
                    placeholder: {
                        id: '',
                        text: ''
                    },
                    allowClear: true,
                    language: "zh-CN",
                    minimumResultsForSearch: Infinity,
                    ajax: {
                        contentType: "application/json",
                        url: restApi.url_getUsedPartB,
                        dataType: 'json',
                        type: 'POST',
                        delay: 500,
                        data: function (params) {
                            var ret = {
                                keyword: params.term
                                /*,companyId: window.currentCompanyId*/
                            };
                            return JSON.stringify(ret);
                        },
                        processResults: function (data, params) {

                            return {
                                results: $.map(data.data, function (o, i) {
                                    return {
                                        id: o.id,
                                        text: o.companyName
                                    }
                                })
                            };
                        },
                        cache: false
                    }
                });

                var companyBid = $btn.attr('data-companyBid');
                var companyBidName = $btn.attr('data-companyBidName');
                if (!isNullOrBlank(companyBid)) {//不为空，初始化select值
                    var $companyB = $('<option selected>' + companyBidName + '</option>').val(companyBid);
                    $select_partB.append($companyB).trigger('change');
                }
                that._savePartyB_validate($popover);
            };
            options.onSave = function ($popover) {
                var data = {};
                data.companyBid = $popover.find('select[name="partB"]').val();
                /*data.partBManagerId = $popover.find('select[name="operator"]').val();*/
                /*data.partBDesignerId = $popover.find('select[name="projectLeader"]').val();*/

                var flag = $popover.find('form').valid();
                if (!flag) {
                    return false;
                } else {

                    if (that._projectInfo.companyBid != null && that._projectInfo.companyBid != '' && data.companyBid != that._projectInfo.companyBid) {
                        var $btn = $popover.find('button.m-popover-submit');
                        if($btn.closest('div').find('.m-popover').length>0){
                            return false;
                        }

                        S_swal.confirm({
                            title:'删除（更换）乙方后，相关费用信息将被删除，你确定保存吗？',
                            text:'此操作不可恢复，确定吗？',
                            callBack:function () {
                                that.saveProjectData(null, data, 'partyB', function () {
                                    S_swal.sure({
                                        title:'已更换',
                                        text:'该乙方已更换成功。',
                                        callBack:function () {
                                            that._refreshMenu();
                                        }
                                    });

                                });
                            }
                        });

                    } else {
                        that.saveProjectData(null, data, 'partyB', function () {
                            //window.location.href = window.location.href;
                            that._refreshMenu();
                        });
                    }
                }
                return false;
            };
            $btn.m_popover(options, true);
            return false;
        }
        //甲方
        , chosePartyAOrg: function ($btn) {
            var that = this;
            var options = {};
            options.titleHtml = '<h3 class="popover-title">编辑</h3>';
            options.popoverStyle = 'width:400px;min-width:400px';
            options.contentStyle = 'padding:15px 0';

            var companyName = that._projectInfo.partyACompany==null?'':that._projectInfo.partyACompany.companyName;
            var companyId = that._projectInfo.partyACompany==null?'':that._projectInfo.partyACompany.id;

            options.content = template('m_project/m_popover_partyA', {
                constructCompanyName:companyName,
                enterpriseId:companyId
            });
            options.onShown = function ($popover) {

                /*var $select_partA = $popover.find('select[name="partA"]:first').select2({
                    placeholder: {
                        id: '',
                        text: ''
                    },
                    //allowClear: true,
                    language: "zh-CN",
                    minimumResultsForSearch: Infinity,
                    ajax: {
                        contentType: "application/json",
                        url: restApi.url_enterpriseSearch,
                        dataType: 'json',
                        type:'POST',
                        delay: 500,
                        data: function (params) {
                            var ret={
                                name: params.term // search term
                            };
                            return JSON.stringify(ret);
                        },
                        processResults: function (data, params) {
                            return {
                                results: $.map(data.data.details,function(o,i){
                                    return {
                                        id:o.companyid,
                                        text:o.corpname
                                    }
                                })
                            };
                        },
                        cache: true
                    }
                });
                if (!isNullOrBlank(that._projectInfo.partyACompany)) {//不为空，初始化select值
                    var $companyA = $('<option selected >' + that._projectInfo.partyACompany.companyName + '</option>').val(that._projectInfo.partyACompany.id);
                    $select_partA.append($companyA).trigger('change');
                }*/

                $popover.find('input#constructCompanyName').bind("input propertychange change focus",function(event){
                    var $this = $(this);
                    var txt = $this.val();
                    var mPartyALen = $('.m_partyA').length;
                    if ($.trim(txt) != '' && mPartyALen==0) {
                        var option = {};
                        option.$eleId = 'constructCompanyName';
                        $popover.find('.partyA-select-box').m_partyA(option);
                        $popover.find('.partyA-select-box').show();
                        that.documentBindFun();
                    }else if($.trim(txt)!=''){
                        $popover.find('.partyA-select-box').show();
                    }
                });

            };
            options.onSave = function ($popover) {
                var data = {};
                var enterpriseId = $popover.find('input[name="constructCompanyName"]').attr('data-id');
                var constructCompanyName = $popover.find('input[name="constructCompanyName"]').val();
                //if(!(that._projectInfo.partyACompany!=null && that._projectInfo.partyACompany.id==enterpriseId)){
                    that.saveProjectData(null, constructCompanyName, 'constructCompanyName');
                    return false;
                //}
            };
            $btn.m_popover(options, true);
            return false;
        }
        //window document事件绑定
        ,documentBindFun:function () {
            var that = this;
            $(document).bind('click',function(e){
                console.log('document event');
                if(!($(e.target).closest('.partyA-select-box').length>0 || $(e.target).hasClass('partyA-select-box') || $(e.target).hasClass('constructCompanyName'))){
                    $(that.element).find('.partyA-select-box').hide();
                }
            });
        }
        //给设计范围、设计阶段、地址绑定点击事件
        , bindEditItem: function () {
            var that = this;
            $(that.element).find('a[data-action],div[data-action]').on('click', function (event) {
                var action = $(this).attr('data-action');
                var data = {};
                var $this = $(this);
                switch (action){
                    case 'edit_designRange':
                        var options = {};
                        options.$projectId = that._projectInfo.id;
                        options.$projectDesignRange = that._projectInfo.projectRangeList;
                        options.$okCallBack = function (data) {
                            var obj = {};
                            obj.projectDesignRangeList = data;
                            if (!data || data.length < 1) {
                                obj.projectDesign = '1';//原有设计范围，后删空
                            } else {
                                obj.projectDesign = '0';//增改涉及范围
                            }
                            that.saveProjectData(null, obj, 'projectDesignRangeList');
                        };
                        $this.m_addProjectDesignRange(options);
                        break;

                    case 'edit_setDesignContentTime'://项目阶段12按钮绑定
                        that.bindTimeChangeRecord(this);
                        break;

                    case 'edit_signDate'://合同签订按钮绑定
                        var options = {};
                        options.$placement = 'right';
                        options.$eleId = 'a[data-action="edit_signDate"]';
                        options.$okCallBack = function ($data) {
                            that.saveProjectData(null, $data, 'signDate');
                        };
                        $this.m_quickDatePicker(options);
                        break;

                    case 'edit_projectCreateDate'://编辑立项时间
                        var options = {};
                        options.$title = '编辑立项时间';
                        options.$placement = 'right';
                        options.$eleId = 'a[data-action="edit_projectCreateDate"]';
                        options.$okCallBack = function ($data) {
                            that.saveProjectData(null, $data, 'projectCreateDate');
                        };
                        $this.m_quickDatePicker(options);
                        break;

                    case 'edit_address'://编辑地址按钮绑定

                        var options = {};
                        options.$title = '编辑';
                        if(that._projectInfo.projectLocation!=null){
                            options.$province = that._projectInfo.projectLocation.province;
                            options.$city = that._projectInfo.projectLocation.city;
                            options.$county = that._projectInfo.projectLocation.county;
                            options.$detailAddress = that._projectInfo.projectLocation.detailAddress;
                        }
                        options.$placement = 'top';
                        options.$okCallBack = function (data) {
                            if (data.province== '' && data.city== '' && data.detailAddress== '') {
                                S_toastr.warning('项目地点不能为空')
                            }else{
                                that.saveProjectData(null, data, 'address')
                            }
                        };
                        $(this).m_entryAddress(options);
                        break;

                    case 'edit_companyBidName'://编辑乙方
                        that.chosePartyBOrg($this);
                        break;

                    case 'edit_constructCompanyName'://编辑甲方
                        that.chosePartyAOrg($this);
                        break;

                    case 'edit_builtType'://功能分类
                        var option = {};
                        option.$title = '功能分类';
                        option.$dataDictionaryList = that._constructionCateList;
                        option.$dataList = that._projectInfo.buildTypeList;
                        option.$okCallBack = function (data) {
                            that.saveProjectData(null, data, 'changedBuiltTypeList');
                        };
                        $this.m_customDataDictionary(option);

                        break;

                    case 'edit_projectType'://项目类型

                        if(that._projectTypeList==null){
                            that.getProjectType(function (data) {
                                that.editProjectType(data,$this);
                            })
                        }else{
                            that.editProjectType(that._projectTypeList,$this);
                        }
                        return false;
                        break;
                }
                return false;
            })
        }

        , editProjectType : function (projectTypeList,$this) {
            var that = this;
            var projectType = that._projectInfo==null||that._projectInfo.projectType==null ||that._projectInfo.projectType.content==null?'':that._projectInfo.projectType.content;
            var options = {};
            options.popoverStyle = 'border: 0;border-radius: 0;box-shadow: none;position: relative;display: block;';
            options.contentStyle = 'padding:0;';
            options.type = 'inline';
            options.hideArrow = true;
            options.hideElement = true;
            options.content = template('m_project/m_popover_projectType', {projectTypeList:projectTypeList,projectType:projectType});
            options.onShown = function ($popover) {

                $popover.find('input[name="projectType"]').off('focus keyup').on('focus keyup',function () {
                    if($.trim($(this).val())!=''){
                        $popover.find('span.editable-clear-x').show();
                    }else{
                        $popover.find('span.editable-clear-x').hide();
                    }
                });
                $popover.find('input[name="projectType"]').focus();
                $popover.find('span.editable-clear-x').off('click').on('click',function () {
                    $popover.find('input[name="projectType"]').val('');
                    $popover.find('span.editable-clear-x').hide();
                });
                $popover.find('button[data-toggle]').off('click').on('click',function () {
                    $popover.find('ul.dropdown-menu').toggle();
                });
                $popover.find('ul>li>a').off('click').on('click',function () {
                    var name = $(this).text();
                    $popover.find('input[name="projectType"]').val(name);
                    $popover.find('ul.dropdown-menu').toggle();
                });

            };
            options.onSave = function ($popover) {
                var projectType = $popover.find('input[name="projectType"]').val();
                if($.trim(projectType)==''){
                    $popover.find('form').append('<div class="editable-error-block help-block" style="display: block;">项目类型不能为空！</div>');
                    return false;
                }else{
                    that.saveProjectData(null, projectType, 'projectType');
                }

            };
            $this.m_popover(options, true);
        }
        //获取项目类型
        ,getProjectType:function (callBack) {
            var that = this;
            var option  = {};
            option.url = restApi.url_projectType;
            option.postData = {};
            m_ajax.postJson(option,function (response) {
                if(response.code=='0'){
                    that._projectTypeList = response.data;
                    if(callBack!=null){
                        return callBack(response.data);
                    }
                }else {
                    S_dialog.error(response.info);
                }
            })
        }


        //'设置进度'/'进度变更'按钮事件绑定
        , bindTimeChangeRecord: function (obj) {
            var that = this;
            var contentIndex = $(obj).closest('.designContentDiv').attr('data-i');
            var contentObj = that._designContentAncestors[contentIndex];
            var timeList = contentObj.projectProcessTimeEntityList;
            if (timeList == null) {
                contentObj.projectProcessTimeEntityList = [];
            }
            var options = {};
            if ($.trim($(obj).html()) == '未设置合同进度') {
                options.$isHaveMemo = false;
                options.$timeInfo = {};
                options.$timeInfo.startTime = (timeList && timeList.length > 0) ? timeList[0].startTime : '';
                options.$timeInfo.endTime = (timeList && timeList.length > 0) ? timeList[0].endTime : '';
                options.$title = '设置进度';
                options.$okText = '保存';
                options.$validate = 1;
                options.$okCallBack = function (data) {
                    if (data != null) {
                        var obj = data;
                        obj.targetId = contentObj.id;
                        obj.type = 1;
                        that.saveProjectProcessTime(obj);
                    }
                };
                $('body').m_inputProcessTime(options);
            } else {
                options.$isHaveMemo = false;
                var designContentArr = [];
                var contentObjClone = jQuery.extend(true, {}, contentObj);
                designContentArr.push(contentObjClone);
                options.$designContentList = designContentArr;
                options.$okCallBack = function (data, returnType) {
                    if (data != null) {
                        var obj = data;
                        obj.targetId = contentObj.id;
                        obj.type = 1;
                        that.saveProjectProcessTime(obj);
                    }
                };
                $('body').m_editDesignContent(options);
            }
        }
        //绑定设计阶段Checkbox的触发事件
        , bindDesignContentCheckbox: function () {
            var that = this;
            var resetCheck = function ($el, checked) {
                $el.prop('checked', checked);
                var $icheck = $el.iCheck({
                    checkboxClass: 'icheckbox_minimal-green',
                    radioClass: 'iradio_minimal-green'
                });
                $icheck.off('ifUnchecked.s').on('ifUnchecked.s', ifUnchecked);
                $icheck.off('ifChecked.s').on('ifChecked.s', ifChecked);
            };
            var ifChecked = function (e) {
                var $this = $(this);
                var i = $(this).closest('.designContentDiv').attr('data-i');
                that._designContentList[i].isChecked = 1;
                var designContentList = that.dealChoseDesignContent(that._designContentList);
                that.saveProjectData(null, designContentList, 'projectDesignContentList');
            };

            var ifUnchecked = function (e) {
                var $this = $(this);
                var i = $(this).closest('.designContentDiv').attr('data-i');
                var isHas = $this.attr('data-isHas');
                var isAllUnchecked = $this.closest('div.projectDesignContent').find('input.checkbox[name="designContent"]:checked').length < 1 ? true : false;
                if (!isNullOrBlank(isHas) && isHas === '0') {
                    S_toastr.success('该设计内容存在签发分解任务，不能删除！');
                    resetCheck($this, true);
                }
                /*else if (isAllUnchecked) {
                    S_toastr.warning('请至少选择一个设计内容！');
                    resetCheck($this, true);
                } */
                else {
                    resetCheck($this, true);
                    S_swal.confirm({
                        title:'确定取消该设计内容？',
                        text:'该设计内容取消后将不能恢复，确定吗？',
                        callBack:function () {
                            var id = $this.closest('.designContentDiv').attr('data-id');
                            that.deleteProjectTask(id,function(){
                                $this.closest('.designContentDiv').remove();
                                S_swal.sure({
                                    title:'已取消',
                                    text:'该设计内容已取消。'
                                });
                            });
                            resetCheck($this, false);
                        }
                    });
                }
            };

            $('.i-checks input[name="designContent"]').iCheck({
                checkboxClass: 'icheckbox_minimal-green',
                radioClass: 'iradio_minimal-green'
            }).on('ifUnchecked.s', ifUnchecked).on('ifChecked.s', ifChecked);
        }
        //处理已选上的设计内容
        , dealChoseDesignContent: function (list) {
            var that = this;
            var designContentList = [];
            var idString = '';//原有的设计内容的id集合，用于判断保存时是否传递该内容
            $.each(that._designContentAncestors, function (j, obj) {
                idString += obj.id + ',';
            });
            $.each(list, function (i, item) {
                if (item.isChecked == 1) {
                    if (idString.indexOf(item.designContentId) < 0) {
                        item.contentId = item.contentId ? item.contentId : item.id;
                        item.id = null;
                    }
                    item.contentName = item.contentName ? item.contentName : item.name;
                    item.insertStatus = '0';
                    designContentList.push(item);
                } else if (idString.indexOf(item.designContentId) > -1) {
                    item.insertStatus = '1';//删除某一设计内容时
                    designContentList.push(item);
                }
            });
            return designContentList;
        }
        //更新设计内容时间html
        , designContentTimeHtml: function (obj, contentIndex) {
            var that = this;
            var contentObj = that._designContentList[contentIndex];
            var iHtml = '';
            var startTime = '', endTime = '';
            if (contentObj.projectProcessTimeEntityList && contentObj.projectProcessTimeEntityList.length > 0) {
                var len = contentObj.projectProcessTimeEntityList.length;
                startTime = contentObj.projectProcessTimeEntityList[len - 1].startTime;
                endTime = contentObj.projectProcessTimeEntityList[len - 1].endTime;
            }
            if (startTime != null && startTime != '') {
                iHtml += startTime;
            }
            if (endTime != null && endTime != '') {
                iHtml += '~' + endTime;
            }
            if (startTime != null && startTime != '' && endTime != null && endTime != '') {
                iHtml += (' 共' + (diffDays(startTime, endTime) - 0 + 1) + '天');
            }
            // $(obj).closest('.designContentDiv').find('.timeSpan').html(iHtml);
            $(obj).text(iHtml);
            that._designContentList[contentIndex] = contentObj;
        }
        //在位编辑内容初始化
        , bindEditable: function () {
            var that = this;
            var elements = $(that.element).find('td a[data-action]:not([data-action="addDesignContent"],[data-action="customInfoTemp"],[data-action="delFile"])');


            elements.each(function () {
                var $this = $(this),
                    obj = null,
                    action = $this.attr('data-action') ? $this.attr('data-action') : $this.closest('td').attr('data-action'),
                    type = action.indexOf("_") > -1 ? action.split("_")[0] : 'text',
                    name = action.indexOf("_") > -1 ? action.split("_")[1] : 'text',
                    isNumber = $this.attr('data-isNum') == 'number' ? true : false,//判断输入内容是否是数字
                    isProjectName = name == 'projectName' ? true : false,//判断输入内容是否是项目名称
                    noPoint = $this.attr('data-isNoPoint') == 'noPoint' ? true : false,//判断输入内容是否是数字
                    source = '',//当为下拉框类型时
                    content = $this.text(),//输入的内容
                    title = $this.closest('td').prev('td').text();//输入的内容
                if (type != 'edit') {//主要是除设计范围跟设计内容以外的信息
                    switch (name) {//当需要多个输入框时，需设置各个value值
                        case 'status':
                            obj = {
                                type: type
                                , name: name
                                , value: $('a[data-action="select_status"]').attr('data-status')
                                , mode: 'inline'
                                , source: [
                                    {value: 0, text: '进行中'},
                                    {value: 2, text: '已完成-未结清'},
                                    {value: 4, text: '已完成-已结清'},
                                    {value: 1, text: '已暂停-未结清'},
                                    {value: 5, text: '已暂停-已结清'},
                                    {value: 3, text: '已终止-未结清'},
                                    {value: 6, text: '已终止-已结清'}
                                ]
                                , success: function (response, newValue) {
                                    if (newValue === void 0 || newValue === null)
                                        return false;
                                    that.saveProjectData(response, newValue, name);
                                }
                            };
                            break;
                        /*case 'constructCompanyName':
                            obj = {
                                name: name
                                , type: type
                                , value: $.trim($('a[data-action="typeaheadjs_constructCompanyName"]').text())
                                , mode: 'inline'
                                , clear: true
                                , typeahead: {
                                    name: name,
                                    local: []//that._constructCompanyList
                                }
                                , success: function (response, newValue) {
                                    var text = $this.next().find('input.tt-query').next().text();
                                    newValue = text;
                                    that.saveProjectData(response, newValue, name);
                                },validate:function(value){

                                    if ($.trim(value) == ''){
                                        var text = $this.text();
                                        if(text =='未设置' ){
                                            return "请输入甲方名称！";
                                        };
                                        return "甲方名称不能为空！";
                                    }
                                }
                                , display: function (newValue) {
                                    if (newValue == '') {
                                        $this.next('未设置');
                                    }
                                }
                            };

                            break;*/
                    }
                    if (!obj) {
                        $this.editable({
                            type: type
                            , name: name
                            , mode: 'inline'
                            , placeholder: '请输入' + title
                            , source: source
                            , value: content
                            , emptytext: ''
                            , success: function (response, newValue) {

                                if(name && name=='designContentName') {

                                    //var id = $this.attr('data-id');
                                    //that._saveDesignContent(newValue,id);

                                }else if(name && name.indexOf('propertyField')>-1){//当为field时，自定义属性值保存

                                    var fieldId = $this.attr('data-field-id');
                                    if(name.indexOf('propertyFieldDown')>-1){
                                        var upStoreys = $(that.element).find('a[data-action^="text_propertyFieldUp"]').attr('data-field-value');
                                        newValue = newValue+';'+upStoreys;
                                    }else if(name.indexOf('propertyFieldUp')>-1){
                                        var downStoreys = $(that.element).find('a[data-action^="text_propertyFieldDown"]').attr('data-field-value');
                                        newValue = downStoreys+';'+newValue;
                                    }
                                    that.saveProjectPropertyFieldValue(response,newValue,fieldId,name);

                                }else{
                                    that.saveProjectData(response, newValue, name);
                                }
                            }
                            , validate: (isNumber && function (value) {
                                if ($.trim(value) != '') {
                                    var reg = /^[0-9]+(\.[0-9]{1,2})?$/;
                                    if (!reg.test(value)) return "请输入数字，小数位保留2位！";
                                }
                            }) || (noPoint && function (value) {
                                if ($.trim(value) != '') {
                                    var reg = /^[0-9]*[1-9][0-9]*$/;
                                    if (!reg.test(value)) return "请输入整数！";
                                }
                            }) || (isProjectName && function (value) {//
                                if ($.trim(value) == '') {
                                    return "项目名称不能为空！";
                                }
                            }) || (name == 'designContentName' && function(value){
                                if ($.trim(value) == '') {
                                    S_toastr.warning("设计内容不能为空！");
                                    return ' ';
                                }
                            })
                        });
                    } else {
                        if(obj.name==='constructCompanyName'){
                            $this.editable(obj).on('shown',function(e,editable){
                                //editable.input.$input.val(editable.value);

                            });
                        }else{
                            $this.editable(obj);
                        }
                    }
                }
                elements.off('click.clearEditable').on('click.clearEditable', function (event) {
                    var action = $(this).attr('data-action');
                    $(that.element).find('.editable-container,.popover.m-popover').each(function () {
                        if ($(this).parent().find('a').attr('data-action') != action) {
                            if($(this).find('button.editable-cancel').length>0){
                                $(this).find('button.editable-cancel').click();
                            }else{
                                $(this).find('button.m-popover-close').click();
                            }

                        }
                    });
                    if (action && action.indexOf('designContentName')>-1) {
                        $(this).closest('label.i-checks').iCheck('disable');
                    }


                    return false;
                });
                //显示x-editable事件shown
                $this.on('shown', function(e, editable) {
                    var unitName = $(this).attr('data-field-unit');
                    if(unitName!=undefined){
                        $this.parent().find('.unit-span').hide();
                        $this.next().find('.editable-input input').css('padding-right','36px');
                        $this.next().find('.editable-input').append('<span class="unit-span-in">'+unitName+'</span>');
                    }
                });
                //点击x-editable cancel事件
                $this.on('hidden', function(e, reason) {
                    if(reason === 'cancel') {
                        var unitName = $(this).attr('data-field-unit');
                        if(unitName!=undefined){
                            $this.parent().find('.unit-span').show();
                        }
                    }
                });
                if (action && action.indexOf('designContentName')>-1) {
                    elements.on('hidden', function (e, reason) {
                        $(this).closest('label.i-checks').iCheck('enable');
                    });
                }

                that.dealEmptyText();//当在为编辑的文本显示为empty时，改为“请设置”
            });

        }

        //绑定添加自定义阶段事件
        , bindBtnAddDesignContent:function () {
            var that=this,contentList = that._designContentList;
            $(that.element).find('a[data-action="addDesignContent"]').on('click',function(e){
                var options = {};
                var $that = $(this);
                options.$title = '添加设计任务';
                options.designContentNameList = [];
                $(that.element).find('.designContentDiv').each(function(){
                    var text = $.trim($(this).find('div>span').text());
                    options.designContentNameList.push(text);

                });
                options.onShown = function(data){

                    setTimeout(function(){
                    var p_left = $that.next('.popover.m-popover').css('left').replace('px','')-0;
                    if(p_left>1000){
                            $that.next('.popover.m-popover').css('left','1070px');
                    }
                    },50);
                };
                options.callBack = function(data){
                    that._saveDesignContent(data);

                };
                $(this).m_projectDesignContent_add(options);
                //stopPropagation(e);
            });
            $(that.element).find('a[data-action="addDesignContent"]').on('click.bindClear', function (e) {

                var $this = $(this);
                var $$this = $this.closest('LI').find('.editable-container input.form-control');
                $$this.unbind();
                that.dealDesignContent($this,$$this,contentList);
                $this.closest('LI').find('.editable-container input.form-control').on('click',function () {
                    that.dealDesignContent($this,$$this,contentList);
                });
                stopPropagation(e);
            });
        }
        //提交保存设计阶段
        ,_saveDesignContent: function(data) {
            var that = this;
            var options = {};
            options.url = restApi.url_saveOrUpdateProjectDesign;
            data.projectId = that.settings.$projectId;
            data.companyId = that._currentCompanyId;
            options.postData = data;
            m_ajax.postJson(options, function (response) {
                if (response.code == '0') {
                    S_toastr.success('保存成功！');
                    if(that.settings.$okBackCall!=null){
                        that.settings.$okBackCall();
                    }
                    that._refresh();
                } else {
                    S_dialog.error(response.info);
                }
            });
        }
        //阶段预选展示处理
        , dealDesignContent : function($this,$$this,contentList){

            if (contentList != null && contentList.length > 0 && $this.closest('LI').find('.tt-dropdown-menu,.tt-dataset-designContent').css('display')=='none') {

                var iHtml = '<div class="tt-dataset-designConten"><div class="tt-suggestions">';

                for (var i = 0; i < contentList.length; i++) {
                    iHtml += '<div class="tt-suggestion" style="white-space: nowrap; cursor: pointer;">' +
                        '<p style="white-space: normal;">' + contentList[i].name + '</p></div>';
                }
                iHtml += '</div></div>';

                $this.closest('LI').find('.tt-dropdown-menu').html(iHtml).show();
                $this.next('.editable-container').find('.editable-input .twitter-typeahead input.form-control').attr('placeholder','输入或选择要添加的设计内容');
                $this.closest('LI').find('.tt-dropdown-menu .tt-suggestions').find('.tt-suggestion').on('click', function () {
                    var t = $(this).find('p').text();
                    $$this.val(t);
                    $$this.next().text(t);
                    $this.closest('LI').find('.tt-dropdown-menu,.tt-dataset-designContent,.tt-suggestions').hide();
                });
            }else{
                return false;
            }
        }

        //保存进度时间到后台
        , saveProjectProcessTime: function (obj) {
            var that = this;
            var options = {};
            options.url = restApi.url_saveOrUpdateProjectProcessTime;
            options.postData = obj;
            options.postData.projectId = that._projectInfo.id;
            m_ajax.postJson(options, function (response) {
                if (response.code == '0') {

                    S_toastr.success('保存成功！');
                    that._refresh();
                } else {
                    S_dialog.error(response.info);
                }
            });
        }
        //保存基本信息时访问到后台
        , saveProjectData: function (res, value, name, callback) {
            var that = this;
            var options = {};
            options.url = restApi.url_project;
            options.classId = '#project_detail';
            options.postData = {};
            if (typeof value == "object" && !value && !name) {
                options.postData = value;
            }
            else if (name && name == 'partyB') {
                options.postData.companyBid = value.companyBid;
                options.postData.flag = 3;
            }
            else if (name && name == 'projectDesignRangeList') {

                options.postData.projectDesignRangeList = value.projectDesignRangeList;
                options.postData.projectDesign = value.projectDesign;
            }
            else if (name && name == 'investmentEstimation') {
                options.postData.flag = 1;
                options.postData[name] = value;
            }
            else if (name && name == 'constructCompanyName') {
                options.postData.flag = 2;
                options.postData.constructCompanyName = value;
            }
            else if(name && name == 'address'){
                options.postData.province = value.province;
                options.postData.city = value.city;
                options.postData.county = value.county;
                options.postData.detailAddress = value.detailAddress;
            }
            else if(name && name == 'signDate'){
                options.postData.flag = 4;
                options.postData[name] = value;
            }
            else {
                options.postData[name] = value;
            }
            options.postData.id = that._projectInfo.id;

            m_ajax.postJson(options, function (response) {
                if (response.code == '0') {
                    $(that.element).m_projectBasicInfo({
                        $projectId: that.settings.$projectId,
                        $editFlag:that.settings.$editFlag,
                        $deleteFlag:that.settings.$deleteFlag
                    });
                    if(!(name && name == 'partyB')){//乙方已有swal弹窗提示
                        S_toastr.success('保存成功！');
                    }

                    if (callback) {
                        return callback();
                    }
                } else {
                    S_dialog.error(response.info);
                }
            });
        }

        //保存自定义属性值
        ,saveProjectPropertyFieldValue:function (res,newValue,fieldId,name) {
            var that = this;
            var options = {};
            options.url = restApi.url_saveProjectField;
            options.postData = {};
            options.postData.projectId = that._projectInfo.id;
            options.postData.operatorId = that._currentUserId;
            options.postData.id = fieldId;
            options.postData.fieldValue = newValue;
            m_ajax.postJson(options, function (response) {
                if (response.code == '0') {
                    S_toastr.success('保存成功！');
                    that._refresh();
                } else {
                    S_dialog.error(response.info);
                }
            });
        }

        //删除项目阶段
        , deleteProjectTask: function (id,callback) {
            var that = this;
            var options = {};
            options.url = restApi.url_deleteProjectDesign;
            options.postData = {};
            options.postData.id = id;
            m_ajax.postJson(options, function (response) {
                if (response.code == '0') {
                    //S_toastr.success('保存成功！');
                    if(callback){
                        return callback();
                    }
                } else {
                    S_dialog.error(response.info);
                }
            });
        }

        //保存乙方验证
        , _savePartyB_validate: function (ele) {
            var that = this, $ele = $(ele);
            $ele.find('form').validate({
                rules: {
                    operator: {
                        operatorCk: true
                    }
                },
                messages: {
                    operator: {
                        operatorCk: '请选择经营负责人！'
                    }
                },
                errorPlacement: function (error, element) { //指定错误信息位置
                    error.appendTo(element.closest('.form-group'));
                    error.css({'margin-left':'0px'});
                }
            });
            $.validator.addMethod('operatorCk', function (value, element) {
                var isTrue = false;
                var partB = $ele.find('select[name="partB"]');
                if (partB.val() == null || partB.val() == '' || (partB.val() != null && partB.val() != '' && value != null && value != '')) {
                    isTrue = true;
                }
                return isTrue;
            }, '请选择经营负责人！');
        }
        //绑定自定义编辑信息模板事件
        ,bindCustomInfoTemp:function () {

            var that = this;
            $(that.element).find('a[data-action="customInfoTemp"]').on('click',function () {
                var option = {};
                option.$projectId = that._projectInfo.id;
                option.$okCallBack = function () {
                    that._refresh();
                };
                $('body').m_editCustomPropertyTemp(option);
            });
        }
        //刷新当前菜单
        , _refreshMenu: function () {
            var that=this;
            /*var option = {};
            option.$projectId = that.settings.$projectId;
            $('#project_menu').m_projectMenu(option);*/
            that._refresh();
        }
        //刷新当前界面
        , _refresh: function () {
            var option = {}, that = this;
            option.$projectId = that.settings.$projectId;
            option.$editFlag = that.settings.$editFlag;
            option.$deleteFlag = that.settings.$deleteFlag;
            option.$renderCallBack = function () {
                if(that.settings.$deleteFlag!=1){//不存在删除项目的权限，删除此按钮
                    $('#project_detail a[data-action="deleteProject"]').remove();
                }
            };
            $('#content-right').m_projectBasicInfo(option,true);
        }

    });

    $.fn[pluginName] = function (options) {
        return this.each(function () {

            //if (!$.data(this, "plugin_" + pluginName)) {
            $.data(this, "plugin_" +
                pluginName, new Plugin(this, options));
            //}
        });
    };

})(jQuery, window, document);

/**
 * 任务签发－添加设计内容
 * Created by wrb on 2017/5/15.
 */
;(function ($, window, document, undefined) {

    "use strict";
    var pluginName = "m_projectDesignContent_add",
        defaults = {
            $title:'添加设计任务',
            designContentNameList:null,
            onShown:null,
            callback:null
        };

    // The actual plugin constructor
    function Plugin(element, options) {
        this.element = element;

        this.settings = $.extend({}, defaults, options);
        this._defaults = defaults;
        this._name = pluginName;
        this._currentCompanyId = window.currentCompanyId;//当前组织ID
        this.init();
    }

    // Avoid Plugin.prototype conflicts
    $.extend(Plugin.prototype, {
        init: function () {
            var that = this;
            that._initHtml();
        }
        //初始化数据,生成html
        ,_initHtml:function () {
            var that = this;
            var options = {};

            /*var left = $(that.element).position().left;
            console.log(left)
            if(parseInt(left)>600){
                //options.placement = 'right';
            }*/
            options.placement = 'top';
            options.content = template('m_project/m_projectDesignContent_add');
            options.titleHtml = '<h3 class="popover-title">'+that.settings.$title+'</h3>';
            options.onShown = function ($popover) {


                var option = {};
                option.$isDialog = false;
                option.$isHaveMemo = false;
                $popover.find('#time-box').m_inputProcessTime(option);
                that._saveDesignContentName_validate($popover);
                //that._saveDesignContentTime_validate($popover);


            };
            options.onSave = function ($popover) {

                var flag1 = $($popover).find('form.designContentNameOBox').valid();
                //var flag2 = $($popover).find('form.inputTimeOBox').valid();
                if (!flag1) {
                    return false;
                }else {
                    var data = {};
                    data.contentName = $popover.find('input[name="designContentName"]').val();
                    var startTime = $popover.find('input[name="startTime"]').val();
                    var endTime = $popover.find('input[name="endTime"]').val();
                    if(startTime!=undefined && startTime!=''){
                        data.startTime = startTime;
                    }
                    if(endTime!=undefined && endTime!=''){
                        data.endTime = endTime;
                    }
                    if(that.settings.callBack){
                        return that.settings.callBack(data);
                    }
                }
            };

            $(that.element).m_popover(options,true);
            if(that.settings.onShown){
                return that.settings.onShown();
            }

        }
        //验证
        ,_saveDesignContentName_validate:function($popover){
            var that = this;
            $popover.find('form.designContentNameOBox').validate({
                rules: {
                    designContentName:{
                        required:true,
                        notConflict:true
                    }
                },
                messages: {
                    designContentName:{
                        required:'设计内容不能为空!',
                        notConflict:'设计内容不能重复!'
                    }
                }
            });
            $.validator.addMethod('notConflict', function(value, element) {
                var list = that.settings.designContentNameList;
                var error = true;
                if(list&&list.length>0){
                    for(var i=0;i<list.length;i++){
                        if(list[i]==value){
                            error = false;
                            break;
                        }
                    }
                }
                return error;
            }, '阶段名称不能重复!');
        }
        ,_saveDesignContentTime_validate:function($popover){
            var that = this;
            $popover.find('form.inputTimeOBox').validate({
                rules: {
                    startTime:{
                        required:true
                    },
                    endTime:{
                        required:true
                    }

                },
                messages: {
                    startTime:{
                        required:'请设置开始日期!'
                    },
                    endTime:{
                        required:'请设置结束日期!'
                    }
                }
                ,errorPlacement: function (error, element) { //指定错误信息位置
                    if (element.hasClass('timeInput')) {
                        error.appendTo(element.closest('.form-group'));
                    } else {
                        error.insertAfter(element);
                    }
                }
            });

        }
    });

    $.fn[pluginName] = function (options) {
        return this.each(function () {

            //if (!$.data(this, "plugin_" + pluginName)) {
            $.data(this, "plugin_" +
                pluginName, new Plugin(this, options));
            //}
        });
    };
})(jQuery, window, document);

/**
 * 项目左边菜单导航
 * Created by wrb on 2016/12/22.
 */
;(function ($, window, document, undefined) {

    "use strict";
    var pluginName = "m_projectMenu",
        defaults = {
            $projectId:null,//项目ID
            $projectName:null,//项目名称
            $isFirstEnter:null,//是否是第一次进来
            $dataAction:null,
            $type:null//标签页标识
        };

    // The actual plugin constructor
    function Plugin(element, options) {
        this.element = element;

        this.settings = $.extend({}, defaults, options);
        this._defaults = defaults;
        this._name = pluginName;

        this._contractPaymentFlag = null;
        this._technicalReviewFlag = null;
        this._cooperativeDesignFlag = null;
        this._otherFeeFlag = null;
        this._projectDeleteFlag = null;
        this._projectEditFlag = null;
        this._managerFlag = null;

        this.init();
    }

    // Avoid Plugin.prototype conflicts
    $.extend(Plugin.prototype, {
        init: function () {
            var that = this;

            that.getRoleFun(function () {

                var html = template('m_project/m_projectMenu',{
                    id:that.settings.$projectId,
                    projectName:encodeURI(that.settings.$projectName),
                    contractPaymentFlag:that._contractPaymentFlag,
                    technicalReviewFlag:that._technicalReviewFlag,
                    cooperativeDesignFlag:that._cooperativeDesignFlag,
                    otherFeeFlag:that._otherFeeFlag
                });
                //rolesControl();
                $(that.element).find('ul.nav-second-level').remove();
                $(that.element).append(html);
                $(that.element).addClass('chosed');//添加选中标识

                if(that.settings.$dataAction!=null){
                    that.switchPage(that.settings.$dataAction);
                    var currentEle = $('.m_metismenu li a[id="'+that.settings.$dataAction+'"]');
                    if(currentEle.length>0){
                        $('.m_metismenu li').removeClass('active');
                        currentEle.parent().addClass('active');
                    }
                }else{
                    $(that.element).find('.m_metismenu li:first a').click();
                }
                that.menuClickFun();

            })
        }
        ,getRoleFun:function (callBack) {
            var that = this;
            var option={};
            option.url=restApi.url_getProjectNavigationRole+'/'+that.settings.$projectId;
            m_ajax.get(option,function (response) {
                if(response.code=='0'){
                    that._contractPaymentFlag = response.data.flag1;
                    that._technicalReviewFlag = response.data.flag2;
                    that._cooperativeDesignFlag = response.data.flag3;
                    that._otherFeeFlag = response.data.flag4;
                    that._projectDeleteFlag = response.data.deleteFlag;
                    that._projectEditFlag = response.data.editFlag;
                    that._managerFlag = response.data.managerFlag;
                    if(response.data.projectName!=null && response.data.projectName!=''){
                        that.settings.$projectName = response.data.projectName;
                    }
                    if(callBack!=null){
                        callBack();
                    }

                }else {
                    S_dialog.error(response.info);
                }
            })
        }

        //菜单点击事件
        , menuClickFun:function () {
            var that = this;
            $(that.element).find('.nav-second-level li a').off('click').on('click',function (e) {
                var id = $(this).attr('id');
                $('.m_metismenu li').removeClass('active');
                $(this).parent().addClass('active');
                stopPropagation(e);
            });
        }
        //切换页面
        , switchPage: function (dataAction) {
            var that = this;
            switch (dataAction) {
                case 'basicInfo':
                    that.projectBasicInfo();
                    break;
                case 'taskIssue':
                    that.taskIssue();
                    break;
                case 'productionArrangement':
                    that.productionArrangement();
                    break;
                case 'contractPayment':
                    that.contractPayment();
                    break;
                case 'technicalReviewFee':
                    that.technicalReviewFee();
                    break;
                case 'cooperativeDesignFee':
                    that.cooperativeDesignFee();
                    break;
                case 'otherFee':
                    that.otherFee();
                    break;
                case 'projectDocumentLib':
                    that.projectDocumentLib();
                    break;
                case 'projectMember':
                    that.projectMember();
                    break;
                case 'projectDynamic':
                    that.projectDynamic();
                    break;
                case 'externalCooperation':
                    that.externalCooperation();
                    break;
                case 'taskIssueOverview':
                    that.taskIssueOverview();
                    break;
                case 'productionArrangementOverview':
                    that.productionArrangementOverview();
                    break;
                case 'incomeExpenditure':
                    that.incomeExpenditure();
                    break;
                case 'cost':
                    that.cost();
                    break;
                default:
                    dataAction = 'basicInfo';
                    that.projectBasicInfo();
                    break;
            }
        }
        //项目基本信息
        , projectBasicInfo: function () {
            var option = {}, that = this;
            option.$projectId = that.settings.$projectId;
            option.$projectName = that.settings.$projectName;
            option.$editFlag = that._projectEditFlag;
            option.$deleteFlag = that._projectDeleteFlag;
            option.$renderCallBack = function () {
                if(that._projectDeleteFlag!=1){//不存在删除项目的权限，删除此按钮
                    $('#content-right a[data-action="deleteProject"]').remove();
                }
            };
            $('#content-right').m_projectBasicInfo(option,true);
        }
        //任务签发
        , taskIssue: function () {
            var option = {}, that = this;
            option.$projectId = that.settings.$projectId;
            option.$projectName = that.settings.$projectName;
            $('#content-right').m_taskIssue(option,true);
        }
        //生产安排
        , productionArrangement: function () {
            var option = {}, that = this;
            option.$projectId = that.settings.$projectId;
            option.$projectName = that.settings.$projectName;
            $('#content-right').m_production(option,true);
        }
        //合同回款
        , contractPayment: function () {
            var option = {}, that = this;
            option.$projectId = that.settings.$projectId;
            option.$projectName = that.settings.$projectName;
            $('#content-right').m_contractPayment(option,true);
        }
        //技术审查费
        , technicalReviewFee: function () {
            var option = {}, that = this;
            option.$projectId = that.settings.$projectId;
            option.$projectName = that.settings.$projectName;
            $('#content-right').m_technicalReviewFee(option,true);
        }
        //合作设计费
        , cooperativeDesignFee: function () {
            var option = {}, that = this;
            option.$projectId = that.settings.$projectId;
            option.$projectName = that.settings.$projectName;
            $('#content-right').m_cooperativeDesignFee(option,true);
        }
        //其他费用
        , otherFee: function () {
            var option = {}, that = this;
            option.$projectId = that.settings.$projectId;
            option.$projectName = that.settings.$projectName;
            $('#content-right').m_otherFee(option,true);
        }
        //项目文档
        , projectDocumentLib: function () {
            var option = {}, that = this;
            option.$projectId = that.settings.$projectId;
            option.$projectName = that.settings.$projectName;
            $('#content-right').m_docmgr(option,true);
        }
        //项目成员
        , projectMember: function () {
            var option = {}, that = this;
            option.$projectId = that.settings.$projectId;
            option.$projectName = that.settings.$projectName;
            $('#content-right').m_projectMember(option,true);
        }
        //项目动态
        , projectDynamic: function () {
            var option = {}, that = this;
            option.$projectId = that.settings.$projectId;
            option.$projectName = that.settings.$projectName;
            $('#content-right').m_projectDynamic(option,true);
        }
        //外部合作
        , externalCooperation:function () {
            var option = {}, that = this;
            option.$projectId = that.settings.$projectId;
            option.$projectName = that.settings.$projectName;
            option.$isManager = that._managerFlag;
            $('#content-right').m_projectExternalCooperation(option,true);
        }
        //签发总览
        , taskIssueOverview:function () {
            var option = {}, that = this;
            option.$projectId = that.settings.$projectId;
            option.$projectName = that.settings.$projectName;
            $('#content-right').m_taskIssue_overview(option,true);
        }
        //生产安排总览
        , productionArrangementOverview:function () {
            var option = {}, that = this;
            option.$projectId = that.settings.$projectId;
            option.$projectName = that.settings.$projectName;
            $('#content-right').m_production_overview(option,true);
        }
        //收支管理
        , incomeExpenditure:function () {

            var option = {}, that = this;
            that.getRoleFun(function () {

                option.$projectId = that.settings.$projectId;
                option.$projectName = that.settings.$projectName;
                option.$roleFlag = {
                    contractPaymentFlag : that._contractPaymentFlag,
                    technicalReviewFlag : that._technicalReviewFlag,
                    cooperativeDesignFlag : that._cooperativeDesignFlag,
                    otherFeeFlag : that._otherFeeFlag
                };
                option.$type = that.settings.$type;
                $('#content-right').m_incomeExpenditure(option);
            });

            return false;
        }
        //收支管理
        ,cost:function () {
            var option = {}, that = this;
            option.projectId = that.settings.$projectId;
            option.projectName = that.settings.$projectName;
            option.dataAction = that.settings.$type;
            $('#content-right').m_cost_menu(option,true);
        }



    });

    $.fn[pluginName] = function (options) {
        return this.each(function () {

            //if (!$.data(this, "plugin_" + pluginName)) {
            $.data(this, "plugin_" +
                pluginName, new Plugin(this, options));
            //}
        });
    };

})(jQuery, window, document);



/**
 * Created by Wuwq on 2017/1/5.
 */
;(function ($, window, document, undefined) {

    "use strict";
    var pluginName = "m_inviteCooperation",
        defaults = {
            a_companyName: null,
            a_systemManager: null,
            cellphone: null,
            userId: null
        };

    function Plugin(element, options) {
        this.element = element;

        this.settings = options;
        this._defaults = defaults;
        this._name = pluginName;
        this.init();
    }

    $.extend(Plugin.prototype, {
        init: function () {
            var that = this;
            that._render();
        }
        //渲染首屏
        , _render: function () {
            var that = this;

            var option = {};
            option.url = restApi.url_getCompanyByInviteUrl + '/' + $('#invitedId').val();
            option.classId = '.div-invite-bPaner';
            option.postData = {};
            m_ajax.postJson(option, function (response) {
                if (response.code == '0') {
                    that.settings.a_companyName = response.data.companyName;
                    that.settings.a_systemManager = response.data.systemManager;
                    var data = {};
                    data.companyName = response.data.companyName;
                    data.filePath = response.data.filePath;
                    data.systemManager = response.data.systemManager;
                    data.cellphone = response.data.cellphone;
                    data.projcetName=response.data.projectName;
                    var html = template('m_projectExternalCooperation/m_inviteCooperation', data);
                    $(that.element).html(html);
                    that._bindKeyDownEnter();
                    that._bindAction();
                } else {
                    S_dialog.tips(response.info);
                }
            });
        }
        //回车键
        , _bindKeyDownEnter: function () {
            var that = this;
            $('#cellphone').keydown(function (e) {
                if (event.keyCode == 13) {
                    that._verify();
                    stopPropagation(e);
                    preventDefault(e);
                    return false;
                }
            });
        }
        , _bindAction: function () {
            var that = this;
            $(that.element).find('.btn-ok:eq(0)').click(function () {
                that._verify();
            });
        }
        //验证手机号
        , _verify: function () {
            var that = this;
            var invitedId = $('#invitedId').val();
            that.settings.cellphone = $('#cellphone').val();

            var option = {};
            option.url = restApi.url_verifyIdentityForBPartner;
            option.classId = '.div-invite-bPaner';
            option.postData = {id: invitedId, cellphone: that.settings.cellphone};
            m_ajax.postJson(option, function (response) {
                if (response.code === '0') {
                    that._renderOrg();
                } else {
                    S_dialog.tips(response.info);
                }
            });
        }
        //渲染团队选择页面
        , _renderOrg: function () {
            var that = this;

            var invitedId = $('#invitedId').val();

            var option = {};
            option.url = restApi.url_getCompanyPrincipal;
            option.classId = '.div-invite-bPaner';
            option.postData = {id: invitedId, cellphone: that.settings.cellphone};
            m_ajax.postJson(option, function (response) {
                if (response.code === '0') {
                    if (response.data.companyList) {
                        if (response.data.companyList.length > 0) {
                            var a=response.data.companyList;//0
                            var html = template('m_projectExternalCooperation/m_inviteCooperation_org', {
                                companyList: response.data.companyList,
                                a_companyName:that.settings.a_companyName,
                                companyName:response.data.companyName,
                                projectName:response.data.projectName
                            });

                            $(that.element).html(html);
                            that._bindCreateOrg(response.data);
                            that._bindSelectOrg();
                        } else {
                            var html = template('m_projectExternalCooperation/m_inviteCooperation_org_hasNo', {});
                            $(that.element).html(html);
                            that._bindCreateOrg(response.data);
                        }
                    }
                } else {
                    S_dialog.tips(response.info);
                }
            });
        }
        //创建团队
        , _bindCreateOrg: function (data) {
            var that = this;
            $(that.element).find('a[data-action="createOrg"]').click(function (e) {
                if (data.userId === void 0 || data.userId === null) {
                    var html = template('m_projectExternalCooperation/m_inviteCooperation_create_hasNo', {a_companyName:that.settings.a_companyName});
                    $(that.element).html(html);
                    that._bindCreateOrgAndAccountSubmit();
                } else {
                    that.settings.userId = data.userId;
                    var html = template('m_projectExternalCooperation/m_inviteCooperation_create_has', {a_companyName:that.settings.a_companyName});
                    $(that.element).html(html);
                    that._bindCreateOrgSubmit();
                }
                that._saveOrg_validate();
            });
        }
        , _bindCreateOrgSubmit: function () {
            var that = this;
            var invitedId = $('#invitedId').val();
            $(that.element).find('a[data-action="createOrgSubmit"]').click(function (e) {

                var isError = $('form.create-form').valid();
                if(!isError){
                    return false;
                }

                var companyName = $(that.element).find('input[name="companyName"]:eq(0)').val();
                var option = {};
                option.url = restApi.url_createBusinessPartner;
                option.classId = 'body';
                option.postData = {
                    userId: that.settings.userId,
                    inviteId: invitedId,
                    cellphone: that.settings.cellphone,
                    companyName: companyName
                };
                m_ajax.postJson(option, function (response) {
                    if (response.code === '0') {
                        var html = template('m_projectExternalCooperation/m_inviteCooperation_success', {
                            companyName: companyName,
                            a_companyName: that.settings.a_companyName
                        });
                        $(that.element).html(html);
                    } else {
                        S_dialog.tips(response.info);
                    }
                });
            });
        }
        , _bindCreateOrgAndAccountSubmit: function () {
            var that = this;
            var invitedId = $('#invitedId').val();
            $(that.element).find('a[data-action="createOrgAndAccountSubmit"]').click(function (e) {

                var isError = $('form.create-form').valid();
                if(!isError){
                    return false;
                }

                var userName = $(that.element).find('input[name="userName"]:eq(0)').val();
                var adminPassword = $(that.element).find('input[name="adminPassword"]:eq(0)').val();
                var companyName = $(that.element).find('input[name="companyName"]:eq(0)').val();

                var option = {};
                option.url = restApi.url_createBusinessPartner;
                option.classId = 'body';
                option.postData = {
                    inviteId: invitedId,
                    companyName: companyName,
                    cellphone: that.settings.cellphone,
                    userName: userName,
                    adminPassword: adminPassword
                };
                m_ajax.postJson(option, function (response) {
                    if (response.code === '0') {
                        S_dialog.tips("操作成功");
                        var html = template('m_projectExternalCooperation/m_inviteCooperation_success', {
                            companyName: companyName,
                            a_companyName: that.settings.a_companyName
                        });
                        $(that.element).html(html);
                    } else {
                        S_dialog.tips(response.info);
                    }
                });
            });
        }
        , _bindSelectOrg: function () {
            var that = this;
            var invitedId = $('#invitedId').val();

            $(that.element).find('li[data-action="selectOrg"]').click(function (e) {
                S_dialog.tips('选择无效，该组织'+$(this).attr('data-memo'));
            });

            $(that.element).find('li[data-action="selectOrgApply"]').click(function (e) {
                var companyId = $(this).attr('data-company-id');
                var companyName=$(this).attr('data-company-name');
                $(this).m_popover({
                    placement: 'top',
                    content: template('m_common/m_popover_confirm', {confirmMsg: '确定与该组织建立外部合作关系吗？'}),
                    onSave: function ($popover) {
                        var option = {};
                        option.url = restApi.url_applayBusinessPartner;
                        option.classId = 'body';
                        option.postData = {
                            inviteId: invitedId,
                            cellphone: that.settings.cellphone,
                            companyId: companyId
                        };
                        m_ajax.postJson(option, function (response) {
                            if (response.code === '0') {
                                S_dialog.tips("操作成功");
                                var html = template('m_projectExternalCooperation/m_inviteCooperation_success', {
                                    companyName: companyName,
                                    a_companyName: that.settings.a_companyName
                                });
                                $(that.element).html(html);
                            } else {
                                S_dialog.tips(response.info);
                            }
                        });
                    }
                }, true);
            });
        }

        ,_saveOrg_validate:function(){
            var that = this;
            $(that.element).find('form').validate({
                rules: {
                    userName: {
                        required: true,
                        isEmpty:true
                    },
                    adminPassword:{
                        required:true,
                        isEmpty:true,
                        rangelength: [6, 12],
                        checkSpace: true
                    },
                    companyName:{
                        required:true,
                        isEmpty:true
                    }
                },
                messages: {
                    userName: {
                        required: '请输入姓名!',
                        isEmpty:'请输入姓名!'
                    },
                    adminPassword:{
                        required: '请输入密码!',
                        isEmpty:'请输入密码!',
                        rangelength: "密码为6-12位！",
                        checkSpace: "密码不应含有空格!"
                    },
                    companyName:{
                        required: '请输入组织名称!',
                        isEmpty:'请输入组织名称!'
                    }
                },
                errorPlacement: function (error, element) { //指定错误信息位置
                    error.insertAfter(element);
                }
            });
            //密码验证
            $.validator.addMethod("checkSpace", function (value, element) {
                var pattern = /^\S+$/gi;
                return this.optional(element) || pattern.test(value);
            }, "密码不应含有空格!");
            var tip = '请输入姓名!';
            $.validator.addMethod('isEmpty', function(value, element) {

                var name = $(element).attr('name');
                if(name=='adminPassword'){
                    tip = '请输入密码!';
                }else if(name=='companyName'){
                    tip = '请输入组织名称!';
                }else{
                    tip = '请输入姓名!';
                }
                if($.trim(value)==''){
                    return false;
                }else{
                    return true;
                }

            },tip);
        }

    });

    /*
     1.一般初始化（缓存单例）： $('#id').pluginName(initOptions);
     2.强制初始化（无视缓存）： $('#id').pluginName(initOptions,true);
     3.调用方法： $('#id').pluginName('methodName',args);
     */
    $.fn[pluginName] = function (options, args) {
        var instance;
        var funcResult;
        var jqObj = this.each(function () {

            //从缓存获取实例
            instance = $.data(this, "plugin_" + pluginName);

            if (options === undefined || options === null || typeof options === "object") {

                var opts = $.extend(true, {}, defaults, options);

                //options作为初始化参数，若args===true则强制重新初始化，否则根据缓存判断是否需要初始化
                if (args === true) {
                    instance = new Plugin(this, opts);
                } else {
                    if (instance === undefined || instance === null)
                        instance = new Plugin(this, opts);
                }

                //写入缓存
                $.data(this, "plugin_" + pluginName, instance);
            }
            else if (typeof options === "string" && typeof instance[options] === "function") {

                //options作为方法名，args则作为方法要调用的参数
                //如果方法没有返回值，funcReuslt为undefined
                funcResult = instance[options].call(instance, args);
            }
        });

        return funcResult === undefined ? jqObj : funcResult;
    };

})(jQuery, window, document);
/**
 * 邀请人员
 * Created by wrb on 2016/12/17.
 */
;(function ($, window, document, undefined) {

    "use strict";
    var pluginName = "m_inviteExternalCooperation",
        defaults = {
            title: '',
            inivteUserUrl: '',
            isDailog: true,
            inviteType:3, //外部合作
            projectId:null,
            saveCallBack:null//操作完成回滚事件
        };

    // The actual plugin constructor
    function Plugin(element, options) {
        this.element = element;

        this.settings = options;
        this._defaults = defaults;
        this._name = pluginName;
        this.init();
    }

    // Avoid Plugin.prototype conflicts
    $.extend(Plugin.prototype, {
        init: function () {
            var that = this;
            that.initHtmlData();
        }
        //初始化数据并加载模板
        , initHtmlData: function (callBack) {
            var that = this;
            if (that.settings.isDailog) {//以弹窗编辑
                S_dialog.dialog({
                    title: that.settings.title || '邀请合作设计组织',
                    contentEle: 'dialogOBox',
                    lock: 3,
                    width: '460',
                    tPadding: '0px',
                    url: rootPath + '/assets/module/m_common/m_dialog.html'
                }, function (d) {//加载html后触发

                    that.element = 'div[id="content:' + d.id + '"] .dialogOBox';
                    var html = template('m_projectExternalCooperation/m_inviteExternalCooperation', {});
                    $(that.element).html(html);
                    $('.inviteCorpBox').closest('.dialogOBox').css('overflow','inherit');
                    that.bindSendMessage();
                });
            } else {//不以弹窗编辑

                var html = template('m_projectExternalCooperation/m_inviteExternalCooperation', {});
                $(that.element).html(html);
                that.bindSendMessage();
            }
        }
        //按钮事件绑定
        , bindSendMessage: function () {
            var that = this;
            $('a[data-action="sendMessage"]').click(function (e) {
                var $btn=$(this);
                var $input=$('.inviteCorpBox').find('input[name="bPartnerPhone"]:eq(0)');
                var phone=$input.val();
                var pattern = /^1\d{10}$/;
                if(isNullOrBlank(phone)||!pattern.test(phone))
                {
                    S_dialog.tips('请输入11位有效手机号码');
                    return false;
                }

                $btn.m_popover({
                    popoverStyle:'width:250px;',
                    placement: 'top',
                    content: template('m_common/m_popover_confirm', {confirmMsg: '确定要发送邀请给 <strong>'+phone+'</strong> 吗?'}),
                    onSave: function ($popover) {
                        var cellphoneList = [];
                        cellphoneList.push(phone);
                        var option = {};
                        option.url = restApi.url_inviteProjectParent;
                        option.classId = '.inviteBPartnerBox';
                        option.postData = {cellphoneList: cellphoneList,type:that.settings.inviteType,projectId:that.settings.projectId};
                        m_ajax.postJson(option, function (response) {
                            if (response.code == '0') {
                                S_dialog.tips("邀请外部合作伙伴短信已发送");
                                S_dialog.close($(e.target));
                                if(that.settings.saveCallBack!=null){
                                    that.settings.saveCallBack();
                                }
                            } else {
                                S_dialog.error(response.info);
                            }
                        });
                    }
                }, true);
            });
        }
    });

    /*
     1.一般初始化（缓存单例）： $('#id').pluginName(initOptions);
     2.强制初始化（无视缓存）： $('#id').pluginName(initOptions,true);
     3.调用方法： $('#id').pluginName('methodName',args);
     */
    $.fn[pluginName] = function (options, args) {
        var instance;
        var funcResult;
        var jqObj = this.each(function () {

            //从缓存获取实例
            instance = $.data(this, "plugin_" + pluginName);

            if (options === undefined || options === null || typeof options === "object") {

                var opts = $.extend(true, {}, defaults, options);

                //options作为初始化参数，若args===true则强制重新初始化，否则根据缓存判断是否需要初始化
                if (args === true) {
                    instance = new Plugin(this, opts);
                } else {
                    if (instance === undefined || instance === null)
                        instance = new Plugin(this, opts);
                }

                //写入缓存
                $.data(this, "plugin_" + pluginName, instance);
            }
            else if (typeof options === "string" && typeof instance[options] === "function") {

                //options作为方法名，args则作为方法要调用的参数
                //如果方法没有返回值，funcReuslt为undefined
                funcResult = instance[options].call(instance, args);
            }
        });

        return funcResult === undefined ? jqObj : funcResult;
    };

})(jQuery, window, document);

/**
 * 项目－外部合作
 * Created by wrb on 2017/5/6.
 */
;(function ($, window, document, undefined) {

    "use strict";
    var pluginName = "m_projectExternalCooperation",
        defaults = {
            $projectId:null,
            $projectName:null,
            $isManager:null//在当前项目是否是经营负责人1=是
        };

    // The actual plugin constructor
    function Plugin(element, options) {
        this.element = element;

        this.settings = $.extend({}, defaults, options);
        this._defaults = defaults;
        this._name = pluginName;
        this._currentCompanyId = window.currentCompanyId;//当前组织ID
        this.init();
    }

    // Avoid Plugin.prototype conflicts
    $.extend(Plugin.prototype, {
        init: function () {
            var that = this;
            that._initHtml();
        }
        //初始化数据,生成html
        ,_initHtml:function () {

            var that = this;
            var option = {};
            option.url = restApi.url_getProjectPartnerList;
            option.classId = '';
            option.postData = {
                projectId: that.settings.$projectId,
                fromCompanyId: window.currentCompanyId
            };
            m_ajax.postJson(option, function (response) {
                if (response.code === '0') {

                    var isHasRoleOperate = 0;
                    if((that.settings.$isManager!=null && that.settings.$isManager==1)
                        || window.currentRoleCodes.indexOf('project_manager')>-1
                        || window.currentRoleCodes.indexOf('sys_enterprise_logout')>-1){
                        isHasRoleOperate = 1;
                    }

                    var html = template('m_projectExternalCooperation/m_projectExternalCooperation',{
                        projectPartnerList:response.data,
                        isHasRoleOperate:isHasRoleOperate,
                        projectName:that.settings.$projectName
                    });
                    $(that.element).html(html);
                    that._bindActionClick();

                } else {
                    S_dialog.error(response.info);
                }
            });
        }

        //事件绑定
        ,_bindActionClick:function () {
            var that = this;

            $(that.element).find('a[data-action]').on('click',function () {
                var _this = this;
                var dataAction = $(_this).attr('data-action');
                switch (dataAction) {
                    case 'inviteExternalCooperation':

                        $('body').m_inviteExternalCooperation({
                            inviteType:3,
                            projectId:that.settings.$projectId,
                            saveCallBack:function () {
                                that._initHtml();
                            }
                        },true);
                        break;
                    case 'relieveRelationship':
                        $(_this).m_popover({
                            placement: 'left',
                            content: template('m_common/m_popover_confirm', {confirmMsg: '确定要解除外部合作关系吗？'}),
                            onSave: function ($popover) {
                                var option = {};
                                option.url = restApi.url_relieveRelationship+'/'+$(_this).attr('data-id');
                                m_ajax.get(option, function (response) {
                                    if (response.code == '0') {
                                        S_toastr.success('操作成功');
                                        that._initHtml();
                                    } else {
                                        S_dialog.error(response.info);
                                    }
                                });
                            }
                        }, true);
                        break;

                    case 'resendSMS':

                        var option = {};
                        option.url = restApi.url_resendSMS+'/'+$(_this).attr('data-id');
                        m_ajax.get(option, function (response) {
                            if (response.code == '0') {
                                S_toastr.success('发送成功!');
                            } else {
                                S_dialog.error(response.info);
                            }
                        });

                        break;
                }

            });
        }

    });

    /*
     1.一般初始化（缓存单例）： $('#id').pluginName(initOptions);
     2.强制初始化（无视缓存）： $('#id').pluginName(initOptions,true);
     3.调用方法： $('#id').pluginName('methodName',args);
     */
    $.fn[pluginName] = function (options, args) {
        var instance;
        var funcResult;
        var jqObj = this.each(function () {

            //从缓存获取实例
            instance = $.data(this, "plugin_" + pluginName);

            if (options === undefined || options === null || typeof options === "object") {

                var opts = $.extend(true, {}, defaults, options);

                //options作为初始化参数，若args===true则强制重新初始化，否则根据缓存判断是否需要初始化
                if (args === true) {
                    instance = new Plugin(this, opts);
                } else {
                    if (instance === undefined || instance === null)
                        instance = new Plugin(this, opts);
                }

                //写入缓存
                $.data(this, "plugin_" + pluginName, instance);
            }
            else if (typeof options === "string" && typeof instance[options] === "function") {

                //options作为方法名，args则作为方法要调用的参数
                //如果方法没有返回值，funcReuslt为undefined
                funcResult = instance[options].call(instance, args);
            }
        });

        return funcResult === undefined ? jqObj : funcResult;
    };

})(jQuery, window, document);

/**
 * Created by Wuwq on 2017/1/5.
 */
;(function ($, window, document, undefined) {

    "use strict";
    var pluginName = "m_projectList",
        defaults = {
            postData: null,
            renderCallback:null,//渲染页面完成后事件
            isAllProject: false//true=项目总览,false=我的项目
        };

    function Plugin(element, options) {
        this.element = element;

        this.settings = options;
        this._defaults = defaults;
        this._name = pluginName;
        this._columnArr = [
            {code:'projectNo',name:'项目编号'},
            {code:'projectName',name:'项目名称'},
            {code:'createBy',name:'立项组织/立项人'},
            {code:'projectCreateDate',name:'立项时间'},
            {code:'signDate',name:'合同签订'},
            {code:'status',name:'项目状态'},
            {code:'buildName',name:'功能分类'},
            {code:'address',name:'地点'},
            {code:'partyA',name:'甲方'},
            {code:'partyB',name:'乙方'},
            {code:'designCompanyName',name:'合作组织'}/*,
            {code:'busPersonInCharge',name:'经营负责人'},
            {code:'busPersonInChargeAssistant',name:'经营助理'},
            {code:'designPersonInCharge',name:'设计负责人'},
            {code:'designPersonInChargeAssistant',name:'设计助理'}*/
        ];
        this._columnCodes = 'projectCreateDate,signDate,status,buildName,address,partyA,partyB';
        this._type = 0;//我的项目
        this._companyNames = [];//筛选条件-立项组织
        this._partyANames = [];//筛选条件-甲方
        this._partyBNames = [];//筛选条件-乙方
        this._buildTypeNames = [];//筛选条件-功能分类

        this._busPersonInChargeMap = [];//筛选条件-经营负责人
        this._busPersonInChargeAssistantMap = [];//筛选条件-经营负责人助理
        this._designPersonInChargeMap = [];//筛选条件-设计负责人
        this._designPersonInChargeAssistantMap = [];//筛选条件-设计负责人助理

        this._projectList = [];//项目列表


        /******************* 筛选条件 值预存 *********************/

        this._filterData = {
            filterStatus:'',
            filterCreateBy:'',
            filterPartyA:'',
            filterPartyB:'',
            filterSignDate:[],
            filterAddress:[],
            filterBuildName:'',
            filterCreateDate:[],
            filterBusPersonInCharge:'',
            filterBusAss:'',
            filterDesignPersonInCharge:'',
            filterDesignAss:'',
            filterSortCreateDate:'',
            filterSortSignDate:''
        };

        this.init();
    }

    $.extend(Plugin.prototype, {
        init: function () {
            var that = this,option = {};

            //渲染容器
            $(that.element).html(template('m_projectList/m_projectList', {}));
            that.renderProjectList(1);
            that.bindActionClick();

        }
        //请求筛选数据
        ,getProjectConditions:function (callBack) {
            var that = this;
            var option = {};
            option.url = restApi.url_getProjectConditions;
            option.postData = {

            };
            m_ajax.postJson(option, function (response) {
                if (response.code == '0') {

                    that._companyNames = response.data.companyNames;
                    that._partyANames = response.data.partyANames;
                    that._partyBNames = response.data.partyBNames;
                    that._buildTypeNames = response.data.buildTypeNames;

                    that._busPersonInChargeMap = response.data.busPersonInChargeMap;//筛选条件-经营负责人
                    that._busPersonInChargeAssistantMap = response.data.busPersonInChargeAssistantMap;//筛选条件-经营负责人助理
                    that._designPersonInChargeMap = response.data.designPersonInChargeMap;//筛选条件-设计负责人
                    that._designPersonInChargeAssistantMap = response.data.designPersonInChargeAssistantMap;//筛选条件-设计负责人助理

                    return callBack(response.data);
                } else {
                    S_dialog.error(response.info);
                }
            });
        }
        //渲染项目list
        ,renderProjectList:function (fromType) {
            var that = this;

            var option = {};
            option.param = {};
            if(that.settings.isAllProject==false){
                option.param.type = 1;
            }else{
                option.param.type = null;
                that._type = 1;
            }

            //条件查询
            var keyword = $(that.element).find('input[name="keyword"]').val();
            keyword = $.trim(keyword);
            if(keyword!=''){
                option.param.keyword = keyword;//关键字查询
            }

            option.param.companyNames = that._filterData.filterCreateBy;
            option.param.partyANames = that._filterData.filterPartyA;
            option.param.partyBNames = that._filterData.filterPartyB;

            if(!_.isBlank(that._filterData.filterSignDate[0])){
                option.param.startSignDate = that._filterData.filterSignDate[0];
            }
            if(!_.isBlank(that._filterData.filterSignDate[1])){
                option.param.endSignDate = that._filterData.filterSignDate[1];
            }
            option.param.province = that._filterData.filterAddress[0];
            option.param.city = that._filterData.filterAddress[1];
            option.param.county = that._filterData.filterAddress[2];
            option.param.buildTypeNames = that._filterData.filterBuildName;

            if(!_.isBlank(that._filterData.filterCreateDate[0])){
                option.param.startTime = that._filterData.filterCreateDate[0];
            }

            if(!_.isBlank(that._filterData.filterCreateDate[1])){
                option.param.endTime = that._filterData.filterCreateDate[1];
            }
            option.param.status = that._filterData.filterStatus;

            option.param.orderField = that._filterData.filterSortCreateDate;
            option.param.orderSign = that._filterData.filterSortSignDate;

            option.param.busPersonInCharge = that._filterData.filterBusPersonInCharge;
            option.param.busPersonInChargeAssistant = that._filterData.filterBusAss;
            option.param.designPersonInCharge = that._filterData.filterDesignPersonInCharge;
            option.param.designPersonInChargeAssistant = that._filterData.filterDesignAss;

            var cookiesData = Cookies.get('projectList_cookiesData');

            if(cookiesData!=undefined && fromType==1){
                cookiesData = $.parseJSON(cookiesData);
                that.paramSetVal(cookiesData.param);
                option.param = cookiesData.param;
            }

            paginationFun({
                eleId: '#data-pagination-container',
                loadingId: '.data-list-box',
                url: restApi.url_getMyProjectList,
                params: option.param
            }, function (response) {

                if (response.code == '0') {

                    //通过Cookie记住项目页码
                    option.param.pageIndex = $("#data-pagination-container").pagination('getPageIndex');

                    var $cookiesData = {
                        param:option.param,
                        dataAction:$('#content-right').find('ul.secondary-menu-ul li.active').attr('id')
                    };
                    Cookies.set('projectList_cookiesData', $cookiesData);



                    that._projectList = response.data.data;

                    that._columnCodes = response.data.columnCodes;
                    if(response.data.columnCodes!=null && response.data.columnCodes!=''){
                        that._columnCodes = response.data.columnCodes;
                    }
                    var columnArr = that._columnCodes.split(',');
                    var html = template('m_projectList/m_projectList_content',{
                        projectList:response.data.data,
                        columnCodes:that._columnCodes,
                        columnLen:columnArr.length
                    });
                    $(that.element).find('.data-list-container').html(html);
                    that.bindGotoProject();

                    that.getProjectConditions(function (data) {
                        that.filterHover();
                        that.filterActionClick();
                        that.sortActionClick();
                        if(that.settings.renderCallback!=null){
                            that.settings.renderCallback(data);
                        }
                    });


                } else {
                    S_dialog.error(response.info);
                }
            });
        }
        , paramSetVal:function (param) {
            var that = this;
            //条件查询
            $(that.element).find('input[name="keyword"]').val(param.keyword);
            that._filterData.filterStatus = param.status;
            that._filterData.filterCreateBy = param.companyNames;
            that._filterData.filterPartyA = param.partyANames;
            that._filterData.filterPartyB = param.partyBNames;
            that._filterData.filterSignDate = [param.startSignDate, param.endSignDate];
            that._filterData.filterAddress = [param.province,param.city,param.county];
            that._filterData.filterBuildName = param.buildTypeNames;
            that._filterData.filterCreateDate = [param.startTime,param.endTime];
            that._filterData.filterSortCreateDate = param.orderField;
            that._filterData.filterSortSignDate = param.orderSign;
            that._filterData.filterBusPersonInCharge = param.busPersonInCharge;
            that._filterData.filterBusAss = param.busPersonInChargeAssistant;
            that._filterData.filterDesignPersonInCharge = param.designPersonInCharge;
            that._filterData.filterDesignAss = param.designPersonInChargeAssistant;
        }
        //跳转详情
        , bindGotoProject: function () {
            var that = this;
            $(that.element).find('a[data-action="gotoProject"]').off('click').on('click', function (e) {
                var $btn = $(this);
                var pId = $btn.attr('data-pId');//项目ID
                var pName = $btn.attr('data-pName');//项目名称
                location.hash = '/projectDetails/basicInfo?id='+pId+'&projectName='+encodeURI(pName);
                stopPropagation(e);
                return false;
            });
        }
        //事件绑定
        , bindActionClick:function () {
            var that = this;
            $(that.element).find('button[data-action]').off('click').on('click',function () {
                var $this = $(this);
                var dataAction = $this.attr('data-action');
                switch (dataAction){
                    case 'searchProject':

                        that.renderProjectList(2);
                        break;
                    case 'selectColumn':
                        S_dialog.dialog({
                            contentEle: 'dialogOBox',
                            ele:dataAction,
                            lock: 4,
                            align: 'bottom left',
                            quickClose:false,
                            noTriangle:true,
                            width: '180',
                            height:'234',
                            tPadding: '0px',
                            url: rootPath+'/assets/module/m_common/m_dialog.html'

                        },function(d){//加载html后触发

                            var dialogEle = 'div[id="content:'+d.id+'"] .dialogOBox';

                            var iHtml = template('m_projectList/m_projectList_selectColumn',{
                                columnArr:that._columnArr,
                                columnCodes:that._columnCodes
                            });
                            $(dialogEle).html(iHtml);
                            $(dialogEle).parents('.ui-popup-modal').prev('div.ui-popup-backdrop').off('click').on('click',function () {
                                S_dialog.close($(dialogEle));
                            });
                            $(dialogEle).find('ul li a').off('click').on('click',function (e) {

                                var $this = $(this);
                                if($this.hasClass('active')){
                                    $this.removeClass('active');
                                }else{
                                    $this.addClass('active');
                                }
                                var codeStr = '';
                                $(dialogEle).find('ul li a.active').each(function () {
                                    codeStr+=$(this).attr('data-code')+',';
                                });
                                if(codeStr.length>0){
                                    codeStr = codeStr.substring(0,codeStr.length-1);
                                }
                                var option = {};
                                option.url = restApi.url_insertProCondition;
                                option.postData = {
                                    type:that._type,
                                    code:codeStr,
                                    companyId:window.currentCompanyId
                                };
                                that._columnCodes = codeStr;
                                m_ajax.postJson(option, function (response) {
                                    if (response.code == '0') {

                                        that.renderProjectListByColumn();

                                    } else {
                                        S_dialog.error(response.info);
                                    }
                                });
                            });
                        });
                        break;
                }
            });
        }
        //重新渲染
        , renderProjectListByColumn:function () {
            var that = this;
            var columnArr = that._columnCodes.split(',');
            var html = template('m_projectList/m_projectList_content',{
                projectList:that._projectList,
                columnCodes:that._columnCodes,
                columnLen:columnArr.length
            });
            $(that.element).find('.data-list-container').html(html);
            that.filterHover();
            that.filterActionClick();
            that.sortActionClick();
            that.bindGotoProject();
        }
        //筛选hover事件
        , filterHover:function () {
            var that =  this;
            $(that.element).find('.data-list-box  th').hover(function () {
                if( $(this).find(' .icon-filter i').hasClass('icon-shaixuan') && !$(this).find(' .icon-filter i').hasClass('fc-v1-blue')){
                    $(this).find(' .icon-filter').show();
                }
            },function () {
                if( $(this).find(' .icon-filter i').hasClass('icon-shaixuan') && !$(this).find(' .icon-filter i').hasClass('fc-v1-blue')) {
                    $(this).find(' .icon-filter').hide();
                }
            });
        }
        //筛选事件
        , filterActionClick:function () {
            var that = this;
            $(that.element).find('a.icon-filter').each(function (e) {

                var $this = $(this);
                var id = $this.attr('id');
                switch (id){
                    case 'filterCreateBy': //立项组织/立项人
                    case 'filterStatus'://项目状态
                    case 'filterPartyA'://甲方
                    case 'filterPartyB'://乙方
                    case 'filterBusPersonInCharge': //经营负责人
                    case 'filterBusAss': //经营负责人助理
                    case 'filterDesignPersonInCharge': //设计负责人
                    case 'filterDesignAss': //设计负责人助理

                        var currCheckValue = '',selectList = [];
                        if(id=='filterCreateBy'){
                            currCheckValue = that._filterData.filterCreateBy;
                            selectList.push({fieldName:'全部',fieldValue:''});
                            if(that._companyNames!=null && Object.getOwnPropertyNames(that._companyNames).length>0){
                                $.each(that._companyNames, function (key, value) {
                                    selectList.push({fieldValue: key, fieldName: value});
                                });
                            }
                        }
                        else if(id=='filterStatus'){
                            currCheckValue = that._filterData.filterStatus;
                            selectList = [
                                {fieldName:'全部',fieldValue:''},
                                {fieldName:'进行中',fieldValue:'0'},
                                {fieldName:'已完成-未结清',fieldValue:'2'},
                                {fieldName:'已完成-已结清',fieldValue:'4'},
                                {fieldName:'已暂停-未结清',fieldValue:'1'},
                                {fieldName:'已暂停-已结清',fieldValue:'5'},
                                {fieldName:'已终止-未结清',fieldValue:'3'},
                                {fieldName:'已终止-已结清',fieldValue:'6'}
                            ]
                        }
                        else if(id=='filterPartyA'){
                            currCheckValue = that._filterData.filterPartyA;
                            selectList.push({fieldName:'全部',fieldValue:''});
                            if(that._partyANames!=null && Object.getOwnPropertyNames(that._partyANames).length>0){
                                $.each(that._partyANames, function (key, value) {
                                    selectList.push({fieldValue: key, fieldName: value});
                                });
                            }
                        }
                        else if(id=='filterPartyB'){
                            currCheckValue = that._filterData.filterPartyB;
                            selectList.push({fieldName:'全部',fieldValue:''});
                            if(that._partyBNames!=null && Object.getOwnPropertyNames(that._partyBNames).length>0){
                                $.each(that._partyBNames, function (key, value) {
                                    selectList.push({fieldValue: key, fieldName: value});
                                });
                            }
                        }
                        else if(id=='filterBusPersonInCharge'){
                            currCheckValue = that._filterData.filterBusPersonInCharge;
                            selectList.push({fieldName:'全部',fieldValue:''});
                            if(that._busPersonInChargeMap!=null && Object.getOwnPropertyNames(that._busPersonInChargeMap).length>0){
                                $.each(that._busPersonInChargeMap, function (key, value) {
                                    selectList.push({fieldValue: key, fieldName: value});
                                });
                            }
                        }
                        else if(id=='filterBusAss'){
                            currCheckValue = that._filterData.filterBusAss;
                            selectList.push({fieldName:'全部',fieldValue:''});
                            if(that._busPersonInChargeAssistantMap!=null && Object.getOwnPropertyNames(that._busPersonInChargeAssistantMap).length>0){
                                $.each(that._busPersonInChargeAssistantMap, function (key, value) {
                                    selectList.push({fieldValue: key, fieldName: value});
                                });
                            }
                        }
                        else if(id=='filterDesignPersonInCharge'){
                            currCheckValue = that._filterData.filterDesignPersonInCharge;
                            selectList.push({fieldName:'全部',fieldValue:''});
                            if(that._designPersonInChargeMap!=null && Object.getOwnPropertyNames(that._designPersonInChargeMap).length>0){
                                $.each(that._designPersonInChargeMap, function (key, value) {
                                    selectList.push({fieldValue: key, fieldName: value});
                                });
                            }
                        }
                        else if(id=='filterDesignAss'){
                            currCheckValue = that._filterData.filterDesignAss;
                            selectList.push({fieldName:'全部',fieldValue:''});
                            if(that._designPersonInChargeAssistantMap!=null && Object.getOwnPropertyNames(that._designPersonInChargeAssistantMap).length>0){
                                $.each(that._designPersonInChargeAssistantMap, function (key, value) {
                                    selectList.push({fieldValue: key, fieldName: value});
                                });
                            }
                        }
                        if(currCheckValue!=''){
                            $this.closest('th').find('.icon-filter i').addClass('fc-v1-blue');
                            $this.closest('th').find('.icon-filter').show();
                        }

                        var iHtml = template('m_filterableField/m_filter_select',{
                            currCheckValue:currCheckValue,
                            selectList:selectList
                        });
                        var iTextObj = iHtml.getTextWH();
                        var iWHObj = setDialogWH(iTextObj.width,iTextObj.height);

                        $this.on('click',function (e) {
                            S_dialog.dialog({
                                contentEle: 'dialogOBox',
                                ele:id,
                                lock: 2,
                                align: 'bottom right',
                                quickClose:true,
                                noTriangle:true,
                                width: iWHObj.width,
                                height:iWHObj.height,
                                tPadding: '0px',
                                url: rootPath+'/assets/module/m_common/m_dialog.html'

                            },function(d){//加载html后触发

                                var dialogEle = 'div[id="content:'+d.id+'"] .dialogOBox';
                                $(dialogEle).html(iHtml);

                                $(dialogEle).find('.dropdown-menu a').on('click',function () {

                                    var val = $(this).attr('data-state-no');
                                    that._filterData[id] = val;
                                    that.renderProjectList(2);
                                    S_dialog.close($(dialogEle));
                                });
                            });
                            e.stopPropagation();
                            return false;
                        });

                        break;
                    case 'filterSignDate': //合同签订
                    case 'filterCreateDate'://立项时间

                        var startTime = '';
                        var endTime = '';

                        startTime = that._filterData[id][0];
                        endTime = that._filterData[id][1];


                        if(!_.isBlank(startTime) || !_.isBlank(endTime)){
                            $this.closest('th').find('.icon-filter i').addClass('fc-v1-blue');
                            $this.closest('th').find('.icon-filter').show();
                        }
                        $this.on('click',function (e) {
                            S_dialog.dialog({
                                contentEle: 'dialogOBox',
                                ele:id,
                                lock: 2,
                                align: 'bottom right',
                                quickClose:true,
                                noTriangle:true,
                                width: '220',
                                minHeight:'100',
                                tPadding: '0px',
                                url: rootPath+'/assets/module/m_common/m_dialog.html'


                            },function(d){//加载html后触发

                                var dialogEle = 'div[id="content:'+d.id+'"] .dialogOBox';

                                var iHtml = template('m_filterableField/m_filter_time',{
                                    startTime:startTime,
                                    endTime:endTime
                                });

                                $(dialogEle).html(iHtml);
                                $(dialogEle).find('button[data-action="sureTimeFilter"]').off('click').on('click',function () {

                                    var startTime = $(dialogEle).find('input[name="startTime"]').val();
                                    var endTime = $(dialogEle).find('input[name="endTime"]').val();

                                    that._filterData[id][0] = startTime;
                                    that._filterData[id][1] = endTime;

                                    that.renderProjectList(2);

                                    S_dialog.close($(dialogEle));
                                });
                                $(dialogEle).find('button[data-action="clearTimeInput"]').off('click').on('click',function () {
                                    $(dialogEle).find('input').val('');
                                });
                                $(dialogEle).find('i.fa-calendar').off('click').on('click',function () {
                                    $(this).closest('.input-group').find('input').focus();
                                });

                            });
                            e.stopPropagation();
                            return false;
                        });

                        break;
                    case 'filterAddress'://地点

                        var currProv = '',currCity = '',currCounty = '';

                        currProv = that._filterData.filterAddress[0];
                        currCity = that._filterData.filterAddress[1];
                        currCounty = that._filterData.filterAddress[2];
                        if(!_.isBlank(currProv)){
                            $this.closest('th').find('.icon-filter i').addClass('fc-v1-blue');
                            $this.closest('th').find('.icon-filter').show();
                        }
                        $this.on('click',function (e) {

                            S_dialog.dialog({
                                contentEle: 'dialogOBox',
                                ele:id,
                                lock: 2,
                                align: 'bottom right',
                                quickClose:true,
                                noTriangle:true,
                                width: '350',
                                minHeight:'110',
                                tPadding: '0px',
                                url: rootPath+'/assets/module/m_common/m_dialog.html'

                            },function(d){//加载html后触发

                                var dialogEle = 'div[id="content:'+d.id+'"] .dialogOBox';
                                var iHtml = template('m_filterableField/m_filter_address',{});
                                $(dialogEle).html(iHtml);

                                $(dialogEle).find("#selectRegion").citySelect({
                                    prov:_.isBlank(currProv)?'':currProv,
                                    city:_.isBlank(currCity)?'':currCity,
                                    dist:_.isBlank(currCounty)?'':currCounty,
                                    nodata:"none",
                                    required:false
                                });
                                $(dialogEle).find('button[data-action="cancel"]').on('click',function () {
                                    S_dialog.close($(dialogEle));
                                });
                                $(dialogEle).find('button[data-action="confirm"]').on('click',function () {

                                    var province = $(dialogEle).find('select[name="province"]').val();
                                    var city = $(dialogEle).find('select[name="city"]').val();
                                    var county = $(dialogEle).find('select[name="county"]').val();

                                    province = province==undefined?'':province;
                                    city = city==undefined?'':city;
                                    county = county==undefined?'':county;

                                    that._filterData.filterAddress = [province,city,county];
                                    that.renderProjectList(2);

                                    S_dialog.close($(dialogEle));
                                });

                            });
                            e.stopPropagation();
                            return false;;
                        });
                        break;
                    case 'filterBuildName'://功能分类
                        var currCheckedVal = '',checkList=[];

                        currCheckedVal = that._filterData.filterBuildName;
                        if(currCheckedVal!=''){
                            $this.closest('th').find('.icon-filter i').addClass('fc-v1-blue');
                            $this.closest('th').find('.icon-filter').show();
                        }

                        if(that._buildTypeNames!=null && Object.getOwnPropertyNames(that._buildTypeNames).length>0){
                            $.each(that._buildTypeNames, function (key, value) {
                                checkList.push({id: key, name: value});
                            });
                        }
                        //checkList.push({name:'--',id:''});

                        $this.on('click',function (e) {

                            S_dialog.dialog({
                                contentEle: 'dialogOBox',
                                ele:id,
                                lock: 2,
                                align: 'bottom right',
                                quickClose:true,
                                noTriangle:true,
                                width: '370',
                                minHeight:'110',
                                tPadding: '0px',
                                url: rootPath+'/assets/module/m_common/m_dialog.html'

                            },function(d){//加载html后触发

                                var dialogEle = 'div[id="content:'+d.id+'"] .dialogOBox';

                                var iHtml = template('m_filterableField/m_filter_checkbox',{
                                    currCheckedVal:currCheckedVal,
                                    checkList:checkList
                                });
                                $(dialogEle).html(iHtml);


                                $(dialogEle).find('button[data-action="confirm"]').on('click',function () {

                                    var currBuildType = '';
                                    $(dialogEle).find('input[name="ipt_check"]:checked').each(function () {
                                        var choseBuildType = $(this).val();
                                        currBuildType+=choseBuildType+',';
                                    });
                                    if(currBuildType.length>0){
                                        currBuildType = currBuildType.substring(0,currBuildType.length-1);
                                    }
                                    that._filterData.filterBuildName = currBuildType;

                                    that.renderProjectList(2);

                                    S_dialog.close($(dialogEle));
                                });
                                $(dialogEle).find('button[data-action="cancel"]').on('click',function () {
                                    S_dialog.close($(dialogEle));
                                });
                                var ifChecked = function (e) {
                                    $('input[name="ipt_check"]').iCheck('check');
                                };
                                var ifUnchecked = function (e) {
                                    $('input[name="ipt_check"]').iCheck('uncheck');
                                };
                                //初始化全选checkbox
                                $(dialogEle).find('input[name="ipt_allCheck"]').iCheck({
                                    checkboxClass: 'icheckbox_minimal-green',
                                    radioClass: 'iradio_minimal-green'
                                }).on('ifUnchecked.s', ifUnchecked).on('ifChecked.s', ifChecked);

                                function delAllBuildTypeCheck() {
                                    var checkedLen = $(dialogEle).find('input[name="ipt_check"]:checked').length;
                                    var allLen = $(dialogEle).find('input[name="ipt_check"]').length;
                                    if(checkedLen==allLen){
                                        $('input[name="ipt_allCheck"]').prop('checked',true);
                                    }else{
                                        $('input[name="ipt_allCheck"]').prop('checked',false);
                                    }
                                    $('input[name="ipt_allCheck"]').iCheck('update');
                                }
                                var ifCheckedByBuildType = function (e) {
                                    delAllBuildTypeCheck();
                                };
                                var ifUncheckedByBuildType = function (e) {
                                    delAllBuildTypeCheck();
                                };
                                //初始化功能分类checkbox
                                $(dialogEle).find('input[name="ipt_check"]').iCheck({
                                    checkboxClass: 'icheckbox_minimal-green',
                                    radioClass: 'iradio_minimal-green'
                                }).on('ifUnchecked.s', ifUncheckedByBuildType).on('ifChecked.s', ifCheckedByBuildType);
                                delAllBuildTypeCheck();

                            });
                            e.stopPropagation();
                            return false;
                        });
                        break;

                }

            });
        }
        //排序
        , sortActionClick:function () {
            var that = this;
            $(that.element).find('th[data-action="sort"]').each(function () {

                var $this = $(this);
                var sortType = $this.attr('data-sort-type');

                switch(sortType){
                    case 'createDate'://立项时间
                        var sortCreateDate = that._filterData.filterSortCreateDate;
                        var sortClass = '';
                        if(sortCreateDate=='0'){
                            sortClass = 'sorting_asc';
                        }else if(sortCreateDate=='1'){
                            sortClass = 'sorting_desc';
                        }else{
                            sortClass = 'sorting';
                        }
                        $this.removeClass().addClass(sortClass);
                        $this.off('click').on('click',function (e) {
                            if($this.hasClass('sorting')||$this.hasClass('sorting_asc')){
                                that._filterData.filterSortCreateDate = '1';
                            }
                            else if($this.hasClass('sorting_desc')){
                                that._filterData.filterSortCreateDate = '0';
                            }
                            that._filterData.filterSortSignDate = '';
                            that.renderProjectList(2);
                            e.stopPropagation();
                            return false;
                        });
                        break;
                    case 'signDate'://签订时间
                        var sortSignDate = that._filterData.filterSortSignDate;
                        var sortSignDateClass = '';
                        if(sortSignDate=='0'){
                            sortSignDateClass = 'sorting_asc';
                        }else if(sortSignDate=='1'){
                            sortSignDateClass = 'sorting_desc';
                        }else{
                            sortSignDateClass = 'sorting';
                        }
                        $this.removeClass().addClass(sortSignDateClass);
                        $this.off('click').on('click',function (e) {
                            if($this.hasClass('sorting')||$this.hasClass('sorting_asc')){
                                that._filterData.filterSortSignDate = '1';
                            }
                            else if($this.hasClass('sorting_desc')){
                                that._filterData.filterSortSignDate = '0'
                            }
                            that._filterData.filterSortCreateDate = '';
                            that.renderProjectList(2);
                            e.stopPropagation();
                            return false;
                        });
                        break;
                }

            });
        }

    });

    /*
     1.一般初始化（缓存单例）： $('#id').pluginName(initOptions);
     2.强制初始化（无视缓存）： $('#id').pluginName(initOptions,true);
     3.调用方法： $('#id').pluginName('methodName',args);
     */
    $.fn[pluginName] = function (options, args) {
        var instance;
        var funcResult;
        var jqObj = this.each(function () {

            //从缓存获取实例
            instance = $.data(this, "plugin_" + pluginName);

            if (options === undefined || options === null || typeof options === "object") {

                var opts = $.extend(true, {}, defaults, options);

                //options作为初始化参数，若args===true则强制重新初始化，否则根据缓存判断是否需要初始化
                if (args === true) {
                    instance = new Plugin(this, opts);
                } else {
                    if (instance === undefined || instance === null)
                        instance = new Plugin(this, opts);
                }

                //写入缓存
                $.data(this, "plugin_" + pluginName, instance);
            }
            else if (typeof options === "string" && typeof instance[options] === "function") {

                //options作为方法名，args则作为方法要调用的参数
                //如果方法没有返回值，funcReuslt为undefined
                funcResult = instance[options].call(instance, args);
            }
        });

        return funcResult === undefined ? jqObj : funcResult;
    };


})(jQuery, window, document);
/**
 * 我的项目-菜单
 * Created by wrb on 2018/1/5.
 */
;(function ($, window, document, undefined) {

    "use strict";
    var pluginName = "m_projectList_menu",
        defaults = {
            $contentEle:null,
            $isFirstEnter:false//是否是第一次進來
        };

    // The actual plugin constructor
    function Plugin(element, options) {
        this.element = element;

        this.settings = $.extend({}, defaults, options);
        this._defaults = defaults;
        this._name = pluginName;
        this.init();
    }

    // Avoid Plugin.prototype conflicts
    $.extend(Plugin.prototype, {
        init: function () {
            var that = this;
            that.initHtmlData();
        }
        //初始化数据并加载模板
        ,initHtmlData:function () {
            var that = this;

            var html = template('m_projectList/m_projectList_menu',{});
            $(that.element).html(html);

            var dataAction = $(that.element).find('li:eq(0)').attr('id');
            var cookiesData = Cookies.get('projectList_cookiesData');
            if(cookiesData!=undefined){
                cookiesData = $.parseJSON(cookiesData);
                dataAction = cookiesData.dataAction;
            }
            $(that.element).find('ul.secondary-menu-ul li[id="'+dataAction+'"]').addClass('active').siblings().removeClass('active');
            that.switchPage(dataAction);
            that.menuClickFun();
        }
        //菜单点击事件
        , menuClickFun:function () {
            var that = this;
            $(that.element).find('.secondary-menu-ul li').on('click',function () {
                var id = $(this).attr('id');
                Cookies.remove('projectList_cookiesData');
                $(this).addClass('active').siblings().removeClass('active');
                that.switchPage(id);
            });
        }
        //切换页面
        , switchPage: function (dataAction) {
            var that = this;
            switch (dataAction) {
                case 'myProjectList'://我的项目
                    that.myProjectList();
                    break;
                case 'projectOverview'://项目总览
                    that.projectOverview();
                    break;
                default:
                    dataAction = 'myProjectList';
                    that.myProjectList();
                    break;
            }
        }
        //我的项目
        , myProjectList: function () {
            var options = {}, that = this;
            options.isAllProject = false;
            options.renderCallback = function (data) {
                if(data.flag!=null && data.flag==1){
                    $(that.element).find('.secondary-menu-ul').show();
                }else{
                    $(that.element).find('.secondary-menu-ul').remove();
                }
            };
            $(that.element).find('#content-box').m_projectList(options, true);
            $(that.element).find('.breadcrumb-box li.active strong').html('我的项目');
        }
        //项目总览
        , projectOverview:function () {
            var options = {}, that = this;
            options.isAllProject = true;
            options.renderCallback = function (data) {
                if(data.flag!=null && data.flag==1){
                    $(that.element).find('.secondary-menu-ul').show();
                }else{
                    $(that.element).find('.secondary-menu-ul').remove();
                }
            };
            $(that.element).find('#content-box').m_projectList(options, true);
            $(that.element).find('.breadcrumb-box li.active strong').html('项目总览');
        }
    });

    $.fn[pluginName] = function (options) {
        return this.each(function () {

            //if (!$.data(this, "plugin_" + pluginName)) {
            $.data(this, "plugin_" +
                pluginName, new Plugin(this, options));
            //}
        });
    };

})(jQuery, window, document);

/**
 * Created by Wuwq on 2017/1/5.
 */
;(function ($, window, document, undefined) {

    "use strict";
    var pluginName = "m_projectList_old",
        defaults = {
            postData: null,
            renderCallback:null,//渲染页面完成后事件
            isAllProject: false//true=项目总览,false=我的项目
        };

    function Plugin(element, options) {
        this.element = element;

        this.settings = options;
        this._defaults = defaults;
        this._name = pluginName;
        this._columnArr = [
            {code:'projectNo',name:'项目编号'},
            {code:'projectName',name:'项目名称'},
            {code:'createBy',name:'立项组织/立项人'},
            {code:'projectCreateDate',name:'立项时间'},
            {code:'signDate',name:'合同签订'},
            {code:'status',name:'项目状态'},
            {code:'buildName',name:'功能分类'},
            {code:'address',name:'地点'},
            {code:'partyA',name:'甲方'},
            {code:'partyB',name:'乙方'}/*,
            {code:'busPersonInCharge',name:'经营负责人'},
            {code:'busPersonInChargeAssistant',name:'经营助理'},
            {code:'designPersonInCharge',name:'设计负责人'},
            {code:'designPersonInChargeAssistant',name:'设计助理'}*/
        ];
        this._columnCodes = 'projectCreateDate,signDate,status,buildName,address,partyA,partyB';
        this._type = 0;//我的项目
        this._companyNames = [];//筛选条件-立项组织
        this._partyANames = [];//筛选条件-甲方
        this._partyBNames = [];//筛选条件-乙方
        this._buildTypeNames = [];//筛选条件-功能分类

        this._busPersonInChargeMap = [];//筛选条件-经营负责人
        this._busPersonInChargeAssistantMap = [];//筛选条件-经营负责人助理
        this._designPersonInChargeMap = [];//筛选条件-设计负责人
        this._designPersonInChargeAssistantMap = [];//筛选条件-设计负责人助理

        this._projectList = [];//项目列表


        /******************* 筛选条件 值预存 *********************/

        this._filterData = {
            filterStatus:'',
            filterCreateBy:'',
            filterPartyA:'',
            filterPartyB:'',
            filterSignDate:[],
            filterAddress:[],
            filterBuildName:'',
            filterCreateDate:[],
            filterBusPersonInCharge:'',
            filterBusAss:'',
            filterDesignPersonInCharge:'',
            filterDesignAss:'',
            filterSortCreateDate:'',
            filterSortSignDate:''
        };

        this.init();
    }

    $.extend(Plugin.prototype, {
        init: function () {
            var that = this,option = {};

            //渲染容器
            $(that.element).html(template('m_projectList/m_projectList', {}));
            that.renderProjectList(1);
            that.bindActionClick();

        }
        //请求筛选数据
        ,getProjectConditions:function (callBack) {
            var that = this;
            var option = {};
            option.url = restApi.url_getProjectConditions;
            option.postData = {

            };
            m_ajax.postJson(option, function (response) {
                if (response.code == '0') {

                    that._companyNames = response.data.companyNames;
                    that._partyANames = response.data.partyANames;
                    that._partyBNames = response.data.partyBNames;
                    that._buildTypeNames = response.data.buildTypeNames;

                    that._busPersonInChargeMap = response.data.busPersonInChargeMap;//筛选条件-经营负责人
                    that._busPersonInChargeAssistantMap = response.data.busPersonInChargeAssistantMap;//筛选条件-经营负责人助理
                    that._designPersonInChargeMap = response.data.designPersonInChargeMap;//筛选条件-设计负责人
                    that._designPersonInChargeAssistantMap = response.data.designPersonInChargeAssistantMap;//筛选条件-设计负责人助理

                    return callBack(response.data);
                } else {
                    S_dialog.error(response.info);
                }
            });
        }
        //渲染项目list
        ,renderProjectList:function (fromType) {
            var that = this;

            var option = {};
            option.param = {};
            if(that.settings.isAllProject==false){
                option.param.type = 1;
            }else{
                option.param.type = null;
                that._type = 1;
            }

            //条件查询
            var keyword = $(that.element).find('input[name="keyword"]').val();
            keyword = $.trim(keyword);
            if(keyword!=''){
                option.param.keyword = keyword;//关键字查询
            }

            option.param.companyNames = that._filterData.filterCreateBy;
            option.param.partyANames = that._filterData.filterPartyA;
            option.param.partyBNames = that._filterData.filterPartyB;

            if(!_.isBlank(that._filterData.filterSignDate[0])){
                option.param.startSignDate = that._filterData.filterSignDate[0];
            }
            if(!_.isBlank(that._filterData.filterSignDate[1])){
                option.param.endSignDate = that._filterData.filterSignDate[1];
            }
            option.param.province = that._filterData.filterAddress[0];
            option.param.city = that._filterData.filterAddress[1];
            option.param.county = that._filterData.filterAddress[2];
            option.param.buildTypeNames = that._filterData.filterBuildName;

            if(!_.isBlank(that._filterData.filterCreateDate[0])){
                option.param.startTime = that._filterData.filterCreateDate[0];
            }

            if(!_.isBlank(that._filterData.filterCreateDate[1])){
                option.param.endTime = that._filterData.filterCreateDate[1];
            }
            option.param.status = that._filterData.filterStatus;

            option.param.orderField = that._filterData.filterSortCreateDate;
            option.param.orderSign = that._filterData.filterSortSignDate;

            option.param.busPersonInCharge = that._filterData.filterBusPersonInCharge;
            option.param.busPersonInChargeAssistant = that._filterData.filterBusAss;
            option.param.designPersonInCharge = that._filterData.filterDesignPersonInCharge;
            option.param.designPersonInChargeAssistant = that._filterData.filterDesignAss;

            var cookiesData = Cookies.get('projectList_cookiesData');

            if(cookiesData!=undefined && fromType==1){
                cookiesData = $.parseJSON(cookiesData);
                that.paramSetVal(cookiesData.param);
                option.param = cookiesData.param;
            }

            paginationFun({
                eleId: '#data-pagination-container',
                loadingId: '.data-list-box',
                url: restApi.url_getMyProjectList,
                params: option.param
            }, function (response) {

                if (response.code == '0') {

                    //通过Cookie记住项目页码
                    option.param.pageIndex = $("#data-pagination-container").pagination('getPageIndex');

                    var $cookiesData = {
                        param:option.param,
                        dataAction:$('#content-right').find('ul.secondary-menu-ul li.active').attr('id')
                    };
                    Cookies.set('projectList_cookiesData', $cookiesData);



                    that._projectList = response.data.data;

                    that._columnCodes = response.data.columnCodes;
                    if(response.data.columnCodes!=null && response.data.columnCodes!=''){
                        that._columnCodes = response.data.columnCodes;
                    }
                    var columnArr = that._columnCodes.split(',');
                    var html = template('m_projectList/m_projectList_content',{
                        projectList:response.data.data,
                        columnCodes:that._columnCodes,
                        columnLen:columnArr.length
                    });
                    $(that.element).find('.data-list-container').html(html);
                    that.bindGotoProject();

                    that.getProjectConditions(function (data) {
                        that.filterHover();
                        that.filterActionClick();
                        that.sortActionClick();
                        if(that.settings.renderCallback!=null){
                            that.settings.renderCallback(data);
                        }
                    });


                } else {
                    S_dialog.error(response.info);
                }
            });
        }
        , paramSetVal:function (param) {
            var that = this;
            //条件查询
            $(that.element).find('input[name="keyword"]').val(param.keyword);
            that._filterData.filterStatus = param.status;
            that._filterData.filterCreateBy = param.companyNames;
            that._filterData.filterPartyA = param.partyANames;
            that._filterData.filterPartyB = param.partyBNames;
            that._filterData.filterSignDate = [param.startSignDate, param.endSignDate];
            that._filterData.filterAddress = [param.province,param.city,param.county];
            that._filterData.filterBuildName = param.buildTypeNames;
            that._filterData.filterCreateDate = [param.startTime,param.endTime];
            that._filterData.filterSortCreateDate = param.orderField;
            that._filterData.filterSortSignDate = param.orderSign;
            that._filterData.filterBusPersonInCharge = param.busPersonInCharge;
            that._filterData.filterBusAss = param.busPersonInChargeAssistant;
            that._filterData.filterDesignPersonInCharge = param.designPersonInCharge;
            that._filterData.filterDesignAss = param.designPersonInChargeAssistant;
        }
        //跳转详情
        , bindGotoProject: function () {
            var that = this;
            $(that.element).find('a[data-action="gotoProject"]').off('click').on('click', function (e) {
                var $btn = $(this);
                var pId = $btn.attr('data-pId');//项目ID
                var pName = $btn.attr('data-pName');//项目名称
                location.hash = '/projectDetails/basicInfo?id='+pId+'&projectName='+encodeURI(pName);
                stopPropagation(e);
                return false;
            });
        }
        //事件绑定
        , bindActionClick:function () {
            var that = this;
            $(that.element).find('button[data-action]').off('click').on('click',function () {
                var $this = $(this);
                var dataAction = $this.attr('data-action');
                switch (dataAction){
                    case 'searchProject':

                        that.renderProjectList(2);
                        break;
                    case 'selectColumn':
                        S_dialog.dialog({
                            contentEle: 'dialogOBox',
                            ele:dataAction,
                            lock: 4,
                            align: 'bottom left',
                            quickClose:false,
                            noTriangle:true,
                            width: '180',
                            height:'234',
                            tPadding: '0px',
                            url: rootPath+'/assets/module/m_common/m_dialog.html'

                        },function(d){//加载html后触发

                            var dialogEle = 'div[id="content:'+d.id+'"] .dialogOBox';

                            var iHtml = template('m_projectList/m_projectList_selectColumn',{
                                columnArr:that._columnArr,
                                columnCodes:that._columnCodes
                            });
                            $(dialogEle).html(iHtml);
                            $(dialogEle).parents('.ui-popup-modal').prev('div.ui-popup-backdrop').off('click').on('click',function () {
                                S_dialog.close($(dialogEle));
                            });
                            $(dialogEle).find('ul li a').off('click').on('click',function (e) {

                                var $this = $(this);
                                if($this.hasClass('active')){
                                    $this.removeClass('active');
                                }else{
                                    $this.addClass('active');
                                }
                                var codeStr = '';
                                $(dialogEle).find('ul li a.active').each(function () {
                                    codeStr+=$(this).attr('data-code')+',';
                                });
                                if(codeStr.length>0){
                                    codeStr = codeStr.substring(0,codeStr.length-1);
                                }
                                var option = {};
                                option.url = restApi.url_insertProCondition;
                                option.postData = {
                                    type:that._type,
                                    code:codeStr,
                                    companyId:window.currentCompanyId
                                };
                                that._columnCodes = codeStr;
                                m_ajax.postJson(option, function (response) {
                                    if (response.code == '0') {

                                        that.renderProjectListByColumn();

                                    } else {
                                        S_dialog.error(response.info);
                                    }
                                });
                            });
                        });
                        break;
                }
            });
        }
        //重新渲染
        , renderProjectListByColumn:function () {
            var that = this;
            var columnArr = that._columnCodes.split(',');
            var html = template('m_projectList/m_projectList_content',{
                projectList:that._projectList,
                columnCodes:that._columnCodes,
                columnLen:columnArr.length
            });
            $(that.element).find('.data-list-container').html(html);
            that.filterHover();
            that.filterActionClick();
            that.sortActionClick();
            that.bindGotoProject();
        }
        //筛选hover事件
        , filterHover:function () {
            var that =  this;
            $(that.element).find('.data-list-box  th').hover(function () {
                if( $(this).find(' .icon-filter i').hasClass('icon-shaixuan') && !$(this).find(' .icon-filter i').hasClass('fc-v1-blue')){
                    $(this).find(' .icon-filter').show();
                }
            },function () {
                if( $(this).find(' .icon-filter i').hasClass('icon-shaixuan') && !$(this).find(' .icon-filter i').hasClass('fc-v1-blue')) {
                    $(this).find(' .icon-filter').hide();
                }
            });
        }
        //筛选事件
        , filterActionClick:function () {
            var that = this;
            $(that.element).find('a.icon-filter').each(function (e) {

                var $this = $(this);
                var id = $this.attr('id');
                switch (id){
                    case 'filterCreateBy': //立项组织/立项人
                    case 'filterStatus'://项目状态
                    case 'filterPartyA'://甲方
                    case 'filterPartyB'://乙方
                    case 'filterBusPersonInCharge': //经营负责人
                    case 'filterBusAss': //经营负责人助理
                    case 'filterDesignPersonInCharge': //设计负责人
                    case 'filterDesignAss': //设计负责人助理

                        var currCheckValue = '',selectList = [];
                        if(id=='filterCreateBy'){
                            currCheckValue = that._filterData.filterCreateBy;
                            selectList.push({fieldName:'全部',fieldValue:''});
                            if(that._companyNames!=null && Object.getOwnPropertyNames(that._companyNames).length>0){
                                $.each(that._companyNames, function (key, value) {
                                    selectList.push({fieldValue: key, fieldName: value});
                                });
                            }
                        }
                        else if(id=='filterStatus'){
                            currCheckValue = that._filterData.filterStatus;
                            selectList = [
                                {fieldName:'全部',fieldValue:''},
                                {fieldName:'进行中',fieldValue:'0'},
                                {fieldName:'已完成-未结清',fieldValue:'2'},
                                {fieldName:'已完成-已结清',fieldValue:'4'},
                                {fieldName:'已暂停-未结清',fieldValue:'1'},
                                {fieldName:'已暂停-已结清',fieldValue:'5'},
                                {fieldName:'已终止-未结清',fieldValue:'3'},
                                {fieldName:'已终止-已结清',fieldValue:'6'}
                            ]
                        }
                        else if(id=='filterPartyA'){
                            currCheckValue = that._filterData.filterPartyA;
                            selectList.push({fieldName:'全部',fieldValue:''});
                            if(that._partyANames!=null && Object.getOwnPropertyNames(that._partyANames).length>0){
                                $.each(that._partyANames, function (key, value) {
                                    selectList.push({fieldValue: key, fieldName: value});
                                });
                            }
                        }
                        else if(id=='filterPartyB'){
                            currCheckValue = that._filterData.filterPartyB;
                            selectList.push({fieldName:'全部',fieldValue:''});
                            if(that._partyBNames!=null && Object.getOwnPropertyNames(that._partyBNames).length>0){
                                $.each(that._partyBNames, function (key, value) {
                                    selectList.push({fieldValue: key, fieldName: value});
                                });
                            }
                        }
                        else if(id=='filterBusPersonInCharge'){
                            currCheckValue = that._filterData.filterBusPersonInCharge;
                            selectList.push({fieldName:'全部',fieldValue:''});
                            if(that._busPersonInChargeMap!=null && Object.getOwnPropertyNames(that._busPersonInChargeMap).length>0){
                                $.each(that._busPersonInChargeMap, function (key, value) {
                                    selectList.push({fieldValue: key, fieldName: value});
                                });
                            }
                        }
                        else if(id=='filterBusAss'){
                            currCheckValue = that._filterData.filterBusAss;
                            selectList.push({fieldName:'全部',fieldValue:''});
                            if(that._busPersonInChargeAssistantMap!=null && Object.getOwnPropertyNames(that._busPersonInChargeAssistantMap).length>0){
                                $.each(that._busPersonInChargeAssistantMap, function (key, value) {
                                    selectList.push({fieldValue: key, fieldName: value});
                                });
                            }
                        }
                        else if(id=='filterDesignPersonInCharge'){
                            currCheckValue = that._filterData.filterDesignPersonInCharge;
                            selectList.push({fieldName:'全部',fieldValue:''});
                            if(that._designPersonInChargeMap!=null && Object.getOwnPropertyNames(that._designPersonInChargeMap).length>0){
                                $.each(that._designPersonInChargeMap, function (key, value) {
                                    selectList.push({fieldValue: key, fieldName: value});
                                });
                            }
                        }
                        else if(id=='filterDesignAss'){
                            currCheckValue = that._filterData.filterDesignAss;
                            selectList.push({fieldName:'全部',fieldValue:''});
                            if(that._designPersonInChargeAssistantMap!=null && Object.getOwnPropertyNames(that._designPersonInChargeAssistantMap).length>0){
                                $.each(that._designPersonInChargeAssistantMap, function (key, value) {
                                    selectList.push({fieldValue: key, fieldName: value});
                                });
                            }
                        }
                        if(currCheckValue!=''){
                            $this.closest('th').find('.icon-filter i').addClass('fc-v1-blue');
                            $this.closest('th').find('.icon-filter').show();
                        }

                        var iHtml = template('m_filterableField/m_filter_select',{
                            currCheckValue:currCheckValue,
                            selectList:selectList
                        });
                        var iTextObj = iHtml.getTextWH();
                        var iWHObj = setDialogWH(iTextObj.width,iTextObj.height);

                        $this.on('click',function (e) {
                            S_dialog.dialog({
                                contentEle: 'dialogOBox',
                                ele:id,
                                lock: 2,
                                align: 'bottom right',
                                quickClose:true,
                                noTriangle:true,
                                width: iWHObj.width,
                                height:iWHObj.height,
                                tPadding: '0px',
                                url: rootPath+'/assets/module/m_common/m_dialog.html'

                            },function(d){//加载html后触发

                                var dialogEle = 'div[id="content:'+d.id+'"] .dialogOBox';
                                $(dialogEle).html(iHtml);

                                $(dialogEle).find('.dropdown-menu a').on('click',function () {

                                    var val = $(this).attr('data-state-no');
                                    that._filterData[id] = val;
                                    that.renderProjectList(2);
                                    S_dialog.close($(dialogEle));
                                });
                            });
                            e.stopPropagation();
                            return false;
                        });

                        break;
                    case 'filterSignDate': //合同签订
                    case 'filterCreateDate'://立项时间

                        var startTime = '';
                        var endTime = '';

                        startTime = that._filterData[id][0];
                        endTime = that._filterData[id][1];


                        if(!_.isBlank(startTime) || !_.isBlank(endTime)){
                            $this.closest('th').find('.icon-filter i').addClass('fc-v1-blue');
                            $this.closest('th').find('.icon-filter').show();
                        }
                        $this.on('click',function (e) {
                            S_dialog.dialog({
                                contentEle: 'dialogOBox',
                                ele:id,
                                lock: 2,
                                align: 'bottom right',
                                quickClose:true,
                                noTriangle:true,
                                width: '220',
                                minHeight:'100',
                                tPadding: '0px',
                                url: rootPath+'/assets/module/m_common/m_dialog.html'


                            },function(d){//加载html后触发

                                var dialogEle = 'div[id="content:'+d.id+'"] .dialogOBox';

                                var iHtml = template('m_filterableField/m_filter_time',{
                                    startTime:startTime,
                                    endTime:endTime
                                });

                                $(dialogEle).html(iHtml);
                                $(dialogEle).find('button[data-action="sureTimeFilter"]').off('click').on('click',function () {

                                    var startTime = $(dialogEle).find('input[name="startTime"]').val();
                                    var endTime = $(dialogEle).find('input[name="endTime"]').val();

                                    that._filterData[id][0] = startTime;
                                    that._filterData[id][1] = endTime;

                                    that.renderProjectList(2);

                                    S_dialog.close($(dialogEle));
                                });
                                $(dialogEle).find('button[data-action="clearTimeInput"]').off('click').on('click',function () {
                                    $(dialogEle).find('input').val('');
                                });
                                $(dialogEle).find('i.fa-calendar').off('click').on('click',function () {
                                    $(this).closest('.input-group').find('input').focus();
                                });

                            });
                            e.stopPropagation();
                            return false;
                        });

                        break;
                    case 'filterAddress'://地点

                        var currProv = '',currCity = '',currCounty = '';

                        currProv = that._filterData.filterAddress[0];
                        currCity = that._filterData.filterAddress[1];
                        currCounty = that._filterData.filterAddress[2];
                        if(!_.isBlank(currProv)){
                            $this.closest('th').find('.icon-filter i').addClass('fc-v1-blue');
                            $this.closest('th').find('.icon-filter').show();
                        }
                        $this.on('click',function (e) {

                            S_dialog.dialog({
                                contentEle: 'dialogOBox',
                                ele:id,
                                lock: 2,
                                align: 'bottom right',
                                quickClose:true,
                                noTriangle:true,
                                width: '350',
                                minHeight:'110',
                                tPadding: '0px',
                                url: rootPath+'/assets/module/m_common/m_dialog.html'

                            },function(d){//加载html后触发

                                var dialogEle = 'div[id="content:'+d.id+'"] .dialogOBox';
                                var iHtml = template('m_filterableField/m_filter_address',{});
                                $(dialogEle).html(iHtml);

                                $(dialogEle).find("#selectRegion").citySelect({
                                    prov:_.isBlank(currProv)?'':currProv,
                                    city:_.isBlank(currCity)?'':currCity,
                                    dist:_.isBlank(currCounty)?'':currCounty,
                                    nodata:"none",
                                    required:false
                                });
                                $(dialogEle).find('button[data-action="cancel"]').on('click',function () {
                                    S_dialog.close($(dialogEle));
                                });
                                $(dialogEle).find('button[data-action="confirm"]').on('click',function () {

                                    var province = $(dialogEle).find('select[name="province"]').val();
                                    var city = $(dialogEle).find('select[name="city"]').val();
                                    var county = $(dialogEle).find('select[name="county"]').val();

                                    province = province==undefined?'':province;
                                    city = city==undefined?'':city;
                                    county = county==undefined?'':county;

                                    that._filterData.filterAddress = [province,city,county];
                                    that.renderProjectList(2);

                                    S_dialog.close($(dialogEle));
                                });

                            });
                            e.stopPropagation();
                            return false;;
                        });
                        break;
                    case 'filterBuildName'://功能分类
                        var currCheckedVal = '',checkList=[];

                        currCheckedVal = that._filterData.filterBuildName;
                        if(currCheckedVal!=''){
                            $this.closest('th').find('.icon-filter i').addClass('fc-v1-blue');
                            $this.closest('th').find('.icon-filter').show();
                        }

                        if(that._buildTypeNames!=null && Object.getOwnPropertyNames(that._buildTypeNames).length>0){
                            $.each(that._buildTypeNames, function (key, value) {
                                checkList.push({id: key, name: value});
                            });
                        }
                        //checkList.push({name:'--',id:''});

                        $this.on('click',function (e) {

                            S_dialog.dialog({
                                contentEle: 'dialogOBox',
                                ele:id,
                                lock: 2,
                                align: 'bottom right',
                                quickClose:true,
                                noTriangle:true,
                                width: '370',
                                minHeight:'110',
                                tPadding: '0px',
                                url: rootPath+'/assets/module/m_common/m_dialog.html'

                            },function(d){//加载html后触发

                                var dialogEle = 'div[id="content:'+d.id+'"] .dialogOBox';

                                var iHtml = template('m_filterableField/m_filter_checkbox',{
                                    currCheckedVal:currCheckedVal,
                                    checkList:checkList
                                });
                                $(dialogEle).html(iHtml);


                                $(dialogEle).find('button[data-action="confirm"]').on('click',function () {

                                    var currBuildType = '';
                                    $(dialogEle).find('input[name="ipt_check"]:checked').each(function () {
                                        var choseBuildType = $(this).val();
                                        currBuildType+=choseBuildType+',';
                                    });
                                    if(currBuildType.length>0){
                                        currBuildType = currBuildType.substring(0,currBuildType.length-1);
                                    }
                                    that._filterData.filterBuildName = currBuildType;

                                    that.renderProjectList(2);

                                    S_dialog.close($(dialogEle));
                                });
                                $(dialogEle).find('button[data-action="cancel"]').on('click',function () {
                                    S_dialog.close($(dialogEle));
                                });
                                var ifChecked = function (e) {
                                    $('input[name="ipt_check"]').iCheck('check');
                                };
                                var ifUnchecked = function (e) {
                                    $('input[name="ipt_check"]').iCheck('uncheck');
                                };
                                //初始化全选checkbox
                                $(dialogEle).find('input[name="ipt_allCheck"]').iCheck({
                                    checkboxClass: 'icheckbox_minimal-green',
                                    radioClass: 'iradio_minimal-green'
                                }).on('ifUnchecked.s', ifUnchecked).on('ifChecked.s', ifChecked);

                                function delAllBuildTypeCheck() {
                                    var checkedLen = $(dialogEle).find('input[name="ipt_check"]:checked').length;
                                    var allLen = $(dialogEle).find('input[name="ipt_check"]').length;
                                    if(checkedLen==allLen){
                                        $('input[name="ipt_allCheck"]').prop('checked',true);
                                    }else{
                                        $('input[name="ipt_allCheck"]').prop('checked',false);
                                    }
                                    $('input[name="ipt_allCheck"]').iCheck('update');
                                }
                                var ifCheckedByBuildType = function (e) {
                                    delAllBuildTypeCheck();
                                };
                                var ifUncheckedByBuildType = function (e) {
                                    delAllBuildTypeCheck();
                                };
                                //初始化功能分类checkbox
                                $(dialogEle).find('input[name="ipt_check"]').iCheck({
                                    checkboxClass: 'icheckbox_minimal-green',
                                    radioClass: 'iradio_minimal-green'
                                }).on('ifUnchecked.s', ifUncheckedByBuildType).on('ifChecked.s', ifCheckedByBuildType);
                                delAllBuildTypeCheck();

                            });
                            e.stopPropagation();
                            return false;
                        });
                        break;

                }

            });
        }
        //排序
        , sortActionClick:function () {
            var that = this;
            $(that.element).find('th[data-action="sort"]').each(function () {

                var $this = $(this);
                var sortType = $this.attr('data-sort-type');

                switch(sortType){
                    case 'createDate'://立项时间
                        var sortCreateDate = that._filterData.filterSortCreateDate;
                        var sortClass = '';
                        if(sortCreateDate=='0'){
                            sortClass = 'sorting_asc';
                        }else if(sortCreateDate=='1'){
                            sortClass = 'sorting_desc';
                        }else{
                            sortClass = 'sorting';
                        }
                        $this.removeClass().addClass(sortClass);
                        $this.off('click').on('click',function (e) {
                            if($this.hasClass('sorting')||$this.hasClass('sorting_asc')){
                                that._filterData.filterSortCreateDate = '1';
                            }
                            else if($this.hasClass('sorting_desc')){
                                that._filterData.filterSortCreateDate = '0';
                            }
                            that._filterData.filterSortSignDate = '';
                            that.renderProjectList(2);
                            e.stopPropagation();
                            return false;
                        });
                        break;
                    case 'signDate'://签订时间
                        var sortSignDate = that._filterData.filterSortSignDate;
                        var sortSignDateClass = '';
                        if(sortSignDate=='0'){
                            sortSignDateClass = 'sorting_asc';
                        }else if(sortSignDate=='1'){
                            sortSignDateClass = 'sorting_desc';
                        }else{
                            sortSignDateClass = 'sorting';
                        }
                        $this.removeClass().addClass(sortSignDateClass);
                        $this.off('click').on('click',function (e) {
                            if($this.hasClass('sorting')||$this.hasClass('sorting_asc')){
                                that._filterData.filterSortSignDate = '1';
                            }
                            else if($this.hasClass('sorting_desc')){
                                that._filterData.filterSortSignDate = '0'
                            }
                            that._filterData.filterSortCreateDate = '';
                            that.renderProjectList(2);
                            e.stopPropagation();
                            return false;
                        });
                        break;
                }

            });
        }

    });

    /*
     1.一般初始化（缓存单例）： $('#id').pluginName(initOptions);
     2.强制初始化（无视缓存）： $('#id').pluginName(initOptions,true);
     3.调用方法： $('#id').pluginName('methodName',args);
     */
    $.fn[pluginName] = function (options, args) {
        var instance;
        var funcResult;
        var jqObj = this.each(function () {

            //从缓存获取实例
            instance = $.data(this, "plugin_" + pluginName);

            if (options === undefined || options === null || typeof options === "object") {

                var opts = $.extend(true, {}, defaults, options);

                //options作为初始化参数，若args===true则强制重新初始化，否则根据缓存判断是否需要初始化
                if (args === true) {
                    instance = new Plugin(this, opts);
                } else {
                    if (instance === undefined || instance === null)
                        instance = new Plugin(this, opts);
                }

                //写入缓存
                $.data(this, "plugin_" + pluginName, instance);
            }
            else if (typeof options === "string" && typeof instance[options] === "function") {

                //options作为方法名，args则作为方法要调用的参数
                //如果方法没有返回值，funcReuslt为undefined
                funcResult = instance[options].call(instance, args);
            }
        });

        return funcResult === undefined ? jqObj : funcResult;
    };


})(jQuery, window, document);
/**
 * Created by Wuwq on 2017/3/4.
 */
;(function ($, window, document, undefined) {

    "use strict";
    var pluginName = "m_projectMember",
        defaults = {
            $projectId: null,
            $projectName:null
        };

    function Plugin(element, options) {
        this.element = element;

        this.settings = $.extend({}, defaults, options);
        this._defaults = defaults;
        this._name = pluginName;
        this.init();
    }

    $.extend(Plugin.prototype, {
        init: function () {
            var that = this;
            //that._bindPage();
            that._renderHtml();
        },
        _renderHtml: function () {
            var that = this;
            var option = {};
            option.classId = that.element;
            option.url = restApi.url_getProjectParticipants + '/' + that.settings.$projectId;
            m_ajax.getJson(option, function (response) {
                if (response.code == '0') {
                    var parts = response.data;
                    var html = template('m_projectMember/m_projectMember', {
                        parts: parts,
                        rootpath: window.rootPath,
                        currentCompanyUserId: window.currentCompanyUserId,
                        currentCompanyId:window.currentCompanyId,
                        currentUserId : window.currentUserId,
                        projectName:that.settings.$projectName,
                        isOrgManager : window.currentRoleCodes!=null && window.currentRoleCodes.indexOf('sys_enterprise_logout')>-1?1:0//是否是当前组织企业负责人
                    });
                    $(that.element).html(html);
                    that._bindBtn();
                } else {
                    S_dialog.error(response.info);
                }
            });
        }
        , _bindBtn: function () {
            var that = this;
            $(that.element).find('a[data-action]').click(function (event) {//移交经营负责人与项目负责人按钮
                var $btn=$(this);
                var action = $(this).attr('data-action');
                var companyId = $(this).attr('data-companyId');//当前要获取的项目立项组织的index
                var options = {};

                options.url = restApi.url_getOrgTree;
                options.isASingleSelectUser = true;
                options.delSelectedUserCallback = function () {

                };
                if (action == 'changeOperatorPerson') {
                    var operatorPersonId = $(this).attr('data-id'),userName=$(this).attr('data-user-name');
                    options.title = '选择经营负责人';
                    options.selectedUserList = [{
                        id:operatorPersonId,
                        userName:userName
                    }];
                    options.selectUserCallback = function (data, event) {
                        data.type = 1;
                        var targetUser='<strong style="color:red;margin:0 3px;">'+data.userName+'</strong>';
                        S_dialog.confirm('确定将经营负责人更换为'+targetUser+'？',function(){
                            that._postManagerChange(data,companyId,event);
                        },function(){
                            //S_dialog.close($(event));
                        });
                    }
                } else if (action == 'changeManagerPerson') {
                    var designPersonId = $(this).attr('data-id'),userName=$(this).attr('data-user-name');
                    options.title = '选择设计负责人';
                    options.selectedUserList = [{
                        id:designPersonId,
                        userName:userName
                    }];
                    options.selectUserCallback = function (data, event) {
                        data.type = 2;
                        var targetUser='<strong style="color:red;margin:0 3px;">'+data.userName+'</strong>';
                        S_dialog.confirm('确定将设计负责人更换为'+targetUser+'？', function () {
                            that._postManagerChange(data, companyId, event);
                        }, function () {
                            //S_dialog.close($(event));
                        });
                    }
                }
                $('body').m_orgByTree(options);
                return false;
            });
        }
        //移交经营负责人或项目负责人的请求
        , _postManagerChange: function (data, companyId, event) {
            var that = this;
            var option = {};
            option.url = restApi.url_updateProjectManager;
            option.postData = {};
            option.postData.projectId = that.settings.$projectId;
            option.postData.companyId = companyId;
            option.postData.type = data.type;
            option.postData.companyUserId = data.companyUserId;
            m_ajax.postJson(option, function (response) {
                if (response.code == '0') {
                    S_dialog.close($(event));
                    that._renderHtml();
                    if(data.type==1){//移交经营负责人会影响项目权限的编辑更改，需要刷新数据
                        that._refreshMenu();
                    }
                    S_toastr.success('保存成功！');
                } else {
                    S_dialog.error(response.info);
                }
            })
        }
        //刷新当前菜单
        , _refreshMenu: function () {
            var that=this,option = {};
            option.$projectId = that.settings.$projectId;
            option.$projectName = that.settings.$projectName;
            //option.$type = 'projectMember';
            $('#content-right').m_projectMenu(option);
        }
    });

    $.fn[pluginName] = function (options) {
        return this.each(function () {
            new Plugin(this, options);
        });
    };

})(jQuery, window, document);

/**
 *
 * Created by veata on 2016/12/22.
 */
;(function ($, window, document, undefined) {

    "use strict";
    var pluginName = "m_changeManager",
        defaults = {
            adminInfo:{},
            title:null,
            type:null,//type=1：系统管理员，type=2：企业负责人
            oldSysManagerUserId:null,//原此系统管理员的用户ID
            oldOrgManagerUserId:null,//原企业负责人的用户ID
            companyId:null,
            saveCallback:null
        };

    // The actual plugin constructor
    function Plugin(element, options) {
        this.element = element;

        this.settings = $.extend({}, defaults, options);
        this._defaults = defaults;
        this._name = pluginName;
        this._type = 1;//1=移交管理员，2＝指定管理员，3＝移交企业负责人，4＝指定企业负责人
        this._title = '移交管理员';
        this.init();
    }

    // Avoid Plugin.prototype conflicts
    $.extend(Plugin.prototype, {
        init: function () {
            var that = this;
            that.initHtmlData();
        }
        ,initHtmlData:function(){
            var that = this;

            if(that.settings.type!=null && that.settings.type==1 && that.settings.oldSysManagerUserId!=null && that.settings.oldSysManagerUserId == window.currentUserId){//移交管理员
                that._type = 1;
                that._title = '移交管理员';
            }else if(that.settings.type!=null && that.settings.type==1 && that.settings.oldSysManagerUserId!=null && that.settings.oldSysManagerUserId != window.currentUserId){//指定管理员
                that._type = 2;
                that._title = '指定管理员';
            }else if(that.settings.type!=null && that.settings.type==2 && that.settings.oldOrgManagerUserId!=null && that.settings.oldOrgManagerUserId == window.currentUserId){//移交企业负责人
                that._type = 3;
                that._title = '移交企业负责人';
            }else if(that.settings.type!=null && that.settings.type==2 && that.settings.oldOrgManagerUserId!=null && that.settings.oldOrgManagerUserId != window.currentUserId){//指定企业负责人
                that._type = 4;
                that._title = '指定企业负责人';
            }

            S_dialog.dialog({
                title:that._title,//that.settings.title||'选择人员',
                contentEle:'dialogOBox',
                lock:3,
                width:'390',
                minHeight:'100',
                tPadding:'0px',
                url:rootPath+'/assets/module/m_common/m_dialog.html',
                cancel:function () {

                },
                ok:function () {
                    var flag = $("form.ensureChangeAdministraterOBox").valid();
                    if(flag){
                        var data = that.settings.adminInfo;
                        data.companyId = that.settings.companyId;
                        //data.adminPassword = $('.dialogOBox').find('input[name="adminPassword"]').val();
                        // data.newAdminPassword = $('.dialogOBox').find('input[name="newAdminPassword"]').val();

                        if(that._type==1 || that._type==3){
                            data.flag='1'
                        }else {
                            data.flag='2';
                        }
                        data.type = that.settings.type;


                        var options= {};
                        options.classId = '#content-right';
                        options.url = restApi.url_transferSys;
                        options.postData = data;
                        m_ajax.postJson(options,function (response) {
                            if(response.code=='0'){

                                if(that.settings.type!=null && that.settings.type==1){//管理员
                                    if(that.settings.adminInfo!=null && that.settings.adminInfo.userId!=window.currentUserId
                                        && that.settings.oldOrgManagerUserId!=null && that.settings.oldOrgManagerUserId!=window.currentUserId){//企业负责人或系统管理员皆不是指定的人
                                        S_dialog.success('处理成功，请重新登录!','提示',function(){
                                            window.location.href = rootPath+'/iWork/sys/logout';
                                        })
                                    }else{
                                        S_toastr.success('处理成功！');
                                        if(that.settings.saveCallback!=null){
                                            that.settings.saveCallback();
                                        }
                                    }
                                    that.permissionSettings();//刷新组件
                                }else{//企业负责人
                                    if(that.settings.adminInfo!=null && that.settings.adminInfo.userId!=window.currentUserId
                                        && that.settings.oldSysManagerUserId!=null && that.settings.oldSysManagerUserId!=window.currentUserId){//企业负责人或系统管理员皆不是指定的人
                                        S_dialog.success('处理成功，请重新登录!','提示',function(){
                                            window.location.href = rootPath+'/iWork/sys/logout';
                                        })
                                    }else {
                                        S_toastr.success('处理成功！');
                                        if(that.settings.saveCallback!=null){
                                            that.settings.saveCallback();
                                        }
                                    }
                                    that.permissionSettings();//刷新组件
                                }
                            }else {
                                S_dialog.error(response.info);
                            }
                        });
                    }else{
                        return false;
                    }
                }

            },function(d){//加载html后触发
                var $data = {};
                $data.adminInfo = that.settings.adminInfo;
                /*$data.oldUserId = that.settings.oldUserId;
                $data.type = that.settings.type;
                $data.currentUserId = window.currentUserId;*/
                $data.type = that._type;
                var html = template('m_role/m_changeManager',$data);
                that.element = 'div[id="content:'+d.id+'"] .dialogOBox';
                $(that.element).html(html);
                //that.submit_validate();
            });

        }
        //移交管理员密码的表单验证
        ,submit_validate:function(){
            $("form.ensureChangeAdministraterOBox").validate({
                rules: {
                    adminPassword: "required",
                    newAdminPassword: {
                        required: true,
                        rangelength:[6,12],
                        checkSpace:true
                    }
                },
                messages: {
                    adminPassword: "请输入管理密码！",
                    newAdminPassword: {
                        required:'请输入移交后的管理员密码！',
                        rangelength: "密码为6-12位！",
                        checkSpace: "密码不应含有空格!"
                    }

                }
            });
            $.validator.addMethod("checkSpace", function(value, element) {
                var pattern=/^\S+$/gi;
                return this.optional(element) || pattern.test( value ) ;
            }, "密码不应含有空格!");
        }
        //权限设置
        ,permissionSettings:function () {
            var option = {};
            option.isAddUser = 1;
            $('#content-box').m_roleList(option);
        }


    });

    $.fn[pluginName] = function (options) {
        return this.each(function () {

            //if (!$.data(this, "plugin_" + pluginName)) {
            $.data(this, "plugin_" +
                pluginName, new Plugin(this, options));
            //}
        });
    };

})(jQuery, window, document);

/**
 *
 * Created by veata on 2016/12/22.
 */
;(function ($, window, document, undefined) {

    "use strict";
    var pluginName = "m_changeManagerPWD",
        defaults = {
            adminInfo:{},
            title:null,
            companyId:null,
            saveCallback:null
        };

    // The actual plugin constructor
    function Plugin(element, options) {
        this.element = element;

        this.settings = $.extend({}, defaults, options);
        this._defaults = defaults;
        this._name = pluginName;
        this.init();
    }

    // Avoid Plugin.prototype conflicts
    $.extend(Plugin.prototype, {
        init: function () {
            var that = this;
            that.initHtmlData();
        }
        ,initHtmlData:function(){
            var that = this;

            S_dialog.dialog({
                title:'修改管理员密码',
                contentEle:'dialogOBox',
                lock:3,
                width:'600',
                minHeight:'300',
                tPadding:'0px',
                url:rootPath+'/assets/module/m_common/m_dialog.html',
                cancel:function () {

                    },
                ok:function () {
                    var options = {};
                    options.url = restApi.url_changAdminPassword;
                    options.postData = $('form.changeAdminPWDOBox').serializeObject();
                    var flag = $("form.changeAdminPWDOBox").valid();
                    if(!flag){
                        return false;
                    }else{
                        m_ajax.postJson(options,function (response) {
                            if(response.code=='0'){
                                S_dialog.success('修改成功，请重新登录!','提示',function(){
                                    window.location.href = rootPath+'/iWork/sys/logout';
                                })
                            }else {
                                S_dialog.error(response.info);
                            }

                        });
                    }

                    }
                }

                ,function(d){//加载html后触发
                var $data = {};
                var html = template('m_role/m_changeManagerPWD',$data);
                $('div[id="content:'+d.id+'"] .dialogOBox').html(html);
                that.changeAdminPWDOBox_validate();
            });

        }
        ,changeAdminPWDOBox_validate:function(){//step1的表单验证
            $("form.changeAdminPWDOBox").validate({
                rules: {
                    oldPassword: 'required',
                    newPassword: {
                        required: true,
                        rangelength:[6,12],
                        checkSpace:true
                    },
                    changeAdminRePwd: {
                        required:true,
                        rangelength:[6,12],
                        checkSpace:true,
                        equalTo:'#newPassword'
                    }
                },
                messages: {
                    oldPassword: '请输入旧密码！',
                    newPassword: {
                        required:'请输入新密码！',
                        rangelength: "密码为6-12位！",
                        checkSpace: "密码不应含有空格!"
                    },
                    changeAdminRePwd: {
                    required:'请确认新密码！',
                    rangelength: "密码为6-12位！",
                    checkSpace: "密码不应含有空格!",
                    equalTo:'两次输入的密码不相同，请重新输入！！'
                    }
                }
            });
            $.validator.addMethod("checkSpace", function(value, element) {
                var pattern=/^\S+$/gi;
                return this.optional(element) || pattern.test( value ) ;
            }, "密码不应含有空格!");
        },



    });

    $.fn[pluginName] = function (options) {
        return this.each(function () {

            //if (!$.data(this, "plugin_" + pluginName)) {
            $.data(this, "plugin_" +
                pluginName, new Plugin(this, options));
            //}
        });
    };

})(jQuery, window, document);

/**
 *
 * Created by veata on 2016/12/22.
 */
;(function ($, window, document, undefined) {

    "use strict";
    var pluginName = "m_roleAuthorization",
        defaults = {
            user: null,
            userId: null,
            dialogWidth: null,
            isDialogShow: null,//判断是否是打开弹窗方式显示，当为1时则为查看人员权限总览（弹窗），为2时是人员权限预览（弹窗），为3时是编辑权限里的人员权限编辑（弹窗），为null时则是后台的编辑权限（非弹窗）
            dialogTitle: null
        };

    // The actual plugin constructor
    function Plugin(element, options) {
        this.element = element;

        this.settings = $.extend({}, defaults, options);
        this._defaults = defaults;
        this._name = pluginName;
        this._element = null;
        this.init();
    }

    // Avoid Plugin.prototype conflicts
    $.extend(Plugin.prototype, {
        init: function () {
            var that = this;
            that.initHtmlData();
        },
        initHtmlData: function () {
            var that = this;
            var userIds = '';
            var options = {};
            options.url = restApi.url_getRolePermissionByUser + '/' + that.settings.userId;
            m_ajax.get(options, function (response) {
                if (response.code == '0') {
                    var rolePermissions = response.data;
                        S_dialog.dialog({
                                title: that.settings.dialogTitle || ('人员权限总览' + that.settings.user),
                                contentEle: 'dialogOBox',
                                lock: 3,
                                width: that.settings.dialogWidth || '700',
                                minHeight: '400',
                                tPadding: '0px',
                                url: rootPath + '/assets/module/m_common/m_dialog.html',
                                cancelText: '关闭',
                                cancel: function () {
                                },
                                okText: '保存',
                                ok: function () {

                                    var errorTip = '';
                                    $('.m-roleList').find('tr td[data-type="roleUsersTd"]').each(function () {

                                        var $this = $(this);
                                        var pCode = $this.parents('tbody').attr('p-code');
                                        var code = $this.parent().find('td[p-code]:first').attr('p-code');
                                        var name = $this.parent().find('span[data-type="roleName"]:last').text();
                                        var len = $this.find('.user-name').length;
                                        var isChecked = $('.m-roleAuthorization').find('td[p-code="'+code+'"]').next().find('input[name="userPermission"]').is(':checked');
                                        if(pCode=='OrgManager'||pCode=='SystemManager'){
                                            return true;
                                        }
                                        if(len==1 && isChecked==false){
                                            var userId = $this.find('.user-span').attr('userid');
                                            if(userId==that.settings.userId) {
                                                errorTip = '“' + name + '”角色必须保留至少一个成员！';
                                                return false;
                                            }
                                        }
                                    });
                                    if(errorTip!=''){
                                        S_toastr.warning(errorTip);
                                        return false;
                                    }
                                    return that.saveRoleAuthorization(rolePermissions);
                                }
                            }
                            , function (d) {//加载html后触发
                                that._element = 'div[id="content:' + d.id + '"] .dialogOBox';
                                var $data = {};
                                $data.rolePermissions = rolePermissions;
                                var html = template('m_role/m_roleAuthorization', $data);
                                $(that._element).html(html);
                                that.bindChoseClick();
                                $(that._element).find('div.i-checks input[type="checkbox"]').each(function () {
                                    var isChecked = $(this).attr('isCheck');
                                    if (isChecked == 1) {
                                        $(this).iCheck('check');
                                    }
                                });
                            });
                } else {
                    S_dialog.error(response.info);
                }

            });

        }
        //给人员权限选择里的‘全选’，‘全不选’，‘恢复原始’等按钮绑定点击事件
        , bindChoseClick: function () {
            var that = this;
            $(that._element).find('a[data-action],td[data-action]').bind('click', function (event) {
                var action = $(this).attr('data-action');
                if (action == 'chooseAll') {//点击'全选'
                    $(that._element).find('div.i-checks input[type="checkbox"]').iCheck('check');
                } else if (action == 'chooseNothing') {//点击'全不选'
                    $(that._element).find('div.i-checks input[type="checkbox"]').iCheck('uncheck');
                } else if (action == 'recoveryChoice') {//点击'恢复原始'
                    $(that._element).find('div.i-checks input[type="checkbox"]').each(function () {
                        var isChecked = $(this).attr('isCheck');
                        if (isChecked == 1) {
                            $(this).iCheck('check');
                        } else {
                            $(this).iCheck('uncheck');
                        }
                    });
                } else if (action == 'chooseAllRoleItem') {//点击单条权限的'全选'
                    $(this).closest('tbody').find('div.i-checks input[type="checkbox"]').iCheck('check');
                } else if (action == 'delAllRoleItem') {//点击单条权限的'全不选'
                    $(this).closest('tbody').find('div.i-checks input[type="checkbox"]').iCheck('uncheck');;
                } else if (action == 'chooseUserPermission') {//点击checkbox所在的td进行勾选checkbox
                    var ischeck = $(this).find('div.i-checks input[type="checkbox"]').iCheck('check');
                    $(this).find('div.i-checks input[type="checkbox"]').iCheck(ischeck ? 'uncheck' : 'check');
                }
            });
        }
        //保存角色权限编辑
        ,saveRoleAuthorization:function(rolePermissions) {
            var that = this;
            var userId = that.settings.userId;
            var option = {};
            option.postData = {};
            option.postData.permissionIds = [];
            $('.fa-check').each(function () {
                var id = $(this).attr('permission-id');
                option.postData.permissionIds.push(id);
            });
            option.postData.userId = userId;
            option.url = restApi.url_userPermission + '/' + userId;
            if ($('div.i-checks input[type="checkbox"]:checked').length > 0) {
                $('div.i-checks input[type="checkbox"]:checked').each(function () {
                    option.postData.permissionIds.push($(this).attr('permission-id'));
                });
            }
            m_ajax.postJson(option, function (response) {
                if (response.code == '0') {
                    S_toastr.success('保存成功！');
                    var $data = {};
                    /*$(that.element).m_roleList($data);*/
                    that._refreshMenu();
                } else {
                    S_dialog.error(response.info);
                }
            });
        }
        //刷新左菜单(权限有变可能导致左菜单变化)
        ,_refreshMenu:function () {
            $('#content-right').m_org_menu({
                $dataAction:'permissionSettings'
            });
        }

    });

    $.fn[pluginName] = function (options) {
        return this.each(function () {

            //if (!$.data(this, "plugin_" + pluginName)) {
            $.data(this, "plugin_" +
                pluginName, new Plugin(this, options));
            //}
        });
    };

})(jQuery, window, document);

/**
 *
 * Created by veata on 2016/12/22.
 */
;(function ($, window, document, undefined) {

    "use strict";
    var pluginName = "m_roleList",
        defaults = {
            getDataUrl: null
        };

    // The actual plugin constructor
    function Plugin(element, options) {
        this.element = element;

        this.settings = $.extend({}, defaults, options);
        this._defaults = defaults;
        this._name = pluginName;
        this._orgManagerUserId = null;//企业负责人用户ID
        this._sysManagerUserId = null;//系统管理员用户ID
        this._orgManagerCompanyUserId = null;//企业负责人员工ID
        this._sysManagerCompanyUserId = null;//系统管理员员工ID
        this._orgManagerUserName = null;//企业负责人员工姓名
        this._sysManagerUserName = null;//系统管理员员工姓名
        this.init();
    }

    // Avoid Plugin.prototype conflicts
    $.extend(Plugin.prototype, {
        init: function () {
            var that = this;
            that.initHtmlData();
        },
        initHtmlData: function (callBack) {
            var that = this;
            var userIds = '';
            var options = {};
            options.url = that.settings.getDataUrl || restApi.url_getRoleUserPermission;
            m_ajax.get(options, function (response) {
                if (response.code == '0') {
                    var rolePermissions = response.data;
                    var $data = {};
                    $data.rolePermissions = rolePermissions;
                    $data.currentCompanyUserId = window.currentCompanyUserId;
                    var html = template('m_role/m_roleList', $data);
                    $(that.element).html(html);

                    var orgManagerObj = $(that.element).find('span[class^="user-name"][p-code="sys_enterprise_logout"]').eq(0);
                    var sysManagerObj = $(that.element).find('span[class^="user-name"][p-code="background_management"]').eq(0);
                    //$(that.element).find('#orgManagerA').text(orgManagerObj.text());
                    //$(that.element).find('#sysManagerA').text(sysManagerObj.text());
                    that._orgManagerUserId = orgManagerObj.attr('userId');
                    that._sysManagerUserId = sysManagerObj.attr('userId');
                    that._orgManagerCompanyUserId = orgManagerObj.attr('data-company-user-id');
                    that._sysManagerCompanyUserId = sysManagerObj.attr('data-company-user-id');
                    that._orgManagerUserName = orgManagerObj.text();
                    that._sysManagerUserName = sysManagerObj.text();

                    if(that._sysManagerUserId == window.currentUserId){//移交管理员
                        $(that.element).find('#sysManagerA').next().attr('title','移交管理员');
                    }else if(that._sysManagerUserId != window.currentUserId){//指定管理员
                        $(that.element).find('#sysManagerA').next().attr('title','指定管理员');
                    }
                    if(that._orgManagerUserId == window.currentUserId){//移交企业负责人
                        $(that.element).find('#orgManagerA').next().attr('title','移交企业负责人');
                    }else if(that._orgManagerUserId != window.currentUserId){//指定企业负责人
                        $(that.element).find('#orgManagerA').next().attr('title','指定企业负责人');
                    }

                    that.bindMouseOverFun();
                    that.bindAddUserClick();
                } else {
                    S_dialog.error(response.info);
                }

            });

        }
        //给每个td以及含有 span.user-span的标签绑定鼠标经过效果，鼠标经过时即显示，鼠标移出即隐藏
        , bindMouseOverFun: function () {
            var that = this;
            $(that.element).find('td.vmiddle').bind('mouseover', function () {//鼠标进入时
                if ($(this).find('a[data-action="addMemberBtn"]').is('.hide')) {
                    $(this).find('a[data-action="addMemberBtn"]').removeClass('hide');
                }

            }).bind('mouseout', function () {//鼠标滑出时
                if (!($(this).find('a[data-action="addMemberBtn"]').is('.hide'))) {
                    $(this).find('a[data-action="addMemberBtn"]').addClass('hide');
                }
            });
            $(that.element).find('td span.user-span').bind('mouseover', function () {//鼠标进入时
                $(this).css('background-color', '#f5f5f5');
                $(this).find('span.user-del').removeClass('hide');

            }).bind('mouseout', function () {//鼠标滑出时
                $(this).css('background-color', '#fff');
                $(this).find('span.user-del').addClass('hide');
            });
        }
        //给每个添加成员按钮绑定点击事件
        , bindAddUserClick: function () {

            var that = this;
            $(that.element).find('a[data-action],span[data-action]').bind('click', function () {
                var $this = $(this);
                var action = $this.attr('data-action');
                var isOrgManager = $this.closest('TR').attr('role-code');
                if (action == 'addMemberBtn') {//权限组(权限表)－添加人员按钮
                    var options = {};
                    options.url = restApi.url_getOrgTreeForSearch;
                    options.isShowChoseUserList = 1;
                    options.selectedUserList = [];
                    options.chosedUserIds = '';
                    options.okText = '保存';
                    options.selectUserCallback = function (data, event) {//选择人员回调方法
                        if(isOrgManager=='OrgManager'){
                            that._saveUserRolePermission(data,$this);
                        }
                    };
                    if(isOrgManager!='OrgManager') {
                        options.saveCallback = function (data) {//点击保存回调方法
                            that._saveUserRolePermission(data,$this);
                        };
                    }else{
                        options.isASingleSelectUser = true;
                        options.title = "选择人员";
                    }
                    $(that.element).m_orgByTree(options);
                } else if (action == 'deleteRoleUser') {//删除角色人员
                    that._delUserRolePermission($this)
                } else if (action == 'chooseRoleByDialog') {//个人权限保存
                    that._saveUerRolePermissionByUser($this);
                } /*else if (action == 'transferAdministrator') {//移交管理员
                    that._changeManager($this);

                }*/else if (action == 'transferOrgManager') {//移交或指定企业负责人
                    that._changeManager($this,2);

                }else if (action == 'transferSysManager') {//移交或指定管理员
                    that._changeManager($this,1);

                }
            });
        }

        //保存用户角色权限
        ,_saveUserRolePermission:function (data,$this) {
            var that = this,option = {};
            var isParent = $this.parents('td').is('.pTarget');
            var roleId = $this.parent().parent().attr('id');
            var isOrgManager = $this.closest('TR').attr('role-code');
            var selectedUserList = data.selectedUserList;
            option.classId = '#content-right';
            option.postData = {};
            if (isParent) {
                option.postData.roleId = roleId;
                option.url = restApi.url_roleUser;
            } else {
                option.postData.permissionId = roleId;
                option.url = restApi.url_saveUserPermission + '/' + roleId;
            }
            option.postData.userIds = [];
            $.each(selectedUserList, function (i, item) {
                option.postData.userIds.push(item.userId);
            });
            if(isOrgManager=='OrgManager'){

                var delUserId = $this.closest('TBODY[p-code="OrgManager"]').find('tr .user-span').attr('userid');//暂时只有一种，后续多种此处需要作修改
                option.postData.deleteUserIds = [];
                option.postData.deleteUserIds.push(delUserId);
            }
            m_ajax.postJson(option, function (response) {
                if (response.code == '0') {
                    S_toastr.success('保存成功！');
                    S_dialog.close($('div[id="' + data.id + '"]'));
                    var $data = {};
                    /*$(that.element).m_roleList($data);*/
                    that._refreshMenu();
                    //location.hash = '/backstageMgt/permissionSettings';
                } else {
                    S_dialog.error(response.info);
                }
            });
        }

        //删除用户角色权限
        ,_delUserRolePermission:function ($this) {
            var that = this;
            var userId = $this.parents('.user-span').attr('userId');
            var roleId = $this.parent().attr('roleId');
            var pcode=$this.closest('td').attr('p-code');

            //if(pcode==='project_manager'||pcode==='design_manager'||pcode==='project_charge_manage'){
                if($this.closest('td').find('.user-name').length===1){
                    S_toastr.warning("该角色必须保留至少一个成员");
                    return;
                }
            //}

            $this.m_popConfirm({
                content: '您确定要删除吗？',
                hasClick: true,
                onYes: function (el) {
                    var $el = $(el);
                    var option = {};
                    option.url = restApi.url_deleteUserPermission + '/' + roleId + '/' + userId;
                    m_ajax.get(option, function (response) {
                        if (response.code == '0') {
                            S_toastr.success('删除成功！');
                            var $data = {};
                            /*$(that.element).m_roleList($data);*/
                            that._refreshMenu();
                        } else {
                            S_dialog.error(response.info);
                        }
                    });
                }
            });
        }

        //个人权限保存
        ,_saveUerRolePermissionByUser:function ($this) {
            var data = {},that = this;
            var userId = $this.parent().attr('userId');
            var user = $this.text();
            $(that.element).m_roleAuthorization({user:user,userId:userId});

        }

        //移交管理员
        ,_changeManager:function (obj,type) {
            var options = {},that = this;
            options.title = '选择管理员';

            var userId = '',userName='';
            if(type==1){
                userId = that._sysManagerCompanyUserId;
                userName = that._sysManagerUserName;
            }else{
                userId = that._orgManagerCompanyUserId;
                userName = that._orgManagerUserName;
                options.title = '选择企业负责人';
            }
            if (userId != null && userId != '') {
                options.selectedUserList = [{
                    id: userId,
                    userName: userName
                }];
            }
            options.isASingleSelectUser = true;
            options.cancelText = '关闭';
            options.isOkSave = false;
            options.selectUserCallback = function (data) {
                var option = {};
                option.title = '提示';
                option.adminInfo = {};
                option.companyId = window.currentCompanyId;
                option.adminInfo.userName = data.userName;
                option.adminInfo.userId = data.userId;
                option.type = type;
                option.oldSysManagerUserId = that._sysManagerUserId;
                option.oldOrgManagerUserId = that._orgManagerUserId;
                option.saveCallback = function () {
                    S_dialog.close($('div[id="' + data.id + '"]'));
                };

                $('body').m_changeManager(option);
                //S_dialog.close($('div[id="' + data.id + '"]'));
            };
            $('body').m_orgByTree(options);
        }
        //刷新左菜单(权限有变可能导致左菜单变化)
        ,_refreshMenu:function () {
            $('#content-right').m_org_menu({
                $dataAction:'permissionSettings'
            });
        }

    });

    $.fn[pluginName] = function (options) {
        return this.each(function () {

            //if (!$.data(this, "plugin_" + pluginName)) {
            $.data(this, "plugin_" +
                pluginName, new Plugin(this, options));
            //}
        });
    };

})(jQuery, window, document);

/**
 * 权限类型标示
 * Created by wrb on 2018/3/20.
 */
;(function ($, window, document, undefined) {

    "use strict";
    var pluginName = "m_roleRightsPreview",
        defaults = {
            $title:null,
            $isDialog:true,
            $type:1,
            $renderCallBack:null//弹窗回掉方法

        };

    // The actual plugin constructor
    function Plugin(element, options) {
        this.element = element;

        this.settings = $.extend({}, defaults, options);
        this._defaults = defaults;
        this._name = pluginName;

        this.init();
    }

    // Avoid Plugin.prototype conflicts
    $.extend(Plugin.prototype, {
        init: function () {
            var that = this;
            that.initHtmlData();
        },
        //初始化数据
        initHtmlData:function () {
            var that = this;
            if(that.settings.$isDialog){//以弹窗编辑
                S_dialog.dialog({
                    title: that.settings.$title || '权限预览',
                    contentEle: 'dialogOBox',
                    lock: 3,
                    width: '600',
                    minHeight:'450',
                    tPadding: '0px',
                    url: rootPath+'/assets/module/m_common/m_dialog.html',
                    cancelText:'关闭',
                    cancel:function () {
                    }
                },function(d){//加载html后触发

                    that.element = 'div[id="content:'+d.id+'"] .dialogOBox';
                    that.initHtmlTemplate();


                });
            }else{//不以弹窗编辑

            }
        }
        //生成html
        ,initHtmlTemplate:function () {
            var that = this;

            that.getRoleList(function (data) {
                var html = template('m_role/m_roleRightsPreview',{
                    rolePermissions:data
                });
                $(that.element).html(html);

                if(that.settings.$renderCallBack!=null){
                    that.settings.$renderCallBack(that.element);
                }
            });
        }
        //查出权限列表
        ,getRoleList:function (callBack) {
            var that = this;
            var options={};
            options.url= restApi.url_getRolePermissionByType;
            options.postData = {
                type:that.settings.$type
            };
            m_ajax.postJson(options,function (response) {
                if(response.code=='0'){
                    if(callBack!=null){
                        return callBack(response.data);
                    }
                }else {
                    S_dialog.error(response.info);
                }
            })
        }

    });

    $.fn[pluginName] = function (options) {
        return this.each(function () {

            //if (!$.data(this, "plugin_" + pluginName)) {
            $.data(this, "plugin_" +
                pluginName, new Plugin(this, options));
            //}
        });
    };

})(jQuery, window, document);



/**
 * Created by Wuwq on 2017/3/6.
 */
;(function ($, window, document, undefined) {

    "use strict";
    var pluginName = "m_sortableField",
        defaults = {
            swapId: null, /*交换区标签Id，用于临时存储当前状态*/
            field: null,
            sortType: '', /* '':没排序 asc：升序 desc：降序*/
            onChanged: null  /*function (sortField,sortType) {}*/
        };

    function Plugin(element, options) {
        this.element = element;

        this.settings = options;
        this._defaults = defaults;
        this._name = pluginName;

        this.settings.field = this.settings.field || $(this.element).attr('name');

        this.init();
    }

    $.extend(Plugin.prototype, {
        init: function () {
            var that = this;
            that._render();
            that._bindClick();
        }
        , _render: function () {
            var that = this;
            var $el = $(that.element);

            $el.addClass('field-sortable');
            $el.append('<span class="field-sort-indicator"></span>');

            //从交换区恢复或初始化状态
            if (that.settings.swapId && that.settings.swapId !== null) {
                var $swap = $(that.settings.swapId);
                if ($swap.length > 0) {
                    if ($swap.attr('data-sortField') === that.settings.field) {

                        var sortType = $swap.attr('data-sortType');
                        that.settings.sortType=sortType;
                        if (sortType === 'asc')
                            $el.addClass('field-sorted-asc');
                        else if (sortType === 'desc')
                            $el.addClass('field-sorted-desc');

                        //去掉其他列的排序状态
                        $el.closest('th').siblings().each(function (i, o) {
                            var $o = $(o);
                            $o.removeClass('field-sorted-asc');
                            $o.removeClass('field-sorted-desc');
                        });
                    }
                }
            }
        }
        , _bindClick: function () {
            var that = this;
            var $el = $(that.element);

            $el.find('.field-sort-indicator').click(function () {

                $el.removeClass('field-sorted-asc');
                $el.removeClass('field-sorted-desc');

                //去掉其他列的排序状态
                $el.closest('th').siblings().each(function (i, o) {
                    var $o = $(o);
                    $o.removeClass('field-sorted-asc');
                    $o.removeClass('field-sorted-desc');
                });

                /* '':没排序 asc：升序 desc：降序*/
                switch (that.settings.sortType) {
                    case '':
                        that.settings.sortType = 'asc';
                        $(that.element).addClass('field-sorted-asc');
                        break;
                    case 'asc':
                        that.settings.sortType = 'desc';
                        $(that.element).addClass('field-sorted-desc');
                        break;
                    case 'desc':
                        that.settings.sortType = '';
                        break;
                }

                //交换区更新状态
                if (that.settings.swapId && that.settings.swapId !== null) {
                    var $swap = $(that.settings.swapId);
                    if ($swap.length > 0) {
                        if(isNullOrBlank(that.settings.sortType))
                        {
                            $swap.removeAttr('data-sortField');
                            $swap.removeAttr('data-sortType');
                        } else{
                            $swap.attr('data-sortField', that.settings.field);
                            $swap.attr('data-sortType', that.settings.sortType);
                        }
                    }
                }

                if (that.settings.onChanged && that.settings.onChanged !== null)
                    that.settings.onChanged(that.settings.field, that.settings.sortType);
            });
        }
    });

    /*
     1.一般初始化（缓存单例）： $('#id').pluginName(initOptions);
     2.强制初始化（无视缓存）： $('#id').pluginName(initOptions,true);
     3.调用方法： $('#id').pluginName('methodName',args);
     */
    $.fn[pluginName] = function (options, args) {
        var instance;
        var funcResult;
        var jqObj = this.each(function () {

            //从缓存获取实例
            instance = $.data(this, "plugin_" + pluginName);

            if (options === undefined || options === null || typeof options === "object") {

                var opts = $.extend(true, {}, defaults, options);

                //options作为初始化参数，若args===true则强制重新初始化，否则根据缓存判断是否需要初始化
                if (args === true) {
                    instance = new Plugin(this, opts);
                } else {
                    if (instance === undefined || instance === null)
                        instance = new Plugin(this, opts);
                }

                //写入缓存
                $.data(this, "plugin_" + pluginName, instance);
            }
            else if (typeof options === "string" && typeof instance[options] === "function") {

                //options作为方法名，args则作为方法要调用的参数
                //如果方法没有返回值，funcReuslt为undefined
                funcResult = instance[options].call(instance, args);
            }
        });

        return funcResult === undefined ? jqObj : funcResult;
    };

})(jQuery, window, document);

/**
 * 请假汇总
 * Created by wrb on 2017/12/26.
 */
;(function ($, window, document, undefined) {

    "use strict";
    var pluginName = "m_leaveSummary",
        defaults = {
            $type:3//默认3=请假,4=出差
        };

    // The actual plugin constructor
    function Plugin(element, options) {
        this.element = element;

        this.settings = $.extend({}, defaults, options);
        this._defaults = defaults;
        this._name = pluginName;
        this.init();
    }

    // Avoid Plugin.prototype conflicts
    $.extend(Plugin.prototype, {
        init: function () {
            var that = this;
            var html = template('m_summary/m_leaveSummary', {
                type:that.settings.$type
            });
            $(that.element).html(html);
            that.getData();
        }

        //加载基本数据
        , getData: function () {
            var that = this;
            var option = {};
            option.classId = 'mySummaryListBox';
            option.param = {};
            option.param.type = that.settings.$type;

            option.param.startDate = $('input[name="startDate"]').val();
            option.param.endDate = $('input[name="endDate"]').val();
            option.param.applyName = $('input[name="applyName"]').val();
            option.param.leaveType = $('input[name="leaveType"]').val();
            option.param.auditPerson = $('input[name="auditPerson"]').val();

            paginationFun({
                eleId: '#mySummary-pagination-container',
                loadingId: '#mySummaryListData',
                url: restApi.url_getLeaveDetailList,
                params: option.param
            }, function (response) {
                // data为ajax返回数据
                if (response.code == '0') {

                    var $data = {};
                    $data.type = that.settings.$type;
                    $data.myDataList = response.data.data;
                    $data.rootPath = window.rootPath;
                    $data.pageIndex = $("#mySummary-pagination-container").pagination('getPageIndex');
                    var html = template('m_summary/m_leaveSummary_list', $data);
                    $('#mySummaryListData').html(html);
                    rolesControl();
                    that.bindClickOpenShowExp($data.myDataList);
                    that.bindActionClick();
                    that.filterHover();

                    return false;
                } else {
                    S_dialog.error(response.info);
                }
            });

        }
        //打开查看报销详情
        , bindClickOpenShowExp: function (data) {//openShowExp
            var that = this;
            $('#mySummaryListData').find('tr[data-action="openShowExp"]').each(function () {
                $(this).bind('click', function (event) {
                    var i = $(this).attr('i');
                    var options = {};
                    if(that.settings.$type==4){
                        options.$title = '出差详情';
                    }else{
                        options.$title = '请假详情';
                    }
                    options.$url = restApi.url_getLeaveDetail;
                    options.$detailData = data[i];
                    options.$type = that.settings.$type;
                    console.log(options);
                    $(this).m_leaveSummary_detail(options);
                    event.stopPropagation();
                    return false;
                });
            });
        }
        //筛选hover事件
        ,filterHover:function () {
            var that =  this;

            $(that.element).find('.mySummaryListBox  th').hover(function () {
                if( $(this).find(' .icon-filter i').hasClass('icon-shaixuan') && !$(this).find(' .icon-filter i').hasClass('fc-v1-blue')){
                    $(this).find(' .icon-filter').show();
                }
            },function () {
                if( $(this).find(' .icon-filter i').hasClass('icon-shaixuan') && !$(this).find(' .icon-filter i').hasClass('fc-v1-blue')) {
                    $(this).find(' .icon-filter').hide();
                }
            });
        }
        //绑定事件
        , bindActionClick:function () {
            var that = this;
            //筛选事件
            $(that.element).find('a.icon-filter').each(function () {

                var $this = $(this);
                var id = $this.attr('id');
                switch (id){
                    case 'filterAuditPerson'://审批人
                    case 'filterApplyName': //申请人
                        var txtVal = '',placeholder='';
                        if(id=='filterAuditPerson'){
                            txtVal = $('input[name="auditPerson"]').val();
                            placeholder = '审批人';
                        }else{
                            txtVal = $('input[name="applyName"]').val();
                            placeholder = '申请人';
                        }

                        if(txtVal!=''){
                            $this.closest('th').find('.icon-filter i').addClass('fc-v1-blue');
                            $this.closest('th').find('.icon-filter').show();
                        }
                        $this.on('click',function () {
                            S_dialog.dialog({
                                contentEle: 'dialogOBox',
                                ele:id,
                                lock: 2,
                                align: 'bottom right',
                                quickClose:true,
                                noTriangle:true,
                                width: '220',
                                minHeight:'100',
                                tPadding: '0px',
                                url: rootPath+'/assets/module/m_common/m_dialog.html'


                            },function(d){//加载html后触发

                                var dialogEle = 'div[id="content:'+d.id+'"] .dialogOBox';


                                var iHtml = template('m_filterableField/m_filter_input',{
                                    txtVal:txtVal,
                                    placeholder:placeholder
                                });

                                $(dialogEle).html(iHtml);
                                $(dialogEle).find('button[data-action="sureFilter"]').on('click',function () {
                                    var val = $(dialogEle).find('input[name="txtVal"]').val();

                                    if(id=='filterAuditPerson'){
                                        $(that.element).find('input[name="auditPerson"]').val(val);
                                    }else{
                                        $(that.element).find('input[name="applyName"]').val(val);
                                    }

                                    that.getData();

                                    S_dialog.close($(dialogEle));
                                });

                            });
                        });

                        break;
                    case 'filterApplyDate': //申请时间

                        var startTime = '';
                        var endTime = '';

                        startTime = $(that.element).find('input[name="startDate"]').val();
                        endTime = $(that.element).find('input[name="endDate"]').val();

                        if(startTime!='' || endTime!=''){
                            $this.closest('th').find('.icon-filter i').addClass('fc-v1-blue');
                            $this.closest('th').find('.icon-filter').show();
                        }
                        $this.on('click',function () {
                            S_dialog.dialog({
                                contentEle: 'dialogOBox',
                                ele:id,
                                lock: 2,
                                align: 'bottom right',
                                quickClose:true,
                                noTriangle:true,
                                width: '220',
                                minHeight:'100',
                                tPadding: '0px',
                                url: rootPath+'/assets/module/m_common/m_dialog.html'


                            },function(d){//加载html后触发

                                var dialogEle = 'div[id="content:'+d.id+'"] .dialogOBox';

                                var iHtml = template('m_filterableField/m_filter_time',{
                                    startTime:startTime,
                                    endTime:endTime
                                });

                                $(dialogEle).html(iHtml);
                                $(dialogEle).find('button[data-action="sureTimeFilter"]').off('click').on('click',function () {

                                    var startTime = $(dialogEle).find('input[name="startTime"]').val();
                                    var endTime = $(dialogEle).find('input[name="endTime"]').val();

                                    $(that.element).find('input[name="startDate"]').val(startTime);
                                    $(that.element).find('input[name="endDate"]').val(endTime);

                                    that.getData();

                                    S_dialog.close($(dialogEle));
                                });
                                $(dialogEle).find('button[data-action="clearTimeInput"]').off('click').on('click',function () {
                                    $(dialogEle).find('input').val('');
                                });
                                $(dialogEle).find('i.fa-calendar').off('click').on('click',function () {
                                    $(this).closest('.input-group').find('input').focus();
                                });

                            });
                        });

                        break;
                    case 'filterLeaveType': //申请类型

                        var currCheckValue = '',selectList = [];

                        currCheckValue = $(that.element).find('input[name="leaveType"]').val();
                        selectList = [
                            {fieldName:'全部',fieldValue:''},
                            {fieldName:'年假',fieldValue:'1'},
                            {fieldName:'事假',fieldValue:'2'},
                            {fieldName:'病假',fieldValue:'3'},
                            {fieldName:'调休假',fieldValue:'4'},
                            {fieldName:'婚假',fieldValue:'5'},
                            {fieldName:'产假',fieldValue:'6'},
                            {fieldName:'陪产假',fieldValue:'7'},
                            {fieldName:'丧假',fieldValue:'8'},
                            {fieldName:'其他',fieldValue:'9'}
                        ];

                        if(currCheckValue!=''){
                            $this.closest('th').find('.icon-filter i').addClass('fc-v1-blue');
                            $this.closest('th').find('.icon-filter').show();
                        }

                        var iHtml = template('m_filterableField/m_filter_select',{
                            currCheckValue:currCheckValue,
                            selectList:selectList
                        });
                        var iTextObj = iHtml.getTextWH();
                        var iWHObj = setDialogWH(iTextObj.width,iTextObj.height);

                        $this.on('click',function () {
                            S_dialog.dialog({
                                contentEle: 'dialogOBox',
                                ele:id,
                                lock: 2,
                                align: 'bottom right',
                                quickClose:true,
                                noTriangle:true,
                                width: iWHObj.width,
                                height:iWHObj.height,
                                tPadding: '0px',
                                url: rootPath+'/assets/module/m_common/m_dialog.html'

                            },function(d){//加载html后触发

                                var dialogEle = 'div[id="content:'+d.id+'"] .dialogOBox';
                                $(dialogEle).html(iHtml);

                                $(dialogEle).find('.dropdown-menu a').on('click',function () {

                                    var val = $(this).attr('data-state-no');

                                    $(that.element).find('input[name="leaveType"]').val(val);

                                    that.getData();
                                    S_dialog.close($(dialogEle));
                                });
                            });
                        });

                        break;
                }

            });
        }

    });

    $.fn[pluginName] = function (options) {
        return this.each(function () {
            // if (!$.data(this, "plugin_" + pluginName)) {
            $.data(this, "plugin_" +
                pluginName, new Plugin(this, options));
            // }
        });
    };

})(jQuery, window, document);

/**
 * 请假详情
 * Created by wrb on 2017/12/26.
 */
;(function ($, window, document, undefined) {

    "use strict";
    var pluginName = "m_leaveSummary_detail",
        defaults = {
            $title:null,//弹窗标题
            $url:null,//请求地址
            $type:3,//默认3=请假,4=出差
            $detailData:null
        };

    // The actual plugin constructor
    function Plugin(element, options) {
        this.element = element;

        this.settings = $.extend({}, defaults, options);
        this._defaults = defaults;
        this._name = pluginName;
        this._typeStr = this.settings.$type==3?'请假':'出差';
        this.init();
    }

    // Avoid Plugin.prototype conflicts
    $.extend(Plugin.prototype, {
        init: function () {
            var that = this;
            that.getData();
        }
        //加载弹窗
        ,getData: function () {
            var that = this;
            S_dialog.dialog({
                title: that.settings.$title||'请假申请明细',
                contentEle: 'TConsentOBox',
                lock: 3,
                width: '800',
                minHeight: '450',
                tPadding: '0px',
                url: rootPath+'/assets/module/m_common/m_dialog.html',
                cancelText:'关闭',
                cancel:function () {

                }
            },function(d){//加载html后触发
                that.element = 'div[id="content:'+d.id+'"] .dialogOBox';
                that.getExpData();
            });
        }
        //加载
        ,getExpData:function(){
            var that = this;
            var option = {};
            option.url=that.settings.$url;
            option.postData={};
            option.postData.id=that.settings.$detailData.id;
            m_ajax.postJson(option,function (response) {
                if(response.code=='0'){
                    var $data={};
                    $data.detailData = response.data;
                    $data.fastdfsUrl = window.fastdfsUrl;
                    $data.type = that.settings.$type;
                    $data.typeStr = that._typeStr;
                    var html = template('m_summary/m_leaveSummary_detail',$data);
                    $(that.element).html(html);
                }else {
                    S_dialog.error(response.info);
                }
            })
        }

    });

    $.fn[pluginName] = function (options) {
        return this.each(function () {
            //if (!$.data(this, "plugin_" + pluginName)) {
                $.data(this, "plugin_" +
                    pluginName, new Plugin(this, options));
            //}
        });
    };

})(jQuery, window, document);

/**
 * 项目－发票汇总
 * Created by wrb on 2018/8/8.
 */
;(function ($, window, document, undefined) {

    "use strict";
    var pluginName = "m_summary_invoice",
        defaults = {
            projectId:null//项目ID
        };

    // The actual plugin constructor
    function Plugin(element, options) {
        this.element = element;

        this.settings = $.extend({}, defaults, options);
        this._defaults = defaults;
        this._name = pluginName;
        this._currentCompanyId = window.currentCompanyId;//当前组织ID
        this._currentCompanyUserId = window.currentCompanyUserId;//当前员工ID
        this._selectedOrg = null;//当前组织筛选-选中组织对象
        this._filterTimeData = {};//时间筛选
        this.init();
    }

    // Avoid Plugin.prototype conflicts
    $.extend(Plugin.prototype, {
        init: function () {
            var that = this;
            that.renderPage();
        }
        //初始化数据,生成html
        ,renderPage:function () {
            var that = this;
            var html = template('m_summary/m_summary_invoice',{});
            $(that.element).html(html);
            that.renderList();

        }

        ,renderList:function () {
            var that = this;
            var option = {};
            option.param = {};
            paginationFun({
                eleId: '#data-pagination-container',
                loadingId: '.data-list-box',
                url: restApi.url_listInvoice,
                params: option.param
            }, function (response) {

                if (response.code == '0') {

                    var html = template('m_summary/m_summary_invoice_list',{
                        dataList:response.data.data
                    });
                    $(that.element).find('.data-list-container').html(html);

                } else {
                    S_dialog.error(response.info);
                }
            });

        }
        //按钮事件绑定
        , bindActionClick:function () {
            var that = this;
            $(that.element).find('button[data-action]').on('click',function () {
                var $this = $(this);
                var dataAction = $this.attr('data-action');
                switch (dataAction){

                    case 'refreshBtn':
                        that.renderPage();
                        return false;
                        break;
                }
            });
        }

    });

    /*
     1.一般初始化（缓存单例）： $('#id').pluginName(initOptions);
     2.强制初始化（无视缓存）： $('#id').pluginName(initOptions,true);
     3.调用方法： $('#id').pluginName('methodName',args);
     */
    $.fn[pluginName] = function (options, args) {
        var instance;
        var funcResult;
        var jqObj = this.each(function () {

            //从缓存获取实例
            instance = $.data(this, "plugin_" + pluginName);

            if (options === undefined || options === null || typeof options === "object") {

                var opts = $.extend(true, {}, defaults, options);

                //options作为初始化参数，若args===true则强制重新初始化，否则根据缓存判断是否需要初始化
                if (args === true) {
                    instance = new Plugin(this, opts);
                } else {
                    if (instance === undefined || instance === null)
                        instance = new Plugin(this, opts);
                }

                //写入缓存
                $.data(this, "plugin_" + pluginName, instance);
            }
            else if (typeof options === "string" && typeof instance[options] === "function") {

                //options作为方法名，args则作为方法要调用的参数
                //如果方法没有返回值，funcReuslt为undefined
                funcResult = instance[options].call(instance, args);
            }
        });

        return funcResult === undefined ? jqObj : funcResult;
    };

})(jQuery, window, document);

/**
 * 工时汇总
 * Created by wrb on 2018/1/4.
 */
;(function ($, window, document, undefined) {

    "use strict";
    var pluginName = "m_summary_workingHours",
        defaults = {
            $contentEle:null,
            $isFirstEnter:false//是否是第一次進來
        };

    // The actual plugin constructor
    function Plugin(element, options) {
        this.element = element;

        this.settings = $.extend({}, defaults, options);
        this._defaults = defaults;
        this._name = pluginName;
        this._companyList = null;//组织列表
        this._companyListBySelect = null;//筛选组织
        this.init();
    }

    // Avoid Plugin.prototype conflicts
    $.extend(Plugin.prototype, {
        init: function () {
            var that = this;
            that.initHtmlData();
        }
        //初始化数据并加载模板
        ,initHtmlData:function () {
            var that = this;

            var html = template('m_summary/m_summary_workingHours',{});
            $(that.element).html(html);
            that.renderDataList();

        }
        //渲染list
        ,renderDataList:function () {
            var that = this;

            var option = {};
            option.param = {};
            option.param.currentCompanyId=window.currentCompanyId;

            paginationFun({
                eleId: '#data-pagination-container',
                loadingId: '.data-list-box',
                url: restApi.url_getProjectWorking,
                params: option.param
            }, function (response) {

                if (response.code == '0') {

                    var html = template('m_summary/m_summary_workingHours_list',{
                        dataList:response.data.data
                    });
                    $(that.element).find('.data-list-container').html(html);
                    that.bindActionClick();

                } else {
                    S_dialog.error(response.info);
                }
            });
        }

        //事件绑定
        ,bindActionClick:function () {
            var that = this;
            $(that.element).find('a[data-action]').off('click').on('click',function () {
                var $this = $(this);
                var dataAction = $this.attr('data-action');
                var projectId = $this.attr('data-id');

                switch (dataAction){
                    case 'viewDetail'://查看详情

                        /*var option = {};
                        option.$projectId = projectId;
                        option.$projectName = $this.text();
                        $('#content-right').m_summary_workingHours_detail(option);*/

                        location.hash = '/workingHoursSummary/detail?projectId='+projectId+'&projectName='+encodeURI($this.text());
                        break;
                }
            });
        }

    });

    $.fn[pluginName] = function (options) {
        return this.each(function () {

            //if (!$.data(this, "plugin_" + pluginName)) {
            $.data(this, "plugin_" +
                pluginName, new Plugin(this, options));
            //}
        });
    };

})(jQuery, window, document);

/**
 * 工时汇总-详情
 * Created by wrb on 2018/1/4.
 */
;(function ($, window, document, undefined) {

    "use strict";
    var pluginName = "m_summary_workingHours_detail",
        defaults = {
            $projectId:null,
            $projectName:null
        };

    // The actual plugin constructor
    function Plugin(element, options) {
        this.element = element;

        this.settings = $.extend({}, defaults, options);
        this._defaults = defaults;
        this._name = pluginName;
        this.init();
    }

    // Avoid Plugin.prototype conflicts
    $.extend(Plugin.prototype, {
        init: function () {
            var that = this;
            that.initHtmlData();
        }
        //初始化数据并加载模板
        ,initHtmlData:function () {
            var that = this;

            var html = template('m_summary/m_summary_workingHours_detail',{
                projectName:that.settings.$projectName
            });
            $(that.element).html(html);
            that.renderDataList();

        }
        //渲染list
        ,renderDataList:function () {
            var that = this;

            var option = {};
            option.param = {};
            option.param.currentCompanyId=window.currentCompanyId;
            option.param.projectId = that.settings.$projectId;
            paginationFun({
                eleId: '#data-pagination-container',
                loadingId: '.data-list-box',
                url: restApi.url_getProjectWorkingHours,
                params: option.param
            }, function (response) {

                if (response.code == '0') {

                    var html = template('m_summary/m_summary_workingHours_detail_list',{
                        dataList:response.data.data,
                        sum:response.data.sum
                    });
                    $(that.element).find('.data-list-container').html(html);

                } else {
                    S_dialog.error(response.info);
                }
            });
        }
    });

    $.fn[pluginName] = function (options) {
        return this.each(function () {

            //if (!$.data(this, "plugin_" + pluginName)) {
            $.data(this, "plugin_" +
                pluginName, new Plugin(this, options));
            //}
        });
    };

})(jQuery, window, document);

/**
 * 选择经营负责人和选择设计负责人
 * Created by wrb on 2018/3/7.
 */
;(function ($, window, document, undefined) {

    "use strict";
    var pluginName = "m_changeOperator",
        defaults = {
            $title:null,
            $isDialog:true,
            $projectId:null,
            $type:0,//0=经营负责人，1=设计负责人
            $selectedUserList:null,
            $selectUserCallback:null,
            $renderCallBack:null//弹窗回掉方法

        };

    // The actual plugin constructor
    function Plugin(element, options) {
        this.element = element;

        this.settings = $.extend({}, defaults, options);
        this._defaults = defaults;
        this._name = pluginName;

        this.init();
    }

    // Avoid Plugin.prototype conflicts
    $.extend(Plugin.prototype, {
        init: function () {
            var that = this;
            that.initHtmlData();
        },
        //初始化数据
        initHtmlData:function () {
            var that = this;
            if(that.settings.$isDialog){//以弹窗编辑
                S_dialog.dialog({
                    title: that.settings.$title || '选择经营负责人',
                    contentEle: 'dialogOBox',
                    lock: 3,
                    width: '800',
                    minHeight:'125',
                    tPadding: '0px',
                    url: rootPath+'/assets/module/m_common/m_dialog.html',
                    cancelText:'关闭',
                    cancel:function () {
                    }
                },function(d){//加载html后触发

                    that.element = 'div[id="content:'+d.id+'"] .dialogOBox';
                    that.initHtmlTemplate();


                });
            }else{//不以弹窗编辑

            }
        }
        //生成html
        ,initHtmlTemplate:function () {
            var that = this;

            that.getUserList(function (data) {
                var html = template('m_taskIssue/m_changeOperator',{
                    orgUserList:data,
                    selectedUserList:that.settings.$selectedUserList
                });
                $(that.element).html(html);

                that.bindActionClick();
                if(that.settings.$renderCallBack!=null){
                    that.settings.$renderCallBack(that.element);
                }
            });
        }
        //查出人员列表
        ,getUserList:function (callBack) {
            var that = this;
            var options={};
            options.url= that.settings.$type==0?restApi.url_listOperatorManager:restApi.url_listDesignManager;
            m_ajax.get(options,function (response) {
                if(response.code=='0'){
                    if(callBack!=null){
                        return callBack(response.data);
                    }
                }else {
                    S_dialog.error(response.info);
                }
            })
        }
        //按钮事件绑定
        , bindActionClick: function () {
            var that = this;
            $(that.element).find('a[data-action]').on('click', function () {

                var $this = $(this);
                var dataAction = $this.attr('data-action');
                switch (dataAction){
                    case 'choseUser':
                        if (that.settings.$selectUserCallback != null) {
                            var $data = {};
                            $data.userId = $this.attr('data-userId');//用户账户ID
                            $data.companyUserId = $this.attr('data-companyUserId');//组织人员ID
                            $data.userName = $this.parent().parent().find('td:eq(0)').text();
                            $data.id = $this.parents('.ui-dialog-content').attr('id');
                            return that.settings.$selectUserCallback($data, $this);
                        }
                        break;

                }
            });
        }
    });

    $.fn[pluginName] = function (options) {
        return this.each(function () {

            //if (!$.data(this, "plugin_" + pluginName)) {
            $.data(this, "plugin_" +
                pluginName, new Plugin(this, options));
            //}
        });
    };

})(jQuery, window, document);



/**
 * 进度变更记录列表
 * Created by wrb on 2017/08/28.
 */
;(function ($, window, document, undefined) {

    "use strict";
    var pluginName = "m_progressChange_list",
        defaults = {
            $title:null,
            $isDialog:true,
            $eleId:null,
            $projectId:null,
            $taskId:null,
            $publishId:null,
            $type:null,//1=合同约定，2＝计划
            $taskCompanyId:null,
            $renderCallBack:null,//弹窗回掉方法
            $align:null

        };

    // The actual plugin constructor
    function Plugin(element, options) {
        this.element = element;

        this.settings = $.extend({}, defaults, options);
        this._defaults = defaults;
        this._name = pluginName;


        this.init();
    }

    // Avoid Plugin.prototype conflicts
    $.extend(Plugin.prototype, {
        init: function () {
            var that = this;
            that.initHtmlData();
        },
        //初始化数据
        initHtmlData:function () {
            var that = this;
            if(that.settings.$isDialog){//以弹窗编辑
                S_dialog.dialog({
                    title: '变更列表',
                    contentEle: 'dialogOBox',
                    ele:that.settings.$eleId,
                    align:that.settings.$align||'bottom',
                    lock: 2,
                    quickClose:true,
                    noTriangle:true,
                    width: '420',
                    minHeight:'110',
                    maxHeight:'200',
                    tPadding: '0px',
                    url: rootPath+'/assets/module/m_common/m_dialog.html'
                },function(d){//加载html后触发

                    that.element = 'div[id="content:'+d.id+'"] .dialogOBox';
                    that.initHtmlTemplate();


                });
            }else{//不以弹窗编辑

            }
        }
        //生成html
        ,initHtmlTemplate:function () {
            var that = this;

            that.getTaskScheduleChangesList(function (data) {
                var html = template('m_taskIssue/m_progressChange_list',{taskScheduleChangesList:data});
                $(that.element).html(html);

                if(that.settings.$renderCallBack!=null){
                    that.settings.$renderCallBack(that.element);
                }
            });
        }
        //根据任务ID获取该任务的进度变更列表
        ,getTaskScheduleChangesList:function (callBack) {
            var that = this;
            var options={};
            options.url=restApi.url_getChangeTimeList;
            options.postData = {};
            options.postData.targetId = that.settings.$taskId;

            if(that.settings.$type!=2){
                options.postData.type = that.settings.$type;
            }

            m_ajax.postJson(options,function (response) {
                if(response.code=='0'){
                    if(callBack!=null){
                        return callBack(response.data);

                    }
                }else {
                    S_dialog.error(response.info);
                }
            })
        }

    });

    $.fn[pluginName] = function (options) {
        return this.each(function () {

            //if (!$.data(this, "plugin_" + pluginName)) {
            $.data(this, "plugin_" +
                pluginName, new Plugin(this, options));
            //}
        });
    };

})(jQuery, window, document);



/**
 * 进度变更
 * Created by wrb on 2016/12/26.
 */
;(function ($, window, document, undefined) {

    "use strict";
    var pluginName = "m_scheduleChanges",
        defaults = {
            $title:null,
            $isDialog:true,
            $okCallBack:null,
            $parentTaskObj:null,
            $currentAppointmentDate:null,
            $theCurrentTaskObj:null,
            $projectId:null,
            $designContentId:null
        };

    // The actual plugin constructor
    function Plugin(element, options) {
        this.element = element;

        this.settings = $.extend({}, defaults, options);
        this._defaults = defaults;
        this._name = pluginName;


        this.init();
    }

    // Avoid Plugin.prototype conflicts
    $.extend(Plugin.prototype, {
        init: function () {
            var that = this;
            that._initHtmlData(function () {
                that._bindActionClick();

            });
        },
        //初始化数据
        _initHtmlData:function (callBack) {
            var that = this;
            if(that.settings.$isDialog){//以弹窗编辑
                S_dialog.dialog({
                    title: that.settings.$title||'进度变更',
                    contentEle: 'dialogOBox',
                    lock: 3,
                    width: '800',
                    minHeight:'125',
                    tPadding: '0px',
                    url: rootPath+'/assets/module/m_common/m_dialog.html',
                    cancelText:'关闭',
                    cancel:function () {
                        that._refresh();
                    }

                },function(d){//加载html后触发

                    that._getTaskScheduleChangesList(function (data) {
                        that.element = 'div[id="content:'+d.id+'"] .dialogOBox';
                        that._initHtmlTemplate(data);
                        if(callBack!=null){
                            callBack();
                        }
                    });

                });
            }else{//不以弹窗编辑
                that._getTaskScheduleChangesList(function (data) {
                    that._initHtmlTemplate(data);
                    if (callBack != null) {
                        callBack();
                    }
                });
            }
        }
        //生成html
        ,_initHtmlTemplate:function (data) {
            var that = this;
            var $data = {};
            if(data!=null){
                $data.taskScheduleChangesList = data;
                $data.taskScheduleObj = that.settings.$theCurrentTaskObj;
            }
            $.each($data.taskScheduleChangesList,function(i,item){
                $data.taskScheduleChangesList[i].timeDiffStr=timeDiffTime(item.startTime,item.endTime);//0
            });
            var html = template('m_taskIssue/m_scheduleChanges',$data);
            $(that.element).html(html);
        }
        //刷新当前界面
        ,_refresh:function () {
            var option = {}, that = this;
            option.$projectId = that.settings.$projectId;
            $('#project_detail').m_taskIssue(option);
        }
        //根据任务ID获取该任务的进度变更列表
        ,_getTaskScheduleChangesList:function (callBack) {
            var that = this
            var options={};
            options.url=restApi.url_getChangeTimeList;
            options.postData = {};
            options.postData.targetId = that.settings.$theCurrentTaskObj.id;
            options.postData.type = 2;
            m_ajax.postJson(options,function (response) {
                if(response.code=='0'){
                    if(callBack!=null){
                        return callBack(response.data);
                    }
                }else {
                    S_dialog.error(response.info);
                }
            })
        }
        //进度变更
        ,_taskScheduleChange:function (obj) {
            var that = this,options={};
            options.$title = '添加变更';
            options.$isOkSave = true;
            options.$saveDataUrl = restApi.url_saveProjectProcessTime;
            var $data = {};
            $data.targetId = that.settings.$theCurrentTaskObj.id;
            $data.type = 2;//计划进度
            options.$saveData = $data;
            options.$saveTimeKeyVal=['startTime','endTime','memo'];
            options.$currentAppointmentDate=that.settings.$currentAppointmentDate;
            options.$okCallBack = function (data) {
                that._getTaskScheduleChangesList(function (data) {
                    that._initHtmlTemplate(data);
                    that._bindActionClick();
                    if(that.settings.$okCallBack!=null){
                        that.settings.$okCallBack();
                    }
                });
            };
            $('body').m_inputProcessTime(options);
        }
        //删除变更
        ,_delTaskScheduleChange:function (obj) {
            var that = this
            S_dialog.confirm('您确定要删除吗？', function () {

                that._delChangeTimeById(obj);

            }, function () {
            });
        }
        //删除变更请求
        ,_delChangeTimeById:function (obj) {
            var that = this;
            var options = {};
            options.url=restApi.url_saveProjectProcessTime+'/'+$(obj).attr('data-id');
            var seq = $(obj).attr('data-seq');
            m_ajax.get(options,function (response) {

                if(response.code=='0'){
                    if(seq==0){
                        S_dialog.close($(obj));
                        var options = {};
                        options.$projectId = that.settings.$projectId;
                        options.$title = '设置计划进度';
                        options.$isHaveMemo = false;
                        options.$isOkSave = true;
                        options.$saveDataUrl = restApi.url_saveProjectProcessTime;
                        var $data = {};
                        $data.targetId = that.settings.$theCurrentTaskObj.id;
                        $data.type = 2;
                        options.$saveData = $data;
                     /*   options.$currentAppointmentDate = that.settings.$currentAppointmentDate;*/
                        options.$saveTimeKeyVal=['startTime','endTime'];
                        options.$okCallBack = function (data) {

                            if(that.settings.$okCallBack!=null){
                                that.settings.$okCallBack();
                            }
                        };
                        $('body').m_inputProcessTime(options);
                    }else {
                        that._getTaskScheduleChangesList(function (data) {
                            that._initHtmlTemplate(data);
                            that._bindActionClick();
                            if(that.settings.$okCallBack!=null){
                                that.settings.$okCallBack();
                            }
                        });
                    }
                }else {
                    S_dialog.error(response.info);
                }
            })
        }
        //按钮事件绑定
        ,_bindActionClick:function () {
            var that = this;
            $(that.element).find('a[data-action]').on('click',function () {
                var dataAction = $(this).attr('data-action');
                if(dataAction=='addScheduleProgressChange'){//添加变更
                    that._taskScheduleChange(this);
                    return false;
                }else if(dataAction=='delScheduleProgressChange'){//删除变更
                    that._delTaskScheduleChange(this);
                    return false;
                }
            });
            $(that.element).find('.taskParticipantTr input[name="userName"]').on('click',function () {
                that._choseTaskParticipant($(this));
            });
        }
    });

    $.fn[pluginName] = function (options) {
        return this.each(function () {

            //if (!$.data(this, "plugin_" + pluginName)) {
            $.data(this, "plugin_" +
                pluginName, new Plugin(this, options));
            //}
        });
    };

})(jQuery, window, document);



/**
 * 进度变更
 * Created by wrb on 2016/12/26.
 */
;(function ($, window, document, undefined) {

    "use strict";
    var pluginName = "m_scheduleChanges_new",
        defaults = {
            $title:null,
            $isDialog:true,
            $okCallBack:null,
            $parentTaskObj:null,
            $currentAppointmentDate:null,//限制时间数据
            $theCurrentTaskObj:null,
            $projectId:null,
            $designContentId:null,
            $taskId:null,
            $labelText:null,
            $type:null,//1=合同约定，2＝计划
            $taskCompanyId:null
        };

    // The actual plugin constructor
    function Plugin(element, options) {
        this.element = element;

        this.settings = $.extend({}, defaults, options);
        this._defaults = defaults;
        this._name = pluginName;


        this.init();
    }

    // Avoid Plugin.prototype conflicts
    $.extend(Plugin.prototype, {
        init: function () {
            var that = this;
            that._initHtmlData(function () {
                that._bindActionClick();

            });
        },
        //初始化数据
        _initHtmlData:function (callBack) {
            var that = this;
            if(that.settings.$isDialog){//以弹窗编辑
                S_dialog.dialog({
                    title: that.settings.$title||'进度变更',
                    contentEle: 'dialogOBox',
                    lock: 3,
                    width: '800',
                    minHeight:'125',
                    tPadding: '0px',
                    url: rootPath+'/assets/module/m_common/m_dialog.html',
                    cancelText:'关闭',
                    cancel:function () {
                        //that._refresh();
                    }

                },function(d){//加载html后触发

                    that._getTaskScheduleChangesList(function (data) {
                        that.element = 'div[id="content:'+d.id+'"] .dialogOBox';
                        that._initHtmlTemplate(data);
                        if(callBack!=null){
                            callBack();
                        }
                    });

                });
            }else{//不以弹窗编辑
                that._getTaskScheduleChangesList(function (data) {
                    that._initHtmlTemplate(data);
                    if (callBack != null) {
                        callBack();
                    }
                });
            }
        }
        //生成html
        ,_initHtmlTemplate:function (data) {
            var that = this;
            var $data = {};
            if(data!=null){
                $data.taskScheduleChangesList = data;
                //$data.taskScheduleObj = that.settings.$theCurrentTaskObj;
            }
            $.each($data.taskScheduleChangesList,function(i,item){
                $data.taskScheduleChangesList[i].timeDiffStr=timeDiffTime(item.startTime,item.endTime);
            });
            $data.$labelText = that.settings.$labelText;
            if(that.settings.$type==2){
                $data.$labelText='计划进度'
            }
            var html = template('m_taskIssue/m_scheduleChanges_new',$data);
            $(that.element).html(html);
        }
        //刷新当前界面
        ,_refresh:function () {
            var option = {}, that = this;
            option.$projectId = that.settings.$projectId;
            $('#project_detail').m_taskIssue(option);
        }
        //根据任务ID获取该任务的进度变更列表
        ,_getTaskScheduleChangesList:function (callBack) {
            var that = this;
            var options={};
            options.url=restApi.url_getChangeTimeList;
            options.postData = {};
            options.postData.targetId = that.settings.$taskId;

            if(that.settings.$type!=2){
                options.postData.type = that.settings.$type;
            }
            m_ajax.postJson(options,function (response) {
                if(response.code=='0'){
                    if(callBack!=null){
                        return callBack(response.data);
                    }
                }else {
                    S_dialog.error(response.info);
                }
            })
        }
        //进度变更
        ,_taskScheduleChange:function (obj) {
            var that = this,options={};
            options.$title = '添加变更';
            options.$isOkSave = true;

            var $data = {};
            if(that.settings.$type==2){
                $data.id = that.settings.$taskId;
                $data.taskType = 2;
                $data.companyId = that.settings.$taskCompanyId;

                options.$saveDataUrl = restApi.url_saveTaskIssuing;
            }else{//计划变更
                $data.targetId = that.settings.$taskId;
                $data.type = that.settings.$type;//计划进度

                options.$saveDataUrl = restApi.url_saveProjectProcessTime;
            }
            options.$saveData = $data;
            options.$saveTimeKeyVal=['startTime','endTime','memo'];
            options.$currentAppointmentDate=that.settings.$currentAppointmentDate;
            options.$okCallBack = function (data) {
                that._getTaskScheduleChangesList(function (data) {
                    that._initHtmlTemplate(data);
                    that._bindActionClick();
                    if(that.settings.$okCallBack!=null){
                        that.settings.$okCallBack();
                    }
                });
            };
            $('body').m_inputProcessTime(options);
        }
        //进度变更修改（针对设计任务的计划进度）
        ,_taskScheduleUpdate:function (obj) {
            var that = this,options={};

            var dataId = $(obj).attr('data-id');
            var dataStaTime = $(obj).attr('data-start-time');
            var dataEndTime = $(obj).attr('data-end-time');
            var dataListType = $(obj).attr('data-list-type');
            var dataMemo = $(obj).parents('.ibox-content').find('span.memo-span:last').html();

            options.$title = '修改变更';
            options.$isOkSave = true;

            var $data = {};
            $data.targetId = that.settings.$taskId;
            //$data.type = that.settings.$type;//计划进度
            $data.id = dataId;
            options.$saveDataUrl = restApi.url_saveProjectProcessTime;
            if(dataListType!=undefined && dataListType==1){//没原因
                options.$isHaveMemo = false;
                options.$timeInfo = {
                    startTime:dataStaTime,
                    endTime:dataEndTime
                };
                options.$saveTimeKeyVal=['startTime','endTime'];
            }else {
                options.$timeInfo = {
                    startTime:dataStaTime,
                    endTime:dataEndTime,
                    memo:dataMemo
                };
                options.$saveTimeKeyVal=['startTime','endTime','memo'];
            }
            options.$saveData = $data;
            options.$currentAppointmentDate=that.settings.$currentAppointmentDate;
            options.$okCallBack = function (data) {
                that._getTaskScheduleChangesList(function (data) {
                    that._initHtmlTemplate(data);
                    that._bindActionClick();
                    if(that.settings.$okCallBack!=null){
                        that.settings.$okCallBack();
                    }
                });
            };
            $('body').m_inputProcessTime(options);
        }
        //删除变更
        ,_delTaskScheduleChange:function (obj) {
            var that = this;
            S_dialog.confirm('您确定要删除吗？', function () {

                that._delChangeTimeById(obj);

            }, function () {
            });
        }
        //删除变更请求
        ,_delChangeTimeById:function (obj) {
            var that = this;
            var options = {};
            options.url=restApi.url_saveProjectProcessTime+'/'+$(obj).attr('data-id');
            var seq = $(obj).attr('data-seq');
            m_ajax.get(options,function (response) {

                if(response.code=='0'){
                    if(seq==0){
                        S_dialog.close($(obj));
                        var options = {};
                        options.$projectId = that.settings.$projectId;
                        options.$title = '设置计划进度';
                        options.$isHaveMemo = false;
                        options.$isOkSave = true;
                        options.$saveDataUrl = restApi.url_saveProjectProcessTime;
                        var $data = {};
                        $data.targetId = that.settings.$taskId;
                        $data.type = that.settings.$type;
                        options.$saveData = $data;
                     /*   options.$currentAppointmentDate = that.settings.$currentAppointmentDate;*/
                        options.$saveTimeKeyVal=['startTime','endTime'];
                        options.$okCallBack = function (data) {

                            if(that.settings.$okCallBack!=null){
                                that.settings.$okCallBack();
                            }
                        };
                        $('body').m_inputProcessTime(options);
                    }else {
                        that._getTaskScheduleChangesList(function (data) {
                            that._initHtmlTemplate(data);
                            that._bindActionClick();
                            if(that.settings.$okCallBack!=null){
                                that.settings.$okCallBack();
                            }
                        });
                    }
                }else {
                    S_dialog.error(response.info);
                }
            })
        }
        //按钮事件绑定
        ,_bindActionClick:function () {
            var that = this;
            $(that.element).find('a[data-action]').on('click',function () {
                var _this = this,dataAction = $(this).attr('data-action');
                if(dataAction=='addScheduleProgressChange'){//添加变更

                    var dataType = $(_this).attr('data-type');
                    if(dataType==3){
                        that._taskScheduleUpdate(_this);
                    }else{//添加变更，修改变更
                        that._taskScheduleChange(_this);
                    }

                    return false;
                }else if(dataAction=='delScheduleProgressChange'){//删除变更
                    that._delTaskScheduleChange(_this);
                    return false;
                }
            });
           /* $(that.element).find('.taskParticipantTr input[name="userName"]').on('click',function () {
                that._choseTaskParticipant($(this));
            });*/
        }
    });

    $.fn[pluginName] = function (options) {
        return this.each(function () {

            //if (!$.data(this, "plugin_" + pluginName)) {
            $.data(this, "plugin_" +
                pluginName, new Plugin(this, options));
            //}
        });
    };

})(jQuery, window, document);



/**
 * 项目信息－任务签发
 * Created by wrb on 2017/2/21.
 */
;(function ($, window, document, undefined) {

    "use strict";
    var pluginName = "m_taskIssue",
        defaults = {
            $projectId:null,
            $projectName:null,
            $isView:false//是否是查看状态，当是查看状态时，把相对应的权限设为无权限即可
        };

    // The actual plugin constructor
    function Plugin(element, options) {
        this.element = element;

        this.settings = $.extend({}, defaults, options);
        this._defaults = defaults;
        this._name = pluginName;
        this._currentCompanyId = window.currentCompanyId;//当前组织ID
        this.init();
    }

    // Avoid Plugin.prototype conflicts
    $.extend(Plugin.prototype, {
        init: function () {
            var that = this;
            that.initHtml();
        },
        //初始化数据,生成html
        initHtml:function () {

            var that = this;
            var companyId = $(that.element).find('select[name="viewByOrg"]').val();

            var options={};
            options.classId = '#content-right';
            options.url=restApi.url_getIssueInfo;
            options.postData = {};
            options.postData.projectId = that.settings.$projectId;
            if(companyId!=undefined && companyId!=''){
                options.postData.companyId = companyId;
            }

            m_ajax.postJson(options,function (response) {

                if(response.code=='0'){

                    var currentManagerObj = {};//当前经营负责人、助理
                    currentManagerObj.projectManager = response.data.projectManager;
                    currentManagerObj.assistant = response.data.assistant;

                    var html = template('m_taskIssue/m_taskIssue',{
                        projectName:that.settings.$projectName,
                        orgList:response.data.orgList,
                        dataCompanyId:response.data.dataCompanyId,
                        currentCompanyId:that._currentCompanyId,
                        currentManagerObj:currentManagerObj,
                        currentCompanyUserId:window.currentCompanyUserId
                    });
                    $(that.element).html(html);
                    var option = {};
                    option.$projectId = that.settings.$projectId;
                    option.$projectName = that.settings.$projectName;
                    option.$projectCompanyId = response.data.companyId;
                    option.$projectCreateBy = response.data.createBy;
                    option.$projectManagerId = response.data.managerId;
                    option.$currentManagerObj = currentManagerObj;
                    option.$taskIssueList = response.data.contentTaskList;
                    option.$dataCompanyId = response.data.dataCompanyId;

                    option.$pageEntrance = 'taskIssue';

                    $(that.element).find('#taskIssueList').m_taskIssue_list(option);
                    that.bindClickAction();
                    that.initSelectByView();
                    $(that.element).find('a[data-toggle="tooltip"]').tooltip();

                }else {
                    S_dialog.error(response.info);
                }
            })
        }
        //视图切换
        , initSelectByView:function () {
            var that = this;
            $(that.element).find('select[name="viewByOrg"]').select2({
                allowClear: false,
                containerCssClass:'select-sm',
                language: "zh-CN",
                minimumResultsForSearch: -1
            });
            $(that.element).find('select[name="viewByOrg"]').on("change", function (e) {
                that.initHtml();
            })
        }

        //刷新当前界面
        , refresh: function () {
            var option = {}, that = this;
            option.$projectId = that.settings.$projectId;
            option.$projectName = that.settings.$projectName;
            $('#content-right').m_taskIssue(option,true);
            return false;
        }

        //更改经营负责人或设计人事件
        , managerChangeEvent:function ($this) {
            var that = this;
            var action = $this.attr('data-action');
            var companyId = $this.attr('data-company-id');//当前要获取的项目立项组织的index

            if (action == 'changeOperatorPerson') {
                var operatorPersonId = $this.attr('data-id'),userName=$this.attr('data-user-name');

                var option = {};
                option.$selectedUserList = [{
                    id:operatorPersonId,
                    userName:userName
                }];
                option.$selectUserCallback = function (data, event) {//1
                    data.type = 1;
                    var targetUser='<strong style="color:red;margin:0 3px;">'+data.userName+'</strong>';
                    S_dialog.confirm('确定将经营负责人更换为'+targetUser+'？', function () {
                        that.postManagerChange(data, companyId, event);
                    }, function () {
                        //S_dialog.close($(event));
                    });
                };
                $('body').m_changeOperator(option);

            } else if (action == 'changeManagerPerson') {

                var isFirstSetDesign = $.trim($this.text()) == '未设置' ? true : false;
                var designPersonId = $this.attr('data-id'),userName=$this.attr('data-user-name');
                var options = {};
                options.url = restApi.url_getOrgTree;
                options.isASingleSelectUser = true;
                options.delChoseUserCallBack = function () {
                    $(that.element).find('input[name="chooseManager"]').removeAttr('companyUserId');
                    $(that.element).find('input[name="chooseManager"]').val('');
                };
                options.title = '选择助理';
                if(designPersonId!=undefined && designPersonId!=''){
                    options.selectedUserList = [{
                        id:designPersonId,
                        userName:userName
                    }];
                }
                options.isOkSave = true;
                options.saveCallback = function (data, event) {
                    var obj = {};
                    obj.type = 2;
                    if(data!=null && data.selectedUserList!=null && data.selectedUserList.length>0){
                        obj.userName = data.selectedUserList[0].userName;
                        obj.companyUserId = data.selectedUserList[0].id;
                        obj.isFirstSetDesign = isFirstSetDesign;
                        var targetUser='<strong style="color:red;margin:0 3px;">'+obj.userName+'</strong>';
                        S_dialog.confirm('确定将助理更换为'+targetUser+'？', function () {
                            that.postManagerChange(obj, companyId, event);
                        }, function () {
                        });
                    }else{
                        obj.companyUserId=null;
                        S_dialog.confirm('确定将助理置空？', function () {
                            that.postManagerChange(obj, companyId, event);
                        }, function () {
                        });
                    }
                };
                $('body').m_orgByTree(options);
            }

            return false;
        }
        //移交经营负责人或项目负责人的请求
        , postManagerChange: function (data, companyId, event) {
            var that = this;
            var option = {};
            option.postData = {};

            if(data.type==2){
                option.url = restApi.url_updateProjectAssistant;
                option.postData.type = '1';
            }else{
                if (data.isFirstSetDesign != null && data.isFirstSetDesign == false) {
                    option.url = restApi.url_transferTaskDesigner;
                } else {
                    option.url = restApi.url_updateProjectManager;
                }
                option.postData.type = data.type;
            }

            option.postData.projectId = that.settings.$projectId;
            option.postData.companyId = companyId;
            option.postData.companyUserId = data.companyUserId;
            m_ajax.postJson(option, function (response) {
                if (response.code == '0') {
                    S_dialog.close($(event));
                    S_toastr.success('保存成功！');
                    that.refresh();
                } else {
                    S_dialog.error(response.info);
                }
            })
        }
        //事件绑定
        ,bindClickAction:function(){

            var that = this;
            $(that.element).find('a[data-action]').bind('click',function(){
                var $this = $(this),
                    dataAction = $this.attr('data-action');

                switch (dataAction) {//切换自己任务签发与总览

                    case 'changeOperatorPerson'://修改当前组织经营负责人

                        that.managerChangeEvent($this);
                        break;
                    case 'changeManagerPerson'://修改当前组织设计负责人

                        that.managerChangeEvent($this);
                        break;

                    case 'viewProjectInfo'://浏览项目基本信息

                        var option = {};
                        option.$isDialog = true;
                        option.$isView = true;
                        option.$projectId = that.settings.$projectId;
                        $('body').m_projectBasicInfo(option);
                        break;
                }
            });
        }


    });

    $.fn[pluginName] = function (options) {
        return this.each(function () {

            //if (!$.data(this, "plugin_" + pluginName)) {
            $.data(this, "plugin_" +
                pluginName, new Plugin(this, options));
            //}
        });
    };

})(jQuery, window, document);

/**
 * 任务签发－添加设计内容
 * Created by wrb on 2017/5/15.
 */
;(function ($, window, document, undefined) {

    "use strict";
    var pluginName = "m_taskIssueDesignContent_add",
        defaults = {
            $title:null,
            $isDialog:true,
            $projectId:null,
            $okBackCall:null
        };

    // The actual plugin constructor
    function Plugin(element, options) {
        this.element = element;

        this.settings = $.extend({}, defaults, options);
        this._defaults = defaults;
        this._name = pluginName;
        this._currentCompanyId = window.currentCompanyId;//当前组织ID
        this.init();
    }

    // Avoid Plugin.prototype conflicts
    $.extend(Plugin.prototype, {
        init: function () {
            var that = this;
            that._initHtml();
        }
        //初始化数据,生成html
        ,_initHtml:function () {
            var that = this;
            if(that.settings.$isDialog){//以弹窗编辑
                S_dialog.dialog({
                    title: that.settings.$title||'添加设计任务',
                    contentEle: 'dialogOBox',
                    lock: 3,
                    width: '600',
                    minHeight:'125',
                    tPadding: '0px',
                    url: rootPath+'/assets/module/m_common/m_dialog.html',
                    cancel:function () {

                    },
                    okText:'保存',
                    ok:function () {
                        if($(that.element).find('form.content-form').valid()){//&& $(that.element).find('form.inputTimeOBox').valid()
                            that._saveDesignContent();
                        }else {
                            return false;
                        }
                    }

                },function(d){//加载html后触发

                    that.element = 'div[id="content:'+d.id+'"] .dialogOBox';
                    var html = template('m_taskIssue/m_taskIssueDesignContent_add', {});
                    $(that.element).html(html);

                    var option = {};
                    option.$isDialog = false;
                    option.$isHaveMemo = false;
                    $(that.element).find('#time-box').m_inputProcessTime(option);

                    that._saveDesignContent_validate();
                    //that._saveDesignContent_validate2();

                });
            }else{//不以弹窗编辑


                var html = template('m_taskIssue/m_taskIssueDesignContent_add', {});
                $(that.element).html(html);

                var option = {};
                option.$isDialog = false;
                $(that.element).find('#time-box').m_inputProcessTime(option);
            }
        }

        //添加或编辑设计阶段
        , _saveDesignContent:function () {
            var that = this;
            var options = {};
            options.url = restApi.url_saveOrUpdateProjectDesign;
            options.postData = {};
            options.postData.projectId = that.settings.$projectId;
            options.postData.companyId = that._currentCompanyId;
            options.postData.contentName = $(that.element).find('input[name="taskName"]').val();
            options.postData.startTime = $(that.element).find('input[name="startTime"]').val();
            options.postData.endTime = $(that.element).find('input[name="endTime"]').val();

            m_ajax.postJson(options, function (response) {
                if (response.code == '0') {
                    S_toastr.success('保存成功！');
                    if(that.settings.$okBackCall!=null){
                        that.settings.$okBackCall();
                    }
                } else {
                    S_dialog.error(response.info);
                }
            });
        }
        //验证
        ,_saveDesignContent_validate:function(){
            var that = this;
            $(that.element).find('form.content-form').validate({
                rules: {
                    taskName:{
                        required:true
                    }
                },
                messages: {
                    taskName:{
                        required:'请输入设计内容!'
                    }
                }
            });
        }
        ,_saveDesignContent_validate2:function(){
            var that = this;
            $(that.element).find('form.inputTimeOBox').validate({
                rules: {
                    startTime:{
                        required:true
                    },
                    endTime:{
                        required:true
                    }

                },
                messages: {
                    startTime:{
                        required:'请设置开始日期!'
                    },
                    endTime:{
                        required:'请设置结束日期!'
                    }
                }
                ,errorPlacement: function (error, element) { //指定错误信息位置
                    if (element.hasClass('timeInput')) {
                        error.appendTo(element.closest('.form-group'));
                    } else {
                        error.insertAfter(element);
                    }
                }
            });

        }
    });

    $.fn[pluginName] = function (options) {
        return this.each(function () {

            //if (!$.data(this, "plugin_" + pluginName)) {
            $.data(this, "plugin_" +
                pluginName, new Plugin(this, options));
            //}
        });
    };
})(jQuery, window, document);

/**
 * 项目信息－添加任务签发
 * Created by wrb on 2017/2/21.
 */
;(function ($, window, document, undefined) {

    "use strict";
    var pluginName = "m_taskIssue_add",
        defaults = {
            $placement:null,
            $projectId:null,
            $doType:null,//默认是添加任务，'changeOrg'=更改设计组织
            $taskId:null,//任务ID
            $okCallBack:null,//回调函数
            $departId:null,//部门ID
            $companyId:null,//当前签发的组织ID
            $currentAppointmentDate:null//时间限制，这里指合同的时间
        };

    // The actual plugin constructor
    function Plugin(element, options) {
        this.element = element;

        this.settings = $.extend({}, defaults, options);
        this._defaults = defaults;
        this._name = pluginName;
        this._currentCompanyId = window.currentCompanyId;//当前组织ID
        this._userList = [];//负责人匹配
        this.init();
    }

    // Avoid Plugin.prototype conflicts
    $.extend(Plugin.prototype, {
        init: function () {
            var that = this;
            that._initHtmlData();
        }
        //初始化数据,生成html
        ,_initHtmlData:function (callBack) {

            var option={},that = this;
            option.url=restApi.url_getIssueTaskCompany;
            option.postData = {};
            option.postData.taskId = that.settings.$taskId;
            m_ajax.postJson(option,function (response) {//查询组织

                if(response.code=='0'){
                    var $data = {};
                    $data = response.data;
                    $data.doType = that.settings.$doType;
                    $data.currentCompanyId = that._currentCompanyId;

                    that._getDepartByCompanyId(function (data) {//查询部门

                        $data.orgList = data;
                        $data.orgId = that.settings.$departId;
                        $data.companyId = that.settings.$companyId;
                        if (that.settings.$currentAppointmentDate != null) {
                            $data.appointmentStartTime = that.settings.$currentAppointmentDate.startTime;
                            $data.appointmentEndTime = that.settings.$currentAppointmentDate.endTime;
                        }
                        var $btnPopover = $(that.element).find('i').length>0?$(that.element).find('i'):$(that.element);
                        $btnPopover.m_popover({
                            placement: 'left',
                            content: template('m_taskIssue/m_taskIssue_add', $data),
                            titleHtml: '<h3 class="popover-title">'+(that.settings.$title?that.settings.$title:'任务签发')+'</h3>',
                            onShown: function ($popover) {
                                that._bindSelChange($popover);
                                that._saveTaskIssue_validate();
                                if(that.settings.$doType!=null && that.settings.$doType=='changeOrg'){
                                    $popover.find('.time-box').remove();
                                }else{
                                    $popover.find('.input-group-addon').on('click',function(e){
                                        $(this).prev('input').focus();
                                        stopPropagation(e);
                                    });
                                }

                                var statOrgs = [],departOrg = [];
                                $.each($data.allCompanyList, function (i, o) {
                                    statOrgs.push({
                                        id: o.id,
                                        text: o.companyName
                                    });
                                });
                                $.each($data.orgList, function (i, o) {
                                    if(currentCompanyId!=o.id){
                                        statOrgs.push({
                                            id: o.id,
                                            text: o.companyName
                                        });
                                    }
                                });
                                $popover.find('select[name="designOrg"]').select2({
                                    allowClear: false,
                                    language: "zh-CN",
                                    minimumResultsForSearch: Infinity,
                                    data: statOrgs
                                });
                                $popover.find('select[name="orgId"]').select2({
                                    allowClear: false,
                                    language: "zh-CN",
                                    minimumResultsForSearch: Infinity,
                                    data: departOrg
                                });
                                $popover.find('select[name="orgId"]').val($data.orgId).trigger('change');
                                $popover.find('select[name="designOrg"]').val($data.companyId).trigger('change');

                            },
                            onSave: function ($popover) {
                                var $options = that._saveTaskTssueParam($popover);
                                if ($('form.add-issue-form').valid()) {

                                    if(that.settings.$doType!=null && that.settings.$doType=='changeOrg'){
                                        var $btn=$popover.find('button.btn-primary');
                                        $btn.m_popover({
                                            clearOnInit:false,
                                            placement: 'left',
                                            content: template('m_common/m_popover_confirm',
                                                {confirmMsg: '确定更换该任务的设计组织？'}),
                                            onShown: function ($popover){
                                                $popover.css('z-index','99999');
                                            },
                                            onSave: function ($popover) {
                                                that._saveTaskIssue($options)
                                            }
                                        }, true);
                                        return false;
                                    }else{

                                        if(that._saveTaskIssue($options)){
                                            return false;
                                        }
                                    }

                                }else{
                                    return false;
                                }
                            }
                        }, true);
                    })
                }else {
                    S_dialog.error(response.info);
                }
            })
        }

        ,_selectFun:function () {
            var that = this;
            $(".js-example-disabled-results").select2({
                language: "zh-CN",
                ajax: {
                    contentType: "application/json",
                    url: restApi.url_getUserByKeyWord,
                    dataType: 'json',
                    type:'POST',
                    delay: 500,
                    data: function (params) {
                        var ret={
                            keyword: params.term, // search term
                            companyId: $(that.element).next('.popover').find('select[name="designOrg"]').val()
                        };
                        return JSON.stringify(ret);
                    },
                    processResults: function (data, params) {
                        return {
                            results: $.map(data.data,function(o,i){
                                return {
                                    id:o.id,
                                    text:o.user_name
                                }
                            })
                        };
                    },
                    cache: true
                }
            });
        }

        //保存签发
        ,_saveTaskTssueParam:function ($popover) {
            var options={},that=this;
            options.url=restApi.url_saveTaskIssuing;
            options.postData = {};
            options.postData.projectId = that.settings.$projectId;
            options.postData.taskType =2;
            options.postData.companyId = $popover.find('select[name="designOrg"]').val();

            if(that.settings.$doType=='changeOrg'){
                options.postData.id = $(that.element).attr('data-id');//that.settings.$taskId;
            }else{
                options.postData.taskPid = $(that.element).attr('data-id');
                options.postData.taskName = $.trim($popover.find('input[name="taskName"]').val());
                options.postData.startTime = $popover.find('input[name="startTime"]').val();
                options.postData.endTime = $popover.find('input[name="endTime"]').val();
            }
            var t = $popover.find('select[name="designOrg"] option:selected').val();
            if(t==that._currentCompanyId){//选择的是本组织
                options.postData.managerId = null;
                var orgId = $popover.find('select[name="orgId"] option:selected').val();
                options.postData.orgId = orgId;
            }

            return options;
        }
        ,_saveTaskIssue:function (options) {
            var that=this,isError = false;
            options.async = false;
            m_ajax.postJson(options,function (response) {

                if(response.code=='0'){

                    if(that.settings.$doType!=null && that.settings.$doType=='changeOrg'){
                        S_toastr.success('修改成功！');
                    }else {
                        S_toastr.success('添加成功！');
                    }
                    if(that.settings.$okCallBack){
                        that.settings.$okCallBack();
                    }else{
                        that._refreshTaskIssuePage();
                    }
                }else {
                    S_dialog.error(response.info);
                    isError = true;
                }
            });
            if(isError){//产生错误
                that._stopPropagationByDialog();
            }
            return isError;
        }

        //查询组织部门
        ,_getDepartByCompanyId:function (callBack) {
            var that = this;
            var option  = {};
            option.url = restApi.url_getDepartByCompanyId+'/'+that._currentCompanyId;
            m_ajax.get(option,function (response) {
                if(response.code=='0'){
                    return callBack(response.data);
                }else {
                    S_dialog.error(response.info);
                }
            })
        }

        //验证当前选的组织是否已选过，选过的话，经营负责人不能另选
        ,_validateIssueTaskCompany:function (toCompanyId,callBack) {

            var options = {},that = this;

            options.url = restApi.url_validateIssueTaskCompany;
            options.postData = {};
            options.postData.toCompanyId = toCompanyId;
            options.postData.projectId = that.settings.$projectId;
            m_ajax.postJson(options,function (response) {

                if(response.code=='0'){
                    return callBack(response.data);
                }else {
                    S_dialog.error(response.info);
                }
            })
        }

        //绑定select change事件
        ,_bindSelChange:function ($popover) {
            var that = this;
            $popover.find('select[name="designOrg"]').change(function () {

                var t = $popover.find('select[name="designOrg"] option:selected').val();
                var departDivObj = $popover.find('.depart-div');
                if(t==that._currentCompanyId){
                    departDivObj.removeClass('hide');//显示部门选择
                }else{
                    departDivObj.addClass('hide');//隐藏部门选择

                }
            });
        }

        //保存验证
        , _saveTaskIssue_validate: function () {
            var that = this;
            $('form.add-issue-form').validate({
                rules: {
                    taskName: {
                        required: true
                    }
                    ,designOrg: {
                        required: true
                    }
                    ,startTime: {
                        required: true
                    }
                    ,endTime: {
                        required: true
                    }
                },
                messages: {
                    taskName: {
                        required: '设计任务不能为空！'
                    }
                    ,designOrg: {
                        required: '请选择设计组织！'
                    }
                    ,startTime: {
                        required: '请设置开始日期！'
                    }
                    ,endTime: {
                        required: '请设置结束日期！'
                    }


                },
                errorElement: "label",  //用来创建错误提示信息标签
                errorPlacement: function (error, element) {  //重新编辑error信息的显示位置
                    error.appendTo(element.closest('.col-24-sm-18'));
                }
            });
        }

        //刷新当前界面
        ,_refreshTaskIssuePage:function () {
            var option = {}, that = this;
            option.$projectId = that.settings.$projectId;
            $('#project_detail').m_taskIssue(option);
        }

        //防止冒泡
        ,_stopPropagationByDialog:function () {
            $('.ui-popup').off('click.ui-popup').on('click.ui-popup', function (e) {
                stopPropagation(e);
                return false;
            });
            $('.ui-popup-backdrop').off('click.ui-popup-backdrop').on('click.ui-popup-backdrop', function (e) {
                stopPropagation(e);
                return false;
            });
            $('.ui-dialog-autofocus').off('click.ui-dialog-autofocus').on('click.ui-dialog-autofocus', function (e) {
                $('.ui-popup').remove();
                $('.ui-popup-backdrop').remove();
                stopPropagation(e);
                return false;
            });
        }

    });

    $.fn[pluginName] = function (options) {
        return this.each(function () {

            //if (!$.data(this, "plugin_" + pluginName)) {
            $.data(this, "plugin_" +
                pluginName, new Plugin(this, options));
            //}
        });
    };
})(jQuery, window, document);

/**
 * 项目信息－任务签发列表
 * Created by wrb on 2017/2/21.
 */
;(function ($, window, document, undefined) {

    "use strict";
    var pluginName = "m_taskIssue_list",
        defaults = {
            $projectId: null,
            $projectName:null,
            $projectCompanyId: null,
            $taskIssueList: null,
            $publishId:null,
            $projectManagerId:null,//经营负责人ID
            $currentManagerObj:null,//经营人对象
            $pageEntrance:'taskIssue'//页面入口（我的任务=myIssueTask,任务签发=taskIssue）
        };

    // The actual plugin constructor
    function Plugin(element, options) {
        this.element = element;

        this.settings = $.extend({}, defaults, options);
        this._defaults = defaults;
        this._name = pluginName;
        this._currentCompanyUserId = window.currentCompanyUserId;
        this._currentCompanyId = window.currentCompanyId;//当前组织ID
        this._taskIssueList = [];//当前经营列表
        this._isOrgManager = 0;
        this._isAssistant = 0;
        this.init();
    }

    // Avoid Plugin.prototype conflicts
    $.extend(Plugin.prototype, {
        init: function () {
            var that = this;
            that.initHtml();
            that.bindActionClick();
        },
        //初始化数据,生成html
        initHtml: function () {
            var that = this;
            var $data = {};
            $data.taskIssueList = that.settings.$taskIssueList;
            that._taskIssueList = that.settings.$taskIssueList;
            $data.currentCompanyId = that._currentCompanyId;
            $data.projectCompanyId = that.settings.$projectCompanyId;
            $data.isView = that.settings.$isView;
            $data.isOrgManager = 0;//是否经营负责人
            if(that._currentCompanyUserId==that.settings.$projectManagerId){//that.settings.$projectCompanyId == that._currentCompanyId &&
                $data.isOrgManager = 1;
                that._isOrgManager = 1;
            }
            if(that.settings.$currentManagerObj.assistant!=null && that._currentCompanyUserId==that.settings.$currentManagerObj.assistant.companyUserId){//that.settings.$projectCompanyId == that._currentCompanyId &&
                $data.isAssistant = 1;
                that._isAssistant = 1;
            }
            var html = template('m_taskIssue/m_taskIssue_list', $data);
            $(that.element).html(html);
            $(that.element).find('.tree').treegrid({
                expanderExpandedClass: 'ic-open',
                expanderCollapsedClass: 'ic-retract',
                treeColumn: 2
            });
            var tableWidth = $(that.element).find('table.table').width();
            stringCtrl('taskName',tableWidth*0.24);

            //设计名称编辑
            $(that.element).find('a[data-action="taskNameEdit"]').each(function () {
                var $this = $(this);
                var taskName = $this.prev().attr('data-string');
                $this.editable({//编辑
                    type: 'text',
                    mode: 'inline',
                    value:taskName,
                    emptytext:'',
                    savenochange:true,
                    placeholder: '设计任务',
                    onblur:'submit',
                    showbuttons:false,
                    success: function(response, newValue) {
                        if(newValue!=taskName){
                            var param = {};
                            param.taskName = newValue;
                            if(that.saveTaskIssueBySyncEdit($this,param)){
                                return false;
                            }
                        }
                    },
                    display: function(value, sourceData) {
                        $this.prev('.show-span').show();
                    },
                    validate: function(value) {
                        if($.trim(value) == ''){
                            S_toastr.error('设计任务名称不可为空！');
                            return '不能为空';
                        }
                        if(value.length>50){
                            S_toastr.error('设计任务名称超出字数限制！');
                            return '设计任务名称超出字数限制！';
                        }
                    }
                });
                //显示x-editable事件shown
                $this.on('shown', function(e, editable) {
                    if(!($(that.element).find('.row-edit').length>0)) {
                        $this.prev('.show-span').hide();
                        var len = taskName.length;
                        $this.next('.editable-container').find('.editable-input').after('<span style="padding: 4px 12px;display: inline-block;"><span class="wordCount">' + len + '</span>/<span>50</span></span>');
                    }else{
                        S_toastr.warning('当前正在创建设计任务中...');
                        $this.editable('hide');
                    }
                    $this.next('.editable-container').find('.editable-error-block').remove();//屏蔽错误提示，改为toastr提示
                    $this.next('.editable-container').find('.editable-input input').on('keyup',function () {//任务名称字数事件
                        var len = $this.next('.editable-container').find('.editable-input input').val().length;
                        $this.next('.editable-container').find('.wordCount').text(len);
                        if(len>50){
                            $this.next('.editable-container').find('.wordCount').addClass('color-red');
                        }else{
                            if($this.next('.editable-container').find('.wordCount').hasClass('color-red')){
                                $this.next('.editable-container').find('.wordCount').removeClass('color-red');
                            }
                        }
                    });
                });
            });

            if(!that.settings.$isView){

                //操作列表没有可操作则不展示该按钮组
                $(that.element).find('ul.dropdown-menu').each(function () {
                    var len = $(this).find('li a[data-action]').length;
                    if(len==0){
                        $(this).parents('tr').find('td:first .list-check-box').remove();
                        $(this).parents('.btn-group').remove();

                    }
                });
                that.editHoverFun();
                that.documentBindFun();
                that.initICheck();
            }
            else{//查看状态下删除相关操作按钮
                $(that.element).find('.list-check-box').remove();
                $(that.element).find('.list-action-box').remove();
                $(that.element).find('button[data-action="addDesignTask"]').remove();
            }
            $(that.element).find('a[data-toggle="tooltip"],i[data-toggle="tooltip"]').tooltip();
            that.editTaskRemark();
        }
        //任务描述编辑
        , editTaskRemark:function () {
            var that = this;
            $(that.element).find('a[data-action="taskRemarkEdit"]').each(function () {
                var $this = $(this);
                var id = $this.attr('id'),i=$this.closest('TR').attr('data-i'),currentObj = that._taskIssueList[i];
                $this.on('click',function () {

                    if(!($(that.element).find('.row-edit').length>0)) {

                        S_dialog.dialog({
                            title: '任务描述',
                            contentEle: 'dialogOBox',
                            ele:id,
                            lock: 2,
                            quickClose:true,
                            noTriangle:true,
                            width: '320',
                            minHeight:'110',
                            tPadding: '0px',
                            url: rootPath+'/assets/module/m_common/m_dialog.html'

                        },function(d){//加载html后触发

                            var tipsEle = 'div[id="content:'+d.id+'"] .dialogOBox';
                            var remark = currentObj.taskRemark==null?'':currentObj.taskRemark;

                            var html = template('m_production/m_production_editRemark',{
                                remark:remark
                            });
                            $(tipsEle).html(html);

                            $(tipsEle).find('button[data-action="cancel"]').off('click').on('click',function () {
                                S_dialog.close($(tipsEle));
                            });
                            $(tipsEle).find('button[data-action="submit"]').off('click').on('click',function () {
                                var text = $(tipsEle).find('textarea').val();
                                var param = {};
                                param.taskRemark = text;
                                that.saveTaskIssueByEdit($this,param);
                                S_dialog.close($(tipsEle));
                            });

                        });

                    }else{
                        S_toastr.warning('当前正在创建设计任务中...');
                    }
                });
            });
        }
        //hover事件
        , editHoverFun:function () {

            var that = this;
            //文本移上去出现编辑图标hover事件
            $(that.element).find('a[data-action][data-deal-type="edit"]').each(function () {

                var $this = $(this);
                
                $this.closest('TD').hover(function () {
                    if($this.next('.edit-box').length<=0 && $this.next('.editable-container').length<=0){
                        $this.show();
                    }
                },function () {
                    if($this.next('.edit-box').length<=0 && $this.next('.editable-container').length<=0) {
                        $this.hide();
                    }
                })
            });
            //TR hover效果
            $(that.element).find('TR').each(function () {

                var $this = $(this);
                var singleOperation = $this.find('.singleOperation');
                var batchOperation = $this.find('.batchOperation');

                $this.hover(function () {
                    if(batchOperation.length==0 || batchOperation.css('display')=='none'){
                        singleOperation.show();
                    }
                    if(!$this.hasClass('chose-operable')){
                        $this.addClass('tr-hover');
                    }

                },function () {
                    singleOperation.hide();
                    if(!$this.hasClass('chose-operable')){
                        $this.removeClass('tr-hover');
                    }
                });
            });
        }
        //保存签发
        ,saveTaskIssue:function (taskId) {
            var options={},that=this;
            options.classId = 'body';
            options.url=restApi.url_saveTaskIssuing;
            options.postData = {};
            options.postData.projectId = that.settings.$projectId;
            options.postData.taskType =2;
            options.postData.companyId = $(that.element).find('.org-select-box .company-name').attr('data-company-id');

            var departId = $(that.element).find('.org-select-box .company-name').attr('data-depart-id');
            if( departId!=undefined && departId!=''){
                options.postData.orgId = departId;
            }
            if(taskId!=null){
                options.postData.taskPid = taskId;
            }
            options.postData.taskName = $.trim($(that.element).find('.row-edit input[name="taskName"]').val());
            options.postData.startTime = $(that.element).find('.row-edit input[name="startTime"]').val();
            options.postData.endTime = $(that.element).find('.row-edit input[name="endTime"]').val();
            options.postData.taskRemark = $(that.element).find('.row-edit input[name="taskRemark"]').val();

            m_ajax.postJson(options,function (response) {

                if(response.code=='0'){
                    S_toastr.success('保存成功！');
                    that.refreshPage();
                }else {
                    if(response.info.indexOf('已存在')>-1){
                        S_toastr.error(response.info);
                    }else{
                        S_dialog.error(response.info);
                    }
                }
            });
        }
        //编辑签发保存
        ,saveTaskIssueByEdit:function ($this,param) {
            var options={},that=this;
            options.url=restApi.url_saveTaskIssuing;
            options.postData = {};
            options.postData.projectId = that.settings.$projectId;
            options.postData.taskType =2;
            options.postData.companyId = $this.closest('tr').attr('data-company-id');
            options.postData.id = $this.closest('tr').attr('data-id');
            $.extend(options.postData, param);
            m_ajax.postJson(options,function (response) {
                if(response.code=='0'){
                    S_toastr.success('保存成功！');
                    that.refreshPage();
                }else {
                    if(response.info.indexOf('已存在')>-1){
                        S_toastr.error(response.info);
                        $this.editable('show');
                    }else{
                        S_dialog.error(response.info);
                    }
                }
            });
        }
        //编辑签发保存
        ,saveTaskIssueBySyncEdit:function ($this,param) {
            var options={},that=this;
            options.url=restApi.url_saveTaskIssuing;
            options.async = false;
            options.postData = {};
            options.postData.projectId = that.settings.$projectId;
            options.postData.taskType =2;
            options.postData.companyId = $this.closest('tr').attr('data-company-id');
            options.postData.id = $this.closest('tr').attr('data-id');
            $.extend(options.postData, param);
            var isError = false;
            m_ajax.postJson(options,function (response) {
                if(response.code=='0'){
                    S_toastr.success('保存成功！');
                    that.refreshPage();
                }else {
                    if(response.info.indexOf('已存在')>-1){
                        S_toastr.error(response.info);
                        isError = true;
                    }else{
                        S_dialog.error(response.info);
                    }
                }
            });
            return isError;
        }
        //编辑签发进度变更保存
        ,saveProgressChangeByEdit:function ($this,param) {
            var options={},that=this;
            options.url=restApi.url_saveProjectProcessTime;
            options.postData = {};
            options.postData.targetId = $this.closest('tr').attr('data-publish-id');
            options.postData.companyId = $this.closest('tr').attr('data-company-id');
            options.postData.type = 2;
            $.extend(options.postData, param);
            m_ajax.postJson(options,function (response) {
                if(response.code=='0'){
                    S_toastr.success('保存成功！');
                    that.refreshPage();
                }else {
                    S_dialog.error(response.info);
                }
            });
        }
        //查询组织部门
        ,getDepartByCompanyId:function (callBack) {
            var that = this;
            var option  = {};
            option.url = restApi.url_getDepartByCompanyId+'/'+that._currentCompanyId;
            m_ajax.get(option,function (response) {
                if(response.code=='0'){
                    return callBack(response.data);
                }else {
                    S_dialog.error(response.info);
                }
            })
        }
        //查询组织
        ,getCompanyListByTaskId:function (taskId,callBack) {
            var that = this,option={};
            option.url=restApi.url_getIssueTaskCompany;
            option.postData = {};
            option.postData.projectId = that.settings.$projectId;
            if(taskId!=null){
                option.postData.taskId = taskId;
            }
            m_ajax.postJson(option,function (response) {

                if(response.code=='0'){

                    if(callBack!=null){
                        callBack(response.data);
                    }
                }else {
                    S_dialog.error(response.info);
                }
            })
        }
        //添加设计任务
        ,addTaskRow:function (taskId) {
            var that = this;
            that.getCompanyListByTaskId(taskId,function (resData) {

                that.getDepartByCompanyId(function (data) {//查询部门

                    var html =  template('m_taskIssue/m_taskIssue_list_add', {
                        currentCompanyId:that._currentCompanyId,
                        allCompanyList:resData.allCompanyList,
                        departList:data
                    });
                    if(taskId!=null){//添加子任务
                        if($(that.element).find('tr[data-pid="'+taskId+'"]').length>0){//存在子任务

                            $(that.element).find('tr[data-pid="'+taskId+'"]:last').after(html);
                        }else{
                            $(that.element).find('tr[data-id="'+taskId+'"]').after(html);
                        }

                        //把父任务时间带过来
                        var $pEle = $(that.element).find('tr[data-id="'+taskId+'"]');
                        var sTime = $pEle.find('span.show-span[data-type="planTime"]').attr('data-start-time');
                        var eTime = $pEle.find('span.show-span[data-type="planTime"]').attr('data-end-time');
                        $(that.element).find('.row-edit input[name="startTime"]').val(sTime);
                        $(that.element).find('.row-edit input[name="endTime"]').val(eTime);

                        //父任务加底色显示
                        $(that.element).find('tr[data-id="'+taskId+'"]').css('background-color','#d7d7d7');

                    }else{//添加根任务
                        $(that.element).find('tr:last').after(html);
                    }
                    that.timeIconClick1($('.row-edit'));
                    $(that.element).find('button[data-action="cancel"]').on('click',function () {//取消事件
                        $(this).closest('tr').next('tr.row-edit').remove();
                        $(this).closest('tr').remove();
                        $(that.element).find('button[data-action="addDesignTask"]').attr('disabled',false);
                        $(that.element).find('tr[data-id="'+taskId+'"]').removeAttr('style');
                        //判断当前是否没数据
                        if($(that.element).find('tr.no-data-tr').length>0){
                            $(that.element).find('tr.no-data-tr').show();
                        }
                    });
                    $(that.element).find('button[data-action="submit"]').on('click',function (e) {//提交事件

                        /****************** 验证 - 开始**********************/

                        var taskName = $.trim($(this).closest('tr.row-edit').find('input[name="taskName"]').val());
                        var isRepeatName = false;//任务名称是否重名

                        if(taskName==''){
                            S_toastr.error('设计任务名称不可为空！');
                            return false;
                        }
                        if(taskName.length>50){
                            S_toastr.error('设计任务名称超出字数限制！');
                            return false;
                        }
                        /*if(that._taskIssueList!=null && that._taskIssueList.length>0){
                            $.each(that._taskIssueList,function (index,item) {
                                if(taskName==item.taskName){
                                    isRepeatName = true;
                                    return false;
                                }
                            })
                        }
                        if(isRepeatName){
                            S_toastr.error(taskName+'已存在！');
                            return false;
                        }*/
                        /****************** 验证 - 结束**********************/
                        that.saveTaskIssue(taskId);
                        e.stopPropagation();
                        return false;
                    });
                    $(that.element).find('input[name="taskName"]').on('keyup',function () {//任务名称字数事件
                        var len = $(that.element).find('input[name="taskName"]').val().length;
                        $(that.element).find('.wordCount').text(len);
                        if(len>50){
                            $(that.element).find('.wordCount').addClass('color-red');
                        }else{
                            if($(that.element).find('.wordCount').hasClass('color-red')){
                                $(that.element).find('.wordCount').removeClass('color-red');
                            }
                        }
                    });
                    //绑定回车事件
                    $(that.element).find('input[name="taskName"]').keydown(function(e) {
                        if (event.keyCode == '13') {//keyCode=13是回车键
                            $(that.element).find('button[data-action="submit"]').click();
                            preventDefault(e);
                        }
                    });
                    that.dealSelectOrgEvent(0);
                });
            })
        }
        //选中组织事件{0：添加任务；1：编辑组织}
        ,dealSelectOrgEvent:function (type) {
            var that = this;
            $(that.element).find('a.open-depart-btn').on('click',function (e) {//打开部门选择

                if($(this).find('i').hasClass('fa-angle-double-down')){
                    $(this).find('i').removeClass('fa-angle-double-down').addClass('fa-angle-double-up');
                    $(this).next('.dropdown-menu').show();
                }else{
                    $(this).find('i').addClass('fa-angle-double-down').removeClass('fa-angle-double-up');
                    $(this).next('.dropdown-menu').hide();
                }
                e.stopPropagation();
            });
            $(that.element).find('a[data-action="choseOrg"]').on('click',function (e) {//选择组织处理事件

                var dataChoseType = $(this).attr('data-chose-type');
                var companyName = $(this).text();
                var companyId = $(this).attr('data-company-id');
                var departId = null;
                var isDisabled = $(this).attr('disabled');
                $(that.element).find('.edit-box .company-name').html(companyName);
                if(dataChoseType=='company'){
                    $(that.element).find('.edit-box .company-name').attr('data-company-id',companyId);
                    $(that.element).find('.edit-box .company-name').attr('data-depart-id','');
                }else{
                    companyId = $(this).parents('ul').parent().find('a:first').attr('data-company-id');
                    departId = $(this).attr('data-company-id');
                    $(that.element).find('.edit-box .company-name').attr('data-company-id',companyId);
                    $(that.element).find('.edit-box .company-name').attr('data-depart-id',departId);
                }
                $(that.element).find('.edit-box .dropdown-menu').hide();
                $(that.element).find('a.open-depart-btn i').addClass('fa-angle-double-down').removeClass('fa-angle-double-up');

                if(type==1 && (isDisabled==undefined || isDisabled!='disabled')){//编辑状态下选中即保存,并且选的不是当前组织
                    var param = {};
                    param.companyId = companyId;
                    param.orgId = departId;
                    param.isChangeOrg = 1;
                    that.saveTaskIssueByEdit($(this),param);
                }
                e.stopPropagation();
            });
            $(that.element).find('.edit-box button:first').on('click',function () {//点击选择btn事件
                if($(that.element).find('.edit-box .dropdown-menu').eq(0).css('display')=='none'){
                    $(that.element).find('.edit-box .dropdown-menu').eq(0).show();
                }else{
                    $(that.element).find('.edit-box .dropdown-menu').hide();
                }
                //处理选中效果状态(加底色不可触发)
                var selectedCompanyId = $(that.element).find('.edit-box button .company-name').attr('data-company-id');
                var selectedDepartId = $(that.element).find('.edit-box button .company-name').attr('data-depart-id');
                if(selectedDepartId!=undefined && selectedDepartId!=''){//选择的是部门
                    selectedCompanyId = selectedDepartId;
                }
                $(that.element).find('.edit-box a[data-action="choseOrg"]').css('background-color','');
                $(that.element).find('.edit-box a[data-action="choseOrg"]').removeAttr('disabled');
                var $ele = $(that.element).find('.edit-box a[data-action="choseOrg"][data-company-id="'+selectedCompanyId+'"]');
                $ele.css('background-color','#f5f5f5');
                $ele.attr('disabled','disabled');
            });
        }
        //window document事件绑定
        ,documentBindFun:function () {
            var that = this;
            $(document).bind('click',function(e){

                console.log('document event');
                if(!($(e.target).closest('.reign-edit-box').length>0 || $(e.target).hasClass('reign-edit-box'))){
                    $(that.element).find('.reign-edit-box').parents('td').find('.show-span').show();
                    $(that.element).find('.reign-edit-box').remove();
                }

                if(!($(e.target).hasClass('org-select-box') || $(e.target).closest('.org-select-box').length>0)) {
                    $(that.element).find('.org-select-box .dropdown-menu').hide();
                    $(that.element).find('a.open-depart-btn i').addClass('fa-angle-double-down').removeClass('fa-angle-double-up');
                }
            });
        }
        //编辑前清空所有编辑情况
        ,removeAllEditBox:function () {
            var that = this;
            $(that.element).find('.reign-edit-box').parents('td').find('.show-span').show();
            $(that.element).find('.reign-edit-box').remove();
            $(that.element).find('.editable').prev().show();
            $(that.element).find('.editable').editable('hide');
        }
        ,initICheck:function () {
            var that = this;
            var ifChecked = function (e) {

                $(this).closest('tr').find('.singleOperation').hide();

                var $i = $(this).closest('tr').attr('data-i')-0;//当前任务list下标
                var $ele = $(that.element).find('tr[data-i="'+$i+'"]');
                if(that._taskIssueList.length>0){

                    if((that._taskIssueList[$i].taskStatus==2 || that._taskIssueList[$i].canBeDelete) && that._isOrgManager==1){
                        $ele.addClass('chose-operable');
                    }


                    //父级出现批量操作按钮
                    if(that._taskIssueList[$i].isHasChild==0){
                        var dataPid = $ele.attr('data-pid');
                        var $pEle = $(that.element).find('tr[data-id="'+dataPid+'"]');
                        var checkedLen = $(that.element).find('tr[data-pid="'+dataPid+'"] input[name="taskCk"]:checked').length;
                        var checkLen = $(that.element).find('tr[data-pid="'+dataPid+'"] input[name="taskCk"]').length;
                        $pEle.find('.batchOperation').show();
                        if(checkLen==checkedLen){
                            //父checkbox
                            $pEle.find('input[name="taskCk"]').prop('checked',true);
                            $pEle.find('input[name="taskCk"]').iCheck('update');
                        }

                    }else{
                        $ele.find('.batchOperation').show();
                    }

                    for(var i=($i+1);i<that._taskIssueList.length;i++){
                        var $currTrEle = $(that.element).find('tr[data-i="'+i+'"]');
                        if(that._taskIssueList[i]==null){
                            break;
                        }
                        if(that._taskIssueList[i].taskLevel>that._taskIssueList[$i].taskLevel){//taskLevel大于当前taskLevel，即是子集
                            $currTrEle.find('.singleOperation').hide();
                            $currTrEle.find('input[name="taskCk"]').prop('checked',true);
                            $currTrEle.find('input[name="taskCk"]').iCheck('update');

                            if((that._taskIssueList[i].taskStatus==2 || that._taskIssueList[i].canBeDelete) && that._isOrgManager==1){
                                $currTrEle.addClass('chose-operable');
                            }
                        }else{//遇到同级即退出循环
                            break;
                        }
                    }

                }
                that.isTaskAllCheck();
            };
            var ifUnchecked = function (e) {

                $(this).closest('tr').find('.singleOperation').show();
                var $i = $(this).closest('tr').attr('data-i')-0;//当前任务list下标
                var $ele = $(that.element).find('tr[data-i="'+$i+'"]');
                var currentDataId = $ele.attr('data-id');
                $ele.removeClass('chose-operable');
                if(that._taskIssueList.length>0){

                    //父级批量操作按钮展示与否
                    if(that._taskIssueList[$i].isHasChild==0){
                        var dataPid = $ele.attr('data-pid');
                        var $pEle = $(that.element).find('tr[data-id="'+dataPid+'"]');
                        var checkedLen = $(that.element).find('tr[data-pid="'+dataPid+'"] input[name="taskCk"]:checked').length;
                        var checkLen = $(that.element).find('tr[data-pid="'+dataPid+'"] input[name="taskCk"]').length;

                        if(checkedLen>0){//子集存在选中
                            $pEle.find('.batchOperation').show();
                            if(checkLen>checkedLen){
                                //父checkbox去勾
                                $pEle.find('input[name="taskCk"]').prop('checked',false);
                                $pEle.find('input[name="taskCk"]').iCheck('update');
                            }
                        }else{
                            $pEle.find('.batchOperation').hide();
                            //父checkbox去勾
                            $pEle.find('input[name="taskCk"]').prop('checked',false);
                            $pEle.find('input[name="taskCk"]').iCheck('update');
                        }

                    }else{
                        $ele.find('.batchOperation').hide();
                        $(that.element).find('tr[data-pid="'+currentDataId+'"]').find('.batchOperation').hide();
                    }

                    for(var i=($i+1);$i<i<that._taskIssueList.length;i++){
                        var currTrEle = $(that.element).find('tr[data-i="'+i+'"]');
                        if(that._taskIssueList[i]==null){
                            break;
                        }
                        if(that._taskIssueList[i].taskLevel>that._taskIssueList[$i].taskLevel){
                            currTrEle.find('input[name="taskCk"]').prop('checked',false);
                            currTrEle.find('input[name="taskCk"]').iCheck('update');
                            currTrEle.find('input[name="taskCk"]').iCheck('enable');

                            $(that.element).find('tr[data-i="'+i+'"]').removeClass('chose-operable');

                        }else{//遇到同级即退出循环
                            break;
                        }
                    }
                }
                that.isTaskAllCheck();
            };
            $(that.element).find('input[name="taskCk"]').iCheck({
                checkboxClass: 'icheckbox_minimal-green',
                radioClass: 'iradio_minimal-green'
            }).on('ifUnchecked.s', ifUnchecked).on('ifChecked.s', ifChecked);
            var ifAllChecked = function (e) {
                $(that.element).find('input[name="taskCk"]').iCheck('check');
            };
            var ifAllUnchecked = function (e) {
                //$(that.element).find('input[name="taskCk"]').iCheck('uncheck');
                $(that.element).find('input[name="taskCk"]').prop('checked',false);
                $(that.element).find('input[name="taskCk"]').iCheck('update');
                $(that.element).find('input[name="taskCk"]').iCheck('enable');
                $(that.element).find('tbody .singleOperation').hide();
                $(that.element).find('tbody .batchOperation ').hide();
                $(that.element).find('tr[data-i]').removeClass('chose-operable');
            };
            $(that.element).find('input[name="taskAllCk"]').iCheck({
                checkboxClass: 'icheckbox_minimal-green',
                radioClass: 'iradio_minimal-green'
            }).on('ifUnchecked.s', ifAllUnchecked).on('ifChecked.s', ifAllChecked);
        }
        //判断全选是否该选中并给相关处理
        ,isTaskAllCheck:function () {
            var that =this;
            var len = $(that.element).find('input[name="taskCk"]:checked').length;
            var taskLen = that._taskIssueList.length;
            if(len==taskLen){
                $(that.element).find('input[name="taskAllCk"]').prop('checked',true);
                $(that.element).find('input[name="taskAllCk"]').iCheck('update');
            }else{
                $(that.element).find('input[name="taskAllCk"]').prop('checked',false);
                $(that.element).find('input[name="taskAllCk"]').iCheck('update');
            }
        }
        //批量删除任务
        ,batchDelTask:function (idList) {
            var that = this;
            S_swal.confirm({
                title:'确定删除该任务?',
                text:'删除后将不能恢复，确定吗？',
                callBack:function () {
                    var option = {};
                    option.url = restApi.url_deleteProjectTask;
                    option.postData = {};
                    option.postData.idList = idList;
                    m_ajax.postJson(option, function (response) {
                        if (response.code == '0') {
                            S_swal.sure({
                                title:'已删除',
                                text:'该任务签发删除成功。',
                                callBack:function () {
                                    that.refreshPage();
                                }
                            });
                        } else {
                            S_dialog.error(response.info);
                        }
                    });
                }
            });
        }
        //批量发布
        ,batchPublishTask:function (idList) {

            var that = this;
            S_dialog.confirm('确定发布任务？',function () {

                var option = {};
                option.classId = '.ibox-content';
                option.url = restApi.url_publishIssueTask;
                option.postData = {};
                option.postData.projectId = that.settings.$projectId;
                option.postData.idList = idList;
                m_ajax.postJson(option, function (response) {
                    if (response.code == '0') {
                        S_toastr.success('发布成功');
                        that.refreshPage();
                    } else {
                        S_dialog.error(response.info);
                    }
                });
            },function () {
            });
        }
        //向上、向下移动保存
        ,saveTaskMoveInSeq:function (taskList) {

            var that = this;
            var option = {};
            option.url = restApi.url_exchangeTask;
            option.postData = [];
            option.postData = taskList;
            m_ajax.postJson(option, function (response) {
                if (response.code == '0') {
                    S_toastr.success('更新成功');
                    that.refreshPage();
                } else {
                    S_dialog.error(response.info);
                }
            });
        }
        //时间图标事件点击
        ,timeIconClick:function ($this) {
            $this.next().find('.fa-calendar').off('click').on('click',function (e) {
                $(this).closest('.input-group').find('input[name="ipt_time"]').click();
                e.stopPropagation();
            });
        }
        //时间图标事件点击
        ,timeIconClick1:function ($this) {
            $this.find('.fa-calendar').off('click').on('click',function (e) {
                $(this).closest('.input-group').find('input.timeInput').focus();
                e.stopPropagation();
            });
        }
        //设置进度变更时间{type==1==合同时间,type==2==计划进度}
        , setTheScheduleTime: function ($this,type) {

            var that = this,taskId = $this.closest('tr').attr('data-id');
            var dataStartTime = $this.attr('data-start-time');
            var dataEndTime = $this.attr('data-end-time');
            var companyId = $this.closest('tr').attr('data-company-id');
            var taskStatus = $this.attr('data-status');
            var options = {};
            options.$projectId = that.settings.$projectId;


            if (taskStatus==2 || (dataStartTime=='' && dataEndTime=='')) {//设置计划进度

                var $data = {};
                options.$title = '设置计划进度';
                options.$isHaveMemo = false;
                options.$isOkSave = true;
                options.$saveDataUrl = restApi.url_saveProjectProcessTime;
                options.$timeInfo = {
                    startTime:dataStartTime,
                    endTime:dataEndTime
                };
                $data.type = 2;
                $data.companyId = companyId;
                $data.targetId = $this.closest('tr').attr('data-publish-id');
                options.$saveData = $data;
                options.$saveTimeKeyVal = ['startTime', 'endTime'];
                options.$okCallBack = function (data) {
                    that.refreshPage();
                };
                $('body').m_inputProcessTime(options);

            } else {//计划进度变更
                options.$taskId = taskId;
                options.$type = type;
                options.$labelText = $this.closest('TR').find('td span.taskName').attr('data-string');
                options.$taskCompanyId = companyId;
                options.$okCallBack = function (data) {
                    that.refreshPage();
                };
                $('body').m_scheduleChanges_new(options);
            }
        }
        //事件绑定
        , bindActionClick: function () {
            var that = this;
            $(that.element).find('a[data-action],button[data-action]').on('click', function (e) {
                var $this = $(this);
                var dataAction = $this.attr('data-action');
                var taskId = $this.closest('tr').attr('data-id'),i=$this.closest('tr').attr('data-i');
                var dataI = $this.closest('tr').attr('data-i')-0;
                var publishId = $this.closest('tr').attr('data-publish-id');
                switch (dataAction) {
                    case 'choseDesignOrg'://更换设计组织

                        if(!($(that.element).find('.row-edit').length>0)){

                            that.getCompanyListByTaskId(taskId,function (resData) {

                                that.getDepartByCompanyId(function (data) {//查询部门

                                    that.removeAllEditBox();
                                    var selectedCompanyId = $this.prev('.show-span').attr('data-company-id');
                                    var selectedDepartId = $this.prev('.show-span').attr('data-depart-id');
                                    var selectedCompanyText = $this.prev('.show-span').text();
                                    if(selectedCompanyId==undefined || selectedCompanyId==''){
                                        selectedCompanyId = (resData.allCompanyList!=null && resData.allCompanyList.length>0)?resData.allCompanyList[0].id:'';
                                        selectedCompanyText = (resData.allCompanyList!=null && resData.allCompanyList.length>0)?resData.allCompanyList[0].companyName:'';
                                    }
                                    var html =  template('m_taskIssue/m_taskIssue_list_editOrg', {
                                        currentCompanyId:that._currentCompanyId,
                                        allCompanyList:resData.allCompanyList,
                                        departList:data,
                                        selectedCompanyId:selectedCompanyId,
                                        selectedCompanyText:selectedCompanyText,
                                        selectedDepartId:selectedDepartId

                                    });
                                    $this.prev().hide();
                                    $this.hide();
                                    $this.parent().append(html);
                                    that.dealSelectOrgEvent(1);
                                    e.stopPropagation();
                                });
                            });
                            e.stopPropagation();
                        }else{
                            S_toastr.warning('当前正在创建设计任务中...');
                        }
                        break;
                    case 'delTask'://删除任务

                        var canBeDelete = $this.attr('data-canbedelete');
                        var idList = [];
                        idList.push(taskId);
                        that.batchDelTask(idList);
                        break;
                    case 'batchDelTask'://批量删除
                        var idList = [];
                        $(that.element).find('input[name="taskCk"]:checked').each(function () {
                            var i = $(this).closest('tr').attr('data-i');
                            var currentTaskIssue = that._taskIssueList[i];
                            if(currentTaskIssue.canBeDelete){//可删除的任务
                                idList.push(currentTaskIssue.id);
                            }
                        });
                        if(idList.length>0){
                            that.batchDelTask(idList);
                        }else{
                            S_toastr.warning('当前不存在可删除的任务，请重新选择！')
                        }
                        break;
                    case 'addDesignTask'://添加设计任务
                        that.removeAllEditBox();
                        if(!($(that.element).find('.row-edit').length>0)){
                            //判断当前是否没数据
                            if($(that.element).find('tr.no-data-tr').length>0){
                                $(that.element).find('tr.no-data-tr').hide();
                            }
                            that.addTaskRow(null);
                            $this.attr('disabled',true);
                        }else{
                            S_toastr.warning('当前正在创建设计任务中...');
                        }
                        e.stopPropagation();
                        return false;
                        break;
                    case 'addSubTask'://添加子任务

                        if(!($(that.element).find('.row-edit').length>0)){
                            that.addTaskRow(taskId);
                            $this.attr('disabled',true);
                        }else{
                            S_toastr.warning('当前正在创建设计任务中...');
                        }
                        //e.stopPropagation();
                        break;
                    case 'publishTask'://发布

                        var idList = [];
                        idList.push(publishId);
                        that.batchPublishTask(idList);
                        break;
                    case 'batchPublishTask'://批量发布

                        var idList = [];
                        $(that.element).find('input[name="taskCk"]:checked').each(function () {
                            var i = $(this).closest('tr').attr('data-i');
                            var currentTaskIssue = that._taskIssueList[i];
                            if(currentTaskIssue.taskStatus==2){//可发布的任务
                                idList.push(currentTaskIssue.publishId);
                            }
                        });
                        if(idList.length>0){
                            that.batchPublishTask(idList);
                        }else{
                            S_toastr.warning('当前不存在可发布的任务，请重新选择！');
                        }
                        break;
                    case 'startTimeEdit'://开始时间编辑

                        if(!($(that.element).find('.row-edit').length>0)){
                            that.removeAllEditBox();
                            that.setTheScheduleTime($this,1);
                            e.stopPropagation();
                        }else{
                            S_toastr.warning('当前正在创建设计任务中...');
                        }
                        break;
                    case 'endTimeEdit'://开始时间编辑

                        if(!($(that.element).find('.row-edit').length>0)){
                            that.removeAllEditBox();
                            that.setTheScheduleTime($this,1);
                            e.stopPropagation();
                        }else{
                            S_toastr.warning('当前正在创建设计任务中...');
                        }
                        break;
                    case 'viewProgressChange'://获取时间变更列表

                        var option = {};
                        option.$taskId = taskId;
                        option.$publishId = $this.closest('tr').attr('data-publish-id');
                        option.$type = 2;
                        option.$eleId = $this.closest('a').attr('id');
                        option.$isView = that.settings.$isView;
                        option.$renderCallBack = function (dialogEle) {
                            if(that.settings.$isView){
                                $(dialogEle).parents('.ui-popup').css('z-index','29891016');//layer弹窗下，需要改下z-index
                                $(dialogEle).parents('.ui-popup').prev('.ui-popup-backdrop').css('z-index','29891016');//layer弹窗下，需要改下z-index
                            }
                        };
                        $('body').m_progressChange_list(option);
                        e.stopPropagation();
                        break;
                    case 'moveUp'://向上移动

                        var taskArr = [];
                        taskArr.push({
                            id:that._taskIssueList[dataI].id,
                            seq:that._taskIssueList[dataI].seq-0
                        });
                        for(var i=dataI-1;i<dataI;i--){
                            if(that._taskIssueList[i].taskLevel==that._taskIssueList[dataI].taskLevel){
                                taskArr.push({
                                    id:that._taskIssueList[i].id,
                                    seq:that._taskIssueList[i].seq-0
                                });
                                break;
                            }
                        }
                        that.saveTaskMoveInSeq(taskArr);

                        break;
                    case 'moveDown'://向下移动

                        var taskArr = [];
                        taskArr.push({
                            id:that._taskIssueList[dataI].id,
                            seq:that._taskIssueList[dataI].seq
                        });
                        for(var i=dataI+1;i<that._taskIssueList.length;i++){
                            if(that._taskIssueList[i].taskLevel==that._taskIssueList[dataI].taskLevel){
                                taskArr.push({
                                    id:that._taskIssueList[i].id,
                                    seq:that._taskIssueList[i].seq
                                });
                                break;
                            }
                        }
                        that.saveTaskMoveInSeq(taskArr);
                        break;
                    case 'viewPlanTime'://与自己有关的约定时间
                        S_dialog.dialog({
                            title: '约定时间',
                            contentEle: 'dialogOBox',
                            ele:'viewPlanTime'+taskId,//弹框位置定位
                            lock: 2,
                            quickClose:true,
                            noTriangle:true,
                            width: '420',
                            minHeight:'110',
                            tPadding: '0px',
                            url: rootPath+'/assets/module/m_common/m_dialog.html'

                        },function(d){//加载html后触发

                            var tipsEle = 'div[id="content:'+d.id+'"] .dialogOBox';
                            var currentTaskObj = that._taskIssueList[i];
                            $(tipsEle).html(template('m_taskIssue/m_taskIssue_list_changeTime',{
                                issuePlanList:currentTaskObj.issuePlanList
                            }));
                            if(that.settings.$isView) {
                                $(tipsEle).parents('.ui-popup').css('z-index', '29891016');//layer弹窗下，需要改下z-index
                                $(tipsEle).parents('.ui-popup').prev('.ui-popup-backdrop').css('z-index', '29891016');//layer弹窗下，需要改下z-index
                            }

                            //点击获取变更列表
                            $(tipsEle).find('a[data-action]').click(function(e){
                                var $this = $(this);
                                var id = $this.closest('a').attr('id');
                                var taskId = $this.closest('a').attr('data-id'),i=$this.closest('a').attr('data-i');
                                var option = {};
                                option.$taskId = taskId;
                                option.$publishId = $this.closest('a').attr('data-publish-id');
                                option.$type = 2;
                                option.$eleId = id;
                                option.$isView = that.settings.$isView;
                                option.$renderCallBack = function (dialogEle) {
                                    if(that.settings.$isView){
                                        $(dialogEle).parents('.ui-popup').css('z-index','29891016');//layer弹窗下，需要改下z-index
                                        $(dialogEle).parents('.ui-popup').prev('.ui-popup-backdrop').css('z-index','29891016');//layer弹窗下，需要改下z-index
                                    }
                                };
                                $('body').m_progressChange_list(option);
                                e.stopPropagation();
                            })
                        });
                        return false;
                        break;

                    case 'viewTaskRemarkEdit'://查看任务描述

                        var id = $this.attr('id'),currentObj = that._taskIssueList[i];
                        S_dialog.dialog({
                            title: '任务描述',
                            contentEle: 'dialogOBox',
                            ele:id,
                            lock: 2,
                            quickClose:true,
                            noTriangle:true,
                            width: '320',


                            minHeight:'110',
                            tPadding: '0px',
                            url: rootPath+'/assets/module/m_common/m_dialog.html'

                        },function(d){//加载html后触发

                            var tipsEle = 'div[id="content:'+d.id+'"] .dialogOBox';
                            var remark = currentObj.taskRemark==null?'':currentObj.taskRemark;
                            $(tipsEle).html('<div class="m-sm" style="word-break: break-all;">'+remark+'</div>');

                        });
                        e.stopPropagation();
                        break;


                }

            });

        }
        //刷新当前界面
        , refreshPage: function () {
            var option = {}, that = this;
            option.$projectId = that.settings.$projectId;
            option.$projectName = that.settings.$projectName;
            if(that.settings.$pageEntrance == 'myIssueTask'){
                $('#content-right').m_myTask_taskIssue(option,true);
            }else{
                $('#content-right').m_taskIssue(option,true);
            }

            return false;
        }
    });
    $.fn[pluginName] = function (options) {
        return this.each(function () {

            //if (!$.data(this, "plugin_" + pluginName)) {
            $.data(this, "plugin_" +
                pluginName, new Plugin(this, options));
            //}
        });
    };

})(jQuery, window, document);

/**
 * 项目信息－任务签发列表
 * Created by wrb on 2017/2/21.
 */
;(function ($, window, document, undefined) {

    "use strict";
    var pluginName = "m_taskIssue_list_old",
        defaults = {
            $projectId: null,
            $projectName:null,
            $projectCompanyId: null,
            $taskIssueList: null,
            $publishId:null,
            $projectManagerId:null,//经营负责人ID
            $currentManagerObj:null,//经营人对象
            $pageEntrance:'taskIssue'//页面入口（我的任务=myIssueTask,任务签发=taskIssue）
        };

    // The actual plugin constructor
    function Plugin(element, options) {
        this.element = element;

        this.settings = $.extend({}, defaults, options);
        this._defaults = defaults;
        this._name = pluginName;
        this._currentCompanyUserId = window.currentCompanyUserId;
        this._currentCompanyId = window.currentCompanyId;//当前组织ID
        this._taskIssueList = [];//当前经营列表
        this._isOrgManager = 0;
        this._isAssistant = 0;
        this.init();
    }

    // Avoid Plugin.prototype conflicts
    $.extend(Plugin.prototype, {
        init: function () {
            var that = this;
            that.initHtml();
            that.bindActionClick();
        },
        //初始化数据,生成html
        initHtml: function () {
            var that = this;
            var $data = {};
            $data.taskIssueList = that.settings.$taskIssueList;
            that._taskIssueList = that.settings.$taskIssueList;
            $data.currentCompanyId = that._currentCompanyId;
            $data.projectCompanyId = that.settings.$projectCompanyId;
            $data.isView = that.settings.$isView;
            $data.isOrgManager = 0;//是否经营负责人
            if(window.currentCompanyUserId==that.settings.$projectManagerId){//that.settings.$projectCompanyId == that._currentCompanyId &&
                $data.isOrgManager = 1;
                that._isOrgManager = 1;
            }
            if(that.settings.$currentManagerObj.assistant!=null && window.currentCompanyUserId==that.settings.$currentManagerObj.assistant.companyUserId){//that.settings.$projectCompanyId == that._currentCompanyId &&
                $data.isAssistant = 1;
                that._isAssistant = 1;
            }
            var html = template('m_taskIssue/m_taskIssue_list', $data);
            $(that.element).html(html);
            $(that.element).find('.tree').treegrid({
                expanderExpandedClass: 'ic-open',
                expanderCollapsedClass: 'ic-retract',
                treeColumn: 2
            });
            var tableWidth = $(that.element).find('table.table').width();
            stringCtrl('taskName',tableWidth*0.25);

            //设计名称编辑
            $(that.element).find('a[data-action="taskNameEdit"]').each(function () {
                var $this = $(this);
                var taskName = $this.prev().attr('data-string');
                $this.editable({//编辑
                    type: 'text',
                    mode: 'inline',
                    value:taskName,
                    emptytext:'',
                    savenochange:true,
                    placeholder: '设计任务',
                    onblur:'submit',
                    showbuttons:false,
                    success: function(response, newValue) {
                        if(newValue!=taskName){
                            var param = {};
                            param.taskName = newValue;
                            if(that.saveTaskIssueBySyncEdit($this,param)){
                                return false;
                            }
                        }
                    },
                    display: function(value, sourceData) {
                        $this.prev('.show-span').show();
                    },
                    validate: function(value) {
                        if($.trim(value) == ''){
                            S_toastr.error('设计任务名称不可为空！');
                            return '不能为空';
                        }
                        if(value.length>50){
                            S_toastr.error('设计任务名称超出字数限制！');
                            return '设计任务名称超出字数限制！';
                        }
                    }
                });
                //显示x-editable事件shown
                $this.on('shown', function(e, editable) {
                    if(!($(that.element).find('.row-edit').length>0)) {
                        $this.prev('.show-span').hide();
                        var len = taskName.length;
                        $this.next('.editable-container').find('.editable-input').after('<span style="padding: 4px 12px;display: inline-block;"><span class="wordCount">' + len + '</span>/<span>50</span></span>');
                    }else{
                        S_toastr.warning('当前正在创建设计任务中...');
                        $this.editable('hide');
                    }
                    $this.next('.editable-container').find('.editable-error-block').remove();//屏蔽错误提示，改为toastr提示
                    $this.next('.editable-container').find('.editable-input input').on('keyup',function () {//任务名称字数事件
                        var len = $this.next('.editable-container').find('.editable-input input').val().length;
                        $this.next('.editable-container').find('.wordCount').text(len);
                        if(len>50){
                            $this.next('.editable-container').find('.wordCount').addClass('color-red');
                        }else{
                            if($this.next('.editable-container').find('.wordCount').hasClass('color-red')){
                                $this.next('.editable-container').find('.wordCount').removeClass('color-red');
                            }
                        }
                    });
                });
            });

            if(!that.settings.$isView){

                //操作列表没有可操作则不展示该按钮组
                $(that.element).find('ul.dropdown-menu').each(function () {
                    var len = $(this).find('li a[data-action]').length;
                    if(len==0){
                        $(this).parents('tr').find('td:first .list-check-box').remove();
                        $(this).parents('.btn-group').remove();

                    }
                });
                that.editHoverFun();
                that.documentBindFun();
                that.initICheck();
            }
            else{//查看状态下删除相关操作按钮
                $(that.element).find('.list-check-box').remove();
                $(that.element).find('.list-action-box').remove();
                $(that.element).find('button[data-action="addDesignTask"]').remove();
            }
            $(that.element).find('a[data-toggle="tooltip"],i[data-toggle="tooltip"]').tooltip();
            that.editTaskRemark();
        }
        //任务描述编辑
        , editTaskRemark:function () {
            var that = this;
            $(that.element).find('a[data-action="taskRemarkEdit"]').each(function () {
                var $this = $(this);
                var id = $this.attr('id'),i=$this.closest('TR').attr('data-i'),currentObj = that._taskIssueList[i];
                $this.on('click',function () {

                    if(!($(that.element).find('.row-edit').length>0)) {

                        S_dialog.dialog({
                            title: '任务描述',
                            contentEle: 'dialogOBox',
                            ele:id,
                            lock: 2,
                            quickClose:true,
                            noTriangle:true,
                            width: '320',
                            minHeight:'110',
                            tPadding: '0px',
                            url: rootPath+'/assets/module/m_common/m_dialog.html'

                        },function(d){//加载html后触发

                            var tipsEle = 'div[id="content:'+d.id+'"] .dialogOBox';
                            var remark = currentObj.taskRemark==null?'':currentObj.taskRemark;

                            var html = template('m_production/m_production_editRemark',{
                                remark:remark
                            });
                            $(tipsEle).html(html);

                            $(tipsEle).find('button[data-action="cancel"]').off('click').on('click',function () {
                                S_dialog.close($(tipsEle));
                            });
                            $(tipsEle).find('button[data-action="submit"]').off('click').on('click',function () {
                                var text = $(tipsEle).find('textarea').val();
                                var param = {};
                                param.taskRemark = text;
                                that.saveTaskIssueByEdit($this,param);
                                S_dialog.close($(tipsEle));
                            });

                        });

                    }else{
                        S_toastr.warning('当前正在创建设计任务中...');
                    }
                });
            });
        }
        //hover事件
        , editHoverFun:function () {

            var that = this;
            //文本移上去出现编辑图标hover事件
            $(that.element).find('a[data-action][data-deal-type="edit"]').each(function () {

                var $this = $(this);
                
                $this.closest('TD').hover(function () {
                    if($this.next('.edit-box').length<=0 && $this.next('.editable-container').length<=0){
                        $this.show();
                    }
                },function () {
                    if($this.next('.edit-box').length<=0 && $this.next('.editable-container').length<=0) {
                        $this.hide();
                    }
                })
            });
            //TR hover效果
            $(that.element).find('TR').each(function () {

                var $this = $(this);
                var singleOperation = $this.find('.singleOperation');
                var batchOperation = $this.find('.batchOperation');

                $this.hover(function () {
                    if(batchOperation.length==0 || batchOperation.css('display')=='none'){
                        singleOperation.show();
                    }
                    if(!$this.hasClass('chose-operable')){
                        $this.addClass('tr-hover');
                    }

                },function () {
                    singleOperation.hide();
                    if(!$this.hasClass('chose-operable')){
                        $this.removeClass('tr-hover');
                    }
                });
            });
        }
        //保存签发
        ,saveTaskIssue:function (taskId) {
            var options={},that=this;
            options.classId = 'body';
            options.url=restApi.url_saveTaskIssuing;
            options.postData = {};
            options.postData.projectId = that.settings.$projectId;
            options.postData.taskType =2;
            options.postData.companyId = $(that.element).find('.org-select-box .company-name').attr('data-company-id');

            var departId = $(that.element).find('.org-select-box .company-name').attr('data-depart-id');
            if( departId!=undefined && departId!=''){
                options.postData.orgId = departId;
            }
            if(taskId!=null){
                options.postData.taskPid = taskId;
            }
            options.postData.taskName = $.trim($(that.element).find('.row-edit input[name="taskName"]').val());
            options.postData.startTime = $(that.element).find('.row-edit input[name="startTime"]').val();
            options.postData.endTime = $(that.element).find('.row-edit input[name="endTime"]').val();
            options.postData.taskRemark = $(that.element).find('.row-edit input[name="taskRemark"]').val();

            m_ajax.postJson(options,function (response) {

                if(response.code=='0'){
                    S_toastr.success('保存成功！');
                    that.refreshPage();
                }else {
                    if(response.info.indexOf('已存在')>-1){
                        S_toastr.error(response.info);
                    }else{
                        S_dialog.error(response.info);
                    }
                }
            });
        }
        //编辑签发保存
        ,saveTaskIssueByEdit:function ($this,param) {
            var options={},that=this;
            options.url=restApi.url_saveTaskIssuing;
            options.postData = {};
            options.postData.projectId = that.settings.$projectId;
            options.postData.taskType =2;
            options.postData.companyId = $this.closest('tr').attr('data-company-id');
            options.postData.id = $this.closest('tr').attr('data-id');
            $.extend(options.postData, param);
            m_ajax.postJson(options,function (response) {
                if(response.code=='0'){
                    S_toastr.success('保存成功！');
                    that.refreshPage();
                }else {
                    if(response.info.indexOf('已存在')>-1){
                        S_toastr.error(response.info);
                        $this.editable('show');
                    }else{
                        S_dialog.error(response.info);
                    }
                }
            });
        }
        //编辑签发保存
        ,saveTaskIssueBySyncEdit:function ($this,param) {
            var options={},that=this;
            options.url=restApi.url_saveTaskIssuing;
            options.async = false;
            options.postData = {};
            options.postData.projectId = that.settings.$projectId;
            options.postData.taskType =2;
            options.postData.companyId = $this.closest('tr').attr('data-company-id');
            options.postData.id = $this.closest('tr').attr('data-id');
            $.extend(options.postData, param);
            var isError = false;
            m_ajax.postJson(options,function (response) {
                if(response.code=='0'){
                    S_toastr.success('保存成功！');
                    that.refreshPage();
                }else {
                    if(response.info.indexOf('已存在')>-1){
                        S_toastr.error(response.info);
                        isError = true;
                    }else{
                        S_dialog.error(response.info);
                    }
                }
            });
            return isError;
        }
        //编辑签发进度变更保存
        ,saveProgressChangeByEdit:function ($this,param) {
            var options={},that=this;
            options.url=restApi.url_saveProjectProcessTime;
            options.postData = {};
            options.postData.targetId = $this.closest('tr').attr('data-publish-id');
            options.postData.companyId = $this.closest('tr').attr('data-company-id');
            options.postData.type = 2;
            $.extend(options.postData, param);
            m_ajax.postJson(options,function (response) {
                if(response.code=='0'){
                    S_toastr.success('保存成功！');
                    that.refreshPage();
                }else {
                    S_dialog.error(response.info);
                }
            });
        }
        //查询组织部门
        ,getDepartByCompanyId:function (callBack) {
            var that = this;
            var option  = {};
            option.url = restApi.url_getDepartByCompanyId+'/'+that._currentCompanyId;
            m_ajax.get(option,function (response) {
                if(response.code=='0'){
                    return callBack(response.data);
                }else {
                    S_dialog.error(response.info);
                }
            })
        }
        //查询组织
        ,getCompanyListByTaskId:function (taskId,callBack) {
            var that = this,option={};
            option.url=restApi.url_getIssueTaskCompany;
            option.postData = {};
            option.postData.projectId = that.settings.$projectId;
            if(taskId!=null){
                option.postData.taskId = taskId;
            }
            m_ajax.postJson(option,function (response) {

                if(response.code=='0'){

                    if(callBack!=null){
                        callBack(response.data);
                    }
                }else {
                    S_dialog.error(response.info);
                }
            })
        }
        //添加设计任务
        ,addTaskRow:function (taskId) {
            var that = this;
            that.getCompanyListByTaskId(taskId,function (resData) {

                that.getDepartByCompanyId(function (data) {//查询部门

                    var html =  template('m_taskIssue/m_taskIssue_list_add', {
                        currentCompanyId:that._currentCompanyId,
                        allCompanyList:resData.allCompanyList,
                        departList:data
                    });
                    if(taskId!=null){//添加子任务
                        if($(that.element).find('tr[data-pid="'+taskId+'"]').length>0){//存在子任务

                            $(that.element).find('tr[data-pid="'+taskId+'"]:last').after(html);
                        }else{
                            $(that.element).find('tr[data-id="'+taskId+'"]').after(html);
                        }

                        //把父任务时间带过来
                        var $pEle = $(that.element).find('tr[data-id="'+taskId+'"]');
                        var sTime = $pEle.find('span.show-span[data-type="planTime"]').attr('data-start-time');
                        var eTime = $pEle.find('span.show-span[data-type="planTime"]').attr('data-end-time');
                        $(that.element).find('.row-edit input[name="startTime"]').val(sTime);
                        $(that.element).find('.row-edit input[name="endTime"]').val(eTime);

                        //父任务加底色显示
                        $(that.element).find('tr[data-id="'+taskId+'"]').css('background-color','#d7d7d7');

                    }else{//添加根任务
                        $(that.element).find('tr:last').after(html);
                    }
                    that.timeIconClick1($('.row-edit'));
                    $(that.element).find('button[data-action="cancel"]').on('click',function () {//取消事件
                        $(this).closest('tr').next('tr.row-edit').remove();
                        $(this).closest('tr').remove();
                        $(that.element).find('button[data-action="addDesignTask"]').attr('disabled',false);
                        $(that.element).find('tr[data-id="'+taskId+'"]').removeAttr('style');
                        //判断当前是否没数据
                        if($(that.element).find('tr.no-data-tr').length>0){
                            $(that.element).find('tr.no-data-tr').show();
                        }
                    });
                    $(that.element).find('button[data-action="submit"]').on('click',function (e) {//提交事件

                        /****************** 验证 - 开始**********************/

                        var taskName = $.trim($(this).closest('tr.row-edit').find('input[name="taskName"]').val());
                        var isRepeatName = false;//任务名称是否重名

                        if(taskName==''){
                            S_toastr.error('设计任务名称不可为空！');
                            return false;
                        }
                        if(taskName.length>50){
                            S_toastr.error('设计任务名称超出字数限制！');
                            return false;
                        }
                        /*if(that._taskIssueList!=null && that._taskIssueList.length>0){
                            $.each(that._taskIssueList,function (index,item) {
                                if(taskName==item.taskName){
                                    isRepeatName = true;
                                    return false;
                                }
                            })
                        }
                        if(isRepeatName){
                            S_toastr.error(taskName+'已存在！');
                            return false;
                        }*/
                        /****************** 验证 - 结束**********************/
                        that.saveTaskIssue(taskId);
                        e.stopPropagation();
                        return false;
                    });
                    $(that.element).find('input[name="taskName"]').on('keyup',function () {//任务名称字数事件
                        var len = $(that.element).find('input[name="taskName"]').val().length;
                        $(that.element).find('.wordCount').text(len);
                        if(len>50){
                            $(that.element).find('.wordCount').addClass('color-red');
                        }else{
                            if($(that.element).find('.wordCount').hasClass('color-red')){
                                $(that.element).find('.wordCount').removeClass('color-red');
                            }
                        }
                    });
                    //绑定回车事件
                    $(that.element).find('input[name="taskName"]').keydown(function(e) {
                        if (event.keyCode == '13') {//keyCode=13是回车键
                            $(that.element).find('button[data-action="submit"]').click();
                            preventDefault(e);
                        }
                    });
                    that.dealSelectOrgEvent(0);
                });
            })
        }
        //选中组织事件{0：添加任务；1：编辑组织}
        ,dealSelectOrgEvent:function (type) {
            var that = this;
            $(that.element).find('a.open-depart-btn').on('click',function (e) {//打开部门选择

                if($(this).find('i').hasClass('fa-angle-double-down')){
                    $(this).find('i').removeClass('fa-angle-double-down').addClass('fa-angle-double-up');
                    $(this).next('.dropdown-menu').show();
                }else{
                    $(this).find('i').addClass('fa-angle-double-down').removeClass('fa-angle-double-up');
                    $(this).next('.dropdown-menu').hide();
                }
                e.stopPropagation();
            });
            $(that.element).find('a[data-action="choseOrg"]').on('click',function (e) {//选择组织处理事件

                var dataChoseType = $(this).attr('data-chose-type');
                var companyName = $(this).text();
                var companyId = $(this).attr('data-company-id');
                var departId = null;
                var isDisabled = $(this).attr('disabled');
                $(that.element).find('.edit-box .company-name').html(companyName);
                if(dataChoseType=='company'){
                    $(that.element).find('.edit-box .company-name').attr('data-company-id',companyId);
                    $(that.element).find('.edit-box .company-name').attr('data-depart-id','');
                }else{
                    companyId = $(this).parents('ul').parent().find('a:first').attr('data-company-id');
                    departId = $(this).attr('data-company-id');
                    $(that.element).find('.edit-box .company-name').attr('data-company-id',companyId);
                    $(that.element).find('.edit-box .company-name').attr('data-depart-id',departId);
                }
                $(that.element).find('.edit-box .dropdown-menu').hide();
                $(that.element).find('a.open-depart-btn i').addClass('fa-angle-double-down').removeClass('fa-angle-double-up');

                if(type==1 && (isDisabled==undefined || isDisabled!='disabled')){//编辑状态下选中即保存,并且选的不是当前组织
                    var param = {};
                    param.companyId = companyId;
                    param.orgId = departId;
                    param.isChangeOrg = 1;
                    that.saveTaskIssueByEdit($(this),param);
                }
                e.stopPropagation();
            });
            $(that.element).find('.edit-box button:first').on('click',function () {//点击选择btn事件
                if($(that.element).find('.edit-box .dropdown-menu').eq(0).css('display')=='none'){
                    $(that.element).find('.edit-box .dropdown-menu').eq(0).show();
                }else{
                    $(that.element).find('.edit-box .dropdown-menu').hide();
                }
                //处理选中效果状态(加底色不可触发)
                var selectedCompanyId = $(that.element).find('.edit-box button .company-name').attr('data-company-id');
                var selectedDepartId = $(that.element).find('.edit-box button .company-name').attr('data-depart-id');
                if(selectedDepartId!=undefined && selectedDepartId!=''){//选择的是部门
                    selectedCompanyId = selectedDepartId;
                }
                $(that.element).find('.edit-box a[data-action="choseOrg"]').css('background-color','');
                $(that.element).find('.edit-box a[data-action="choseOrg"]').removeAttr('disabled');
                var $ele = $(that.element).find('.edit-box a[data-action="choseOrg"][data-company-id="'+selectedCompanyId+'"]');
                $ele.css('background-color','#f5f5f5');
                $ele.attr('disabled','disabled');
            });
        }
        //window document事件绑定
        ,documentBindFun:function () {
            var that = this;
            $(document).bind('click',function(e){

                console.log('document event');
                if(!($(e.target).closest('.reign-edit-box').length>0 || $(e.target).hasClass('reign-edit-box'))){
                    $(that.element).find('.reign-edit-box').parents('td').find('.show-span').show();
                    $(that.element).find('.reign-edit-box').remove();
                }

                if(!($(e.target).hasClass('org-select-box') || $(e.target).closest('.org-select-box').length>0)) {
                    $(that.element).find('.org-select-box .dropdown-menu').hide();
                    $(that.element).find('a.open-depart-btn i').addClass('fa-angle-double-down').removeClass('fa-angle-double-up');
                }
            });
        }
        //编辑前清空所有编辑情况
        ,removeAllEditBox:function () {
            var that = this;
            $(that.element).find('.reign-edit-box').parents('td').find('.show-span').show();
            $(that.element).find('.reign-edit-box').remove();
            $(that.element).find('.editable').prev().show();
            $(that.element).find('.editable').editable('hide');
        }
        ,initICheck:function () {
            var that = this;
            var ifChecked = function (e) {

                $(this).closest('tr').find('.singleOperation').hide();

                var $i = $(this).closest('tr').attr('data-i')-0;//当前任务list下标
                var $ele = $(that.element).find('tr[data-i="'+$i+'"]');
                if(that._taskIssueList.length>0){

                    if((that._taskIssueList[$i].taskStatus==2 || that._taskIssueList[$i].canBeDelete) && that._isOrgManager==1){
                        $ele.addClass('chose-operable');
                    }


                    //父级出现批量操作按钮
                    if(that._taskIssueList[$i].isHasChild==0){
                        var dataPid = $ele.attr('data-pid');
                        var $pEle = $(that.element).find('tr[data-id="'+dataPid+'"]');
                        var checkedLen = $(that.element).find('tr[data-pid="'+dataPid+'"] input[name="taskCk"]:checked').length;
                        var checkLen = $(that.element).find('tr[data-pid="'+dataPid+'"] input[name="taskCk"]').length;
                        $pEle.find('.batchOperation').show();
                        if(checkLen==checkedLen){
                            //父checkbox
                            $pEle.find('input[name="taskCk"]').prop('checked',true);
                            $pEle.find('input[name="taskCk"]').iCheck('update');
                        }

                    }else{
                        $ele.find('.batchOperation').show();
                    }

                    for(var i=($i+1);i<that._taskIssueList.length;i++){
                        var $currTrEle = $(that.element).find('tr[data-i="'+i+'"]');
                        if(that._taskIssueList[i]==null){
                            break;
                        }
                        if(that._taskIssueList[i].taskLevel>that._taskIssueList[$i].taskLevel){//taskLevel大于当前taskLevel，即是子集
                            $currTrEle.find('.singleOperation').hide();
                            $currTrEle.find('input[name="taskCk"]').prop('checked',true);
                            $currTrEle.find('input[name="taskCk"]').iCheck('update');

                            if((that._taskIssueList[i].taskStatus==2 || that._taskIssueList[i].canBeDelete) && that._isOrgManager==1){
                                $currTrEle.addClass('chose-operable');
                            }
                        }else{//遇到同级即退出循环
                            break;
                        }
                    }

                }
                that.isTaskAllCheck();
            };
            var ifUnchecked = function (e) {

                $(this).closest('tr').find('.singleOperation').show();
                var $i = $(this).closest('tr').attr('data-i')-0;//当前任务list下标
                var $ele = $(that.element).find('tr[data-i="'+$i+'"]');
                var currentDataId = $ele.attr('data-id');
                $ele.removeClass('chose-operable');
                if(that._taskIssueList.length>0){

                    //父级批量操作按钮展示与否
                    if(that._taskIssueList[$i].isHasChild==0){
                        var dataPid = $ele.attr('data-pid');
                        var $pEle = $(that.element).find('tr[data-id="'+dataPid+'"]');
                        var checkedLen = $(that.element).find('tr[data-pid="'+dataPid+'"] input[name="taskCk"]:checked').length;
                        var checkLen = $(that.element).find('tr[data-pid="'+dataPid+'"] input[name="taskCk"]').length;

                        if(checkedLen>0){//子集存在选中
                            $pEle.find('.batchOperation').show();
                            if(checkLen>checkedLen){
                                //父checkbox去勾
                                $pEle.find('input[name="taskCk"]').prop('checked',false);
                                $pEle.find('input[name="taskCk"]').iCheck('update');
                            }
                        }else{
                            $pEle.find('.batchOperation').hide();
                            //父checkbox去勾
                            $pEle.find('input[name="taskCk"]').prop('checked',false);
                            $pEle.find('input[name="taskCk"]').iCheck('update');
                        }

                    }else{
                        $ele.find('.batchOperation').hide();
                        $(that.element).find('tr[data-pid="'+currentDataId+'"]').find('.batchOperation').hide();
                    }

                    for(var i=($i+1);$i<i<that._taskIssueList.length;i++){
                        var currTrEle = $(that.element).find('tr[data-i="'+i+'"]');
                        if(that._taskIssueList[i]==null){
                            break;
                        }
                        if(that._taskIssueList[i].taskLevel>that._taskIssueList[$i].taskLevel){
                            currTrEle.find('input[name="taskCk"]').prop('checked',false);
                            currTrEle.find('input[name="taskCk"]').iCheck('update');
                            currTrEle.find('input[name="taskCk"]').iCheck('enable');

                            $(that.element).find('tr[data-i="'+i+'"]').removeClass('chose-operable');

                        }else{//遇到同级即退出循环
                            break;
                        }
                    }
                }
                that.isTaskAllCheck();
            };
            $(that.element).find('input[name="taskCk"]').iCheck({
                checkboxClass: 'icheckbox_minimal-green',
                radioClass: 'iradio_minimal-green'
            }).on('ifUnchecked.s', ifUnchecked).on('ifChecked.s', ifChecked);
            var ifAllChecked = function (e) {
                $(that.element).find('input[name="taskCk"]').iCheck('check');
            };
            var ifAllUnchecked = function (e) {
                //$(that.element).find('input[name="taskCk"]').iCheck('uncheck');
                $(that.element).find('input[name="taskCk"]').prop('checked',false);
                $(that.element).find('input[name="taskCk"]').iCheck('update');
                $(that.element).find('input[name="taskCk"]').iCheck('enable');
                $(that.element).find('tbody .singleOperation').hide();
                $(that.element).find('tbody .batchOperation ').hide();
                $(that.element).find('tr[data-i]').removeClass('chose-operable');
            };
            $(that.element).find('input[name="taskAllCk"]').iCheck({
                checkboxClass: 'icheckbox_minimal-green',
                radioClass: 'iradio_minimal-green'
            }).on('ifUnchecked.s', ifAllUnchecked).on('ifChecked.s', ifAllChecked);
        }
        //判断全选是否该选中并给相关处理
        ,isTaskAllCheck:function () {
            var that =this;
            var len = $(that.element).find('input[name="taskCk"]:checked').length;
            var taskLen = that._taskIssueList.length;
            if(len==taskLen){
                $(that.element).find('input[name="taskAllCk"]').prop('checked',true);
                $(that.element).find('input[name="taskAllCk"]').iCheck('update');
            }else{
                $(that.element).find('input[name="taskAllCk"]').prop('checked',false);
                $(that.element).find('input[name="taskAllCk"]').iCheck('update');
            }
        }
        //批量删除任务
        ,batchDelTask:function (idList) {
            var that = this;
            S_swal.confirm({
                title:'确定删除该任务?',
                text:'删除后将不能恢复，确定吗？',
                callBack:function () {
                    var option = {};
                    option.url = restApi.url_deleteProjectTask;
                    option.postData = {};
                    option.postData.idList = idList;
                    m_ajax.postJson(option, function (response) {
                        if (response.code == '0') {
                            S_swal.sure({
                                title:'已删除',
                                text:'该任务签发删除成功。',
                                callBack:function () {
                                    that.refreshPage();
                                }
                            });
                        } else {
                            S_dialog.error(response.info);
                        }
                    });
                }
            });
        }
        //批量发布
        ,batchPublishTask:function (idList) {

            var that = this;
            S_dialog.confirm('确定发布任务？',function () {

                var option = {};
                option.classId = '.ibox-content';
                option.url = restApi.url_publishIssueTask;
                option.postData = {};
                option.postData.projectId = that.settings.$projectId;
                option.postData.idList = idList;
                m_ajax.postJson(option, function (response) {
                    if (response.code == '0') {
                        S_toastr.success('发布成功');
                        that.refreshPage();
                    } else {
                        S_dialog.error(response.info);
                    }
                });
            },function () {
            });
        }
        //向上、向下移动保存
        ,saveTaskMoveInSeq:function (taskList) {

            var that = this;
            var option = {};
            option.url = restApi.url_exchangeTask;
            option.postData = [];
            option.postData = taskList;
            m_ajax.postJson(option, function (response) {
                if (response.code == '0') {
                    S_toastr.success('更新成功');
                    that.refreshPage();
                } else {
                    S_dialog.error(response.info);
                }
            });
        }
        //时间图标事件点击
        ,timeIconClick:function ($this) {
            $this.next().find('.fa-calendar').off('click').on('click',function (e) {
                $(this).closest('.input-group').find('input[name="ipt_time"]').click();
                e.stopPropagation();
            });
        }
        //时间图标事件点击
        ,timeIconClick1:function ($this) {
            $this.find('.fa-calendar').off('click').on('click',function (e) {
                $(this).closest('.input-group').find('input.timeInput').focus();
                e.stopPropagation();
            });
        }
        //设置进度变更时间{type==1==合同时间,type==2==计划进度}
        , setTheScheduleTime: function ($this,type) {

            var that = this,taskId = $this.closest('tr').attr('data-id');
            var dataStartTime = $this.attr('data-start-time');
            var dataEndTime = $this.attr('data-end-time');
            var companyId = $this.closest('tr').attr('data-company-id');
            var taskStatus = $this.attr('data-status');
            var options = {};
            options.$projectId = that.settings.$projectId;


            if (taskStatus==2 || (dataStartTime=='' && dataEndTime=='')) {//设置计划进度

                var $data = {};
                options.$title = '设置计划进度';
                options.$isHaveMemo = false;
                options.$isOkSave = true;
                options.$saveDataUrl = restApi.url_saveProjectProcessTime;
                options.$timeInfo = {
                    startTime:dataStartTime,
                    endTime:dataEndTime
                };
                $data.type = 2;
                $data.companyId = companyId;
                $data.targetId = $this.closest('tr').attr('data-publish-id');
                options.$saveData = $data;
                options.$saveTimeKeyVal = ['startTime', 'endTime'];
                options.$okCallBack = function (data) {
                    that.refreshPage();
                };
                $('body').m_inputProcessTime(options);

            } else {//计划进度变更
                options.$taskId = taskId;
                options.$type = type;
                options.$labelText = $this.closest('TR').find('td span.taskName').attr('data-string');
                options.$taskCompanyId = companyId;
                options.$okCallBack = function (data) {
                    that.refreshPage();
                };
                $('body').m_scheduleChanges_new(options);
            }
        }
        //事件绑定
        , bindActionClick: function () {
            var that = this;
            $(that.element).find('a[data-action],button[data-action]').on('click', function (e) {
                var $this = $(this);
                var dataAction = $this.attr('data-action');
                var taskId = $this.closest('tr').attr('data-id'),i=$this.closest('tr').attr('data-i');
                var dataI = $this.closest('tr').attr('data-i')-0;
                var publishId = $this.closest('tr').attr('data-publish-id');
                switch (dataAction) {
                    case 'choseDesignOrg'://更换设计组织

                        if(!($(that.element).find('.row-edit').length>0)){

                            that.getCompanyListByTaskId(taskId,function (resData) {

                                that.getDepartByCompanyId(function (data) {//查询部门

                                    that.removeAllEditBox();
                                    var selectedCompanyId = $this.prev('.show-span').attr('data-company-id');
                                    var selectedDepartId = $this.prev('.show-span').attr('data-depart-id');
                                    var selectedCompanyText = $this.prev('.show-span').text();
                                    if(selectedCompanyId==undefined || selectedCompanyId==''){
                                        selectedCompanyId = (resData.allCompanyList!=null && resData.allCompanyList.length>0)?resData.allCompanyList[0].id:'';
                                        selectedCompanyText = (resData.allCompanyList!=null && resData.allCompanyList.length>0)?resData.allCompanyList[0].companyName:'';
                                    }
                                    var html =  template('m_taskIssue/m_taskIssue_list_editOrg', {
                                        currentCompanyId:that._currentCompanyId,
                                        allCompanyList:resData.allCompanyList,
                                        departList:data,
                                        selectedCompanyId:selectedCompanyId,
                                        selectedCompanyText:selectedCompanyText,
                                        selectedDepartId:selectedDepartId

                                    });
                                    $this.prev().hide();
                                    $this.hide();
                                    $this.parent().append(html);
                                    that.dealSelectOrgEvent(1);
                                    e.stopPropagation();
                                });
                            });
                            e.stopPropagation();
                        }else{
                            S_toastr.warning('当前正在创建设计任务中...');
                        }
                        break;
                    case 'delTask'://删除任务

                        var canBeDelete = $this.attr('data-canbedelete');
                        var idList = [];
                        idList.push(taskId);
                        that.batchDelTask(idList);
                        break;
                    case 'batchDelTask'://批量删除
                        var idList = [];
                        $(that.element).find('input[name="taskCk"]:checked').each(function () {
                            var i = $(this).closest('tr').attr('data-i');
                            var currentTaskIssue = that._taskIssueList[i];
                            if(currentTaskIssue.canBeDelete){//可删除的任务
                                idList.push(currentTaskIssue.id);
                            }
                        });
                        if(idList.length>0){
                            that.batchDelTask(idList);
                        }else{
                            S_toastr.warning('当前不存在可删除的任务，请重新选择！')
                        }
                        break;
                    case 'addDesignTask'://添加设计任务
                        that.removeAllEditBox();
                        if(!($(that.element).find('.row-edit').length>0)){
                            //判断当前是否没数据
                            if($(that.element).find('tr.no-data-tr').length>0){
                                $(that.element).find('tr.no-data-tr').hide();
                            }
                            that.addTaskRow(null);
                            $this.attr('disabled',true);
                        }else{
                            S_toastr.warning('当前正在创建设计任务中...');
                        }
                        e.stopPropagation();
                        return false;
                        break;
                    case 'addSubTask'://添加子任务

                        if(!($(that.element).find('.row-edit').length>0)){
                            that.addTaskRow(taskId);
                            $this.attr('disabled',true);
                        }else{
                            S_toastr.warning('当前正在创建设计任务中...');
                        }
                        //e.stopPropagation();
                        break;
                    case 'publishTask'://发布

                        var idList = [];
                        idList.push(publishId);
                        that.batchPublishTask(idList);
                        break;
                    case 'batchPublishTask'://批量发布

                        var idList = [];
                        $(that.element).find('input[name="taskCk"]:checked').each(function () {
                            var i = $(this).closest('tr').attr('data-i');
                            var currentTaskIssue = that._taskIssueList[i];
                            if(currentTaskIssue.taskStatus==2){//可发布的任务
                                idList.push(currentTaskIssue.publishId);
                            }
                        });
                        if(idList.length>0){
                            that.batchPublishTask(idList);
                        }else{
                            S_toastr.warning('当前不存在可发布的任务，请重新选择！');
                        }
                        break;
                    case 'startTimeEdit'://开始时间编辑

                        if(!($(that.element).find('.row-edit').length>0)){
                            that.removeAllEditBox();
                            that.setTheScheduleTime($this,1);
                            e.stopPropagation();
                        }else{
                            S_toastr.warning('当前正在创建设计任务中...');
                        }
                        break;
                    case 'endTimeEdit'://开始时间编辑

                        if(!($(that.element).find('.row-edit').length>0)){
                            that.removeAllEditBox();
                            that.setTheScheduleTime($this,1);
                            e.stopPropagation();
                        }else{
                            S_toastr.warning('当前正在创建设计任务中...');
                        }
                        break;
                    case 'viewProgressChange'://获取时间变更列表

                        var option = {};
                        option.$taskId = taskId;
                        option.$publishId = $this.closest('tr').attr('data-publish-id');
                        option.$type = 2;
                        option.$eleId = $this.closest('a').attr('id');
                        option.$isView = that.settings.$isView;
                        option.$renderCallBack = function (dialogEle) {
                            if(that.settings.$isView){
                                $(dialogEle).parents('.ui-popup').css('z-index','29891016');//layer弹窗下，需要改下z-index
                                $(dialogEle).parents('.ui-popup').prev('.ui-popup-backdrop').css('z-index','29891016');//layer弹窗下，需要改下z-index
                            }
                        };
                        $('body').m_progressChange_list(option);
                        e.stopPropagation();
                        break;
                    case 'moveUp'://向上移动

                        var taskArr = [];
                        taskArr.push({
                            id:that._taskIssueList[dataI].id,
                            seq:that._taskIssueList[dataI].seq-0
                        });
                        for(var i=dataI-1;i<dataI;i--){
                            if(that._taskIssueList[i].taskLevel==that._taskIssueList[dataI].taskLevel){
                                taskArr.push({
                                    id:that._taskIssueList[i].id,
                                    seq:that._taskIssueList[i].seq-0
                                });
                                break;
                            }
                        }
                        that.saveTaskMoveInSeq(taskArr);

                        break;
                    case 'moveDown'://向下移动

                        var taskArr = [];
                        taskArr.push({
                            id:that._taskIssueList[dataI].id,
                            seq:that._taskIssueList[dataI].seq
                        });
                        for(var i=dataI+1;i<that._taskIssueList.length;i++){
                            if(that._taskIssueList[i].taskLevel==that._taskIssueList[dataI].taskLevel){
                                taskArr.push({
                                    id:that._taskIssueList[i].id,
                                    seq:that._taskIssueList[i].seq
                                });
                                break;
                            }
                        }
                        that.saveTaskMoveInSeq(taskArr);
                        break;
                    case 'viewPlanTime'://与自己有关的约定时间
                        S_dialog.dialog({
                            title: '约定时间',
                            contentEle: 'dialogOBox',
                            ele:'viewPlanTime'+taskId,//弹框位置定位
                            lock: 2,
                            quickClose:true,
                            noTriangle:true,
                            width: '420',
                            minHeight:'110',
                            tPadding: '0px',
                            url: rootPath+'/assets/module/m_common/m_dialog.html'

                        },function(d){//加载html后触发

                            var tipsEle = 'div[id="content:'+d.id+'"] .dialogOBox';
                            var currentTaskObj = that._taskIssueList[i];
                            $(tipsEle).html(template('m_taskIssue/m_taskIssue_list_changeTime',{
                                issuePlanList:currentTaskObj.issuePlanList
                            }));
                            if(that.settings.$isView) {
                                $(tipsEle).parents('.ui-popup').css('z-index', '29891016');//layer弹窗下，需要改下z-index
                                $(tipsEle).parents('.ui-popup').prev('.ui-popup-backdrop').css('z-index', '29891016');//layer弹窗下，需要改下z-index
                            }

                            //点击获取变更列表
                            $(tipsEle).find('a[data-action]').click(function(e){
                                var $this = $(this);
                                var id = $this.closest('a').attr('id');
                                var taskId = $this.closest('a').attr('data-id'),i=$this.closest('a').attr('data-i');
                                var option = {};
                                option.$taskId = taskId;
                                option.$publishId = $this.closest('a').attr('data-publish-id');
                                option.$type = 2;
                                option.$eleId = id;
                                option.$isView = that.settings.$isView;
                                option.$renderCallBack = function (dialogEle) {
                                    if(that.settings.$isView){
                                        $(dialogEle).parents('.ui-popup').css('z-index','29891016');//layer弹窗下，需要改下z-index
                                        $(dialogEle).parents('.ui-popup').prev('.ui-popup-backdrop').css('z-index','29891016');//layer弹窗下，需要改下z-index
                                    }
                                };
                                $('body').m_progressChange_list(option);
                                e.stopPropagation();
                            })
                        });
                        return false;
                        break;

                    case 'viewTaskRemarkEdit'://查看任务描述

                        var id = $this.attr('id'),currentObj = that._taskIssueList[i];
                        S_dialog.dialog({
                            title: '任务描述',
                            contentEle: 'dialogOBox',
                            ele:id,
                            lock: 2,
                            quickClose:true,
                            noTriangle:true,
                            width: '320',


                            minHeight:'110',
                            tPadding: '0px',
                            url: rootPath+'/assets/module/m_common/m_dialog.html'

                        },function(d){//加载html后触发

                            var tipsEle = 'div[id="content:'+d.id+'"] .dialogOBox';
                            var remark = currentObj.taskRemark==null?'':currentObj.taskRemark;
                            $(tipsEle).html('<div class="m-sm" style="word-break: break-all;">'+remark+'</div>');

                        });
                        e.stopPropagation();
                        break;


                }

            });

        }
        //刷新当前界面
        , refreshPage: function () {
            var option = {}, that = this;
            option.$projectId = that.settings.$projectId;
            option.$projectName = that.settings.$projectName;
            if(that.settings.$pageEntrance == 'myIssueTask'){
                $('#content-right').m_myTask_taskIssue(option,true);
            }else{
                $('#content-right').m_taskIssue(option,true);
            }

            return false;
        }
    });
    $.fn[pluginName] = function (options) {
        return this.each(function () {

            //if (!$.data(this, "plugin_" + pluginName)) {
            $.data(this, "plugin_" +
                pluginName, new Plugin(this, options));
            //}
        });
    };

})(jQuery, window, document);

/**
 * 项目信息－任务签发组织
 * Created by wrb on 2017/2/21.
 */
;(function ($, window, document, undefined) {

    "use strict";
    var pluginName = "m_taskIssue_org",
        defaults = {
            $isDialog:true,
            $projectId: null,
            $partB: null,
            $taskIssueOrgList: null,
            $projectCreateBy:null,//立项人用户ID
            $projectCompanyId:null,//立项人组织
            $isView:false,//是否是查看状态，当是查看状态时，把相对应的权限设为无权限即可
            $isProduction:false//是否当前是生产界面
        };

    // The actual plugin constructor
    function Plugin(element, options) {
        this.element = element;

        this.settings = $.extend({}, defaults, options);
        this._defaults = defaults;
        this._name = pluginName;
        this._currentCompanyId = window.currentCompanyId;//当前组织ID
        this.init();
    }

    // Avoid Plugin.prototype conflicts
    $.extend(Plugin.prototype, {
        init: function () {
            var that = this;
            that._initHtml();
        },
        //初始化数据,生成html
        _initHtml: function () {
            var that = this;


            if(that.settings.$isDialog){//以弹窗编辑
                S_dialog.dialog({
                    title: that.settings.$title||'组织关系',
                    contentEle: 'dialogOBox',
                    lock: 3,
                    width: '900',
                    minHeight:'125',
                    url: rootPath+'/assets/module/m_common/m_dialog.html',
                    cancelText:'关闭',
                    cancel:function () {
                        /*if(that.settings.$isProduction){//刷新生产的界面
                            that._refreshProductionPage();
                        }else{//默认签发界面
                            that._refresh();
                        }*/
                    }

                },function(d){//加载html后触发

                    that.element = 'div[id="content:'+d.id+'"] .dialogOBox';
                    that._renderHtml();
                });
            }else{//不以弹窗编辑
                that._renderHtml();
            }
        }
        , _renderHtml:function () {
            var that = this;
            var $data = {};
            $data.departBCompany = that.settings.$partB;//获取乙方组织
            $data.isRoleCompany = false;//判断是立项方组织或者乙方组织
            $data.taskIssueOrgList = that.settings.$taskIssueOrgList;
            $data.currentCompanyId = window.currentCompanyId;
            $data.currentCompanyUserId = window.currentCompanyUserId;
            $data.isShowTips = 0;
            if ($data.taskIssueOrgList[0].type == 1) {
                var flag = $data.taskIssueOrgList[0].id == window.currentCompanyId || ($data.departBCompany&&$data.departBCompany.id == that._currentCompanyId);
                $data.isRoleCompany = flag ? true : false;
            }
            if ($data.taskIssueOrgList != null && $data.taskIssueOrgList.length > 0) {
                for (var i = 0; i < $data.taskIssueOrgList.length; i++) {
                    //合作组织是当前组织且经营负责人是当前人且未设置设计负责人
                    if ($data.taskIssueOrgList[i].id == $data.currentCompanyId
                        && $data.taskIssueOrgList[i].operatorPersonId == $data.currentCompanyUserId
                        && $data.taskIssueOrgList[i].designPersonId == null) {
                        $data.isShowTips = 1;
                        break;
                    };
                }
            }
            $data.projectCreateBy = that.settings.$projectCreateBy;
            $data.projectCompanyId = that.settings.$projectCompanyId;
            $data.currentUserId = window.currentUserId;
            $data.isOrgManager = window.currentRoleCodes!=null && window.currentRoleCodes.indexOf('sys_enterprise_logout')>-1?1:0;//是否是当前组织企业负责人
            $data.isView = that.settings.$isView ;
            var html = template('m_taskIssue/m_taskIssue_org', $data);
            $(that.element).html(html);
            stringCtrl('companyName');
            that._bindClickFun();
        }
        , _bindClickFun: function () {
            var that = this;
            $(that.element).find('.showTooltip').tooltip();
            $(that.element).find('a[data-action]').on('click', function (event) {//移交经营负责人与项目负责人按钮
                var action = $(this).attr('data-action');
                var dataId=$(this).attr('data-id');
                var companyId = $(this).attr('data-company-id');//当前要获取的项目立项组织的index
                var options = {};

                options.url = restApi.url_getOrgTree;
                options.isASingleSelectUser = true;
                options.delSelectedUserCallback = function () {
                    $(that.element).find('input[name="chooseManager"]').removeAttr('companyUserId');
                    $(that.element).find('input[name="chooseManager"]').val('');
                };

                if (action == 'changeOperatorPerson') {
                    var operatorPersonId = $(this).attr('data-id'),userName=$(this).attr('data-user-name');
                    options.title = '选择经营负责人';
                    options.selectedUserList = [{
                        id:operatorPersonId,
                        userName:userName
                    }];
                    options.selectUserCallback = function (data, event) {//1
                        data.type = 1;
                        var targetUser='<strong style="color:red;margin:0 3px;">'+data.userName+'</strong>';
                        S_dialog.confirm('确定将经营负责人更换为'+targetUser+'？', function () {
                            that._postManagerChange(data, companyId, event);
                        }, function () {
                            //S_dialog.close($(event));
                        });
                    }
                } else if (action == 'changeManagerPerson') {

                    var isFirstSetDesign = $.trim($(this).text()) == '未设置' ? true : false;
                    var designPersonId = $(this).attr('data-id'),userName=$(this).attr('data-user-name');

                    options.title = '选择设计负责人';
                    options.selectedUserList = [{
                        id:designPersonId,
                        userName:userName
                    }];
                    options.selectUserCallback = function (data, event) {
                        data.type = 2;
                        var targetUser='<strong style="color:red;margin:0 3px;">'+data.userName+'</strong>';
                        S_dialog.confirm('确定将设计负责人更换为'+targetUser+'？', function () {
                            that._postManagerChange(data, companyId, event);
                        }, function () {
                            //S_dialog.close($(event));
                        });
                        data.isFirstSetDesign = isFirstSetDesign;
                    }
                }
                $('body').m_orgByTree(options);
                return false;
            });
        }
        //移交经营负责人或项目负责人的请求
        , _postManagerChange: function (data, companyId, event) {
            var that = this;
            var option = {};

            if (data.isFirstSetDesign != null && data.isFirstSetDesign == false) {
                option.url = restApi.url_transferTaskDesigner;
            } else {
                option.url = restApi.url_updateProjectManager;
            }
            option.postData = {};
            option.postData.projectId = that.settings.$projectId;
            option.postData.companyId = companyId;
            option.postData.type = data.type;
            option.postData.companyUserId = data.companyUserId;
            m_ajax.postJson(option, function (response) {
                if (response.code == '0') {
                    S_dialog.close($(event));
                    S_toastr.success('保存成功！');
                    if (data.type == 1) {//移交经营负责人会影响项目权限的编辑更改，需要刷新数据

                        if(that.settings.$isProduction){//刷新生产的界面
                            that._refreshMenuByProduction();
                        }else{//默认签发界面
                            that._refreshMenu();
                        }
                    }
                    that._refresh();
                } else {
                    S_dialog.error(response.info);
                }
            })
        }
        //刷新当前菜单
        , _refreshMenu: function () {
            var that = this, option = {};
            option.$projectId = that.settings.$projectId;
            option.$type = 'taskIssue';
            $('#project_menu').m_projectMenu(option);
        }
        //刷新当前界面
        , _refresh: function () {
            var option = {}, that = this;
            option.$projectId = that.settings.$projectId;
            $('#project_content').m_taskIssue(option);
        }
        //刷新当前界面
        ,_refreshProductionPage:function () {
            var option = {}, that = this;
            var scrollTop = $('body').scrollTop();
            option.$projectId = that.settings.$projectId;
            option.$scrollCallBack = function () {
                $('body').scrollTop(scrollTop);
            };
            $('#project_content').m_production(option);
        }
        //刷新当前菜单
        , _refreshMenuByProduction: function () {
            var that = this, option = {};
            option.$projectId = that.settings.$projectId;
            option.$type = 'productionArrangement';
            $('#project_menu').m_projectMenu(option);
        }

    });

    $.fn[pluginName] = function (options) {
        return this.each(function () {

            //if (!$.data(this, "plugin_" + pluginName)) {
            $.data(this, "plugin_" +
                pluginName, new Plugin(this, options));
            //}
        });
    };

})(jQuery, window, document);

/**
 * 项目信息－任务签发总览表
 * Created by wrb on 2017/5/13.
 */
;(function ($, window, document, undefined) {

    "use strict";
    var pluginName = "m_taskIssue_overview",
        defaults = {
            $projectId: null,
            $getCallBack:null//请求渲染html后回滚事件
        };

    // The actual plugin constructor
    function Plugin(element, options) {
        this.element = element;

        this.settings = $.extend({}, defaults, options);
        this._defaults = defaults;
        this._name = pluginName;
        this._currentCompanyId = window.currentCompanyId;//当前组织ID
        this._taskIssueList = [];//当前任务列表
        this.init();
    }

    // Avoid Plugin.prototype conflicts
    $.extend(Plugin.prototype, {
        init: function () {
            var that = this;
            that.initHtml();

        },
        //初始化数据,生成html
        initHtml: function () {
            var that = this;
            var html = template('m_taskIssue/m_taskIssue_overview',{});
            $(that.element).html(html);

            //that.renderHeaderInfo();

            var option = {};
            option.classId = '#taskIssueList';
            option.url = restApi.url_getIssueTaskOverview+'/'+that.settings.$projectId;
            m_ajax.get(option, function (response) {
                if (response.code == '0') {

                    that._taskIssueList = response.data;
                    var listHtml = template('m_taskIssue/m_taskIssue_overview_list',{taskIssueList:response.data});
                    $(that.element).find('#taskIssueOverviewList').html(listHtml);
                    $(that.element).find('.tree').treegrid({
                        expanderExpandedClass: 'icon iconfont icon-iconfontttpodicon2',
                        expanderCollapsedClass: 'icon iconfont icon-shouqi',
                        treeColumn: 0
                    });
                    $(that.element).find('a[data-toggle="tooltip"],i[data-toggle="tooltip"]').tooltip();
                    that.bindActionClick();
                    if(that.settings.$getCallBack!=null){
                        that.settings.$getCallBack();
                    }

                } else {
                    S_dialog.error(response.info);
                }
            })
        }
        //渲染头部展示信息
        ,renderHeaderInfo:function () {
            var that=this,option = {};
            option.url = restApi.url_getProjectInfoForTask+'/'+that.settings.$projectId;
            m_ajax.get(option, function (response) {
                if (response.code == '0') {

                    var html = template('m_taskIssue/m_taskIssue_overview_header',response.data);
                    $(that.element).find('#taskIssueOverviewHeader').html(html);

                } else {
                    S_dialog.error(response.info);
                }
            })
        }

        //事件绑定
        , bindActionClick: function () {
            var that = this;
            $(that.element).find('a[data-action]').on('click', function (e) {
                var $this = $(this);
                var dataAction = $this.attr('data-action');
                var taskId = $this.closest('tr').attr('data-id'),i=$this.closest('tr').attr('data-i');
                switch (dataAction) {
                    case 'viewPlanTime'://与自己有关的约定时间
                        S_dialog.dialog({
                            title: '约定时间',
                            contentEle: 'dialogOBox',
                            ele:'viewPlanTime'+taskId,
                            lock: 2,
                            quickClose:true,
                            noTriangle:true,
                            width: '420',
                            minHeight:'110',
                            tPadding: '0px',
                            url: rootPath+'/assets/module/m_common/m_dialog.html'

                        },function(d){//加载html后触发

                            var tipsEle = 'div[id="content:'+d.id+'"] .dialogOBox';
                            var currentTaskObj = that._taskIssueList[i];
                            $(tipsEle).html(template('m_taskIssue/m_taskIssue_overview_list_relatedTime',{
                                issuePlanList:currentTaskObj.issuePlanList
                            }));
                            $(tipsEle).parents('.ui-popup').css('z-index','29891016');//layer弹窗下，需要改下z-index
                            $('.ui-popup-backdrop').css('z-index','29891016');//layer弹窗下，需要改下z-index
                        });
                        break;
                }
            });
        }

    });
    $.fn[pluginName] = function (options) {
        return this.each(function () {

            //if (!$.data(this, "plugin_" + pluginName)) {
            $.data(this, "plugin_" +
                pluginName, new Plugin(this, options));
            //}
        });
    };

})(jQuery, window, document);

/**
 * 选择签发任务
 * Created by wrb on 2016/12/26.
 */
;(function ($, window, document, undefined) {

    "use strict";
    var pluginName = "m_taskIssue_selection",
        defaults = {
            $title:null,
            $isDialog:true,
            $okCallBack:null,
            $projectId:null,//项目ID
            $companyUserId:null,//员工ID
            $companyUserName:null,//员工姓名
            $isFirstSetDesign:false,//是否第一次设置设计人
            $allTaskList:null//任务列表
        };

    // The actual plugin constructor
    function Plugin(element, options) {
        this.element = element;

        this.settings = $.extend({}, defaults, options);
        this._defaults = defaults;
        this._name = pluginName;


        this.init();
    }

    // Avoid Plugin.prototype conflicts
    $.extend(Plugin.prototype, {
        init: function () {
            var that = this;
            that._initHtmlData();
        },
        //初始化数据
        _initHtmlData:function () {
            var that = this;
            if(that.settings.$isDialog){//以弹窗编辑
                var title = that.settings.$isFirstSetDesign==true?'选择设计负责人':'设置设计负责人';
                S_dialog.dialog({
                    title: that.settings.$title||title,
                    contentEle: 'dialogOBox',
                    lock: 3,
                    width: '800',
                    minHeight:'125',
                    tPadding: '0px',
                    url: rootPath+'/assets/module/m_common/m_dialog.html',
                    cancel:function () {
                    },
                    okText:'保存',
                    ok:function () {
                        that._saveTransferTaskDesigner();
                    }

                },function(d){//加载html后触发

                    that.element = 'div[id="content:'+d.id+'"] .dialogOBox';
                    that._initHtmlTemplate();

                });
            }else{//不以弹窗编辑
                that._initHtmlTemplate();
            }
        }
        //生成html
        ,_initHtmlTemplate:function () {
            var that = this,option  = {},$data = {};
            /*option.url = restApi.url_getProjectTaskForChangeDesigner;
            option.postData = {
                projectId:that.settings.$projectId
            };
            m_ajax.postJson(option,function (response) {
                if(response.code=='0'){*/
                    $data.allTaskList = that.settings.$allTaskList;//response.data;
                    $data.companyUserName = that.settings.$companyUserName;
                    $data.isFirstSetDesign = that.settings.$isFirstSetDesign;
                    var html = template('m_taskIssue/m_taskIssue_selection',$data);
                    $(that.element).html(html);

                    that._initCheckBox();

                /*}else {
                    S_dialog.error(response.info);
                }
            })*/

        }
        //初始化checkbox并处理点击事件
        ,_initCheckBox:function () {
            var that = this,taskCkObj = $(that.element).find('input[name="taskCk"]'),
                allChoseCk = $(that.element).find('input[name="allChoseCk"]');

            $('.i-checks').iCheck({
                checkboxClass: 'icheckbox_minimal-green',
                radioClass: 'iradio_minimal-green'
            }).on('ifClicked.s', function (event) {
                var name = $(event.target).attr('name');
                if(name=='allChoseCk'){//全选或全不选触发
                    if ($(event.target).is(':checked')) {
                        taskCkObj.iCheck('uncheck');
                    }else{
                        taskCkObj.iCheck('check');
                    }
                }else{
                    //处理当taskck存在去选时，全选checkbox去选
                    var isCheckAllFalse = false;
                    taskCkObj.each(function (i) {
                        if ($(this).is(':checked')) {
                            isCheckAllFalse = true;
                            return false;
                        }
                    });
                    if(isCheckAllFalse){
                        allChoseCk.iCheck('uncheck');
                    }
                }
            });
        }

        //保存移交
        ,_saveTransferTaskDesigner:function () {
            var that = this,option  = {},$data = {};
            option.postData={};
            if(that.settings.$isFirstSetDesign){
                option.url = restApi.url_updateProjectManager;
                option.postData.type = '2';

            }else{
                option.url = restApi.url_transferTaskDesigner;
            }

            var taskList = [];
            $(that.element).find('input[name="taskCk"]:checked').each(function () {
                taskList.push($(this).val())
            });

            option.postData.projectId=that.settings.$projectId;
            option.postData.companyUserId=that.settings.$companyUserId;
            option.postData.taskList=taskList;

            m_ajax.postJson(option,function (response) {
                if(response.code=='0'){
                    S_toastr.success('操作成功！');

                    if(that.settings.$okCallBack!=null){
                        that.settings.$okCallBack();
                    }
                }else {
                    S_dialog.error(response.info);
                }
            })

        }

    });

    $.fn[pluginName] = function (options) {
        return this.each(function () {

            //if (!$.data(this, "plugin_" + pluginName)) {
            $.data(this, "plugin_" +
                pluginName, new Plugin(this, options));
            //}
        });
    };

})(jQuery, window, document);



/**
 * Created by Wuwq on 2017/4/11.
 */
/**
 * Created by Wuwq on 2017/1/5.
 */
;(function ($, window, document, undefined) {

    "use strict";
    var pluginName = "m_update_tips",
        defaults = {
            pageName:null,//组织加载的静态页面名称
            pageIndex:null,//页码
            pageUrl:null,//是否跳转的URL
            isAction:false//是否请求删除引导记录
        };

    function Plugin(element, options) {
        this.element = element;

        this.settings = options;
        this._defaults = defaults;
        this._name = pluginName;
        this.init();
    }

    $.extend(Plugin.prototype, {
        init: function () {
            var that = this;
            that._render();
        }
        , _render: function () {
            var that = this;
            var page = that.settings.pageName!=null?that.settings.pageName:'m_update_tips';

            var html = template('m_update_tips/'+page, {});

            var layerIndex=layer.open({
                type: 1,
                title: false,
                closeBtn:false,
                area: ['1000px', '550px'],
                shade: 0.7,
                content: html,
                end:function () {
                    if(that.settings.isAction){
                        var option = {};
                        option.url = restApi.url_sys_complete_notify;
                        m_ajax.getJson(option, function (response) {
                            if (response.code == '0') {
                                if(that.settings.pageUrl!=null){
                                    //window.location.href = restApi.url_permissionSettings;
                                    window.location.href = that.settings.pageUrl;
                                }
                            } else {
                                S_dialog.error(response.info);
                            }
                            layer.close(layerIndex);
                        })
                    }
                }
            });

            $('a[data-action="jumpOutWizard"],a[data-action="complete"]').click(function(){
                layer.close(layerIndex);
            });
            $('a[data-action="nextPage"]').click(function(){

                layer.close(layerIndex);
                var i = that.settings.pageIndex;
                var ni = i-0+1;
                that.settings.pageName = 'm_update_tips'+ni;
                that.settings.pageIndex = ni;
                that._render();

            });
            $('a[data-action="prevPage"]').click(function(){

                layer.close(layerIndex);
                var i = that.settings.pageIndex;
                var ni = i-0-1;
                that.settings.pageName = 'm_update_tips'+ni;
                that.settings.pageIndex = ni;
                that._render();
            });
        }
    });

    /*
     1.一般初始化（缓存单例）： $('#id').pluginName(initOptions);
     2.强制初始化（无视缓存）： $('#id').pluginName(initOptions,true);
     3.调用方法： $('#id').pluginName('methodName',args);
     */
    $.fn[pluginName] = function (options, args) {
        var instance;
        var funcResult;
        var jqObj = this.each(function () {

            //从缓存获取实例
            instance = $.data(this, "plugin_" + pluginName);

            if (options === undefined || options === null || typeof options === "object") {

                var opts = $.extend(true, {}, defaults, options);

                //options作为初始化参数，若args===true则强制重新初始化，否则根据缓存判断是否需要初始化
                if (args === true) {
                    instance = new Plugin(this, opts);
                } else {
                    if (instance === undefined || instance === null)
                        instance = new Plugin(this, opts);
                }

                //写入缓存
                $.data(this, "plugin_" + pluginName, instance);
            }
            else if (typeof options === "string" && typeof instance[options] === "function") {

                //options作为方法名，args则作为方法要调用的参数
                //如果方法没有返回值，funcReuslt为undefined
                funcResult = instance[options].call(instance, args);
            }
        });

        return funcResult === undefined ? jqObj : funcResult;
    };

})(jQuery, window, document);
/**
 * Created by wrb on 2016/12/7.
 */
;(function ($, window, document, undefined) {

    "use strict";
    var pluginName = "m_teamDissolution",
        defaults = {
            teamInfo:null
        };

    // The actual plugin constructor
    function Plugin(element, options) {
        this.element = element;

        this.settings = $.extend({}, defaults, options);
        this._defaults = defaults;
        this._name = pluginName;
        this.init();
    }

    // Avoid Plugin.prototype conflicts
    $.extend(Plugin.prototype, {
        init: function () {
            var that = this;
            that.getData();
        }
        //加载痰喘
        ,getData: function () {
            var that = this;
            S_dialog.dialog({
                title: '解散组织',
                contentEle: 'teamDissolutionOBox',
                lock: 3,
                width: '600',
                minHeight:'250',
                tPadding: '0px',
                url: rootPath+'/assets/module/m_common/m_dialog.html',
                ok:function () {
                    var option = {};
                    option.url=restApi.url_disbandCompany;
                    option.postData={};
                    option.postData.adminPassword=$('.teamDissolutionOBox input[name="password"]').val();
                    if(!$('form.teamDissolutionOBox').valid()){
                        return false;
                    }else{
                            m_ajax.postJson(option,function (response) {
                                if(response.code=='0'){
                                    var url = '/iWork/sys/logout';
                                    if (response.data != null && response.data != '')
                                        url = response.data;
                                    S_dialog.success('解散当前组织成功，系统将跳转至登录界面','提示',function(){
                                        window.location.href = rootPath+url;
                                    })
                                }else {
                                    S_dialog.error(response.info);
                                    return false;
                                }

                            })

                    }
                },
                cancel:function () {

                }
            },function(d){//加载html后触发
                var teamInfo= that.settings.teamInfo;
                //teamInfo.userName=$("#userName").val();
                //teamInfo.cellphone=$("#cellphone").val();
                var html = template('m_teamInfo/m_teamDissolution',{teamInfo:teamInfo});
                $('div[id="content:'+d.id+'"] .dialogOBox').html(html);
                that.changeAdmin_validate();
            });
        }
        ,changeAdmin_validate:function(){
            var that = this;
            $('form.teamDissolutionOBox').validate({
                rules: {
                    password:"required"
                },
                messages: {
                    password:"请输入当前用户密码!"
                }
            });
        }

    });

    $.fn[pluginName] = function (options) {
        return this.each(function () {
            //if (!$.data(this, "plugin_" + pluginName)) {
                $.data(this, "plugin_" +
                    pluginName, new Plugin(this, options));
            //}
        });
    };

})(jQuery, window, document);

/**
 * Created by wrb on 2016/12/7.
 */
;(function ($, window, document, undefined) {

    "use strict";
    var pluginName = "m_teamInfoEdit",
        defaults = {
            teamInfo:null,
            serverTypeList:null,
            fastUrl:null
        };

    // The actual plugin constructor
    function Plugin(element, options) {
        this.element = element;

        this.settings = $.extend({}, defaults, options);
        this._defaults = defaults;
        this._name = pluginName;
        this.init();
    }

    // Avoid Plugin.prototype conflicts
    $.extend(Plugin.prototype, {
        init: function () {
            var that = this;
            that.initMainContent();
        }
        //加载主要页面
        ,initMainContent:function(){
            var that = this;
            var $data = {};
            $data.teamInfo = that.settings.teamInfo;
            $data.serverTypeList = that.settings.serverTypeList;
            var filePath = that.settings.teamInfo.filePath;
            var isHaveFile = false;
            if(filePath!=null && filePath!=""){
                filePath = that.settings.fastUrl + filePath;
                isHaveFile = true;
            }else{
                filePath = rootPath+"/assets/img/withoutLogo.png";
            }
            $data.filePath = filePath;
            var html = template('m_teamInfo/m_teamInfoEdit',$data);
            $('#infoMainOBox').html(html);
            var option = {};
            option.filePath=filePath;
            option.fastUrl=that.settings.fastUrl;
            option.isEdit='yes';
            option.isHaveFile = isHaveFile;
            $('#teamPicShow').m_teamPicUpload(option);
            //that.getProvinceAndCitys(that.settings.teamInfo);
            that.getCheckSeverType(that.settings.teamInfo);
            that.bindClickForSaveBtn(that.settings.teamInfo);
            that.saveTeamInfo_validate();
            $(that.element).find('input[name="serverType"]').bind('click',function(event){
                $(this).parents('.serviceTypeEdit').find('span[name="severType"]').html('');
            });

            //加载省市区
            $("#city_1").citySelect({
                prov:that.settings.teamInfo.province,
                city:that.settings.teamInfo.city,
                dist:that.settings.teamInfo.county,
                nodata:"none",
                required:false
            });

        }
        //获取省市编辑器
        ,getProvinceAndCitys:function(teamInfo){
            var that = this;
            var options={};
            options.$province = teamInfo.province;
            options.$city = teamInfo.city;
            $('.choseProvinceCity').m_choseCity(options);
        }
        //筛选出已选有的服务类型
        ,getCheckSeverType:function(teamInfo){
            var that = this;
            var serverTypeList = teamInfo.serverTypeList;
            $('.serviceType input[name="serverType"]').each(function(){
                var id = $(this).val();
                var $this = $(this);
                $.each(serverTypeList,function(i,item){
                    if(id==item.id){
                        $this.prop('checked',true);
                    }
                });
            });
        }
        //给上传头像按钮与保存按钮绑定事件
        ,bindClickForSaveBtn:function(tInfo){
            var that = this;
            $('#infoMainOBox button[data-action="saveTeamInfo"]').bind('click',function(){
                var action = $(this).attr("data-action");
                if(action == "saveTeamInfo"){//保存按钮
                    var $data = $('#infoMainOBox form').serializeObject();
                    var teamInfo = tInfo;
                    teamInfo.companyName=$data.companyName;
                    teamInfo.companyShortName=$data.companyShortName;
                    teamInfo.province=$data.province;
                    teamInfo.city=$data.city;
                    teamInfo.county=$data.county;
                    teamInfo.companyAddress=$data.companyAddress;
                    teamInfo.companyPhone=$data.companyPhone;
                    teamInfo.companyFax=$data.companyFax;
                    teamInfo.companyEmail=$data.companyEmail;
                    teamInfo.companyComment=$data.companyComment;
                    teamInfo.serverType = '';
                    $('.serviceType input[name="serverType"]:checked').each(function(){
                        var id = $(this).val();
                        teamInfo.serverType+=id+',';
                    });
                    teamInfo.serverType = teamInfo.serverType.substr(0,teamInfo.serverType.length-1);
                    var options = {};
                    options.url = restApi.url_saveOrUpdateCompany;
                    options.postData=teamInfo;
                    var flag1=$('form#sky-form1').valid();
                    var flag2=that.validateServerType();
                    if(flag1&&flag2){
                        m_ajax.postJson(options,function (response) {
                            if(response.code=='0'){
                                S_toastr.success('保存成功！');
                                tInfo = teamInfo;
                                $('#mainContain').find('a[data-action="abandonEditTeamInfo"]').click();
                            }else {
                                S_dialog.error(response.info);
                            }
                        });
                    }

                }

                return false;
            });
        }
        ,saveTeamInfo_validate:function(){
            var that = this;
            $('form#sky-form1').validate({
                rules: {
                    companyName:{
                        required:true,
                        maxlength:50
                    },
                    companyShortName:"required",
                    province:"required",
                    city:"required"


                },
                messages: {
                    companyName:{
                        required:'请输入组织名称!',
                        maxlength:'组织名称不超过50位!'
                    },
                    companyShortName:"请输入组织简称!",
                    province:"请选择所在地区!",
                    city:"请选择所在地区!"
                },
                errorPlacement: function (error, element) { //指定错误信息位置
                    if (element.hasClass('prov') || element.hasClass('city')) {
                        error.appendTo(element.closest('.choseProvinceCity'));
                    } else {
                        error.insertAfter(element);
                    }
                }
            });
        }
        //验证服务类型是否为空
        ,validateServerType:function(){
            var len = $('#sky-form1 input[name="serverType"]:checked').length;
            if(len>0){
                return true;
            }else{
                var html = '<label id="severType-error" class="error" for="severType">请选择服务类型!</label>';
                $('#sky-form1 span[name="severType"]').html(html)
                return false;
            }
        }





    });

    $.fn[pluginName] = function (options) {
        return this.each(function () {
            // if (!$.data(this, "plugin_" + pluginName)) {
            $.data(this, "plugin_" +
                pluginName, new Plugin(this, options));
            // }
        });
    };

})(jQuery, window, document);

/**
 * Created by wrb on 2016/12/7.
 */
;(function ($, window, document, undefined) {

    "use strict";
    var pluginName = "m_teamInfoShow",
        defaults = {
            teamInfo:null,
            serverTypeList:null,
            isEdit:null
        };

    // The actual plugin constructor
    function Plugin(element, options) {
        this.element = element;

        this.settings = $.extend({}, defaults, options);
        this._defaults = defaults;
        this._name = pluginName;
        this._serverTypeList = null;//用于适应x-editable插入数据的服务类型列表
        this._serverTypeIndex = null;//用于已选的服务类型的index集合，是string类型
        this._roleCode = null;//当前用户的权限集
        this._teamInfo = null;
        this.init();
    }

    // Avoid Plugin.prototype conflicts
    $.extend(Plugin.prototype, {
        init: function () {
            var that = this;
            that._roleCode = window.currentRoleCodes;
            that.initMainContent();
        }
        //加载主要页面
        ,initMainContent:function(){
            var that = this;
            var $data = {};
            $data.teamInfo = that.settings.teamInfo;
            that._teamInfo = that.settings.teamInfo;
            that._serverTypeIndex = that.settings.teamInfo.serverType;
            $data.serverTypeList = that.settings.serverTypeList;
            var html = template('m_teamInfo/m_teamInfoShow',$data);
            $(that.element).html(html);

            // rolesControl();
            that.dealServerTypeList();
            //判断当前用户有没有权限操作
            if(that.settings.isEdit){
                that.bindClickFun();
                that.bindEditable();
                that.dealEmptyText();
                that.bindServerType();
            }else{
                $(that.element).find('a[data-action]').addClass('notRole');
            }


        }
        //绑定点击事件
        ,bindClickFun:function(){
            var that = this;
            $(that.element).find('a[data-action]').on('click',function(event){
                var action = $(this).attr('data-action');
                var $this = $(this);
                if(action == 'edit_address'){
                    var options = {};
                    options.$province = that._teamInfo.province;
                    options.$city = that._teamInfo.city;
                    options.$county = that._teamInfo.county;
                    options.$detailAddress = that._teamInfo.companyAddress;
                    options.$placement = 'right';
                    options.$okCallBack = function (data) {
                        data.companyAddress  = data.detailAddress;
                        delete data.detailAddress;
                        that.saveTeamInfo(null,data,null,function(){
                            that._teamInfo.province = data.province;
                            that._teamInfo.city = data.city;
                            that._teamInfo.county = data.county;
                            that._teamInfo.companyAddress = data.companyAddress;
                            if (data.province != '' || data.city != '' || data.county != '' || data.companyAddress != '') {
                                var html = that._teamInfo.province?that._teamInfo.province+' ':'';
                                html += that._teamInfo.city?that._teamInfo.city+' ':'';
                                html += that._teamInfo.county?that._teamInfo.county+' ':'';
                                html += that._teamInfo.companyAddress?that._teamInfo.companyAddress:'';
                                $this.text(html);
                            }else{
                                $this.text('');
                                that.dealEmptyText();
                            }
                        });
                    };
                    $(this).m_entryAddress(options);
                }
                return false;
            });
        }
        //处理服务类型数据，用于适应x-editable插入数据that.settings.serverTypeList
        ,dealServerTypeList:function(){
            var that = this;
            var $data = {};
            $data.serverTypeList = that.settings.serverTypeList;
            $.each($data.serverTypeList,function(i,item){
                item.text = item.name;
                item.value = i;
            });
            that._serverTypeList = $data.serverTypeList;
        }
        //绑定服务类型点击事件
        ,bindServerType:function(){
            var that = this;
            $(that.element).find('a[data-action="checklist_serverTypeList"]').on('click',function(){
                var options = {};
                var $this = $(this);
                var serverTypeList = that._serverTypeList;
                options.title = "编辑服务类型";
                options.placement = "right";
                options.html = template('m_teamInfo/m_editServerType', {
                    serverTypeList : serverTypeList,
                    serverTypeIndex : that._serverTypeIndex
                });
                options.saveCallback = function () {
                    var newStr = '';
                    $('.serverTypeBox input[name="serverType"]:checked').each(function () {
                        var id = $(this).attr('data-id');
                        newStr += id + ',';
                    });
                    if (newStr.length > 0) that._serverTypeIndex = newStr = newStr.substr(0, newStr.lastIndexOf(','));
                    // if(!newStr || newStr === void 0 || newStr.length<1){
                    //     return '服务类型不能为空！';
                    // }
                    that.saveTeamInfo(null, newStr, 'serverType',function(){
                        that.getNewServerTypeHtml($this,newStr,that._serverTypeList);
                        that.dealEmptyText();
                    });
                };
                options.afterCallback = function () {
                    $('.i-checks').iCheck({
                        checkboxClass: 'icheckbox_minimal-green',
                        radioClass: 'iradio_minimal-green'
                    });
                };
                $(this).m_defineEditableContent(options);
            });
        }
        //在位编辑内容初始化
        ,bindEditable:function(){
            var that = this;
            var elements = $(that.element).find('div.form-control-static a[data-action]');
            elements.each(function(){
                var $this = $(this),
                    obj = null,
                    action = $this.attr('data-action'),
                    type = action.indexOf("_")>-1?action.split("_")[0]:'text',
                    name = action.indexOf("_")>-1?action.split("_")[1]:'',
                    mode = $this.attr('data-mode')?$this.attr('data-mode'):'inline',
                    isCompanyName = name=="companyName" ? true :false,
                    content = $this.text(),//输入的内容
                    title = $this.parent().prev().text()//输入的内容
                if(type=='text' || type=='textarea'){//主要是除设计范围跟设计阶段以外的信息
                    $this.editable({
                        type : type
                        ,pk: 1
                        ,title: '编辑组织简介'
                        ,name : name
                        ,mode: mode || 'inline'
                        ,placement: 'top'
                        ,placeholder : '请输入'+title
                        ,value :content
                        ,inputclass :'form-control input-large textarea-long'
                        ,success:function(response,newValue){
                            that.saveTeamInfo(response,newValue,name);
                        }
                        ,validate: isCompanyName && function(value) {
                            if(!value || value == '') return '公司名称不能为空！';
                            if(value && value.length>50)return '公司名称不能超过50字符！';
                        }
                    });
                }

                that.dealEmptyText();//当在为编辑的文本显示为empty时，改为“请设置”

            });
            elements.off('click.clearEditable').on('click.clearEditable', function (event) {
                var action = $(this).attr('data-action');
                $(that.element).find('.editable-container').each(function () {
                    if ($(this).parent().find('a').attr('data-action') != action) {
                        $(this).find('button.editable-cancel').click();
                    }
                });
                return false;
            });
        },
        //保存组织信息时调用的方法
        saveTeamInfo:function(res,value,name,callback){
            var that = this;
            var options = {};
            options.url = restApi.url_saveOrUpdateCompany;
            options.postData = that._teamInfo;
            if(typeof value == "object" && !(value.length)){
                $.each(value,function(key,item){
                    options.postData[key] = item;
                });
            }else{
                options.postData[name] = value;
            }
            m_ajax.postJson(options,function (response) {
                if(response.code=='0'){
                    S_toastr.success('保存成功！');
                    if(callback){
                        callback.call(that);
                    }
                    that.dealEmptyText();
                    // $(that.element).m_teamInfoShow({teamInfo:response.data,serverTypeList:that.settings.serverTypeList})
                    if(name=='companyName'){
                        $('#navbar a.orgInfo').html(value+'<span class="caret"></span>')
                    }
                }else {
                    S_dialog.error(response.info);
                }
            });
        },
        //保存服务类型成功时生成新页面
        getNewServerTypeHtml:function($obj,value,source){
            var that = this;
            var html = '';
            if(!value) {
                $obj.empty();
                return;
            }else{
                $.each(source,function(j,obj){
                    if(value!=undefined && value.indexOf(obj.id)>-1){
                        html += '<span class="serverType m-r">'+ obj.text +'</span>';
                    }
                });
            }
            $obj.html(html);
        },
        //当在为编辑的文本显示为empty时，改为“请设置”
        dealEmptyText:function(){
            var that = this;
            $(that.element).find('a.editable-empty, a.editable').each(function(){
                var text = $(this).html();
                $(this).html(( text == 'Empty' || $.trim(text) == '')? '未设置' : text)
                    .css('color',($.trim(text).indexOf('Empty')>-1 || $.trim(text).indexOf('未设置')>-1)? 'rgb(204, 204, 204)' : 'rgb(71, 101, 160)');

            });
        },

    });

    $.fn[pluginName] = function (options) {
        return this.each(function () {
            // if (!$.data(this, "plugin_" + pluginName)) {
                $.data(this, "plugin_" +
                    pluginName, new Plugin(this, options));
            // }
        });
    };

})(jQuery, window, document);

/**
 * Created by wrb on 2016/12/7.
 */
;(function ($, window, document, undefined) {

    "use strict";
    var pluginName = "m_teamPicUpload",
        defaults = {
            filePath: null,
            isEdit: 'no',//判断是展示或是编辑状态
            fastUrl: null,
            isHaveFile: false//判断是否存在已上传过logo
        };

    // The actual plugin constructor
    function Plugin(element, options) {
        this.element = element;

        this.settings = $.extend({}, defaults, options);
        this._defaults = defaults;
        this._name = pluginName;
        this.init();
    }

    // Avoid Plugin.prototype conflicts
    $.extend(Plugin.prototype, {
        init: function () {
            var that = this;
            that._renderHtml();
            that._bindBtnUpload();
        }
        //加载主要页面
        , _renderHtml: function () {
            var that = this;
            var html = template('m_teamInfo/m_teamPicUpload', {
                filePath: that.settings.filePath,
                isEdit: that.settings.isEdit
            });
            $(that.element).html(html);
        },
        _bindBtnUpload: function () {
            var that = this;
            var title = '上传LOGO';
            if (that.settings.isHaveFile != null && that.settings.isHaveFile != '') {
                title = '替换LOGO';
            }
            var headImg = null;
            $('#btnUploadImg').m_imgUploader({
                innerHTML: title,
                server: window.fileCenterUrl + "/fastUploadImage",
                formData: {
                    cut_deleteGroup: that.settings.cut_deleteGroup,
                    cut_deletePath: headImg
                },
                loadingId: 'body',
                uploadSuccessCallback: function (file, response) {
                    that._originalFileGroup = response.data.fastdfsGroup;
                    that._originalFilePath = response.data.fastdfsPath;
                    that._originalFileName = response.data.fileName;

                    that.toCutDialog();
                    //渲染图片
                    $('.m_imgCropper .img-container').attr('src', window.fastdfsUrl + that._originalFileGroup + '/' + that._originalFilePath);


                    $(that.element).find('.title:eq(0)').addClass('hide');
                    $(that.element).find('.setArea:eq(0)').removeClass('hide');


                    //S_toastr.success(response.info);
                }
            }, true);
        }
        //调到裁剪窗口
        , toCutDialog: function () {
            var that = this;
            var headImg = null;
            var title = '上传LOGO';
            if (that.settings.isHaveFile != null && that.settings.isHaveFile != '') {
                title = '替换LOGO';
            }
            $('body').m_imgCropper({
                showDialog: true,
                title:title,
                zoomWidth: 200,
                zoomHeight: 200,
                originalFileGroup: that._originalFileGroup,
                originalFilePath: that._originalFilePath,
                originalFileName: that._originalFileName,
                cut_deletePath: headImg,
                cropper: {
                    options: {
                        aspectRatio: 200 / 200,
                        preview: '.img-preview',
                        zoomable: false,
                        minCropBoxWidth: 200,
                        minCropBoxHeight: 200
                    }
                },
                croppedCallback: function (data) {
                    var ajaxOption = {};
                    ajaxOption.url = restApi.url_attachment_saveCompanyLogo;
                    ajaxOption.postData = $.extend({}, data, {
                        accountId: window.currentUserId,
                        companyId: window.currentCompanyId
                    });
                    m_ajax.postJson(ajaxOption, function (response) {
                        if (response.code === '0') {
                            var path = window.fastdfsUrl + data.fastdfsGroup + '/' + data.fastdfsPath;
                            $(that.element).find('.img-logo').attr('src', path);
                            S_toastr.success("保存成功");
                            $('.navbar-header .navbar-brand img').attr('src', path);
                        } else {
                            S_dialog.error(response.info);
                        }
                    });
                }
            });
        }
    });

    $.fn[pluginName] = function (options) {
        return this.each(function () {
            // if (!$.data(this, "plugin_" + pluginName)) {
            $.data(this, "plugin_" +
                pluginName, new Plugin(this, options));
            // }
        });
    };

})(jQuery, window, document);

/**
 * 官网页脚
 * Created by wrb on 2018/5/10.
 */

;(function ($, window, document, undefined) {

    "use strict";
    var pluginName = "m_website_footer",
        defaults = {
            $type : ''
        };

    function Plugin(element, options) {
        this.element = element;

        this.settings = options;
        this._defaults = defaults;
        this._name = pluginName;
        this.init();
    }

    $.extend(Plugin.prototype, {
        init: function () {
            var that = this;
            that.renderPage();
        }
        , renderPage: function () {
            var that = this;
            var html = template('m_website/m_website_footer', {});
            $(that.element).html(html);
        }
    });

    /*
     1.一般初始化（缓存单例）： $('#id').pluginName(initOptions);
     2.强制初始化（无视缓存）： $('#id').pluginName(initOptions,true);
     3.调用方法： $('#id').pluginName('methodName',args);
     */
    $.fn[pluginName] = function (options, args) {
        var instance;
        var funcResult;
        var jqObj = this.each(function () {

            //从缓存获取实例
            instance = $.data(this, "plugin_" + pluginName);

            if (options === undefined || options === null || typeof options === "object") {

                var opts = $.extend(true, {}, defaults, options);

                //options作为初始化参数，若args===true则强制重新初始化，否则根据缓存判断是否需要初始化
                if (args === true) {
                    instance = new Plugin(this, opts);
                } else {
                    if (instance === undefined || instance === null)
                        instance = new Plugin(this, opts);
                }

                //写入缓存
                $.data(this, "plugin_" + pluginName, instance);
            }
            else if (typeof options === "string" && typeof instance[options] === "function") {

                //options作为方法名，args则作为方法要调用的参数
                //如果方法没有返回值，funcReuslt为undefined
                funcResult = instance[options].call(instance, args);
            }
        });

        return funcResult === undefined ? jqObj : funcResult;
    };

})(jQuery, window, document);
/**
 * 官网页头
 * Created by wrb on 2018/5/10.
 */

;(function ($, window, document, undefined) {

    "use strict";
    var pluginName = "m_website_header",
        defaults = {
            $type : ''
        };

    function Plugin(element, options) {
        this.element = element;

        this.settings = options;
        this._defaults = defaults;
        this._name = pluginName;
        this.init();
    }

    $.extend(Plugin.prototype, {
        init: function () {
            var that = this;
            that.renderPage();
        }
        , renderPage: function () {
            var that = this;
            var html = template('m_website/m_website_header', {});
            $(that.element).html(html);
            if(that.settings.$type!=null){
                $(that.element).find('ul li[data-type="'+that.settings.$type+'"]').addClass('active').siblings().removeClass('active');
            }

            // Header
            $.HSCore.components.HSHeader.init($('#js-header'));
            //$.HSCore.helpers.HSHamburgers.init('.hamburger');
            // Initialization of HSMegaMenu plugin
            $('.js-mega-menu').HSMegaMenu({
                event: 'click',
                pageContainer: $('.container'),
                breakpoint: 991
            });



        }
    });

    /*
     1.一般初始化（缓存单例）： $('#id').pluginName(initOptions);
     2.强制初始化（无视缓存）： $('#id').pluginName(initOptions,true);
     3.调用方法： $('#id').pluginName('methodName',args);
     */
    $.fn[pluginName] = function (options, args) {
        var instance;
        var funcResult;
        var jqObj = this.each(function () {

            //从缓存获取实例
            instance = $.data(this, "plugin_" + pluginName);

            if (options === undefined || options === null || typeof options === "object") {

                var opts = $.extend(true, {}, defaults, options);

                //options作为初始化参数，若args===true则强制重新初始化，否则根据缓存判断是否需要初始化
                if (args === true) {
                    instance = new Plugin(this, opts);
                } else {
                    if (instance === undefined || instance === null)
                        instance = new Plugin(this, opts);
                }

                //写入缓存
                $.data(this, "plugin_" + pluginName, instance);
            }
            else if (typeof options === "string" && typeof instance[options] === "function") {

                //options作为方法名，args则作为方法要调用的参数
                //如果方法没有返回值，funcReuslt为undefined
                funcResult = instance[options].call(instance, args);
            }
        });

        return funcResult === undefined ? jqObj : funcResult;
    };

})(jQuery, window, document);
/**
 * 登录
 * Created by wrb on 2018/5/10.
 */

;(function ($, window, document, undefined) {

    "use strict";
    var pluginName = "m_website_login",
        defaults = {
            $type : ''
        };

    function Plugin(element, options) {
        this.element = element;

        this.settings = options;
        this._defaults = defaults;
        this._name = pluginName;
        this.init();
    }

    $.extend(Plugin.prototype, {
        init: function () {
            var that = this;
            that.renderPage();
        }
        , renderPage: function () {
            var that = this;
            var html = template('m_website/m_website_login', {});
            $(that.element).html(html);

            that.login_validate();
            that.initLoginForm();
        }
        ,initLoginForm: function () {
            var that = this;

            $('#password').off('keydown.pwd').on('keydown.login',function (e)
            {
                if (event.keyCode == 13)
                    that.login();
            });

            $('#btnLogin').click(function(){
                that.login();
            });
        },
        login: function () {
            if ($("#loginForm").valid()) {
                var option = {};
                option.url = restApi.url_homeLogin;
                option.postData = {};
                option.postData.cellphone = $('#account').val();
                option.postData.password = $('#password').val();
                m_ajax.postJson(option, function (response) {
                    if (response.code == 0) {

                        Cookies.remove('projectList_cookiesData');

                        var url = '/iWork/home/workbench/1';
                        window.location.href = window.rootPath + url;
                    }
                    else {
                        S_toastr['error'](response.info);
                    }
                });
            }
            return false;
        },
        login_validate: function () {//点击登录时进行密码验证
            $("#loginForm").validate({
                rules: {
                    account: "required",
                    password: "required"
                },
                messages: {
                    account: "请输入手机号码",
                    password: "请输入账号密码"
                }
            });
        }
    });

    /*
     1.一般初始化（缓存单例）： $('#id').pluginName(initOptions);
     2.强制初始化（无视缓存）： $('#id').pluginName(initOptions,true);
     3.调用方法： $('#id').pluginName('methodName',args);
     */
    $.fn[pluginName] = function (options, args) {
        var instance;
        var funcResult;
        var jqObj = this.each(function () {

            //从缓存获取实例
            instance = $.data(this, "plugin_" + pluginName);

            if (options === undefined || options === null || typeof options === "object") {

                var opts = $.extend(true, {}, defaults, options);

                //options作为初始化参数，若args===true则强制重新初始化，否则根据缓存判断是否需要初始化
                if (args === true) {
                    instance = new Plugin(this, opts);
                } else {
                    if (instance === undefined || instance === null)
                        instance = new Plugin(this, opts);
                }

                //写入缓存
                $.data(this, "plugin_" + pluginName, instance);
            }
            else if (typeof options === "string" && typeof instance[options] === "function") {

                //options作为方法名，args则作为方法要调用的参数
                //如果方法没有返回值，funcReuslt为undefined
                funcResult = instance[options].call(instance, args);
            }
        });

        return funcResult === undefined ? jqObj : funcResult;
    };

})(jQuery, window, document);
/**
 * Created by Wuwq on 2017/4/11.
 */

;(function ($, window, document, undefined) {

    "use strict";
    var pluginName = "m_website_products",
        defaults = {
            $type : ''
        };

    function Plugin(element, options) {
        this.element = element;

        this.settings = options;
        this._defaults = defaults;
        this._name = pluginName;
        this.init();
    }

    $.extend(Plugin.prototype, {
        init: function () {
            var that = this;
            that._render();
        }
        , _render: function () {
            var that = this;
            var page = 'm_website_products'+that.settings.$type;
            var html = template('m_website/'+page, {rootPath:window.rootPath});
            $(that.element).html(html);
        }
    });

    /*
     1.一般初始化（缓存单例）： $('#id').pluginName(initOptions);
     2.强制初始化（无视缓存）： $('#id').pluginName(initOptions,true);
     3.调用方法： $('#id').pluginName('methodName',args);
     */
    $.fn[pluginName] = function (options, args) {
        var instance;
        var funcResult;
        var jqObj = this.each(function () {

            //从缓存获取实例
            instance = $.data(this, "plugin_" + pluginName);

            if (options === undefined || options === null || typeof options === "object") {

                var opts = $.extend(true, {}, defaults, options);

                //options作为初始化参数，若args===true则强制重新初始化，否则根据缓存判断是否需要初始化
                if (args === true) {
                    instance = new Plugin(this, opts);
                } else {
                    if (instance === undefined || instance === null)
                        instance = new Plugin(this, opts);
                }

                //写入缓存
                $.data(this, "plugin_" + pluginName, instance);
            }
            else if (typeof options === "string" && typeof instance[options] === "function") {

                //options作为方法名，args则作为方法要调用的参数
                //如果方法没有返回值，funcReuslt为undefined
                funcResult = instance[options].call(instance, args);
            }
        });

        return funcResult === undefined ? jqObj : funcResult;
    };

})(jQuery, window, document);
/**
 * Created by wrb on 2016/12/15.
 */

var home_createOrg={
    init:function(){
        var that=this;
        that.initCreateOrgData();

        var guide = setTimeout(function () {
            var orgEleLen = $('#navbar').find('.nav .orgInfo').length,orgEleHtml = $('#navbar').find('.nav .orgInfo').html();
            if(orgEleLen==0 || orgEleHtml==''){//没组织，提示帮助的引导
                var options = {};
                options.pageName = 'm_update_tips1';
                options.pageIndex = '1';
                $('body').m_update_tips(options);
            }
            clearTimeout(guide);
        },800);
    }
    ,initCreateOrgData:function () {
        var options = {};
        var currentCompanyId = window.currentCompanyId;
        options.saveOrgCallback = function (data) {
            var url = '/iWork/home/workbench';
            /*if (data != null && data != '')
                url = data;*/
            window.location.href = window.rootPath + url;
        };
        var isFirst = $('#isFirst').val();
        if(isFirst==='1'){
            options.showPre = $('#showPre').val();
            $('#createOrgBox').m_firstCreateOrg(options);
        }else{
            $('#createOrgBox').m_createOrg(options);
        }
    }
};

/**
 * Created by wrb on 2016/12/6.
 */

var home_forgetPwd={
    init:function(){
        var that=this;
        var options = {};
        options.nextStepUrl = restApi.url_homeRegister_validateCode;
        options.saveUrl = restApi.url_homeForget_changePwd;
        options.getCodeUrl = restApi.url_homeForget_securityCode;
        $('#forgetStepOBox').m_forgetPWD(options);
    }
};
/**
 * Created by Wuwq on 2017/07/05.
 */
var home_index1 = {
    init: function () {
        var that=this;

        /*判断浏览器版本是否是ie10以下 开始*/
        var userAgent = navigator.userAgent; //取得浏览器的userAgent字符串
        var isOpera = userAgent.indexOf("Opera") > -1; //判断是否Opera浏览器
        var isIE = userAgent.indexOf("compatible") > -1 && userAgent.indexOf("MSIE") > -1 && !isOpera; //判断是否IE浏览器
        if (isIE) {
            var reIE = new RegExp("MSIE (\\d+\\.\\d+);");
            reIE.test(userAgent);
            var fIEVersion = parseFloat(RegExp["$1"]);
            //当浏览器为小于ie10版本时，去掉data-ease属性
            if (fIEVersion < 10) {
                $('#slider-wrapper .master-slider').find('img').removeAttr('data-ease');
                $('#slider-wrapper .ms-slide').find('h1').removeAttr('data-ease');
            }


        }
        /*判断浏览器版本是否是ie10以下 结束*/

        _.mixin(s.exports());
        App.init();
        MasterSliderMainShowcase.initMasterSliderMainShowcase();
        MasterSliderProductsShowcase.initMasterSliderProductsShowcase();

        that.bindBtnShowLoginForm();
    },
    bindBtnShowLoginForm: function () {
        var that = this;
        $('#btnShowLoginForm').click(function () {
            $(this).m_popover({
                hideArrow: true,
                placement: 'bottom',
                content: template('m_login/m_popover_login', {}),
                onShown: function ($popover) {
                    that.login_validate();

                    $popover.find('#btnForgetPwd').off('click.forgetPwd').on('click.forgetPwd', function (e) {
                        var $btn = $(this);
                        var url = $btn.attr('data-url');
                        window.location.href = url;
                    });

                    $popover.find('#password').off('keydown.pwd').on('keydown.login',function (e) {
                        if (event.keyCode == 13)
                            that.login();
                    });
                },
                onSave: function ($popover) {
                    that.login();
                    return false;
                }
            }, true);
        });

    },
    login: function () {
        if ($("#loginForm").valid()) {
            var option = {};
            option.url = restApi.url_homeLogin;
            option.postData = {};
            option.postData.cellphone = $('#cellphone').val();
            option.postData.password = $('#password').val();
            m_ajax.postJson(option, function (response) {
                if (response.code == 0) {
                    var url = '/iWork/home/workbench/1';
                    if (response.data != null && response.data != '') {
                        url = response.data;
                        if (response.data.indexOf("iAdmin") > -1) {
                            url = '/iWork/sys/login';
                        }
                    }
                    window.location.href = window.rootPath + url;
                }
                else {
                    S_dialog.error(response.info);
                }
            });
        }
        return false;
    },
    login_validate: function () {//点击登录时进行密码验证
        $("#loginForm").validate({
            rules: {
                cellphone: "required",
                password: "required"
            },
            messages: {
                cellphone: "请输入手机号码",
                password: "请输入账号密码"
            },
            highlight: function (element, errorClass, validClass) {
                $(element).removeClass("valid-success").addClass("valid-error");
            },
            unhighlight: function (element, errorClass, validClass) {
                $(element).tooltip('destroy');
                $(element).removeClass("valid-error");
                //$(element).removeClass("valid-error").addClass("valid-success");
            },
            success: function (element, errorClass, validClass) {
                $(element).tooltip('destroy');
                $(element).removeClass("valid-error");
                //$(element).removeClass("valid-error").addClass("valid-success");
            },
            /*errorElement:"span",*/
            errorPlacement: function (label, element) {
                /* $(element).appendTo(r.is(":radio")||r.is(":checkbox")?r.parent().parent().parent():r.parent());*/
                $(element).attr('title', $(label).text()).tooltip({placement: 'left'}).tooltip('show');
            }
        });
    }
};
/**
 * Created by Wuwq on 2016/12/8.
 */
var home_login = {
    init:function(){
        var that=this;
        $('.login-bg-wrapper .login-content').m_login();
    }
};

/**
 * Created by veata on 2016/12/6.
 */


var home_register={

    init:function(){
        var that=this;
        that.initRegisterHtml();
    },
    initRegisterHtml:function(){
        var that = this;
        $('#registerStepBox').m_register();
    },

};
/**
 * Created by wrb on 2016/12/6.
 */

var home_shareRegister={
     _cellphone : '',
    init:function(){
        var that=this;
        that.shareRegisterOBox_validate();
        that.bindClickFun();
        var filePath = $('#companyInfoFile').val();
        if(filePath!=undefined && filePath!=''){
            $('.filePath').attr('src',window.fastdfsUrl+filePath);
        }

    },
    bindClickFun: function () {
        var that = this;
        $('.shareRegisterOBox').find('a[data-action]').on('click', function (event) {
            var action = $(this).attr('data-action');
            if ($(this).attr('disabled') == 'disabled') {
                return false;
            }
            if (action == "getCode") {
                if (that.receiveCode_validate()) {
                    $('#getCode').attr('disabled', 'disabled');
                    that.receiveCode();
                }
            }
            if (action == "nextStep") {
                that.step1();
            }
            if (action == "submitRegister") {
                that.joinFun();
            }
            stopPropagation(event);
        })
    },
    //点击获取验证码
    receiveCode: function () {
        var that = this;
        var clock = 0;
        that.getCode(clock);
        var option = {};
        option.classId = 'registerOBox';
        option.url = restApi.url_homeRegister_securityCode;
        option.postData = {};
        option.postData.cellphone = $('#cellphone').val();
        m_ajax.postJson(option, function (response) {
            if (response.code == 0) {
            }
            else {
                var $_screenW = $(window).width();
                if($_screenW<768){
                    S_toastr.success(response.info);
                }else{
                    S_dialog.error(response.info);
                }
                clock = 0;
                window.clearInterval(timer);
                window.timer=null;
                $('#getCode').removeClass('startCode').addClass('endCode');
                $('#getCode').removeAttr('disabled');
                $('#getCode').html('获取验证码');
            }
        });

    },
    //验证码
    getCode: function (c) {
        c = 60;
        $('#getCode').html(c);
        window.timer = setInterval(function () {
            if (c > 0) {
                c = c - 1;
                $('#getCode').removeClass('endCode').addClass('startCode').attr('disabled', 'disabled');

                $('#getCode').html(c);
            } else {
                if ("undefined" != typeof timer) {
                    window.clearInterval(timer);
                }
                $('#getCode').removeClass('endCode').addClass('startCode').removeAttr('disabled');
                $('#getCode').removeClass('startCode').addClass('endCode');
                $('#getCode').html('获取验证码');
            }
        }, 1000);
    },
    joinFun:function () {//组织注册提交
        var that = this;
        if ($(".shareRegisterOBox form").valid()) {
            var option = {};
            option.classId='.shareRegisterOBox';
            option.url=restApi.url_shareInvateRegister;
            option.postData={};
            that._cellphone = $('#cellphone').val();
            option.postData.companyId = $('#companyInfoId').val();//邀请公司ID
            option.postData.userId = $('#userInfoId').val();//邀请用户ID
            option.postData.cellphone=$('#cellphone').val();
            option.postData.userName=$('#userName').val();
            option.postData.code=$('#verifcationCode').val();

            m_ajax.postJson(option,function (response) {
                if (response.code == 0) {
                    S_toastr.success('加入成功，请等待审核！');
                    if($(window).width()>992){
                        window.setTimeout(function () {
                            window.location.href = window.rootPath;
                        },2000);
                    }else{
                        $('#showViewType2').removeClass('hide');
                        $('#showViewType1').addClass('hide');
                    }
                }else {
                    var $_screenW = $(window).width();
                    if($_screenW<768){
                        S_toastr.success(response.info);
                    }else{
                        S_dialog.error(response.info);
                    }

                }
            })
        }
    },
    //点击调到下载页面
    toDownload : function(){
        $('#iframeDown').attr('src',window.cdnUrl+'/download');
    },

    //验证是否手机号填写格式正确
    receiveCode_validate: function () {//step1的表单验证
        var error = [];
        var cellphone = $('#cellphone').val();
        var mobile = /^(13[0-9]{9})|(18[0-9]{9})|(14[0-9]{9})|(17[0-9]{9})|(15[0-9]{9})$/;
        if (cellphone == '' || cellphone == null) {
            error.push('请输入手机号码');
        } else if (!mobile.test(cellphone)) {
            error.push('请正确填写您的手机号码');
        }
        if (error.length > 0) {
            var html = '<label id="cellphone-error" class="error" for="cellphone">';
            html += error[0];
            html += '</label>';
            if ($('#cellphone').parent().find('#cellphone-error').length < 1) {
                $('#cellphone').after(html);
            }
            return false;
        } else {
            return true;
        }
    },
    shareRegisterOBox_validate: function () {//注册的表单验证
        var that = this;
        $(".shareRegisterOBox form").validate({
            rules: {
                cellphone: {
                    required: true,
                    minlength: 11,
                    isMobile: true
                },
                verifcationCode: "required",
                userName: "required",
                password: {
                    required: true,
                    rangelength: [6, 12],
                    checkSpace: true
                }

            },
            messages: {
                cellphone: {
                    required: "请输入手机号码",
                    minlength: "请输入11位有效手机号码",
                    isMobile: "请输入11位有效手机号码"
                },
                verifcationCode: "请输入验证码",
                userName: "姓名不能为空！",
                password: {
                    required: '请设置登录密码！',
                    rangelength: "密码为6-12位！",
                    checkSpace: "密码不应含有空格!"
                }

            },
            errorElement: 'label',
            errorPlacement: function (error, element) {
                error.appendTo(element.closest('.form-group'));
                error.addClass('input_error');
            }
        });
        // 手机号码验证
        jQuery.validator.addMethod("isMobile", function (value, element) {
            var length = value.length;
            var mobile = /^(13[0-9]{9})|(18[0-9]{9})|(14[0-9]{9})|(17[0-9]{9})|(15[0-9]{9})$/;
            return this.optional(element) || (length == 11 && mobile.test(value));
        }, "请输入11位有效手机号码");
    }

};
/**
 * Created by wrb on 2016/12/6.
 */
var home_workbench_new = {
    init: function () {
        var that = this;
        var option = {};
        option.$contentEle = '#content-right';
        $('#left-menu-box').m_metismenu(option);

    }
};
/**
 * Created by wrb on 2018/05/15.
 */
var website_faq = {
    init: function () {


        $('.website-header').m_website_header({$type:'faq'});
        $('.website-footer').m_website_footer();
        $('#loginBox').m_website_login();


    }

};
/**
 * Created by wrb on 2018/05/15.
 */
var website_guide = {
    init: function () {

        $('.website-header').m_website_header({});
        $('.website-footer').m_website_footer();
        $('#loginBox').m_website_login();

    }

};
/**
 * Created by wrb on 2018/05/09.
 */
var website_index = {
    init: function () {

        /*判断浏览器版本是否是ie10以下 开始*/
        var userAgent = navigator.userAgent; //取得浏览器的userAgent字符串
        var isOpera = userAgent.indexOf("Opera") > -1; //判断是否Opera浏览器
        var isIE = userAgent.indexOf("compatible") > -1 && userAgent.indexOf("MSIE") > -1 && !isOpera; //判断是否IE浏览器
        if (isIE) {
            var reIE = new RegExp("MSIE (\\d+\\.\\d+);");
            reIE.test(userAgent);
            var fIEVersion = parseFloat(RegExp["$1"]);
            //当浏览器为小于ie10版本时，去掉data-ease属性
            if (fIEVersion < 10) {
                $('#slider-wrapper .master-slider').find('img').removeAttr('data-ease');
                $('#slider-wrapper .ms-slide').find('h1').removeAttr('data-ease');
            }
        }

        /*判断浏览器版本是否是ie10以下 结束*/


        $('.website-header').m_website_header();
        $('.website-footer').m_website_footer();
        $('#loginBox').m_website_login();


        //$.HSCore.components.HSCarousel.init('.js-carousel');

        /*$('#we-provide').slick('setOption', 'responsive', [{
            breakpoint: 992,
            settings: {
                slidesToShow: 2
            }
        }, {
            breakpoint: 576,
            settings: {
                slidesToShow: 1
            }
        }], true);*/

        // initialization of masonry
        /*$('.masonry-grid').imagesLoaded().then(function () {
            $('.masonry-grid').masonry({
                columnWidth: '.masonry-grid-sizer',
                itemSelector: '.masonry-grid-item',
                percentPosition: true
            });
        });*/





        // initialization of text animation (typing)
        $(".u-text-animation.u-text-animation--typing").typed({
            strings: [
                "管理方式",
                "工作方式",
                "交流方式"
            ],
            typeSpeed: 100,
            loop: true,
            backDelay: 1500
        });



    }

};
/**
 * Created by wrb on 2018/05/15.
 */
var website_pricing = {
    init: function () {

        $('.website-header').m_website_header({});
        $('.website-footer').m_website_footer();
        $('#loginBox').m_website_login();

    }

};
/**
 * Created by wrb on 2018/05/09.
 */
var website_products = {
    init: function () {


        $('.website-header').m_website_header({$type:'products'});
        $('.website-footer').m_website_footer();
        $('#loginBox').m_website_login();

        $('#productsMenu').find('li a').off('click').on('click',function () {
            $('#productsMenu').find('li a').removeClass('g-color-black g-bg-gray-light-v5 g-font-weight-600 g-rounded-50').addClass('g-color-gray-dark-v4');
            $(this).addClass('g-color-black g-bg-gray-light-v5 g-font-weight-600 g-rounded-50').removeClass('g-color-gray-dark-v4');

            var dataType = $(this).attr('data-type');
            $('#projectContent').m_website_products({$type:dataType},true);

            return false;
        });
        $('#projectContent').m_website_products({},true);
    }

};
/**
 * Created by wrb on 2018/05/15.
 */
var website_security = {
    init: function () {

        $('.website-header').m_website_header({});
        $('.website-footer').m_website_footer();
        $('#loginBox').m_website_login();

    }

};
/**
 * Created by wrb on 2018/05/15.
 */
var website_solution = {
    init: function () {

        $('.website-header').m_website_header({});
        $('.website-footer').m_website_footer();
        $('#loginBox').m_website_login();

    }

};
/**
 * Created by wrb on 2018/05/15.
 */
var website_terms = {
    init: function () {

        $('.website-header').m_website_header({});
        $('.website-footer').m_website_footer();
        $('#loginBox').m_website_login();

    }

};