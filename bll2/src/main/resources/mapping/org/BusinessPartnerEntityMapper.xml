<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="BusinessPartnerEntityMapper" >
  <resultMap id="BaseResultMap" type="com.maoding.org.entity.BusinessPartnerEntity" >
    <id column="id" property="id" jdbcType="VARCHAR" />
    <result column="nick_name" property="nickName" jdbcType="VARCHAR" />
    <result column="company_id" property="companyId" jdbcType="VARCHAR" />
    <result column="type" property="type" jdbcType="INTEGER" />
    <result column="create_date" property="createDate" jdbcType="TIMESTAMP" />
    <result column="create_by" property="createBy" jdbcType="VARCHAR" />
    <result column="update_date" property="updateDate" jdbcType="TIMESTAMP" />
    <result column="update_by" property="updateBy" jdbcType="VARCHAR" />
  </resultMap>

  <sql id="Base_Column_List" >
    id, nick_name, company_id,type,create_date, create_by, update_date, update_by
  </sql>

  <select id="selectById" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from maoding_web_business_partner
    where id = #{id,jdbcType=VARCHAR}
  </select>

  <select id="getNickName" resultType="java.lang.String" parameterType="java.lang.String" >
    select  DISTINCT (a.nick_name) as nickName
    from maoding_web_business_partner a,maoding_web_company_relation b
    where a.id = b.id and b.org_id = #{companyId,jdbcType=VARCHAR}
  </select>

  <delete id="deleteById" parameterType="java.lang.String" >
    delete from maoding_web_business_partner
    where id = #{id,jdbcType=VARCHAR}
  </delete>

  <insert id="insert" parameterType="com.maoding.org.entity.BusinessPartnerEntity" >
    insert into maoding_web_business_partner (id, nick_name, company_id,type,create_date,
      create_by, update_date, update_by
      )
    values (#{id,jdbcType=VARCHAR}, #{nickName,jdbcType=VARCHAR}, #{companyId,jdbcType=VARCHAR}, #{type,jdbcType=INTEGER}, now(),
      #{createBy,jdbcType=VARCHAR}, #{updateDate,jdbcType=TIMESTAMP}, #{updateBy,jdbcType=VARCHAR}
      )
  </insert>

  <update id="updateById" parameterType="com.maoding.org.entity.BusinessPartnerEntity" >
    update maoding_web_business_partner
    <set >
      <if test="nickName != null and nickName!=''" >
        nick_name = #{nickName,jdbcType=VARCHAR},
      </if>
      <if test="nickName != null and nickName==''" >
        nick_name = null,
      </if>
      <if test="companyId != null" >
        company_id = #{companyId,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        type = #{type,jdbcType=INTEGER},
      </if>
      <if test="createDate != null" >
        create_date = #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="createBy != null" >
        create_by = #{createBy,jdbcType=VARCHAR},
      </if>
        update_date = now(),
      <if test="updateBy != null" >
        update_by = #{updateBy,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>

  <update id="update" parameterType="com.maoding.org.entity.BusinessPartnerEntity" >
    update maoding_web_business_partner
    set nick_name = #{nickName,jdbcType=VARCHAR},
        company_id = #{companyId,jdbcType=VARCHAR},
       type = #{type,jdbcType=INTEGER},
      create_date = #{createDate,jdbcType=TIMESTAMP},
      create_by = #{createBy,jdbcType=VARCHAR},
      update_date = now(),
      update_by = #{updateBy,jdbcType=VARCHAR}
    where id = #{id,jdbcType=VARCHAR}
  </update>

  <select id="getEntityByNameMask" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select
      b.org_id as id, a.nick_name, a.create_date, a.create_by, a.update_date, a.update_by
    from maoding_web_business_partner a INNER JOIN maoding_web_company_relation b ON a.id = b.id
    where binary nick_name LIKE '%' #{nickNameMask} '%'
  </select>
</mapper>