<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="GetProjectCostMapper" >
  <resultMap id="BaseResultMapDto" type="com.maoding.projectcost.dto.ProjectCostDTO" >
    <id column="id" property="id" jdbcType="VARCHAR" />
    <result column="project_id" property="projectId" jdbcType="VARCHAR" />
      <result column="operate_company_id" property="operateCompanyId" jdbcType="VARCHAR" />
    <result column="from_company_id" property="fromCompanyId" jdbcType="VARCHAR" />
    <result column="to_company_id" property="toCompanyId" jdbcType="VARCHAR" />
    <result column="type" property="type" jdbcType="VARCHAR" />
    <result column="fee" property="fee" jdbcType="DECIMAL" />
    <result column="remark" property="remark" jdbcType="VARCHAR" />
    <!--<result column="create_date" property="createDate" jdbcType="TIMESTAMP" />-->
    <!--<result column="create_by" property="createBy" jdbcType="VARCHAR" />-->
    <!--<result column="update_date" property="updateDate" jdbcType="TIMESTAMP" />-->
    <!--<result column="update_by" property="updateBy" jdbcType="VARCHAR" />-->
    <result column="status" property="status" jdbcType="VARCHAR" />
  </resultMap>

  <sql id="Base_Column_List" >
    id, project_id,operate_company_id, from_company_id,to_company_id, type, fee,  remark, status,create_date,
    create_by, update_date, update_by
  </sql>

  <select id="selectByParam" parameterType="java.util.Map" resultMap="BaseResultMapDto">
    SELECT
    <include refid="Base_Column_List" />
    from maoding_web_project_cost
    where status= '0'
    and project_id=#{projectId,jdbcType=VARCHAR}
    <if test="type!=null">
      and type = #{type,jdbcType=VARCHAR}
    </if>
    <if test="fromCompanyId != null" >
     and from_company_id = #{fromCompanyId,jdbcType=VARCHAR}
    </if>
    <if test="toCompanyId != null" >
      and to_company_id = #{toCompanyId,jdbcType=VARCHAR}
    </if>
    <if test="flag != null" >
      and flag = #{flag,jdbcType=VARCHAR}
    </if>
    <if test="costId != null" >
      and id = #{costId,jdbcType=VARCHAR}
    </if>
    order by type,create_date
  </select>

  <!-- 获取组织内各项目的收付款汇总列表 -->
  <select id="listProjectCostSummary" resultType="com.maoding.projectcost.dto.ProjectCostSingleSummaryDTO" parameterType="com.maoding.projectcost.dto.ProjectCostSummaryQueryDTO">
      select <include refid="CommonMapper.countSQL"/>
          cost_type.fee as plan,
          <if test="isDetail == '1'.toString()">
              sum(if(cost_pay.paid_date is not null,ifnull(cost_pay.fee,0),0)) as `real`,
          </if>
          project_list.id
      from maoding_web_project project_list
          inner join maoding_web_project_cost cost_type on (cost_type.project_id = project_list.id
                  <choose>
                      <!-- 合同回款 -->
                      <when test="costType == 1">
                          and (cost_type.type = 1)
                          <if test="companyId != null">
                              and (cost_type.to_company_id = #{companyId})
                          </if>
                      </when>
                      <!-- 技术审查费 -->
                      <when test="costType == 2">
                          and (cost_type.type = 2)
                          <if test="companyId != null">
                            and (cost_type.to_company_id = #{companyId})
                          </if>
                      </when>
                      <!-- 合作设计费收款 -->
                      <when test="costType == 10">
                          and (cost_type.type = 3)
                          <if test="companyId != null">
                            and (cost_type.to_company_id = #{companyId})
                          </if>
                      </when>
                      <!-- 合作设计费付款 -->
                      <when test="costType == 11">
                          and (cost_type.type = 3)
                          <if test="companyId != null">
                              and (cost_type.from_company_id = #{companyId})
                          </if>
                      </when>
                      <otherwise>
                          <if test="companyId != null">
                              and ((cost_type.from_company_id = #{companyId}) or (cost_type.to_company_id = #{companyId}))
                          </if>
                      </otherwise>
                  </choose>
              )
          <if test="isDetail == '1'.toString()">
              inner join maoding_web_project_cost_point cost_point on (cost_point.cost_id = cost_type.id)
              inner join maoding_web_project_cost_point_detail cost_detail on (cost_detail.point_id = cost_point.id)
              inner join maoding_web_project_cost_payment_detail cost_pay on (cost_pay.point_detail_id = cost_detail.id)
          </if>
      where (project_list.pstatus = '0')
          <!-- 项目立项时间过滤条件 -->
          <if test="endDate != null">
              and (addDate(#{endDate,jdbcType=TIMESTAMP},1) > ifnull(project_list.project_create_date,project_list.create_date))
          </if>
          <if test="startDate != null">
              and (ifnull(project_list.project_create_date,project_list.create_date) >= #{startDate,jdbcType=TIMESTAMP})
          </if>
          <if test="projectId != null">
              and (project_list.id = #{projectId})
          </if>
      group by project_list.id
      <include refid="CommonMapper.limitSQL"/>
  </select>

  <select id="listProjectExpSummary" resultType="com.maoding.projectcost.dto.ProjectExpSingleSummaryDTO" parameterType="com.maoding.projectcost.dto.ProjectCostSummaryQueryDTO">
      select <include refid="CommonMapper.countSQL"/>
          sum(if(exp_main.type=1,ifnull(exp_detail.exp_amount,0),0)) as expense,
          sum(if(exp_main.type=2,ifnull(exp_detail.exp_amount,0),0)) as cost,
          project_list.id
      from maoding_web_project project_list
          inner join maoding_web_exp_detail exp_detail on (
              exp_detail.project_id = project_list.id
          )
          inner join maoding_web_exp_main exp_main on (
              <!-- 仅统计财务已拨款 -->
              exp_main.approve_status = 6
              <!-- 仅统计报销和费用申请 -->
              and exp_main.type in (1,2)
              and exp_main.id = exp_detail.main_id
              <if test="companyId != null">
                  and exp_main.company_id = #{companyId}
              </if>
          )
      where (project_list.pstatus = '0')
          <!-- 项目立项时间过滤条件 -->
          <if test="endDate != null">
              and (addDate(#{endDate,jdbcType=TIMESTAMP},1) > ifnull(project_list.project_create_date,project_list.create_date))
          </if>
          <if test="startDate != null">
              and (ifnull(project_list.project_create_date,project_list.create_date) >= #{startDate,jdbcType=TIMESTAMP})
          </if>
      group by project_list.id
      <include refid="CommonMapper.limitSQL"/>
  </select>

    <select id="getProjectAmountFeeByCostId" resultType="com.maoding.projectcost.dto.ProjectCooperatorCostDTO" parameterType="com.maoding.projectcost.dto.ProjectCostQueryDTO">
        SELECT
        sum(ifnull(if(c.fee_status != 2,c.fee,0),0)) as detailFee,
        sum(ifnull(if(c.fee_status = 1,c.fee,0),0)) as detailPayFee,
        sum(ifnull(d.paid_fee,0)) as sumPaidFee,
        sum(ifnull(d.pay_fee,0)) as sumPayFee
        from maoding_web_project_cost_point b
        INNER JOIN maoding_web_project_cost_point_detail c on b.id = c.point_id and c.`status` = 0
        LEFT  JOIN (SELECT sum(if(pay_date is not null,fee,0)) as pay_fee, sum(if(paid_date is not null,fee,0))as paid_fee,point_detail_id
        from maoding_web_project_cost_payment_detail f where project_id = #{projectId} and `status` = 0 GROUP BY point_detail_id) d on c.id = d.point_detail_id
        where b.cost_id= #{costId} and b.`status`=0
        <if test="pointId!=null">
            and b.id = #{pointId}
        </if>
        and (c.company_id = #{companyId} or c.relation_company_id = #{companyId})
    </select>


    <select id="listProjectAmountFeeByCostId" resultType="com.maoding.projectcost.dto.ProjectCostPointInfoDTO" parameterType="com.maoding.projectcost.dto.ProjectCostQueryDTO">
        SELECT
        b.id,
        b.fee_description,
        b.fee_proportion,
        b.fee,
        count(DISTINCT c.id) as pointDetailCount,
        sum(ifnull(if(c.fee_status != 2,c.fee,0),0)) as detailFee,
        sum(ifnull(if(c.fee_status = 1,c.fee,0),0)) as detailPayFee,
        sum(ifnull(d.paid_fee,0)) as sumPaidFee,
        sum(ifnull(d.pay_fee,0)) as sumPayFee
        from maoding_web_project_cost_point b
        LEFT JOIN maoding_web_project_cost_point_detail c on b.id = c.point_id and c.`status` = 0 and  (c.company_id = #{companyId} or c.relation_company_id = #{companyId})
        LEFT JOIN (SELECT sum(if(pay_date is not null,fee,0)) as pay_fee, sum(if(paid_date is not null,fee,0))as paid_fee,point_detail_id
        from maoding_web_project_cost_payment_detail f where project_id = #{projectId} and `status` = 0 GROUP BY point_detail_id) d on c.id = d.point_detail_id
        where b.cost_id= #{costId}
        and b.`status`=0
        <if test="pointId!=null">
            and b.id = #{pointId}
        </if>
        <if test="pointDetailId!=null">
            and c.id = #{pointDetailId}
        </if>
        group by b.id
        order by b.create_date
    </select>


    <select id="listProjectAmountFeeByPointId" resultType="com.maoding.projectcost.dto.ProjectCostPointDetailInfoDTO" parameterType="com.maoding.projectcost.dto.ProjectCostQueryDTO">
        SELECT
        c.id,
        c.fee,
        c.fee_status as feeStatus,
        c.point_detail_description as pointDetailDescription,
        c.invoice,
        DATE_FORMAT(c.create_date,'%Y-%m-%d')  as pointDetailDate,
        f.user_name as userName,
        sum(ifnull(if(c.fee_status != 2,c.fee,0),0)) as detailFee,
        sum(ifnull(if(c.fee_status = 1,c.fee,0),0)) as detailPayFee,
        sum(ifnull(d.paid_fee,0)) as sumPaidFee,
        sum(ifnull(d.pay_fee,0)) as sumPayFee
        FROM maoding_web_project_cost_point_detail c
        LEFT JOIN (SELECT sum(if(pay_date is not null,fee,0)) as pay_fee, sum(if(paid_date is not null,fee,0))as paid_fee,point_detail_id
        from maoding_web_project_cost_payment_detail f where project_id = #{projectId} and `status` = 0 GROUP BY point_detail_id) d on c.id = d.point_detail_id
        left join maoding_web_project_cost_operater e on e.cost_detail_id = c.id and e.type = 1
        left join maoding_web_company_user f on e.company_user_id = f.id
        where 1=1
        <if test="pointId!=null">
            and c.point_id= #{pointId}
        </if>
        <if test="pointDetailId!=null">
            and c.id = #{pointDetailId}
        </if>
        and c.`status` = 0
        and (c.company_id = #{companyId} or c.relation_company_id = #{companyId})
        group by c.id
        order by c.create_date
    </select>

    <select id="listProjectPaymentFeeByPointDetailId" resultType="com.maoding.projectcost.dto.ProjectCostPaymentDetailDTO" parameterType="com.maoding.projectcost.dto.ProjectCostQueryDTO">
        SELECT
        d.id,
        d.fee,
        <!--  c.point_detail_description as pointDetailDescription, -->
        d.invoice,
        d.pay_date,
        d.paid_date,
        f.user_name as userName,
        d.fee
        FROM maoding_web_project_cost_point_detail c
        INNER JOIN  maoding_web_project_cost_payment_detail d on c.id = d.point_detail_id
        <if test="payType!=null and payType==1">
            left join maoding_web_project_cost_operater e on e.cost_detail_id = d.id and e.type = 5
            left join maoding_web_company_user f on e.company_user_id = f.id
        </if>
        <if test="payType!=null and payType==2">
            left join maoding_web_project_cost_operater e on e.cost_detail_id = d.id and e.type = 6
            left join maoding_web_company_user f on e.company_user_id = f.id
        </if>
        where c.fee_status !=2
        <if test="pointId!=null">
            and c.point_id= #{pointId}
        </if>
        <if test="pointDetailId!=null">
            and c.id = #{pointDetailId}
        </if>
        and c.`status` = 0
        and d.`status` = 0
        and (c.company_id = #{companyId} or c.relation_company_id = #{companyId})
        order by c.create_date
    </select>

    <sql id="FilterForCostListWithProjectCostQuery">
        and cost_list.status = '0'
        <if test="projectId != null">
            and cost_list.project_id = #{projectId}
        </if>
        <if test="companyId != null">
            <choose>
                <when test="payType == '1'.toString()">
                    and cost_list.to_company_id = #{companyId}
                </when>
                <when test="payType == '2'.toString()">
                    and cost_list.from_company_id = #{companyId}
                </when>
                <otherwise>
                    and (cost_list.to_company_id = #{companyId} or cost_list.from_company_id = #{companyId})
                </otherwise>
            </choose>
        </if>
        <if test="type != null">
            and cost_list.type = #{type}
        </if>
    </sql>

    <select id="getCostAmountPlan" resultType="com.maoding.projectcost.dto.CostAmountDTO" parameterType="com.maoding.projectcost.dto.ProjectCostQueryDTO">
        select
            <choose>
                <when test="companyId != null">
                    sum(if(cost_list.type = 1,ifnull(cost_list.fee,0),0)) as contract,
                    sum(if(cost_list.type = 2 and cost_list.to_company_id = #{companyId},ifnull(cost_list.fee,0),0)) as technicalGain,
                    sum(if(cost_list.type = 2 and cost_list.from_company_id = #{companyId},ifnull(cost_list.fee,0),0)) as technicalPay,
                    sum(if(cost_list.type = 3 and cost_list.to_company_id = #{companyId},ifnull(cost_list.fee,0),0)) as cooperateGain,
                    sum(if(cost_list.type = 3 and cost_list.from_company_id = #{companyId},ifnull(cost_list.fee,0),0)) as cooperatePay,
                    sum(if(cost_list.type = 5 and cost_list.to_company_id = #{companyId},ifnull(cost_list.fee,0),0)) as otherGain,
                    sum(if(cost_list.type = 4 and cost_list.from_company_id = #{companyId},ifnull(cost_list.fee,0),0)) as otherPay
                </when>
                <otherwise>
                    sum(if(cost_list.type = 1,ifnull(cost_list.fee,0),0)) as contract,
                    sum(if(cost_list.type = 2,ifnull(cost_list.fee,0),0)) as technicalGain,
                    0 as technicalPay,
                    sum(if(cost_list.type = 3,ifnull(cost_list.fee,0),0)) as cooperateGain,
                    0 as cooperatePay,
                    sum(if(cost_list.type = 5,ifnull(cost_list.fee,0),0)) as otherGain,
                    sum(if(cost_list.type = 4,ifnull(cost_list.fee,0),0)) as otherPay
                </otherwise>
            </choose>
        from maoding_web_project_cost cost_list
        <where>
            <include refid="FilterForCostListWithProjectCostQuery"/>
        </where>
    </select>

    <sql id="FilterForBillListWithProjectCostQuery">
        and bill_list.deleted = 0
        <if test="companyId != null">
            and bill_list.company_id = #{companyId}
        </if>
        <if test="payType != null">
            and bill_list.pay_type = #{payType}
        </if>
        <if test="type != null">
            and bill_list.fee_type = #{type}
        </if>
    </sql>

    <select id="getCostAmountReal" resultType="com.maoding.projectcost.dto.CostAmountDTO" parameterType="com.maoding.projectcost.dto.ProjectCostQueryDTO">
        select
            sum(if(bill_list.fee_type = 1,ifnull(bill_list.fee,0),0))/10000 as contract,
            sum(if(bill_list.fee_type = 2 and bill_list.pay_type = 1,ifnull(bill_list.fee,0),0))/10000 as technicalGain,
            sum(if(bill_list.fee_type = 2 and bill_list.pay_type = 2,ifnull(bill_list.fee,0),0))/10000 as technicalPay,
            sum(if(bill_list.fee_type = 3 and bill_list.pay_type = 1,ifnull(bill_list.fee,0),0))/10000 as cooperateGain,
            sum(if(bill_list.fee_type = 3 and bill_list.pay_type = 2,ifnull(bill_list.fee,0),0))/10000 as cooperatePay,
            sum(if(bill_list.fee_type = 4 and bill_list.pay_type = 1,ifnull(bill_list.fee,0),0))/10000 as otherGain,
            sum(if(bill_list.fee_type = 4 and bill_list.pay_type = 2,ifnull(bill_list.fee,0),0))/10000 as otherPay
        from maoding_web_company_bill bill_list
            <if test="projectId != null">
                inner join maoding_web_company_bill_relation bill_relation on (
                    bill_relation.id = bill_list.id
                    and bill_relation.project_id = #{projectId}
                )
            </if>
        <where>
            <include refid="FilterForBillListWithProjectCostQuery"/>
        </where>
    </select>

</mapper>