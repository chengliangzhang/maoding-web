<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="ProjectCostEntityMapper" >
  <resultMap id="BaseResultMap" type="com.maoding.projectcost.entity.ProjectCostEntity" >
    <id column="id" property="id" jdbcType="VARCHAR" />
    <result column="project_id" property="projectId" jdbcType="VARCHAR" />
    <result column="from_company_id" property="fromCompanyId" jdbcType="VARCHAR" />
    <result column="to_company_id" property="toCompanyId" jdbcType="VARCHAR" />
    <result column="type" property="type" jdbcType="VARCHAR" />
    <result column="fee" property="fee" jdbcType="DECIMAL" />
    <result column="remark" property="remark" jdbcType="VARCHAR" />
    <result column="create_date" property="createDate" jdbcType="TIMESTAMP" />
    <result column="create_by" property="createBy" jdbcType="VARCHAR" />
    <result column="update_date" property="updateDate" jdbcType="TIMESTAMP" />
    <result column="update_by" property="updateBy" jdbcType="VARCHAR" />
    <result column="status" property="status" jdbcType="VARCHAR" />
    <result column="flag" property="flag" jdbcType="VARCHAR" />

  </resultMap>


  <sql id="Base_Column_List" >
    id, project_id, from_company_id,to_company_id, type, fee,  remark, status,flag,create_date,
    create_by, update_date, update_by
  </sql>

  <select id="selectById" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from maoding_web_project_cost
    where id = #{id,jdbcType=VARCHAR}
  </select>
  
  <delete id="deleteById" parameterType="java.lang.String" >
    delete from maoding_web_project_cost
    where id = #{id,jdbcType=VARCHAR}
  </delete>


  <insert id="insert" parameterType="com.maoding.projectcost.entity.ProjectCostEntity" >
    insert into maoding_web_project_cost (
    id, project_id, from_company_id,to_company_id,
    type, fee,  remark, status,flag,create_date,
    create_by, update_date, update_by
      )
    values (#{id,jdbcType=VARCHAR}, #{projectId,jdbcType=VARCHAR}, #{fromCompanyId,jdbcType=VARCHAR},
     #{toCompanyId,jdbcType=VARCHAR},
      #{type,jdbcType=VARCHAR}, #{fee,jdbcType=DECIMAL}, #{remark,jdbcType=VARCHAR},0, #{flag,jdbcType=VARCHAR},now(),
      #{createBy,jdbcType=VARCHAR}, #{updateDate,jdbcType=TIMESTAMP}, #{updateBy,jdbcType=VARCHAR}
      )
  </insert>

  <update id="updateById" parameterType="com.maoding.projectcost.entity.ProjectCostEntity" >
    update maoding_web_project_cost
    <set >
      <if test="projectId != null" >
        project_id = #{projectId,jdbcType=VARCHAR},
      </if>
      <if test="fromCompanyId != null" >
        from_company_id = #{fromCompanyId,jdbcType=VARCHAR},
      </if>
      <if test="toCompanyId != null" >
        to_company_id = #{toCompanyId,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        type = #{type,jdbcType=VARCHAR},
      </if>
      <if test="fee != null" >
        fee = #{fee,jdbcType=DECIMAL},
      </if>
      <if test="remark != null" >
        remark = #{remark,jdbcType=VARCHAR},
      </if>
       <if test="status != null" >
        status = #{status,jdbcType=VARCHAR},
      </if>
      <if test="flag != null" >
        flag = #{flag,jdbcType=VARCHAR},
      </if>
        update_date = now(),
      <if test="updateBy != null" >
        update_by = #{updateBy,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>


  <select id="getHasNoChildPoint" resultType="java.lang.String">
    SELECT a.id from maoding_web_project_cost a
    LEFT JOIN maoding_web_project_cost_point b on a.id = b.cost_id
    where a.`status`='0'
    and b.`status`='0'
    and a.type='3'
    HAVING IFNULL(count(1),0)=0
  </select>
  <!-- 把没有子节点的总金额数据设置为无效，用于删除任务，更改任务的组织 -->
  <update id="updateHasNoChildPoint" parameterType="java.util.Map">
    update maoding_web_project_cost
    set status='1'
    where id in
    <foreach collection="idList" item="id" index="i" open="(" separator="," close=")">
      #{id}
    </foreach>
  </update>
</mapper>