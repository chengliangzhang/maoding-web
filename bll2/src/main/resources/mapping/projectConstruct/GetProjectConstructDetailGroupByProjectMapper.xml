<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="GetProjectConstructDetailGroupByProjectMapper" >
  <resultMap id="BaseResultMap" type="com.maoding.project.dto.ProjectConstructDetailGroupByProjectDTO" >
    <id column="project_id" property="id" jdbcType="VARCHAR" />
    <result column="project_name" property="projectName" jdbcType="VARCHAR" />
    <collection property="detailList" ofType="com.maoding.project.dto.ProjectConstructDetailDTO">
      <id column="id" property="id" jdbcType="VARCHAR" />
      <result column="construct_id" property="constructId" jdbcType="VARCHAR" />
      <result column="name" property="name" jdbcType="VARCHAR" />
      <result column="phone" property="phone" jdbcType="VARCHAR" />
      <result column="email" property="email" jdbcType="VARCHAR" />
      <result column="seq" property="seq" jdbcType="VARCHAR" />
      <result column="position" property="position" jdbcType="VARCHAR" />
    </collection>
  </resultMap>

  <select id="getOtherConstructDetailGroupByProject" resultMap="BaseResultMap" parameterType="java.util.Map" >
    select
    c.project_name, b.id, b.construct_id, b.name,  b.phone,  b.email,  b.seq,project_id, b.position
    from maoding_web_project_construct a
    LEFT JOIN maoding_web_project_construct_detail b on a.id = b.construct_id
    LEFT JOIN maoding_web_project c on b.project_id = c.id
    where a.company_id = #{companyId,jdbcType=VARCHAR}
    <if test="projectId != null and projectId !=''.toString()" >
    and  b.project_id != #{projectId,jdbcType=VARCHAR}
  </if>
    <if test="constructId != null and constructId !=''.toString()" >
      and  b.construct_id = #{constructId,jdbcType=VARCHAR}
    </if>
    and  b.project_id is not null
  </select>


</mapper>